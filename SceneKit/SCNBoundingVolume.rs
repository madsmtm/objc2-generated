//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use core::ffi::*;
use objc2::__framework_prelude::*;
#[cfg(feature = "objc2-core-foundation")]
use objc2_core_foundation::*;

use crate::*;

extern_protocol!(
    /// The SCNBoundingVolume protocol is implemented by objects which can compute their bounding boxes.
    ///
    /// You can currently use this protocol to get the bounding boxes of nodes and geometries.
    ///
    /// See also [Apple's documentation](https://developer.apple.com/documentation/scenekit/scnboundingvolume?language=objc)
    pub unsafe trait SCNBoundingVolume: NSObjectProtocol {
        #[cfg(all(feature = "SceneKitTypes", feature = "objc2-core-foundation"))]
        /// Fill the min and max vectors with the min and max vertex of the bounding box.
        ///
        /// Parameter `min`: A pointer to a SCNVector3 to store the min vertex of the bounding box into.
        ///
        /// Parameter `max`: A pointer to a SCNVector3 to store the max vertex of the bounding box into.
        ///
        /// the returned bounding box is in local space of the receiver.
        ///
        /// # Safety
        ///
        /// - `min` must be a valid pointer or null.
        /// - `max` must be a valid pointer or null.
        #[unsafe(method(getBoundingBoxMin:max:))]
        #[unsafe(method_family = none)]
        unsafe fn getBoundingBoxMin_max(&self, min: *mut SCNVector3, max: *mut SCNVector3) -> bool;

        #[cfg(all(feature = "SceneKitTypes", feature = "objc2-core-foundation"))]
        /// Override the receiver bounding box with the min and max vectors provided (in local space of the receiver).
        ///
        /// Parameter `min`: A pointer to a SCNVector3 representing the min vertex of the desired bounding box.
        ///
        /// Parameter `max`: A pointer to a SCNVector3 representing the max vertex of the desired bounding box.
        ///
        /// Passing nil as arguments will recompute the original bounding box of the receiver.
        ///
        /// # Safety
        ///
        /// - `min` must be a valid pointer or null.
        /// - `max` must be a valid pointer or null.
        #[unsafe(method(setBoundingBoxMin:max:))]
        #[unsafe(method_family = none)]
        unsafe fn setBoundingBoxMin_max(&self, min: *mut SCNVector3, max: *mut SCNVector3);

        #[cfg(all(feature = "SceneKitTypes", feature = "objc2-core-foundation"))]
        /// Fill the center vector with the center of the bounding sphere and store the radius of the bounding sphere in 'radius'.
        ///
        /// Parameter `center`: A pointer to a SCNVector3 to store the center of the bounding sphere into.
        ///
        /// Parameter `radius`: A pointer to a CGFloat to store the radius of the bounding sphere into.
        ///
        /// the returned bounding sphere is in local space of the receiver.
        ///
        /// # Safety
        ///
        /// - `center` must be a valid pointer or null.
        /// - `radius` must be a valid pointer or null.
        #[unsafe(method(getBoundingSphereCenter:radius:))]
        #[unsafe(method_family = none)]
        unsafe fn getBoundingSphereCenter_radius(
            &self,
            center: *mut SCNVector3,
            radius: *mut CGFloat,
        ) -> bool;
    }
);
