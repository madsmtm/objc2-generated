// This file has been automatically generated by `objc2`'s `header-translator`.
// DO NOT EDIT

#![allow(unused_imports)]
#![allow(deprecated)]
#![allow(non_snake_case)]
#![allow(non_camel_case_types)]
#![allow(non_upper_case_globals)]
#![allow(missing_docs)]
#![allow(clippy::too_many_arguments)]
#![allow(clippy::type_complexity)]
#![allow(clippy::upper_case_acronyms)]
#![allow(clippy::identity_op)]
#![allow(clippy::missing_safety_doc)]
#![allow(clippy::doc_lazy_continuation)]
#![allow(rustdoc::broken_intra_doc_links)]
#![allow(rustdoc::bare_urls)]
#![allow(rustdoc::unportable_markdown)]
#![allow(rustdoc::invalid_html_tags)]

#[link(name = "FSKit", kind = "framework")]
extern "C" {}

#[cfg(feature = "FSClient")]
#[path = "FSClient.rs"]
mod __FSClient;
#[cfg(feature = "FSContainer")]
#[path = "FSContainer.rs"]
mod __FSContainer;
#[cfg(feature = "FSEntityIdentifier")]
#[path = "FSEntityIdentifier.rs"]
mod __FSEntityIdentifier;
#[cfg(feature = "FSFileName")]
#[path = "FSFileName.rs"]
mod __FSFileName;
#[cfg(feature = "FSFileSystem")]
#[path = "FSFileSystem.rs"]
mod __FSFileSystem;
#[cfg(feature = "FSFileSystemBase")]
#[path = "FSFileSystemBase.rs"]
mod __FSFileSystemBase;
#[cfg(feature = "FSItem")]
#[path = "FSItem.rs"]
mod __FSItem;
#[cfg(feature = "FSKitDefines")]
#[path = "FSKitDefines.rs"]
mod __FSKitDefines;
#[cfg(feature = "FSKitError")]
#[path = "FSKitError.rs"]
mod __FSKitError;
#[cfg(feature = "FSKitFunctions")]
#[path = "FSKitFunctions.rs"]
mod __FSKitFunctions;
#[cfg(feature = "FSKitTypes")]
#[path = "FSKitTypes.rs"]
mod __FSKitTypes;
#[cfg(feature = "FSModuleIdentity")]
#[path = "FSModuleIdentity.rs"]
mod __FSModuleIdentity;
#[cfg(feature = "FSMutableFileDataBuffer")]
#[path = "FSMutableFileDataBuffer.rs"]
mod __FSMutableFileDataBuffer;
#[cfg(feature = "FSResource")]
#[path = "FSResource.rs"]
mod __FSResource;
#[cfg(feature = "FSTask")]
#[path = "FSTask.rs"]
mod __FSTask;
#[cfg(feature = "FSTaskOptions")]
#[path = "FSTaskOptions.rs"]
mod __FSTaskOptions;
#[cfg(feature = "FSUnaryFileSystem")]
#[path = "FSUnaryFileSystem.rs"]
mod __FSUnaryFileSystem;
#[cfg(feature = "FSVolume")]
#[path = "FSVolume.rs"]
mod __FSVolume;
#[cfg(feature = "FSVolumeExtent")]
#[path = "FSVolumeExtent.rs"]
mod __FSVolumeExtent;

#[cfg(feature = "FSClient")]
pub use self::__FSClient::FSClient;
#[cfg(all(feature = "FSContainer", feature = "FSEntityIdentifier"))]
pub use self::__FSContainer::FSContainerIdentifier;
#[cfg(feature = "FSContainer")]
pub use self::__FSContainer::FSContainerState;
#[cfg(feature = "FSContainer")]
pub use self::__FSContainer::FSContainerStatus;
#[cfg(feature = "FSEntityIdentifier")]
pub use self::__FSEntityIdentifier::FSEntityIdentifier;
#[cfg(feature = "FSFileName")]
pub use self::__FSFileName::FSFileName;
#[cfg(feature = "FSFileSystem")]
pub use self::__FSFileSystem::FSFileSystem;
#[cfg(feature = "FSFileSystemBase")]
pub use self::__FSFileSystemBase::FSFileSystemBase;
#[cfg(feature = "FSItem")]
pub use self::__FSItem::FSItem;
#[cfg(feature = "FSItem")]
pub use self::__FSItem::FSItemAttribute;
#[cfg(feature = "FSItem")]
pub use self::__FSItem::FSItemAttributes;
#[cfg(feature = "FSItem")]
pub use self::__FSItem::FSItemGetAttributesRequest;
#[cfg(feature = "FSItem")]
pub use self::__FSItem::FSItemID;
#[cfg(feature = "FSItem")]
pub use self::__FSItem::FSItemSetAttributesRequest;
#[cfg(feature = "FSItem")]
pub use self::__FSItem::FSItemType;
#[cfg(feature = "FSKitError")]
pub use self::__FSKitError::FSErrorCode;
#[cfg(feature = "FSKitError")]
pub use self::__FSKitError::FSKitErrorDomain;
#[cfg(feature = "FSKitFunctions")]
pub use self::__FSKitFunctions::fs_errorForCocoaError;
#[cfg(feature = "FSKitFunctions")]
pub use self::__FSKitFunctions::fs_errorForMachError;
#[cfg(feature = "FSKitFunctions")]
pub use self::__FSKitFunctions::fs_errorForPOSIXError;
#[cfg(feature = "FSModuleIdentity")]
pub use self::__FSModuleIdentity::FSModuleIdentity;
#[cfg(feature = "FSMutableFileDataBuffer")]
pub use self::__FSMutableFileDataBuffer::FSMutableFileDataBuffer;
#[cfg(feature = "FSResource")]
pub use self::__FSResource::FSBlockDeviceResource;
#[cfg(feature = "FSResource")]
pub use self::__FSResource::FSGenericURLResource;
#[cfg(feature = "FSResource")]
pub use self::__FSResource::FSManageableResourceMaintenanceOperations;
#[cfg(feature = "FSResource")]
pub use self::__FSResource::FSMatchResult;
#[cfg(feature = "FSResource")]
pub use self::__FSResource::FSMetadataRange;
#[cfg(feature = "FSResource")]
pub use self::__FSResource::FSPathURLResource;
#[cfg(feature = "FSResource")]
pub use self::__FSResource::FSProbeResult;
#[cfg(feature = "FSResource")]
pub use self::__FSResource::FSResource;
#[cfg(feature = "FSTask")]
pub use self::__FSTask::FSTask;
#[cfg(feature = "FSTaskOptions")]
pub use self::__FSTaskOptions::FSTaskOptions;
#[cfg(feature = "FSUnaryFileSystem")]
pub use self::__FSUnaryFileSystem::FSUnaryFileSystem;
#[cfg(feature = "FSUnaryFileSystem")]
pub use self::__FSUnaryFileSystem::FSUnaryFileSystemOperations;
#[cfg(feature = "FSVolume")]
pub use self::__FSVolume::FSAccessMask;
#[cfg(feature = "FSVolume")]
pub use self::__FSVolume::FSDeactivateOptions;
#[cfg(feature = "FSVolume")]
pub use self::__FSVolume::FSDirectoryCookie;
#[cfg(feature = "FSVolume")]
pub use self::__FSVolume::FSDirectoryCookieInitial;
#[cfg(feature = "FSVolume")]
pub use self::__FSVolume::FSDirectoryEntryPacker;
#[cfg(feature = "FSVolume")]
pub use self::__FSVolume::FSDirectoryVerifier;
#[cfg(feature = "FSVolume")]
pub use self::__FSVolume::FSDirectoryVerifierInitial;
#[cfg(feature = "FSVolume")]
pub use self::__FSVolume::FSItemDeactivationOptions;
#[cfg(feature = "FSVolume")]
pub use self::__FSVolume::FSPreallocateFlags;
#[cfg(feature = "FSVolume")]
pub use self::__FSVolume::FSSetXattrPolicy;
#[cfg(feature = "FSVolume")]
pub use self::__FSVolume::FSStatFSResult;
#[cfg(feature = "FSVolume")]
pub use self::__FSVolume::FSSyncFlags;
#[cfg(feature = "FSVolume")]
pub use self::__FSVolume::FSVolume;
#[cfg(feature = "FSVolume")]
pub use self::__FSVolume::FSVolumeAccessCheckOperations;
#[cfg(feature = "FSVolume")]
pub use self::__FSVolume::FSVolumeCaseFormat;
#[cfg(all(feature = "FSEntityIdentifier", feature = "FSVolume"))]
pub use self::__FSVolume::FSVolumeIdentifier;
#[cfg(feature = "FSVolume")]
pub use self::__FSVolume::FSVolumeItemDeactivation;
#[cfg(feature = "FSVolume")]
pub use self::__FSVolume::FSVolumeOpenCloseOperations;
#[cfg(feature = "FSVolume")]
pub use self::__FSVolume::FSVolumeOpenModes;
#[cfg(feature = "FSVolume")]
pub use self::__FSVolume::FSVolumeOperations;
#[cfg(feature = "FSVolume")]
pub use self::__FSVolume::FSVolumePathConfOperations;
#[cfg(feature = "FSVolume")]
pub use self::__FSVolume::FSVolumePreallocateOperations;
#[cfg(feature = "FSVolume")]
pub use self::__FSVolume::FSVolumeReadWriteOperations;
#[cfg(feature = "FSVolume")]
pub use self::__FSVolume::FSVolumeRenameOperations;
#[cfg(feature = "FSVolume")]
pub use self::__FSVolume::FSVolumeSupportedCapabilities;
#[cfg(feature = "FSVolume")]
pub use self::__FSVolume::FSVolumeXattrOperations;
#[cfg(feature = "FSVolumeExtent")]
pub use self::__FSVolumeExtent::FSBlockmapFlags;
#[cfg(feature = "FSVolumeExtent")]
pub use self::__FSVolumeExtent::FSCompleteIOFlags;
#[cfg(feature = "FSVolumeExtent")]
pub use self::__FSVolumeExtent::FSExtentPacker;
#[cfg(feature = "FSVolumeExtent")]
pub use self::__FSVolumeExtent::FSExtentType;
#[cfg(feature = "FSVolumeExtent")]
pub use self::__FSVolumeExtent::FSOperationID;
#[cfg(feature = "FSVolumeExtent")]
pub use self::__FSVolumeExtent::FSOperationIDUnspecified;
#[cfg(feature = "FSVolumeExtent")]
pub use self::__FSVolumeExtent::FSVolumeKernelOffloadedIOOperations;
use core::ffi::*;

use crate::*;

extern "C" {
    /// Project version number for FSKit.
    ///
    /// See also [Apple's documentation](https://developer.apple.com/documentation/fskit/fskitversionnumber?language=objc)
    pub static FSKitVersionNumber: c_double;
}

extern "C" {
    /// Project version string for FSKit.
    ///
    /// See also [Apple's documentation](https://developer.apple.com/documentation/fskit/fskitversionstring?language=objc)
    pub static FSKitVersionString: *mut c_uchar;
}
