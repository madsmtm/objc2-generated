//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use core::ffi::*;
use core::ptr::NonNull;
use objc2::__framework_prelude::*;
use objc2_foundation::*;

use crate::*;

extern_class!(
    /// represents the state of the collaboration options for the document.
    ///
    /// SWCollaborationShareOptions contains the SWCollaborationOptionsGorups that are available for the collaboration as well as a string, provided by the client, that summarizes the state of the selected options.
    ///
    /// See also [Apple's documentation](https://developer.apple.com/documentation/sharedwithyoucore/swcollaborationshareoptions?language=objc)
    #[unsafe(super(NSObject))]
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub struct SWCollaborationShareOptions;
);

extern_conformance!(
    unsafe impl NSCoding for SWCollaborationShareOptions {}
);

extern_conformance!(
    unsafe impl NSCopying for SWCollaborationShareOptions {}
);

unsafe impl CopyingHelper for SWCollaborationShareOptions {
    type Result = Self;
}

extern_conformance!(
    unsafe impl NSObjectProtocol for SWCollaborationShareOptions {}
);

extern_conformance!(
    unsafe impl NSSecureCoding for SWCollaborationShareOptions {}
);

impl SWCollaborationShareOptions {
    extern_methods!(
        #[cfg(feature = "SWCollaborationOptionsGroup")]
        /// SWCollaborationOptionsGroups to customize how the collaboration will be shared
        #[unsafe(method(optionsGroups))]
        #[unsafe(method_family = none)]
        pub unsafe fn optionsGroups(&self) -> Retained<NSArray<SWCollaborationOptionsGroup>>;

        #[cfg(feature = "SWCollaborationOptionsGroup")]
        /// Setter for [`optionsGroups`][Self::optionsGroups].
        ///
        /// This is [copied][objc2_foundation::NSCopying::copy] when set.
        #[unsafe(method(setOptionsGroups:))]
        #[unsafe(method_family = none)]
        pub unsafe fn setOptionsGroups(
            &self,
            options_groups: &NSArray<SWCollaborationOptionsGroup>,
        );

        /// Localized string to summarize the selected collaboration options. If nil, "Share Options" will be displayed by default.
        #[unsafe(method(summary))]
        #[unsafe(method_family = none)]
        pub unsafe fn summary(&self) -> Retained<NSString>;

        /// Setter for [`summary`][Self::summary].
        ///
        /// This is [copied][objc2_foundation::NSCopying::copy] when set.
        #[unsafe(method(setSummary:))]
        #[unsafe(method_family = none)]
        pub unsafe fn setSummary(&self, summary: &NSString);

        #[cfg(feature = "SWCollaborationOptionsGroup")]
        /// Initializes a shareOptions object to represent the available collaboration options for the document and a summary of the selected options
        ///
        /// Parameter `optionsGroups`: SWCollaborationOptionsGroups to customize how the collaboration will be shared
        ///
        /// Parameter `summary`: localized string to summarize the selected collaboration options
        #[unsafe(method(initWithOptionsGroups:summary:))]
        #[unsafe(method_family = init)]
        pub unsafe fn initWithOptionsGroups_summary(
            this: Allocated<Self>,
            options_groups: &NSArray<SWCollaborationOptionsGroup>,
            summary: &NSString,
        ) -> Retained<Self>;

        #[cfg(feature = "SWCollaborationOptionsGroup")]
        /// Initializes a shareOptions object to represent the available collaboration options for the document and the default summary string "Share Options"
        ///
        /// Parameter `optionsGroups`: SWCollaborationOptionsGroups to customize how the collaboration will be shared
        #[unsafe(method(initWithOptionsGroups:))]
        #[unsafe(method_family = init)]
        pub unsafe fn initWithOptionsGroups(
            this: Allocated<Self>,
            options_groups: &NSArray<SWCollaborationOptionsGroup>,
        ) -> Retained<Self>;

        #[cfg(feature = "SWCollaborationOptionsGroup")]
        /// Creates a shareOptions object to represent the available collaboration options for the document and a summary of the selected options
        ///
        /// Parameter `optionsGroups`: SWCollaborationOptionsGroups to customize how the collaboration will be shared
        ///
        /// Parameter `summary`: localized string to summarize the selected collaboration options
        #[unsafe(method(shareOptionsWithOptionsGroups:summary:))]
        #[unsafe(method_family = none)]
        pub unsafe fn shareOptionsWithOptionsGroups_summary(
            options_groups: &NSArray<SWCollaborationOptionsGroup>,
            summary: &NSString,
        ) -> Retained<SWCollaborationShareOptions>;

        #[cfg(feature = "SWCollaborationOptionsGroup")]
        /// Creates a shareOptions object to represent the available collaboration options for the document and a summary of the selected options
        ///
        /// Parameter `optionsGroups`: SWCollaborationOptionsGroups to customize how the collaboration will be shared
        #[unsafe(method(shareOptionsWithOptionsGroups:))]
        #[unsafe(method_family = none)]
        pub unsafe fn shareOptionsWithOptionsGroups(
            options_groups: &NSArray<SWCollaborationOptionsGroup>,
        ) -> Retained<SWCollaborationShareOptions>;

        #[unsafe(method(init))]
        #[unsafe(method_family = init)]
        pub unsafe fn init(this: Allocated<Self>) -> Retained<Self>;

        #[unsafe(method(initWithCoder:))]
        #[unsafe(method_family = init)]
        pub unsafe fn initWithCoder(this: Allocated<Self>, coder: &NSCoder) -> Retained<Self>;
    );
}

/// Methods declared on superclass `NSObject`.
impl SWCollaborationShareOptions {
    extern_methods!(
        #[unsafe(method(new))]
        #[unsafe(method_family = new)]
        pub unsafe fn new() -> Retained<Self>;
    );
}
