//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use core::ffi::*;
use core::ptr::NonNull;
use objc2::__framework_prelude::*;
use objc2_foundation::*;

use crate::*;

extern_class!(
    /// A user-facing option for configuring a shareable collaborative item
    ///
    /// SWCollaborationOptions represent the available settings (such as permissions) a user can configure on a collaborative item
    ///
    /// See also [Apple's documentation](https://developer.apple.com/documentation/sharedwithyoucore/swcollaborationoption?language=objc)
    #[unsafe(super(NSObject))]
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub struct SWCollaborationOption;
);

extern_conformance!(
    unsafe impl NSCoding for SWCollaborationOption {}
);

extern_conformance!(
    unsafe impl NSCopying for SWCollaborationOption {}
);

unsafe impl CopyingHelper for SWCollaborationOption {
    type Result = Self;
}

extern_conformance!(
    unsafe impl NSObjectProtocol for SWCollaborationOption {}
);

extern_conformance!(
    unsafe impl NSSecureCoding for SWCollaborationOption {}
);

impl SWCollaborationOption {
    extern_methods!(
        /// A localized title string to be used when displaying the option
        #[unsafe(method(title))]
        #[unsafe(method_family = none)]
        pub unsafe fn title(&self) -> Retained<NSString>;

        /// Setter for [`title`][Self::title].
        ///
        /// This is [copied][objc2_foundation::NSCopying::copy] when set.
        #[unsafe(method(setTitle:))]
        #[unsafe(method_family = none)]
        pub unsafe fn setTitle(&self, title: &NSString);

        /// Unique identifier
        #[unsafe(method(identifier))]
        #[unsafe(method_family = none)]
        pub unsafe fn identifier(&self) -> Retained<NSString>;

        /// A localized subtitle string to be used when displaying the option
        #[unsafe(method(subtitle))]
        #[unsafe(method_family = none)]
        pub unsafe fn subtitle(&self) -> Retained<NSString>;

        /// Setter for [`subtitle`][Self::subtitle].
        ///
        /// This is [copied][objc2_foundation::NSCopying::copy] when set.
        #[unsafe(method(setSubtitle:))]
        #[unsafe(method_family = none)]
        pub unsafe fn setSubtitle(&self, subtitle: &NSString);

        /// A flag that indicates whether the option is selected.
        ///
        /// This property should only be set directly when the option represents an individual switch. Defaults to NO
        #[unsafe(method(isSelected))]
        #[unsafe(method_family = none)]
        pub unsafe fn isSelected(&self) -> bool;

        /// Setter for [`isSelected`][Self::isSelected].
        #[unsafe(method(setSelected:))]
        #[unsafe(method_family = none)]
        pub unsafe fn setSelected(&self, selected: bool);

        /// An array of option identifiers that must already be selected in order to be interacted with
        #[unsafe(method(requiredOptionsIdentifiers))]
        #[unsafe(method_family = none)]
        pub unsafe fn requiredOptionsIdentifiers(&self) -> Retained<NSArray<NSString>>;

        /// Setter for [`requiredOptionsIdentifiers`][Self::requiredOptionsIdentifiers].
        ///
        /// This is [copied][objc2_foundation::NSCopying::copy] when set.
        #[unsafe(method(setRequiredOptionsIdentifiers:))]
        #[unsafe(method_family = none)]
        pub unsafe fn setRequiredOptionsIdentifiers(
            &self,
            required_options_identifiers: &NSArray<NSString>,
        );

        /// Initializes a collaboration option object with a title and unique identifier
        ///
        /// Parameter `title`: A localized title string to be used when displaying the option
        ///
        /// Parameter `identifier`: The unique identifier for the option
        #[unsafe(method(initWithTitle:identifier:))]
        #[unsafe(method_family = init)]
        pub unsafe fn initWithTitle_identifier(
            this: Allocated<Self>,
            title: &NSString,
            identifier: &NSString,
        ) -> Retained<Self>;

        #[unsafe(method(init))]
        #[unsafe(method_family = init)]
        pub unsafe fn init(this: Allocated<Self>) -> Retained<Self>;

        #[unsafe(method(new))]
        #[unsafe(method_family = new)]
        pub unsafe fn new() -> Retained<Self>;

        /// Initializes a collaboration option with a title and unique identifier
        ///
        /// Parameter `title`: A localized title string to be used when displaying the option
        ///
        /// Parameter `identifier`: The unique identifier for the option
        #[unsafe(method(optionWithTitle:identifier:))]
        #[unsafe(method_family = none)]
        pub unsafe fn optionWithTitle_identifier(
            title: &NSString,
            identifier: &NSString,
        ) -> Retained<SWCollaborationOption>;
    );
}
