//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use core::ffi::*;
use core::ptr::NonNull;
use objc2::__framework_prelude::*;
use objc2_foundation::*;

use crate::*;

extern "C" {
    /// How far in seconds is this match from the start of the reference audio
    ///
    /// See also [Apple's documentation](https://developer.apple.com/documentation/shazamkit/shmediaitemmatchoffset?language=objc)
    #[cfg(feature = "SHMediaItem")]
    pub static SHMediaItemMatchOffset: &'static SHMediaItemProperty;
}

extern "C" {
    /// How much the match differs in frequency from reference material
    ///
    /// See also [Apple's documentation](https://developer.apple.com/documentation/shazamkit/shmediaitemfrequencyskew?language=objc)
    #[cfg(feature = "SHMediaItem")]
    pub static SHMediaItemFrequencySkew: &'static SHMediaItemProperty;
}

extern "C" {
    /// The value ranges from 0.0 to 1.0, where 1.0 indicates the highest level of confidence.
    ///
    /// See also [Apple's documentation](https://developer.apple.com/documentation/shazamkit/shmediaitemconfidence?language=objc)
    #[cfg(feature = "SHMediaItem")]
    pub static SHMediaItemConfidence: &'static SHMediaItemProperty;
}

extern_class!(
    /// `SHMatchedMediaItem`represents metadata that has been matched against a
    /// `SHCatalog`
    /// Extra information is presented that can only be generated from a match. The properties provided here
    /// that are not available on
    /// `SHMediaItem`are ephemeral and can differ each time there is a match of the
    /// `SHSignature`that this
    /// object represents
    ///
    ///
    /// Note: `SHMatchedMediaItem`is not intended to be subclassed
    ///
    /// See also [Apple's documentation](https://developer.apple.com/documentation/shazamkit/shmatchedmediaitem?language=objc)
    #[unsafe(super(SHMediaItem, NSObject))]
    #[derive(Debug, PartialEq, Eq, Hash)]
    #[cfg(feature = "SHMediaItem")]
    pub struct SHMatchedMediaItem;
);

#[cfg(feature = "SHMediaItem")]
unsafe impl Send for SHMatchedMediaItem {}

#[cfg(feature = "SHMediaItem")]
unsafe impl Sync for SHMatchedMediaItem {}

#[cfg(feature = "SHMediaItem")]
extern_conformance!(
    unsafe impl NSCoding for SHMatchedMediaItem {}
);

#[cfg(feature = "SHMediaItem")]
extern_conformance!(
    unsafe impl NSCopying for SHMatchedMediaItem {}
);

#[cfg(feature = "SHMediaItem")]
unsafe impl CopyingHelper for SHMatchedMediaItem {
    type Result = Self;
}

#[cfg(feature = "SHMediaItem")]
extern_conformance!(
    unsafe impl NSObjectProtocol for SHMatchedMediaItem {}
);

#[cfg(feature = "SHMediaItem")]
extern_conformance!(
    unsafe impl NSSecureCoding for SHMatchedMediaItem {}
);

#[cfg(feature = "SHMediaItem")]
impl SHMatchedMediaItem {
    extern_methods!(
        /// The frequency difference between the reference and sample audio
        ///
        /// A value of 0.0 indicates the matched audio at the original frequency,
        /// a value of 0.1 indicates 100hz is now 110hz
        #[unsafe(method(frequencySkew))]
        #[unsafe(method_family = none)]
        pub unsafe fn frequencySkew(&self) -> c_float;

        /// The difference between the start of the reference audio and the start of the sample audio
        ///
        /// Note: This value can be negative if the source audio starts before the reference audio
        #[unsafe(method(matchOffset))]
        #[unsafe(method_family = none)]
        pub unsafe fn matchOffset(&self) -> NSTimeInterval;

        /// The auto updating playback position in the reference signature
        #[unsafe(method(predictedCurrentMatchOffset))]
        #[unsafe(method_family = none)]
        pub unsafe fn predictedCurrentMatchOffset(&self) -> NSTimeInterval;

        /// The level of confidence in the match result.
        ///
        /// Note: This may be fetched using the key
        /// `SHMediaItemConfidence`
        /// The value ranges from 0.0 to 1.0, where 1.0 indicates the highest level of confidence.
        #[unsafe(method(confidence))]
        #[unsafe(method_family = none)]
        pub unsafe fn confidence(&self) -> c_float;
    );
}

/// Methods declared on superclass `SHMediaItem`.
#[cfg(feature = "SHMediaItem")]
impl SHMatchedMediaItem {
    extern_methods!(
        /// Construct a new instance with the provided dictionary
        ///
        /// Parameter `properties`: A dictionary of
        /// `SHMediaItemProperty`and their values
        ///
        /// You may add your own keys here to return custom data, custom data should conform to NSCoding
        ///
        /// # Safety
        ///
        /// `properties` generic should be of the correct type.
        #[unsafe(method(mediaItemWithProperties:))]
        #[unsafe(method_family = none)]
        pub unsafe fn mediaItemWithProperties(
            properties: &NSDictionary<SHMediaItemProperty, AnyObject>,
        ) -> Retained<Self>;

        #[unsafe(method(new))]
        #[unsafe(method_family = new)]
        pub unsafe fn new() -> Retained<Self>;

        #[unsafe(method(init))]
        #[unsafe(method_family = init)]
        pub unsafe fn init(this: Allocated<Self>) -> Retained<Self>;
    );
}
