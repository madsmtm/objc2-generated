//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use core::ffi::*;
use core::ptr::NonNull;
use objc2::__framework_prelude::*;
use objc2_foundation::*;

use crate::*;

extern_class!(
    /// `SHMediaLibrary`represents the user's synced Shazam library.
    ///
    /// You can add new
    /// `SHMediaItem`instances to the user's library.
    ///
    /// See also [Apple's documentation](https://developer.apple.com/documentation/shazamkit/shmedialibrary?language=objc)
    #[unsafe(super(NSObject))]
    #[derive(Debug, PartialEq, Eq, Hash)]
    #[deprecated = "Use SHLibrary instead"]
    pub struct SHMediaLibrary;
);

extern_conformance!(
    unsafe impl NSObjectProtocol for SHMediaLibrary {}
);

impl SHMediaLibrary {
    extern_methods!(
        /// Returns an instance of the default Shazam library.
        #[deprecated = "Use SHLibrary instead"]
        #[unsafe(method(defaultLibrary))]
        #[unsafe(method_family = none)]
        pub unsafe fn defaultLibrary() -> Retained<SHMediaLibrary>;

        #[cfg(all(feature = "SHMediaItem", feature = "block2"))]
        /// Adds an array of media items to the user's Shazam library.
        ///
        ///
        /// For each
        /// `SHMediaItem`instance passed in, the following
        /// `SHMediaItemProperty`keys will be saved:
        /// `SHMediaItemShazamID,``SHMediaItemTitle,``SHMediaItemSubtitle.`If
        /// `SHMediaItemSubtitle`is not set it may fallback to use
        /// `SHMediaItemArtist`if available.
        ///
        ///
        /// Note: `SHMediaItemShazamID`is required for each
        /// `SHMediaItem`to be considered valid.
        /// `SHMediaItemShazamID`must be a numeric only string
        ///
        ///
        /// Parameter `mediaItems`: An array containing the
        /// `SHMediaItem`objects to be added to the library.
        ///
        /// Parameter `completionHandler`: A block called after all valid
        /// `SHMediaItem`objects have been added to the library. If an error occurred, the error parameter will be populated.
        ///
        /// # Safety
        ///
        /// `completion_handler` block must be sendable.
        #[deprecated = "Use SHLibrary instead"]
        #[unsafe(method(addMediaItems:completionHandler:))]
        #[unsafe(method_family = none)]
        pub unsafe fn addMediaItems_completionHandler(
            &self,
            media_items: &NSArray<SHMediaItem>,
            completion_handler: &block2::DynBlock<dyn Fn(*mut NSError)>,
        );

        #[deprecated = "Use SHLibrary instead"]
        #[unsafe(method(init))]
        #[unsafe(method_family = init)]
        pub unsafe fn init(this: Allocated<Self>) -> Retained<Self>;

        #[deprecated = "Use SHLibrary instead"]
        #[unsafe(method(new))]
        #[unsafe(method_family = new)]
        pub unsafe fn new() -> Retained<Self>;
    );
}
