// This file has been automatically generated by `objc2`'s `header-translator`.
// DO NOT EDIT

#![allow(unused_imports)]
#![allow(deprecated)]
#![allow(non_snake_case)]
#![allow(non_camel_case_types)]
#![allow(non_upper_case_globals)]
#![allow(missing_docs)]
#![allow(clippy::too_many_arguments)]
#![allow(clippy::type_complexity)]
#![allow(clippy::upper_case_acronyms)]
#![allow(clippy::identity_op)]
#![allow(clippy::missing_safety_doc)]
#![allow(clippy::doc_lazy_continuation)]
#![allow(rustdoc::broken_intra_doc_links)]
#![allow(rustdoc::bare_urls)]
#![allow(rustdoc::invalid_html_tags)]

#[link(name = "CoreBluetooth", kind = "framework")]
extern "C" {}

#[cfg(feature = "CBATTRequest")]
#[path = "CBATTRequest.rs"]
mod __CBATTRequest;
#[cfg(feature = "CBAdvertisementData")]
#[path = "CBAdvertisementData.rs"]
mod __CBAdvertisementData;
#[cfg(feature = "CBAttribute")]
#[path = "CBAttribute.rs"]
mod __CBAttribute;
#[cfg(feature = "CBCentral")]
#[path = "CBCentral.rs"]
mod __CBCentral;
#[cfg(feature = "CBCentralManager")]
#[path = "CBCentralManager.rs"]
mod __CBCentralManager;
#[cfg(feature = "CBCentralManagerConstants")]
#[path = "CBCentralManagerConstants.rs"]
mod __CBCentralManagerConstants;
#[cfg(feature = "CBCharacteristic")]
#[path = "CBCharacteristic.rs"]
mod __CBCharacteristic;
#[cfg(feature = "CBDefines")]
#[path = "CBDefines.rs"]
mod __CBDefines;
#[cfg(feature = "CBDescriptor")]
#[path = "CBDescriptor.rs"]
mod __CBDescriptor;
#[cfg(feature = "CBError")]
#[path = "CBError.rs"]
mod __CBError;
#[cfg(feature = "CBL2CAPChannel")]
#[path = "CBL2CAPChannel.rs"]
mod __CBL2CAPChannel;
#[cfg(feature = "CBManager")]
#[path = "CBManager.rs"]
mod __CBManager;
#[cfg(feature = "CBPeer")]
#[path = "CBPeer.rs"]
mod __CBPeer;
#[cfg(feature = "CBPeripheral")]
#[path = "CBPeripheral.rs"]
mod __CBPeripheral;
#[cfg(feature = "CBPeripheralManager")]
#[path = "CBPeripheralManager.rs"]
mod __CBPeripheralManager;
#[cfg(feature = "CBPeripheralManagerConstants")]
#[path = "CBPeripheralManagerConstants.rs"]
mod __CBPeripheralManagerConstants;
#[cfg(feature = "CBService")]
#[path = "CBService.rs"]
mod __CBService;
#[cfg(feature = "CBUUID")]
#[path = "CBUUID.rs"]
mod __CBUUID;

#[cfg(feature = "CBATTRequest")]
pub use self::__CBATTRequest::CBATTRequest;
#[cfg(feature = "CBAdvertisementData")]
pub use self::__CBAdvertisementData::CBAdvertisementDataIsConnectable;
#[cfg(feature = "CBAdvertisementData")]
pub use self::__CBAdvertisementData::CBAdvertisementDataLocalNameKey;
#[cfg(feature = "CBAdvertisementData")]
pub use self::__CBAdvertisementData::CBAdvertisementDataManufacturerDataKey;
#[cfg(feature = "CBAdvertisementData")]
pub use self::__CBAdvertisementData::CBAdvertisementDataOverflowServiceUUIDsKey;
#[cfg(feature = "CBAdvertisementData")]
pub use self::__CBAdvertisementData::CBAdvertisementDataServiceDataKey;
#[cfg(feature = "CBAdvertisementData")]
pub use self::__CBAdvertisementData::CBAdvertisementDataServiceUUIDsKey;
#[cfg(feature = "CBAdvertisementData")]
pub use self::__CBAdvertisementData::CBAdvertisementDataSolicitedServiceUUIDsKey;
#[cfg(feature = "CBAdvertisementData")]
pub use self::__CBAdvertisementData::CBAdvertisementDataTxPowerLevelKey;
#[cfg(feature = "CBAttribute")]
pub use self::__CBAttribute::CBAttribute;
#[cfg(all(feature = "CBCentral", feature = "CBPeer"))]
pub use self::__CBCentral::CBCentral;
#[cfg(all(feature = "CBCentralManager", feature = "CBManager"))]
pub use self::__CBCentralManager::CBCentralManager;
#[cfg(feature = "CBCentralManager")]
pub use self::__CBCentralManager::CBCentralManagerDelegate;
#[cfg(feature = "CBCentralManager")]
pub use self::__CBCentralManager::CBCentralManagerFeature;
#[cfg(feature = "CBCentralManager")]
pub use self::__CBCentralManager::CBCentralManagerState;
#[cfg(feature = "CBCentralManager")]
pub use self::__CBCentralManager::CBConnectionEvent;
#[cfg(feature = "CBCentralManagerConstants")]
pub use self::__CBCentralManagerConstants::CBCentralManagerOptionDeviceAccessForMedia;
#[cfg(feature = "CBCentralManagerConstants")]
pub use self::__CBCentralManagerConstants::CBCentralManagerOptionRestoreIdentifierKey;
#[cfg(feature = "CBCentralManagerConstants")]
pub use self::__CBCentralManagerConstants::CBCentralManagerOptionShowPowerAlertKey;
#[cfg(feature = "CBCentralManagerConstants")]
pub use self::__CBCentralManagerConstants::CBCentralManagerRestoredStatePeripheralsKey;
#[cfg(feature = "CBCentralManagerConstants")]
pub use self::__CBCentralManagerConstants::CBCentralManagerRestoredStateScanOptionsKey;
#[cfg(feature = "CBCentralManagerConstants")]
pub use self::__CBCentralManagerConstants::CBCentralManagerRestoredStateScanServicesKey;
#[cfg(feature = "CBCentralManagerConstants")]
pub use self::__CBCentralManagerConstants::CBCentralManagerScanOptionAllowDuplicatesKey;
#[cfg(feature = "CBCentralManagerConstants")]
pub use self::__CBCentralManagerConstants::CBCentralManagerScanOptionSolicitedServiceUUIDsKey;
#[cfg(feature = "CBCentralManagerConstants")]
pub use self::__CBCentralManagerConstants::CBConnectPeripheralOptionEnableAutoReconnect;
#[cfg(feature = "CBCentralManagerConstants")]
pub use self::__CBCentralManagerConstants::CBConnectPeripheralOptionEnableTransportBridgingKey;
#[cfg(feature = "CBCentralManagerConstants")]
pub use self::__CBCentralManagerConstants::CBConnectPeripheralOptionNotifyOnConnectionKey;
#[cfg(feature = "CBCentralManagerConstants")]
pub use self::__CBCentralManagerConstants::CBConnectPeripheralOptionNotifyOnDisconnectionKey;
#[cfg(feature = "CBCentralManagerConstants")]
pub use self::__CBCentralManagerConstants::CBConnectPeripheralOptionNotifyOnNotificationKey;
#[cfg(feature = "CBCentralManagerConstants")]
pub use self::__CBCentralManagerConstants::CBConnectPeripheralOptionRequiresANCS;
#[cfg(feature = "CBCentralManagerConstants")]
pub use self::__CBCentralManagerConstants::CBConnectPeripheralOptionStartDelayKey;
#[cfg(feature = "CBCentralManagerConstants")]
pub use self::__CBCentralManagerConstants::CBConnectionEventMatchingOption;
#[cfg(feature = "CBCentralManagerConstants")]
pub use self::__CBCentralManagerConstants::CBConnectionEventMatchingOptionPeripheralUUIDs;
#[cfg(feature = "CBCentralManagerConstants")]
pub use self::__CBCentralManagerConstants::CBConnectionEventMatchingOptionServiceUUIDs;
#[cfg(feature = "CBCharacteristic")]
pub use self::__CBCharacteristic::CBAttributePermissions;
#[cfg(all(feature = "CBAttribute", feature = "CBCharacteristic"))]
pub use self::__CBCharacteristic::CBCharacteristic;
#[cfg(feature = "CBCharacteristic")]
pub use self::__CBCharacteristic::CBCharacteristicProperties;
#[cfg(all(feature = "CBAttribute", feature = "CBCharacteristic"))]
pub use self::__CBCharacteristic::CBMutableCharacteristic;
#[cfg(all(feature = "CBAttribute", feature = "CBDescriptor"))]
pub use self::__CBDescriptor::CBDescriptor;
#[cfg(all(feature = "CBAttribute", feature = "CBDescriptor"))]
pub use self::__CBDescriptor::CBMutableDescriptor;
#[cfg(feature = "CBError")]
pub use self::__CBError::CBATTError;
#[cfg(feature = "CBError")]
pub use self::__CBError::CBATTErrorDomain;
#[cfg(feature = "CBError")]
pub use self::__CBError::CBError;
#[cfg(feature = "CBError")]
pub use self::__CBError::CBErrorDomain;
#[cfg(feature = "CBL2CAPChannel")]
pub use self::__CBL2CAPChannel::CBL2CAPChannel;
#[cfg(feature = "CBL2CAPChannel")]
pub use self::__CBL2CAPChannel::CBL2CAPPSM;
#[cfg(feature = "CBManager")]
pub use self::__CBManager::CBManager;
#[cfg(feature = "CBManager")]
pub use self::__CBManager::CBManagerAuthorization;
#[cfg(feature = "CBManager")]
pub use self::__CBManager::CBManagerState;
#[cfg(feature = "CBPeer")]
pub use self::__CBPeer::CBPeer;
#[cfg(feature = "CBPeripheral")]
pub use self::__CBPeripheral::CBCharacteristicWriteType;
#[cfg(all(feature = "CBPeer", feature = "CBPeripheral"))]
pub use self::__CBPeripheral::CBPeripheral;
#[cfg(feature = "CBPeripheral")]
pub use self::__CBPeripheral::CBPeripheralDelegate;
#[cfg(feature = "CBPeripheral")]
pub use self::__CBPeripheral::CBPeripheralState;
#[cfg(all(feature = "CBManager", feature = "CBPeripheralManager"))]
pub use self::__CBPeripheralManager::CBPeripheralManager;
#[cfg(feature = "CBPeripheralManager")]
pub use self::__CBPeripheralManager::CBPeripheralManagerAuthorizationStatus;
#[cfg(feature = "CBPeripheralManager")]
pub use self::__CBPeripheralManager::CBPeripheralManagerConnectionLatency;
#[cfg(feature = "CBPeripheralManager")]
pub use self::__CBPeripheralManager::CBPeripheralManagerDelegate;
#[cfg(feature = "CBPeripheralManager")]
pub use self::__CBPeripheralManager::CBPeripheralManagerState;
#[cfg(feature = "CBPeripheralManagerConstants")]
pub use self::__CBPeripheralManagerConstants::CBPeripheralManagerOptionRestoreIdentifierKey;
#[cfg(feature = "CBPeripheralManagerConstants")]
pub use self::__CBPeripheralManagerConstants::CBPeripheralManagerOptionShowPowerAlertKey;
#[cfg(feature = "CBPeripheralManagerConstants")]
pub use self::__CBPeripheralManagerConstants::CBPeripheralManagerRestoredStateAdvertisementDataKey;
#[cfg(feature = "CBPeripheralManagerConstants")]
pub use self::__CBPeripheralManagerConstants::CBPeripheralManagerRestoredStateServicesKey;
#[cfg(all(feature = "CBAttribute", feature = "CBService"))]
pub use self::__CBService::CBMutableService;
#[cfg(all(feature = "CBAttribute", feature = "CBService"))]
pub use self::__CBService::CBService;
#[cfg(feature = "CBUUID")]
pub use self::__CBUUID::CBUUIDCharacteristicAggregateFormatString;
#[cfg(feature = "CBUUID")]
pub use self::__CBUUID::CBUUIDCharacteristicExtendedPropertiesString;
#[cfg(feature = "CBUUID")]
pub use self::__CBUUID::CBUUIDCharacteristicFormatString;
#[cfg(feature = "CBUUID")]
pub use self::__CBUUID::CBUUIDCharacteristicObservationScheduleString;
#[cfg(feature = "CBUUID")]
pub use self::__CBUUID::CBUUIDCharacteristicUserDescriptionString;
#[cfg(feature = "CBUUID")]
pub use self::__CBUUID::CBUUIDCharacteristicValidRangeString;
#[cfg(feature = "CBUUID")]
pub use self::__CBUUID::CBUUIDClientCharacteristicConfigurationString;
#[cfg(feature = "CBUUID")]
pub use self::__CBUUID::CBUUIDL2CAPPSMCharacteristicString;
#[cfg(feature = "CBUUID")]
pub use self::__CBUUID::CBUUIDServerCharacteristicConfigurationString;
#[cfg(feature = "CBUUID")]
pub use self::__CBUUID::CBUUID;
