//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use core::ffi::*;
use core::ptr::NonNull;
use objc2::__framework_prelude::*;
use objc2_foundation::*;

use crate::*;

extern_class!(
    /// [Apple's documentation](https://developer.apple.com/documentation/clockkit/clkcomplicationtimelineentry?language=objc)
    #[unsafe(super(NSObject))]
    #[derive(Debug, PartialEq, Eq, Hash)]
    #[deprecated = "On watchOS 9.0 or later, use WidgetKit instead"]
    pub struct CLKComplicationTimelineEntry;
);

extern_conformance!(
    unsafe impl NSObjectProtocol for CLKComplicationTimelineEntry {}
);

impl CLKComplicationTimelineEntry {
    extern_methods!(
        #[cfg(feature = "CLKComplicationTemplate")]
        #[deprecated = "On watchOS 9.0 or later, use WidgetKit instead"]
        #[unsafe(method(entryWithDate:complicationTemplate:))]
        #[unsafe(method_family = none)]
        pub unsafe fn entryWithDate_complicationTemplate(
            date: &NSDate,
            complication_template: &CLKComplicationTemplate,
        ) -> Retained<Self>;

        #[cfg(feature = "CLKComplicationTemplate")]
        #[deprecated = "On watchOS 9.0 or later, use WidgetKit instead"]
        #[unsafe(method(entryWithDate:complicationTemplate:timelineAnimationGroup:))]
        #[unsafe(method_family = none)]
        pub unsafe fn entryWithDate_complicationTemplate_timelineAnimationGroup(
            date: &NSDate,
            complication_template: &CLKComplicationTemplate,
            timeline_animation_group: Option<&NSString>,
        ) -> Retained<Self>;

        #[deprecated = "On watchOS 9.0 or later, use WidgetKit instead"]
        #[unsafe(method(date))]
        #[unsafe(method_family = none)]
        pub unsafe fn date(&self) -> Retained<NSDate>;

        /// Setter for [`date`][Self::date].
        #[deprecated = "On watchOS 9.0 or later, use WidgetKit instead"]
        #[unsafe(method(setDate:))]
        #[unsafe(method_family = none)]
        pub unsafe fn setDate(&self, date: &NSDate);

        #[cfg(feature = "CLKComplicationTemplate")]
        #[deprecated = "On watchOS 9.0 or later, use WidgetKit instead"]
        #[unsafe(method(complicationTemplate))]
        #[unsafe(method_family = none)]
        pub unsafe fn complicationTemplate(&self) -> Retained<CLKComplicationTemplate>;

        #[cfg(feature = "CLKComplicationTemplate")]
        /// Setter for [`complicationTemplate`][Self::complicationTemplate].
        ///
        /// This is [copied][objc2_foundation::NSCopying::copy] when set.
        #[deprecated = "On watchOS 9.0 or later, use WidgetKit instead"]
        #[unsafe(method(setComplicationTemplate:))]
        #[unsafe(method_family = none)]
        pub unsafe fn setComplicationTemplate(
            &self,
            complication_template: &CLKComplicationTemplate,
        );

        #[deprecated = "On watchOS 9.0 or later, use WidgetKit instead"]
        #[unsafe(method(timelineAnimationGroup))]
        #[unsafe(method_family = none)]
        pub unsafe fn timelineAnimationGroup(&self) -> Option<Retained<NSString>>;

        /// Setter for [`timelineAnimationGroup`][Self::timelineAnimationGroup].
        ///
        /// This is [copied][objc2_foundation::NSCopying::copy] when set.
        #[deprecated = "On watchOS 9.0 or later, use WidgetKit instead"]
        #[unsafe(method(setTimelineAnimationGroup:))]
        #[unsafe(method_family = none)]
        pub unsafe fn setTimelineAnimationGroup(&self, timeline_animation_group: Option<&NSString>);
    );
}

/// Methods declared on superclass `NSObject`.
impl CLKComplicationTimelineEntry {
    extern_methods!(
        #[unsafe(method(init))]
        #[unsafe(method_family = init)]
        pub unsafe fn init(this: Allocated<Self>) -> Retained<Self>;

        #[unsafe(method(new))]
        #[unsafe(method_family = new)]
        pub unsafe fn new() -> Retained<Self>;
    );
}
