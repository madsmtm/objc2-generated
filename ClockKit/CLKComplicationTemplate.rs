//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use core::ffi::*;
use core::ptr::NonNull;
use objc2::__framework_prelude::*;
use objc2_foundation::*;
#[cfg(feature = "objc2-ui-kit")]
use objc2_ui_kit::*;

use crate::*;

extern_class!(
    /// [Apple's documentation](https://developer.apple.com/documentation/clockkit/clkcomplicationtemplate?language=objc)
    #[unsafe(super(NSObject))]
    #[derive(Debug, PartialEq, Eq, Hash)]
    #[deprecated = "On watchOS 9.0 or later, use WidgetKit instead"]
    pub struct CLKComplicationTemplate;
);

extern_conformance!(
    unsafe impl NSCopying for CLKComplicationTemplate {}
);

unsafe impl CopyingHelper for CLKComplicationTemplate {
    type Result = Self;
}

extern_conformance!(
    unsafe impl NSObjectProtocol for CLKComplicationTemplate {}
);

impl CLKComplicationTemplate {
    extern_methods!(
        #[deprecated = "Initializing a template without parameters is deprecated in watchOS 7.0. Use an init with parameters instead."]
        #[unsafe(method(init))]
        #[unsafe(method_family = init)]
        pub unsafe fn init(this: Allocated<Self>) -> Retained<Self>;

        #[deprecated = "Creating a template without parameters is deprecated in watchOS 7.0. Use a factory method with parameters instead."]
        #[unsafe(method(new))]
        #[unsafe(method_family = new)]
        pub unsafe fn new() -> Retained<Self>;

        #[cfg(feature = "objc2-ui-kit")]
        #[deprecated = "On watchOS 9.0 or later, use WidgetKit instead"]
        #[unsafe(method(tintColor))]
        #[unsafe(method_family = none)]
        pub unsafe fn tintColor(&self) -> Option<Retained<UIColor>>;

        #[cfg(feature = "objc2-ui-kit")]
        /// Setter for [`tintColor`][Self::tintColor].
        ///
        /// This is [copied][objc2_foundation::NSCopying::copy] when set.
        #[deprecated = "On watchOS 9.0 or later, use WidgetKit instead"]
        #[unsafe(method(setTintColor:))]
        #[unsafe(method_family = none)]
        pub unsafe fn setTintColor(&self, tint_color: Option<&UIColor>);
    );
}

extern_class!(
    /// [Apple's documentation](https://developer.apple.com/documentation/clockkit/clkcomplicationtemplatemodularsmallsimpletext?language=objc)
    #[unsafe(super(CLKComplicationTemplate, NSObject))]
    #[derive(Debug, PartialEq, Eq, Hash)]
    #[deprecated = "On watchOS 9.0 or later, use WidgetKit instead"]
    pub struct CLKComplicationTemplateModularSmallSimpleText;
);

extern_conformance!(
    unsafe impl NSCopying for CLKComplicationTemplateModularSmallSimpleText {}
);

unsafe impl CopyingHelper for CLKComplicationTemplateModularSmallSimpleText {
    type Result = Self;
}

extern_conformance!(
    unsafe impl NSObjectProtocol for CLKComplicationTemplateModularSmallSimpleText {}
);

impl CLKComplicationTemplateModularSmallSimpleText {
    extern_methods!(
        #[cfg(feature = "CLKTextProvider")]
        #[deprecated = "On watchOS 9.0 or later, use WidgetKit instead"]
        #[unsafe(method(textProvider))]
        #[unsafe(method_family = none)]
        pub unsafe fn textProvider(&self) -> Retained<CLKTextProvider>;

        #[cfg(feature = "CLKTextProvider")]
        /// Setter for [`textProvider`][Self::textProvider].
        ///
        /// This is [copied][objc2_foundation::NSCopying::copy] when set.
        #[deprecated = "On watchOS 9.0 or later, use WidgetKit instead"]
        #[unsafe(method(setTextProvider:))]
        #[unsafe(method_family = none)]
        pub unsafe fn setTextProvider(&self, text_provider: &CLKTextProvider);

        #[cfg(feature = "CLKTextProvider")]
        #[unsafe(method(initWithTextProvider:))]
        #[unsafe(method_family = init)]
        pub unsafe fn initWithTextProvider(
            this: Allocated<Self>,
            text_provider: &CLKTextProvider,
        ) -> Retained<Self>;

        #[cfg(feature = "CLKTextProvider")]
        #[unsafe(method(templateWithTextProvider:))]
        #[unsafe(method_family = none)]
        pub unsafe fn templateWithTextProvider(text_provider: &CLKTextProvider) -> Retained<Self>;
    );
}

/// Methods declared on superclass `CLKComplicationTemplate`.
impl CLKComplicationTemplateModularSmallSimpleText {
    extern_methods!(
        #[deprecated = "Initializing a template without parameters is deprecated in watchOS 7.0. Use an init with parameters instead."]
        #[unsafe(method(init))]
        #[unsafe(method_family = init)]
        pub unsafe fn init(this: Allocated<Self>) -> Retained<Self>;

        #[deprecated = "Creating a template without parameters is deprecated in watchOS 7.0. Use a factory method with parameters instead."]
        #[unsafe(method(new))]
        #[unsafe(method_family = new)]
        pub unsafe fn new() -> Retained<Self>;
    );
}

extern_class!(
    /// [Apple's documentation](https://developer.apple.com/documentation/clockkit/clkcomplicationtemplatemodularsmallsimpleimage?language=objc)
    #[unsafe(super(CLKComplicationTemplate, NSObject))]
    #[derive(Debug, PartialEq, Eq, Hash)]
    #[deprecated = "On watchOS 9.0 or later, use WidgetKit instead"]
    pub struct CLKComplicationTemplateModularSmallSimpleImage;
);

extern_conformance!(
    unsafe impl NSCopying for CLKComplicationTemplateModularSmallSimpleImage {}
);

unsafe impl CopyingHelper for CLKComplicationTemplateModularSmallSimpleImage {
    type Result = Self;
}

extern_conformance!(
    unsafe impl NSObjectProtocol for CLKComplicationTemplateModularSmallSimpleImage {}
);

impl CLKComplicationTemplateModularSmallSimpleImage {
    extern_methods!(
        #[cfg(feature = "CLKImageProvider")]
        #[deprecated = "On watchOS 9.0 or later, use WidgetKit instead"]
        #[unsafe(method(imageProvider))]
        #[unsafe(method_family = none)]
        pub unsafe fn imageProvider(&self) -> Retained<CLKImageProvider>;

        #[cfg(feature = "CLKImageProvider")]
        /// Setter for [`imageProvider`][Self::imageProvider].
        ///
        /// This is [copied][objc2_foundation::NSCopying::copy] when set.
        #[deprecated = "On watchOS 9.0 or later, use WidgetKit instead"]
        #[unsafe(method(setImageProvider:))]
        #[unsafe(method_family = none)]
        pub unsafe fn setImageProvider(&self, image_provider: &CLKImageProvider);

        #[cfg(feature = "CLKImageProvider")]
        #[unsafe(method(initWithImageProvider:))]
        #[unsafe(method_family = init)]
        pub unsafe fn initWithImageProvider(
            this: Allocated<Self>,
            image_provider: &CLKImageProvider,
        ) -> Retained<Self>;

        #[cfg(feature = "CLKImageProvider")]
        #[unsafe(method(templateWithImageProvider:))]
        #[unsafe(method_family = none)]
        pub unsafe fn templateWithImageProvider(
            image_provider: &CLKImageProvider,
        ) -> Retained<Self>;
    );
}

/// Methods declared on superclass `CLKComplicationTemplate`.
impl CLKComplicationTemplateModularSmallSimpleImage {
    extern_methods!(
        #[deprecated = "Initializing a template without parameters is deprecated in watchOS 7.0. Use an init with parameters instead."]
        #[unsafe(method(init))]
        #[unsafe(method_family = init)]
        pub unsafe fn init(this: Allocated<Self>) -> Retained<Self>;

        #[deprecated = "Creating a template without parameters is deprecated in watchOS 7.0. Use a factory method with parameters instead."]
        #[unsafe(method(new))]
        #[unsafe(method_family = new)]
        pub unsafe fn new() -> Retained<Self>;
    );
}

extern_class!(
    /// [Apple's documentation](https://developer.apple.com/documentation/clockkit/clkcomplicationtemplatemodularsmallringtext?language=objc)
    #[unsafe(super(CLKComplicationTemplate, NSObject))]
    #[derive(Debug, PartialEq, Eq, Hash)]
    #[deprecated = "On watchOS 9.0 or later, use WidgetKit instead"]
    pub struct CLKComplicationTemplateModularSmallRingText;
);

extern_conformance!(
    unsafe impl NSCopying for CLKComplicationTemplateModularSmallRingText {}
);

unsafe impl CopyingHelper for CLKComplicationTemplateModularSmallRingText {
    type Result = Self;
}

extern_conformance!(
    unsafe impl NSObjectProtocol for CLKComplicationTemplateModularSmallRingText {}
);

impl CLKComplicationTemplateModularSmallRingText {
    extern_methods!(
        #[cfg(feature = "CLKTextProvider")]
        #[deprecated = "On watchOS 9.0 or later, use WidgetKit instead"]
        #[unsafe(method(textProvider))]
        #[unsafe(method_family = none)]
        pub unsafe fn textProvider(&self) -> Retained<CLKTextProvider>;

        #[cfg(feature = "CLKTextProvider")]
        /// Setter for [`textProvider`][Self::textProvider].
        ///
        /// This is [copied][objc2_foundation::NSCopying::copy] when set.
        #[deprecated = "On watchOS 9.0 or later, use WidgetKit instead"]
        #[unsafe(method(setTextProvider:))]
        #[unsafe(method_family = none)]
        pub unsafe fn setTextProvider(&self, text_provider: &CLKTextProvider);

        #[deprecated = "On watchOS 9.0 or later, use WidgetKit instead"]
        #[unsafe(method(fillFraction))]
        #[unsafe(method_family = none)]
        pub unsafe fn fillFraction(&self) -> c_float;

        /// Setter for [`fillFraction`][Self::fillFraction].
        #[deprecated = "On watchOS 9.0 or later, use WidgetKit instead"]
        #[unsafe(method(setFillFraction:))]
        #[unsafe(method_family = none)]
        pub unsafe fn setFillFraction(&self, fill_fraction: c_float);

        #[cfg(feature = "CLKDefines")]
        #[deprecated = "On watchOS 9.0 or later, use WidgetKit instead"]
        #[unsafe(method(ringStyle))]
        #[unsafe(method_family = none)]
        pub unsafe fn ringStyle(&self) -> CLKComplicationRingStyle;

        #[cfg(feature = "CLKDefines")]
        /// Setter for [`ringStyle`][Self::ringStyle].
        #[deprecated = "On watchOS 9.0 or later, use WidgetKit instead"]
        #[unsafe(method(setRingStyle:))]
        #[unsafe(method_family = none)]
        pub unsafe fn setRingStyle(&self, ring_style: CLKComplicationRingStyle);

        #[cfg(all(feature = "CLKDefines", feature = "CLKTextProvider"))]
        #[unsafe(method(initWithTextProvider:fillFraction:ringStyle:))]
        #[unsafe(method_family = init)]
        pub unsafe fn initWithTextProvider_fillFraction_ringStyle(
            this: Allocated<Self>,
            text_provider: &CLKTextProvider,
            fill_fraction: c_float,
            ring_style: CLKComplicationRingStyle,
        ) -> Retained<Self>;

        #[cfg(all(feature = "CLKDefines", feature = "CLKTextProvider"))]
        #[unsafe(method(templateWithTextProvider:fillFraction:ringStyle:))]
        #[unsafe(method_family = none)]
        pub unsafe fn templateWithTextProvider_fillFraction_ringStyle(
            text_provider: &CLKTextProvider,
            fill_fraction: c_float,
            ring_style: CLKComplicationRingStyle,
        ) -> Retained<Self>;
    );
}

/// Methods declared on superclass `CLKComplicationTemplate`.
impl CLKComplicationTemplateModularSmallRingText {
    extern_methods!(
        #[deprecated = "Initializing a template without parameters is deprecated in watchOS 7.0. Use an init with parameters instead."]
        #[unsafe(method(init))]
        #[unsafe(method_family = init)]
        pub unsafe fn init(this: Allocated<Self>) -> Retained<Self>;

        #[deprecated = "Creating a template without parameters is deprecated in watchOS 7.0. Use a factory method with parameters instead."]
        #[unsafe(method(new))]
        #[unsafe(method_family = new)]
        pub unsafe fn new() -> Retained<Self>;
    );
}

extern_class!(
    /// [Apple's documentation](https://developer.apple.com/documentation/clockkit/clkcomplicationtemplatemodularsmallringimage?language=objc)
    #[unsafe(super(CLKComplicationTemplate, NSObject))]
    #[derive(Debug, PartialEq, Eq, Hash)]
    #[deprecated = "On watchOS 9.0 or later, use WidgetKit instead"]
    pub struct CLKComplicationTemplateModularSmallRingImage;
);

extern_conformance!(
    unsafe impl NSCopying for CLKComplicationTemplateModularSmallRingImage {}
);

unsafe impl CopyingHelper for CLKComplicationTemplateModularSmallRingImage {
    type Result = Self;
}

extern_conformance!(
    unsafe impl NSObjectProtocol for CLKComplicationTemplateModularSmallRingImage {}
);

impl CLKComplicationTemplateModularSmallRingImage {
    extern_methods!(
        #[cfg(feature = "CLKImageProvider")]
        #[deprecated = "On watchOS 9.0 or later, use WidgetKit instead"]
        #[unsafe(method(imageProvider))]
        #[unsafe(method_family = none)]
        pub unsafe fn imageProvider(&self) -> Retained<CLKImageProvider>;

        #[cfg(feature = "CLKImageProvider")]
        /// Setter for [`imageProvider`][Self::imageProvider].
        ///
        /// This is [copied][objc2_foundation::NSCopying::copy] when set.
        #[deprecated = "On watchOS 9.0 or later, use WidgetKit instead"]
        #[unsafe(method(setImageProvider:))]
        #[unsafe(method_family = none)]
        pub unsafe fn setImageProvider(&self, image_provider: &CLKImageProvider);

        #[deprecated = "On watchOS 9.0 or later, use WidgetKit instead"]
        #[unsafe(method(fillFraction))]
        #[unsafe(method_family = none)]
        pub unsafe fn fillFraction(&self) -> c_float;

        /// Setter for [`fillFraction`][Self::fillFraction].
        #[deprecated = "On watchOS 9.0 or later, use WidgetKit instead"]
        #[unsafe(method(setFillFraction:))]
        #[unsafe(method_family = none)]
        pub unsafe fn setFillFraction(&self, fill_fraction: c_float);

        #[cfg(feature = "CLKDefines")]
        #[deprecated = "On watchOS 9.0 or later, use WidgetKit instead"]
        #[unsafe(method(ringStyle))]
        #[unsafe(method_family = none)]
        pub unsafe fn ringStyle(&self) -> CLKComplicationRingStyle;

        #[cfg(feature = "CLKDefines")]
        /// Setter for [`ringStyle`][Self::ringStyle].
        #[deprecated = "On watchOS 9.0 or later, use WidgetKit instead"]
        #[unsafe(method(setRingStyle:))]
        #[unsafe(method_family = none)]
        pub unsafe fn setRingStyle(&self, ring_style: CLKComplicationRingStyle);

        #[cfg(all(feature = "CLKDefines", feature = "CLKImageProvider"))]
        #[unsafe(method(initWithImageProvider:fillFraction:ringStyle:))]
        #[unsafe(method_family = init)]
        pub unsafe fn initWithImageProvider_fillFraction_ringStyle(
            this: Allocated<Self>,
            image_provider: &CLKImageProvider,
            fill_fraction: c_float,
            ring_style: CLKComplicationRingStyle,
        ) -> Retained<Self>;

        #[cfg(all(feature = "CLKDefines", feature = "CLKImageProvider"))]
        #[unsafe(method(templateWithImageProvider:fillFraction:ringStyle:))]
        #[unsafe(method_family = none)]
        pub unsafe fn templateWithImageProvider_fillFraction_ringStyle(
            image_provider: &CLKImageProvider,
            fill_fraction: c_float,
            ring_style: CLKComplicationRingStyle,
        ) -> Retained<Self>;
    );
}

/// Methods declared on superclass `CLKComplicationTemplate`.
impl CLKComplicationTemplateModularSmallRingImage {
    extern_methods!(
        #[deprecated = "Initializing a template without parameters is deprecated in watchOS 7.0. Use an init with parameters instead."]
        #[unsafe(method(init))]
        #[unsafe(method_family = init)]
        pub unsafe fn init(this: Allocated<Self>) -> Retained<Self>;

        #[deprecated = "Creating a template without parameters is deprecated in watchOS 7.0. Use a factory method with parameters instead."]
        #[unsafe(method(new))]
        #[unsafe(method_family = new)]
        pub unsafe fn new() -> Retained<Self>;
    );
}

extern_class!(
    /// [Apple's documentation](https://developer.apple.com/documentation/clockkit/clkcomplicationtemplatemodularsmallstacktext?language=objc)
    #[unsafe(super(CLKComplicationTemplate, NSObject))]
    #[derive(Debug, PartialEq, Eq, Hash)]
    #[deprecated = "On watchOS 9.0 or later, use WidgetKit instead"]
    pub struct CLKComplicationTemplateModularSmallStackText;
);

extern_conformance!(
    unsafe impl NSCopying for CLKComplicationTemplateModularSmallStackText {}
);

unsafe impl CopyingHelper for CLKComplicationTemplateModularSmallStackText {
    type Result = Self;
}

extern_conformance!(
    unsafe impl NSObjectProtocol for CLKComplicationTemplateModularSmallStackText {}
);

impl CLKComplicationTemplateModularSmallStackText {
    extern_methods!(
        #[cfg(feature = "CLKTextProvider")]
        #[deprecated = "On watchOS 9.0 or later, use WidgetKit instead"]
        #[unsafe(method(line1TextProvider))]
        #[unsafe(method_family = none)]
        pub unsafe fn line1TextProvider(&self) -> Retained<CLKTextProvider>;

        #[cfg(feature = "CLKTextProvider")]
        /// Setter for [`line1TextProvider`][Self::line1TextProvider].
        ///
        /// This is [copied][objc2_foundation::NSCopying::copy] when set.
        #[deprecated = "On watchOS 9.0 or later, use WidgetKit instead"]
        #[unsafe(method(setLine1TextProvider:))]
        #[unsafe(method_family = none)]
        pub unsafe fn setLine1TextProvider(&self, line1_text_provider: &CLKTextProvider);

        #[cfg(feature = "CLKTextProvider")]
        #[deprecated = "On watchOS 9.0 or later, use WidgetKit instead"]
        #[unsafe(method(line2TextProvider))]
        #[unsafe(method_family = none)]
        pub unsafe fn line2TextProvider(&self) -> Retained<CLKTextProvider>;

        #[cfg(feature = "CLKTextProvider")]
        /// Setter for [`line2TextProvider`][Self::line2TextProvider].
        ///
        /// This is [copied][objc2_foundation::NSCopying::copy] when set.
        #[deprecated = "On watchOS 9.0 or later, use WidgetKit instead"]
        #[unsafe(method(setLine2TextProvider:))]
        #[unsafe(method_family = none)]
        pub unsafe fn setLine2TextProvider(&self, line2_text_provider: &CLKTextProvider);

        #[deprecated = "On watchOS 9.0 or later, use WidgetKit instead"]
        #[unsafe(method(highlightLine2))]
        #[unsafe(method_family = none)]
        pub unsafe fn highlightLine2(&self) -> bool;

        /// Setter for [`highlightLine2`][Self::highlightLine2].
        #[deprecated = "On watchOS 9.0 or later, use WidgetKit instead"]
        #[unsafe(method(setHighlightLine2:))]
        #[unsafe(method_family = none)]
        pub unsafe fn setHighlightLine2(&self, highlight_line2: bool);

        #[cfg(feature = "CLKTextProvider")]
        #[unsafe(method(initWithLine1TextProvider:line2TextProvider:))]
        #[unsafe(method_family = init)]
        pub unsafe fn initWithLine1TextProvider_line2TextProvider(
            this: Allocated<Self>,
            line1_text_provider: &CLKTextProvider,
            line2_text_provider: &CLKTextProvider,
        ) -> Retained<Self>;

        #[cfg(feature = "CLKTextProvider")]
        #[unsafe(method(templateWithLine1TextProvider:line2TextProvider:))]
        #[unsafe(method_family = none)]
        pub unsafe fn templateWithLine1TextProvider_line2TextProvider(
            line1_text_provider: &CLKTextProvider,
            line2_text_provider: &CLKTextProvider,
        ) -> Retained<Self>;
    );
}

/// Methods declared on superclass `CLKComplicationTemplate`.
impl CLKComplicationTemplateModularSmallStackText {
    extern_methods!(
        #[deprecated = "Initializing a template without parameters is deprecated in watchOS 7.0. Use an init with parameters instead."]
        #[unsafe(method(init))]
        #[unsafe(method_family = init)]
        pub unsafe fn init(this: Allocated<Self>) -> Retained<Self>;

        #[deprecated = "Creating a template without parameters is deprecated in watchOS 7.0. Use a factory method with parameters instead."]
        #[unsafe(method(new))]
        #[unsafe(method_family = new)]
        pub unsafe fn new() -> Retained<Self>;
    );
}

extern_class!(
    /// [Apple's documentation](https://developer.apple.com/documentation/clockkit/clkcomplicationtemplatemodularsmallstackimage?language=objc)
    #[unsafe(super(CLKComplicationTemplate, NSObject))]
    #[derive(Debug, PartialEq, Eq, Hash)]
    #[deprecated = "On watchOS 9.0 or later, use WidgetKit instead"]
    pub struct CLKComplicationTemplateModularSmallStackImage;
);

extern_conformance!(
    unsafe impl NSCopying for CLKComplicationTemplateModularSmallStackImage {}
);

unsafe impl CopyingHelper for CLKComplicationTemplateModularSmallStackImage {
    type Result = Self;
}

extern_conformance!(
    unsafe impl NSObjectProtocol for CLKComplicationTemplateModularSmallStackImage {}
);

impl CLKComplicationTemplateModularSmallStackImage {
    extern_methods!(
        #[cfg(feature = "CLKImageProvider")]
        #[deprecated = "On watchOS 9.0 or later, use WidgetKit instead"]
        #[unsafe(method(line1ImageProvider))]
        #[unsafe(method_family = none)]
        pub unsafe fn line1ImageProvider(&self) -> Retained<CLKImageProvider>;

        #[cfg(feature = "CLKImageProvider")]
        /// Setter for [`line1ImageProvider`][Self::line1ImageProvider].
        ///
        /// This is [copied][objc2_foundation::NSCopying::copy] when set.
        #[deprecated = "On watchOS 9.0 or later, use WidgetKit instead"]
        #[unsafe(method(setLine1ImageProvider:))]
        #[unsafe(method_family = none)]
        pub unsafe fn setLine1ImageProvider(&self, line1_image_provider: &CLKImageProvider);

        #[cfg(feature = "CLKTextProvider")]
        #[deprecated = "On watchOS 9.0 or later, use WidgetKit instead"]
        #[unsafe(method(line2TextProvider))]
        #[unsafe(method_family = none)]
        pub unsafe fn line2TextProvider(&self) -> Retained<CLKTextProvider>;

        #[cfg(feature = "CLKTextProvider")]
        /// Setter for [`line2TextProvider`][Self::line2TextProvider].
        ///
        /// This is [copied][objc2_foundation::NSCopying::copy] when set.
        #[deprecated = "On watchOS 9.0 or later, use WidgetKit instead"]
        #[unsafe(method(setLine2TextProvider:))]
        #[unsafe(method_family = none)]
        pub unsafe fn setLine2TextProvider(&self, line2_text_provider: &CLKTextProvider);

        #[deprecated = "On watchOS 9.0 or later, use WidgetKit instead"]
        #[unsafe(method(highlightLine2))]
        #[unsafe(method_family = none)]
        pub unsafe fn highlightLine2(&self) -> bool;

        /// Setter for [`highlightLine2`][Self::highlightLine2].
        #[deprecated = "On watchOS 9.0 or later, use WidgetKit instead"]
        #[unsafe(method(setHighlightLine2:))]
        #[unsafe(method_family = none)]
        pub unsafe fn setHighlightLine2(&self, highlight_line2: bool);

        #[cfg(all(feature = "CLKImageProvider", feature = "CLKTextProvider"))]
        #[unsafe(method(initWithLine1ImageProvider:line2TextProvider:))]
        #[unsafe(method_family = init)]
        pub unsafe fn initWithLine1ImageProvider_line2TextProvider(
            this: Allocated<Self>,
            line1_image_provider: &CLKImageProvider,
            line2_text_provider: &CLKTextProvider,
        ) -> Retained<Self>;

        #[cfg(all(feature = "CLKImageProvider", feature = "CLKTextProvider"))]
        #[unsafe(method(templateWithLine1ImageProvider:line2TextProvider:))]
        #[unsafe(method_family = none)]
        pub unsafe fn templateWithLine1ImageProvider_line2TextProvider(
            line1_image_provider: &CLKImageProvider,
            line2_text_provider: &CLKTextProvider,
        ) -> Retained<Self>;
    );
}

/// Methods declared on superclass `CLKComplicationTemplate`.
impl CLKComplicationTemplateModularSmallStackImage {
    extern_methods!(
        #[deprecated = "Initializing a template without parameters is deprecated in watchOS 7.0. Use an init with parameters instead."]
        #[unsafe(method(init))]
        #[unsafe(method_family = init)]
        pub unsafe fn init(this: Allocated<Self>) -> Retained<Self>;

        #[deprecated = "Creating a template without parameters is deprecated in watchOS 7.0. Use a factory method with parameters instead."]
        #[unsafe(method(new))]
        #[unsafe(method_family = new)]
        pub unsafe fn new() -> Retained<Self>;
    );
}

extern_class!(
    /// [Apple's documentation](https://developer.apple.com/documentation/clockkit/clkcomplicationtemplatemodularsmallcolumnstext?language=objc)
    #[unsafe(super(CLKComplicationTemplate, NSObject))]
    #[derive(Debug, PartialEq, Eq, Hash)]
    #[deprecated = "On watchOS 9.0 or later, use WidgetKit instead"]
    pub struct CLKComplicationTemplateModularSmallColumnsText;
);

extern_conformance!(
    unsafe impl NSCopying for CLKComplicationTemplateModularSmallColumnsText {}
);

unsafe impl CopyingHelper for CLKComplicationTemplateModularSmallColumnsText {
    type Result = Self;
}

extern_conformance!(
    unsafe impl NSObjectProtocol for CLKComplicationTemplateModularSmallColumnsText {}
);

impl CLKComplicationTemplateModularSmallColumnsText {
    extern_methods!(
        #[cfg(feature = "CLKTextProvider")]
        #[deprecated = "On watchOS 9.0 or later, use WidgetKit instead"]
        #[unsafe(method(row1Column1TextProvider))]
        #[unsafe(method_family = none)]
        pub unsafe fn row1Column1TextProvider(&self) -> Retained<CLKTextProvider>;

        #[cfg(feature = "CLKTextProvider")]
        /// Setter for [`row1Column1TextProvider`][Self::row1Column1TextProvider].
        ///
        /// This is [copied][objc2_foundation::NSCopying::copy] when set.
        #[deprecated = "On watchOS 9.0 or later, use WidgetKit instead"]
        #[unsafe(method(setRow1Column1TextProvider:))]
        #[unsafe(method_family = none)]
        pub unsafe fn setRow1Column1TextProvider(
            &self,
            row1_column1_text_provider: &CLKTextProvider,
        );

        #[cfg(feature = "CLKTextProvider")]
        #[deprecated = "On watchOS 9.0 or later, use WidgetKit instead"]
        #[unsafe(method(row1Column2TextProvider))]
        #[unsafe(method_family = none)]
        pub unsafe fn row1Column2TextProvider(&self) -> Retained<CLKTextProvider>;

        #[cfg(feature = "CLKTextProvider")]
        /// Setter for [`row1Column2TextProvider`][Self::row1Column2TextProvider].
        ///
        /// This is [copied][objc2_foundation::NSCopying::copy] when set.
        #[deprecated = "On watchOS 9.0 or later, use WidgetKit instead"]
        #[unsafe(method(setRow1Column2TextProvider:))]
        #[unsafe(method_family = none)]
        pub unsafe fn setRow1Column2TextProvider(
            &self,
            row1_column2_text_provider: &CLKTextProvider,
        );

        #[cfg(feature = "CLKTextProvider")]
        #[deprecated = "On watchOS 9.0 or later, use WidgetKit instead"]
        #[unsafe(method(row2Column1TextProvider))]
        #[unsafe(method_family = none)]
        pub unsafe fn row2Column1TextProvider(&self) -> Retained<CLKTextProvider>;

        #[cfg(feature = "CLKTextProvider")]
        /// Setter for [`row2Column1TextProvider`][Self::row2Column1TextProvider].
        ///
        /// This is [copied][objc2_foundation::NSCopying::copy] when set.
        #[deprecated = "On watchOS 9.0 or later, use WidgetKit instead"]
        #[unsafe(method(setRow2Column1TextProvider:))]
        #[unsafe(method_family = none)]
        pub unsafe fn setRow2Column1TextProvider(
            &self,
            row2_column1_text_provider: &CLKTextProvider,
        );

        #[cfg(feature = "CLKTextProvider")]
        #[deprecated = "On watchOS 9.0 or later, use WidgetKit instead"]
        #[unsafe(method(row2Column2TextProvider))]
        #[unsafe(method_family = none)]
        pub unsafe fn row2Column2TextProvider(&self) -> Retained<CLKTextProvider>;

        #[cfg(feature = "CLKTextProvider")]
        /// Setter for [`row2Column2TextProvider`][Self::row2Column2TextProvider].
        ///
        /// This is [copied][objc2_foundation::NSCopying::copy] when set.
        #[deprecated = "On watchOS 9.0 or later, use WidgetKit instead"]
        #[unsafe(method(setRow2Column2TextProvider:))]
        #[unsafe(method_family = none)]
        pub unsafe fn setRow2Column2TextProvider(
            &self,
            row2_column2_text_provider: &CLKTextProvider,
        );

        #[cfg(feature = "CLKDefines")]
        #[deprecated = "On watchOS 9.0 or later, use WidgetKit instead"]
        #[unsafe(method(column2Alignment))]
        #[unsafe(method_family = none)]
        pub unsafe fn column2Alignment(&self) -> CLKComplicationColumnAlignment;

        #[cfg(feature = "CLKDefines")]
        /// Setter for [`column2Alignment`][Self::column2Alignment].
        #[deprecated = "On watchOS 9.0 or later, use WidgetKit instead"]
        #[unsafe(method(setColumn2Alignment:))]
        #[unsafe(method_family = none)]
        pub unsafe fn setColumn2Alignment(&self, column2_alignment: CLKComplicationColumnAlignment);

        #[deprecated = "On watchOS 9.0 or later, use WidgetKit instead"]
        #[unsafe(method(highlightColumn2))]
        #[unsafe(method_family = none)]
        pub unsafe fn highlightColumn2(&self) -> bool;

        /// Setter for [`highlightColumn2`][Self::highlightColumn2].
        #[deprecated = "On watchOS 9.0 or later, use WidgetKit instead"]
        #[unsafe(method(setHighlightColumn2:))]
        #[unsafe(method_family = none)]
        pub unsafe fn setHighlightColumn2(&self, highlight_column2: bool);

        #[cfg(feature = "CLKTextProvider")]
        #[unsafe(method(initWithRow1Column1TextProvider:row1Column2TextProvider:row2Column1TextProvider:row2Column2TextProvider:))]
        #[unsafe(method_family = init)]
        pub unsafe fn initWithRow1Column1TextProvider_row1Column2TextProvider_row2Column1TextProvider_row2Column2TextProvider(
            this: Allocated<Self>,
            row1_column1_text_provider: &CLKTextProvider,
            row1_column2_text_provider: &CLKTextProvider,
            row2_column1_text_provider: &CLKTextProvider,
            row2_column2_text_provider: &CLKTextProvider,
        ) -> Retained<Self>;

        #[cfg(feature = "CLKTextProvider")]
        #[unsafe(method(templateWithRow1Column1TextProvider:row1Column2TextProvider:row2Column1TextProvider:row2Column2TextProvider:))]
        #[unsafe(method_family = none)]
        pub unsafe fn templateWithRow1Column1TextProvider_row1Column2TextProvider_row2Column1TextProvider_row2Column2TextProvider(
            row1_column1_text_provider: &CLKTextProvider,
            row1_column2_text_provider: &CLKTextProvider,
            row2_column1_text_provider: &CLKTextProvider,
            row2_column2_text_provider: &CLKTextProvider,
        ) -> Retained<Self>;
    );
}

/// Methods declared on superclass `CLKComplicationTemplate`.
impl CLKComplicationTemplateModularSmallColumnsText {
    extern_methods!(
        #[deprecated = "Initializing a template without parameters is deprecated in watchOS 7.0. Use an init with parameters instead."]
        #[unsafe(method(init))]
        #[unsafe(method_family = init)]
        pub unsafe fn init(this: Allocated<Self>) -> Retained<Self>;

        #[deprecated = "Creating a template without parameters is deprecated in watchOS 7.0. Use a factory method with parameters instead."]
        #[unsafe(method(new))]
        #[unsafe(method_family = new)]
        pub unsafe fn new() -> Retained<Self>;
    );
}

extern_class!(
    /// [Apple's documentation](https://developer.apple.com/documentation/clockkit/clkcomplicationtemplatemodularlargestandardbody?language=objc)
    #[unsafe(super(CLKComplicationTemplate, NSObject))]
    #[derive(Debug, PartialEq, Eq, Hash)]
    #[deprecated = "On watchOS 9.0 or later, use WidgetKit instead"]
    pub struct CLKComplicationTemplateModularLargeStandardBody;
);

extern_conformance!(
    unsafe impl NSCopying for CLKComplicationTemplateModularLargeStandardBody {}
);

unsafe impl CopyingHelper for CLKComplicationTemplateModularLargeStandardBody {
    type Result = Self;
}

extern_conformance!(
    unsafe impl NSObjectProtocol for CLKComplicationTemplateModularLargeStandardBody {}
);

impl CLKComplicationTemplateModularLargeStandardBody {
    extern_methods!(
        #[cfg(feature = "CLKImageProvider")]
        #[deprecated = "On watchOS 9.0 or later, use WidgetKit instead"]
        #[unsafe(method(headerImageProvider))]
        #[unsafe(method_family = none)]
        pub unsafe fn headerImageProvider(&self) -> Option<Retained<CLKImageProvider>>;

        #[cfg(feature = "CLKImageProvider")]
        /// Setter for [`headerImageProvider`][Self::headerImageProvider].
        ///
        /// This is [copied][objc2_foundation::NSCopying::copy] when set.
        #[deprecated = "On watchOS 9.0 or later, use WidgetKit instead"]
        #[unsafe(method(setHeaderImageProvider:))]
        #[unsafe(method_family = none)]
        pub unsafe fn setHeaderImageProvider(
            &self,
            header_image_provider: Option<&CLKImageProvider>,
        );

        #[cfg(feature = "CLKTextProvider")]
        #[deprecated = "On watchOS 9.0 or later, use WidgetKit instead"]
        #[unsafe(method(headerTextProvider))]
        #[unsafe(method_family = none)]
        pub unsafe fn headerTextProvider(&self) -> Retained<CLKTextProvider>;

        #[cfg(feature = "CLKTextProvider")]
        /// Setter for [`headerTextProvider`][Self::headerTextProvider].
        ///
        /// This is [copied][objc2_foundation::NSCopying::copy] when set.
        #[deprecated = "On watchOS 9.0 or later, use WidgetKit instead"]
        #[unsafe(method(setHeaderTextProvider:))]
        #[unsafe(method_family = none)]
        pub unsafe fn setHeaderTextProvider(&self, header_text_provider: &CLKTextProvider);

        #[cfg(feature = "CLKTextProvider")]
        #[deprecated = "On watchOS 9.0 or later, use WidgetKit instead"]
        #[unsafe(method(body1TextProvider))]
        #[unsafe(method_family = none)]
        pub unsafe fn body1TextProvider(&self) -> Retained<CLKTextProvider>;

        #[cfg(feature = "CLKTextProvider")]
        /// Setter for [`body1TextProvider`][Self::body1TextProvider].
        ///
        /// This is [copied][objc2_foundation::NSCopying::copy] when set.
        #[deprecated = "On watchOS 9.0 or later, use WidgetKit instead"]
        #[unsafe(method(setBody1TextProvider:))]
        #[unsafe(method_family = none)]
        pub unsafe fn setBody1TextProvider(&self, body1_text_provider: &CLKTextProvider);

        #[cfg(feature = "CLKTextProvider")]
        #[deprecated = "On watchOS 9.0 or later, use WidgetKit instead"]
        #[unsafe(method(body2TextProvider))]
        #[unsafe(method_family = none)]
        pub unsafe fn body2TextProvider(&self) -> Option<Retained<CLKTextProvider>>;

        #[cfg(feature = "CLKTextProvider")]
        /// Setter for [`body2TextProvider`][Self::body2TextProvider].
        ///
        /// This is [copied][objc2_foundation::NSCopying::copy] when set.
        #[deprecated = "On watchOS 9.0 or later, use WidgetKit instead"]
        #[unsafe(method(setBody2TextProvider:))]
        #[unsafe(method_family = none)]
        pub unsafe fn setBody2TextProvider(&self, body2_text_provider: Option<&CLKTextProvider>);

        #[cfg(feature = "CLKTextProvider")]
        #[unsafe(method(initWithHeaderTextProvider:body1TextProvider:))]
        #[unsafe(method_family = init)]
        pub unsafe fn initWithHeaderTextProvider_body1TextProvider(
            this: Allocated<Self>,
            header_text_provider: &CLKTextProvider,
            body1_text_provider: &CLKTextProvider,
        ) -> Retained<Self>;

        #[cfg(feature = "CLKTextProvider")]
        #[unsafe(method(initWithHeaderTextProvider:body1TextProvider:body2TextProvider:))]
        #[unsafe(method_family = init)]
        pub unsafe fn initWithHeaderTextProvider_body1TextProvider_body2TextProvider(
            this: Allocated<Self>,
            header_text_provider: &CLKTextProvider,
            body1_text_provider: &CLKTextProvider,
            body2_text_provider: Option<&CLKTextProvider>,
        ) -> Retained<Self>;

        #[cfg(all(feature = "CLKImageProvider", feature = "CLKTextProvider"))]
        #[unsafe(method(initWithHeaderImageProvider:headerTextProvider:body1TextProvider:))]
        #[unsafe(method_family = init)]
        pub unsafe fn initWithHeaderImageProvider_headerTextProvider_body1TextProvider(
            this: Allocated<Self>,
            header_image_provider: Option<&CLKImageProvider>,
            header_text_provider: &CLKTextProvider,
            body1_text_provider: &CLKTextProvider,
        ) -> Retained<Self>;

        #[cfg(all(feature = "CLKImageProvider", feature = "CLKTextProvider"))]
        #[unsafe(method(initWithHeaderImageProvider:headerTextProvider:body1TextProvider:body2TextProvider:))]
        #[unsafe(method_family = init)]
        pub unsafe fn initWithHeaderImageProvider_headerTextProvider_body1TextProvider_body2TextProvider(
            this: Allocated<Self>,
            header_image_provider: Option<&CLKImageProvider>,
            header_text_provider: &CLKTextProvider,
            body1_text_provider: &CLKTextProvider,
            body2_text_provider: Option<&CLKTextProvider>,
        ) -> Retained<Self>;

        #[cfg(feature = "CLKTextProvider")]
        #[unsafe(method(templateWithHeaderTextProvider:body1TextProvider:))]
        #[unsafe(method_family = none)]
        pub unsafe fn templateWithHeaderTextProvider_body1TextProvider(
            header_text_provider: &CLKTextProvider,
            body1_text_provider: &CLKTextProvider,
        ) -> Retained<Self>;

        #[cfg(feature = "CLKTextProvider")]
        #[unsafe(method(templateWithHeaderTextProvider:body1TextProvider:body2TextProvider:))]
        #[unsafe(method_family = none)]
        pub unsafe fn templateWithHeaderTextProvider_body1TextProvider_body2TextProvider(
            header_text_provider: &CLKTextProvider,
            body1_text_provider: &CLKTextProvider,
            body2_text_provider: Option<&CLKTextProvider>,
        ) -> Retained<Self>;

        #[cfg(all(feature = "CLKImageProvider", feature = "CLKTextProvider"))]
        #[unsafe(method(templateWithHeaderImageProvider:headerTextProvider:body1TextProvider:))]
        #[unsafe(method_family = none)]
        pub unsafe fn templateWithHeaderImageProvider_headerTextProvider_body1TextProvider(
            header_image_provider: Option<&CLKImageProvider>,
            header_text_provider: &CLKTextProvider,
            body1_text_provider: &CLKTextProvider,
        ) -> Retained<Self>;

        #[cfg(all(feature = "CLKImageProvider", feature = "CLKTextProvider"))]
        #[unsafe(method(templateWithHeaderImageProvider:headerTextProvider:body1TextProvider:body2TextProvider:))]
        #[unsafe(method_family = none)]
        pub unsafe fn templateWithHeaderImageProvider_headerTextProvider_body1TextProvider_body2TextProvider(
            header_image_provider: Option<&CLKImageProvider>,
            header_text_provider: &CLKTextProvider,
            body1_text_provider: &CLKTextProvider,
            body2_text_provider: Option<&CLKTextProvider>,
        ) -> Retained<Self>;
    );
}

/// Methods declared on superclass `CLKComplicationTemplate`.
impl CLKComplicationTemplateModularLargeStandardBody {
    extern_methods!(
        #[deprecated = "Initializing a template without parameters is deprecated in watchOS 7.0. Use an init with parameters instead."]
        #[unsafe(method(init))]
        #[unsafe(method_family = init)]
        pub unsafe fn init(this: Allocated<Self>) -> Retained<Self>;

        #[deprecated = "Creating a template without parameters is deprecated in watchOS 7.0. Use a factory method with parameters instead."]
        #[unsafe(method(new))]
        #[unsafe(method_family = new)]
        pub unsafe fn new() -> Retained<Self>;
    );
}

extern_class!(
    /// [Apple's documentation](https://developer.apple.com/documentation/clockkit/clkcomplicationtemplatemodularlargetallbody?language=objc)
    #[unsafe(super(CLKComplicationTemplate, NSObject))]
    #[derive(Debug, PartialEq, Eq, Hash)]
    #[deprecated = "On watchOS 9.0 or later, use WidgetKit instead"]
    pub struct CLKComplicationTemplateModularLargeTallBody;
);

extern_conformance!(
    unsafe impl NSCopying for CLKComplicationTemplateModularLargeTallBody {}
);

unsafe impl CopyingHelper for CLKComplicationTemplateModularLargeTallBody {
    type Result = Self;
}

extern_conformance!(
    unsafe impl NSObjectProtocol for CLKComplicationTemplateModularLargeTallBody {}
);

impl CLKComplicationTemplateModularLargeTallBody {
    extern_methods!(
        #[cfg(feature = "CLKTextProvider")]
        #[deprecated = "On watchOS 9.0 or later, use WidgetKit instead"]
        #[unsafe(method(headerTextProvider))]
        #[unsafe(method_family = none)]
        pub unsafe fn headerTextProvider(&self) -> Retained<CLKTextProvider>;

        #[cfg(feature = "CLKTextProvider")]
        /// Setter for [`headerTextProvider`][Self::headerTextProvider].
        ///
        /// This is [copied][objc2_foundation::NSCopying::copy] when set.
        #[deprecated = "On watchOS 9.0 or later, use WidgetKit instead"]
        #[unsafe(method(setHeaderTextProvider:))]
        #[unsafe(method_family = none)]
        pub unsafe fn setHeaderTextProvider(&self, header_text_provider: &CLKTextProvider);

        #[cfg(feature = "CLKTextProvider")]
        #[deprecated = "On watchOS 9.0 or later, use WidgetKit instead"]
        #[unsafe(method(bodyTextProvider))]
        #[unsafe(method_family = none)]
        pub unsafe fn bodyTextProvider(&self) -> Retained<CLKTextProvider>;

        #[cfg(feature = "CLKTextProvider")]
        /// Setter for [`bodyTextProvider`][Self::bodyTextProvider].
        ///
        /// This is [copied][objc2_foundation::NSCopying::copy] when set.
        #[deprecated = "On watchOS 9.0 or later, use WidgetKit instead"]
        #[unsafe(method(setBodyTextProvider:))]
        #[unsafe(method_family = none)]
        pub unsafe fn setBodyTextProvider(&self, body_text_provider: &CLKTextProvider);

        #[cfg(feature = "CLKTextProvider")]
        #[unsafe(method(initWithHeaderTextProvider:bodyTextProvider:))]
        #[unsafe(method_family = init)]
        pub unsafe fn initWithHeaderTextProvider_bodyTextProvider(
            this: Allocated<Self>,
            header_text_provider: &CLKTextProvider,
            body_text_provider: &CLKTextProvider,
        ) -> Retained<Self>;

        #[cfg(feature = "CLKTextProvider")]
        #[unsafe(method(templateWithHeaderTextProvider:bodyTextProvider:))]
        #[unsafe(method_family = none)]
        pub unsafe fn templateWithHeaderTextProvider_bodyTextProvider(
            header_text_provider: &CLKTextProvider,
            body_text_provider: &CLKTextProvider,
        ) -> Retained<Self>;
    );
}

/// Methods declared on superclass `CLKComplicationTemplate`.
impl CLKComplicationTemplateModularLargeTallBody {
    extern_methods!(
        #[deprecated = "Initializing a template without parameters is deprecated in watchOS 7.0. Use an init with parameters instead."]
        #[unsafe(method(init))]
        #[unsafe(method_family = init)]
        pub unsafe fn init(this: Allocated<Self>) -> Retained<Self>;

        #[deprecated = "Creating a template without parameters is deprecated in watchOS 7.0. Use a factory method with parameters instead."]
        #[unsafe(method(new))]
        #[unsafe(method_family = new)]
        pub unsafe fn new() -> Retained<Self>;
    );
}

extern_class!(
    /// [Apple's documentation](https://developer.apple.com/documentation/clockkit/clkcomplicationtemplatemodularlargetable?language=objc)
    #[unsafe(super(CLKComplicationTemplate, NSObject))]
    #[derive(Debug, PartialEq, Eq, Hash)]
    #[deprecated = "On watchOS 9.0 or later, use WidgetKit instead"]
    pub struct CLKComplicationTemplateModularLargeTable;
);

extern_conformance!(
    unsafe impl NSCopying for CLKComplicationTemplateModularLargeTable {}
);

unsafe impl CopyingHelper for CLKComplicationTemplateModularLargeTable {
    type Result = Self;
}

extern_conformance!(
    unsafe impl NSObjectProtocol for CLKComplicationTemplateModularLargeTable {}
);

impl CLKComplicationTemplateModularLargeTable {
    extern_methods!(
        #[cfg(feature = "CLKImageProvider")]
        #[deprecated = "On watchOS 9.0 or later, use WidgetKit instead"]
        #[unsafe(method(headerImageProvider))]
        #[unsafe(method_family = none)]
        pub unsafe fn headerImageProvider(&self) -> Option<Retained<CLKImageProvider>>;

        #[cfg(feature = "CLKImageProvider")]
        /// Setter for [`headerImageProvider`][Self::headerImageProvider].
        ///
        /// This is [copied][objc2_foundation::NSCopying::copy] when set.
        #[deprecated = "On watchOS 9.0 or later, use WidgetKit instead"]
        #[unsafe(method(setHeaderImageProvider:))]
        #[unsafe(method_family = none)]
        pub unsafe fn setHeaderImageProvider(
            &self,
            header_image_provider: Option<&CLKImageProvider>,
        );

        #[cfg(feature = "CLKTextProvider")]
        #[deprecated = "On watchOS 9.0 or later, use WidgetKit instead"]
        #[unsafe(method(headerTextProvider))]
        #[unsafe(method_family = none)]
        pub unsafe fn headerTextProvider(&self) -> Retained<CLKTextProvider>;

        #[cfg(feature = "CLKTextProvider")]
        /// Setter for [`headerTextProvider`][Self::headerTextProvider].
        ///
        /// This is [copied][objc2_foundation::NSCopying::copy] when set.
        #[deprecated = "On watchOS 9.0 or later, use WidgetKit instead"]
        #[unsafe(method(setHeaderTextProvider:))]
        #[unsafe(method_family = none)]
        pub unsafe fn setHeaderTextProvider(&self, header_text_provider: &CLKTextProvider);

        #[cfg(feature = "CLKTextProvider")]
        #[deprecated = "On watchOS 9.0 or later, use WidgetKit instead"]
        #[unsafe(method(row1Column1TextProvider))]
        #[unsafe(method_family = none)]
        pub unsafe fn row1Column1TextProvider(&self) -> Retained<CLKTextProvider>;

        #[cfg(feature = "CLKTextProvider")]
        /// Setter for [`row1Column1TextProvider`][Self::row1Column1TextProvider].
        ///
        /// This is [copied][objc2_foundation::NSCopying::copy] when set.
        #[deprecated = "On watchOS 9.0 or later, use WidgetKit instead"]
        #[unsafe(method(setRow1Column1TextProvider:))]
        #[unsafe(method_family = none)]
        pub unsafe fn setRow1Column1TextProvider(
            &self,
            row1_column1_text_provider: &CLKTextProvider,
        );

        #[cfg(feature = "CLKTextProvider")]
        #[deprecated = "On watchOS 9.0 or later, use WidgetKit instead"]
        #[unsafe(method(row1Column2TextProvider))]
        #[unsafe(method_family = none)]
        pub unsafe fn row1Column2TextProvider(&self) -> Retained<CLKTextProvider>;

        #[cfg(feature = "CLKTextProvider")]
        /// Setter for [`row1Column2TextProvider`][Self::row1Column2TextProvider].
        ///
        /// This is [copied][objc2_foundation::NSCopying::copy] when set.
        #[deprecated = "On watchOS 9.0 or later, use WidgetKit instead"]
        #[unsafe(method(setRow1Column2TextProvider:))]
        #[unsafe(method_family = none)]
        pub unsafe fn setRow1Column2TextProvider(
            &self,
            row1_column2_text_provider: &CLKTextProvider,
        );

        #[cfg(feature = "CLKTextProvider")]
        #[deprecated = "On watchOS 9.0 or later, use WidgetKit instead"]
        #[unsafe(method(row2Column1TextProvider))]
        #[unsafe(method_family = none)]
        pub unsafe fn row2Column1TextProvider(&self) -> Retained<CLKTextProvider>;

        #[cfg(feature = "CLKTextProvider")]
        /// Setter for [`row2Column1TextProvider`][Self::row2Column1TextProvider].
        ///
        /// This is [copied][objc2_foundation::NSCopying::copy] when set.
        #[deprecated = "On watchOS 9.0 or later, use WidgetKit instead"]
        #[unsafe(method(setRow2Column1TextProvider:))]
        #[unsafe(method_family = none)]
        pub unsafe fn setRow2Column1TextProvider(
            &self,
            row2_column1_text_provider: &CLKTextProvider,
        );

        #[cfg(feature = "CLKTextProvider")]
        #[deprecated = "On watchOS 9.0 or later, use WidgetKit instead"]
        #[unsafe(method(row2Column2TextProvider))]
        #[unsafe(method_family = none)]
        pub unsafe fn row2Column2TextProvider(&self) -> Retained<CLKTextProvider>;

        #[cfg(feature = "CLKTextProvider")]
        /// Setter for [`row2Column2TextProvider`][Self::row2Column2TextProvider].
        ///
        /// This is [copied][objc2_foundation::NSCopying::copy] when set.
        #[deprecated = "On watchOS 9.0 or later, use WidgetKit instead"]
        #[unsafe(method(setRow2Column2TextProvider:))]
        #[unsafe(method_family = none)]
        pub unsafe fn setRow2Column2TextProvider(
            &self,
            row2_column2_text_provider: &CLKTextProvider,
        );

        #[cfg(feature = "CLKDefines")]
        #[deprecated = "On watchOS 9.0 or later, use WidgetKit instead"]
        #[unsafe(method(column2Alignment))]
        #[unsafe(method_family = none)]
        pub unsafe fn column2Alignment(&self) -> CLKComplicationColumnAlignment;

        #[cfg(feature = "CLKDefines")]
        /// Setter for [`column2Alignment`][Self::column2Alignment].
        #[deprecated = "On watchOS 9.0 or later, use WidgetKit instead"]
        #[unsafe(method(setColumn2Alignment:))]
        #[unsafe(method_family = none)]
        pub unsafe fn setColumn2Alignment(&self, column2_alignment: CLKComplicationColumnAlignment);

        #[cfg(feature = "CLKTextProvider")]
        #[unsafe(method(initWithHeaderTextProvider:row1Column1TextProvider:row1Column2TextProvider:row2Column1TextProvider:row2Column2TextProvider:))]
        #[unsafe(method_family = init)]
        pub unsafe fn initWithHeaderTextProvider_row1Column1TextProvider_row1Column2TextProvider_row2Column1TextProvider_row2Column2TextProvider(
            this: Allocated<Self>,
            header_text_provider: &CLKTextProvider,
            row1_column1_text_provider: &CLKTextProvider,
            row1_column2_text_provider: &CLKTextProvider,
            row2_column1_text_provider: &CLKTextProvider,
            row2_column2_text_provider: &CLKTextProvider,
        ) -> Retained<Self>;

        #[cfg(all(feature = "CLKImageProvider", feature = "CLKTextProvider"))]
        #[unsafe(method(initWithHeaderImageProvider:headerTextProvider:row1Column1TextProvider:row1Column2TextProvider:row2Column1TextProvider:row2Column2TextProvider:))]
        #[unsafe(method_family = init)]
        pub unsafe fn initWithHeaderImageProvider_headerTextProvider_row1Column1TextProvider_row1Column2TextProvider_row2Column1TextProvider_row2Column2TextProvider(
            this: Allocated<Self>,
            header_image_provider: Option<&CLKImageProvider>,
            header_text_provider: &CLKTextProvider,
            row1_column1_text_provider: &CLKTextProvider,
            row1_column2_text_provider: &CLKTextProvider,
            row2_column1_text_provider: &CLKTextProvider,
            row2_column2_text_provider: &CLKTextProvider,
        ) -> Retained<Self>;

        #[cfg(feature = "CLKTextProvider")]
        #[unsafe(method(templateWithHeaderTextProvider:row1Column1TextProvider:row1Column2TextProvider:row2Column1TextProvider:row2Column2TextProvider:))]
        #[unsafe(method_family = none)]
        pub unsafe fn templateWithHeaderTextProvider_row1Column1TextProvider_row1Column2TextProvider_row2Column1TextProvider_row2Column2TextProvider(
            header_text_provider: &CLKTextProvider,
            row1_column1_text_provider: &CLKTextProvider,
            row1_column2_text_provider: &CLKTextProvider,
            row2_column1_text_provider: &CLKTextProvider,
            row2_column2_text_provider: &CLKTextProvider,
        ) -> Retained<Self>;

        #[cfg(all(feature = "CLKImageProvider", feature = "CLKTextProvider"))]
        #[unsafe(method(templateWithHeaderImageProvider:headerTextProvider:row1Column1TextProvider:row1Column2TextProvider:row2Column1TextProvider:row2Column2TextProvider:))]
        #[unsafe(method_family = none)]
        pub unsafe fn templateWithHeaderImageProvider_headerTextProvider_row1Column1TextProvider_row1Column2TextProvider_row2Column1TextProvider_row2Column2TextProvider(
            header_image_provider: Option<&CLKImageProvider>,
            header_text_provider: &CLKTextProvider,
            row1_column1_text_provider: &CLKTextProvider,
            row1_column2_text_provider: &CLKTextProvider,
            row2_column1_text_provider: &CLKTextProvider,
            row2_column2_text_provider: &CLKTextProvider,
        ) -> Retained<Self>;
    );
}

/// Methods declared on superclass `CLKComplicationTemplate`.
impl CLKComplicationTemplateModularLargeTable {
    extern_methods!(
        #[deprecated = "Initializing a template without parameters is deprecated in watchOS 7.0. Use an init with parameters instead."]
        #[unsafe(method(init))]
        #[unsafe(method_family = init)]
        pub unsafe fn init(this: Allocated<Self>) -> Retained<Self>;

        #[deprecated = "Creating a template without parameters is deprecated in watchOS 7.0. Use a factory method with parameters instead."]
        #[unsafe(method(new))]
        #[unsafe(method_family = new)]
        pub unsafe fn new() -> Retained<Self>;
    );
}

extern_class!(
    /// [Apple's documentation](https://developer.apple.com/documentation/clockkit/clkcomplicationtemplatemodularlargecolumns?language=objc)
    #[unsafe(super(CLKComplicationTemplate, NSObject))]
    #[derive(Debug, PartialEq, Eq, Hash)]
    #[deprecated = "On watchOS 9.0 or later, use WidgetKit instead"]
    pub struct CLKComplicationTemplateModularLargeColumns;
);

extern_conformance!(
    unsafe impl NSCopying for CLKComplicationTemplateModularLargeColumns {}
);

unsafe impl CopyingHelper for CLKComplicationTemplateModularLargeColumns {
    type Result = Self;
}

extern_conformance!(
    unsafe impl NSObjectProtocol for CLKComplicationTemplateModularLargeColumns {}
);

impl CLKComplicationTemplateModularLargeColumns {
    extern_methods!(
        #[cfg(feature = "CLKImageProvider")]
        #[deprecated = "On watchOS 9.0 or later, use WidgetKit instead"]
        #[unsafe(method(row1ImageProvider))]
        #[unsafe(method_family = none)]
        pub unsafe fn row1ImageProvider(&self) -> Option<Retained<CLKImageProvider>>;

        #[cfg(feature = "CLKImageProvider")]
        /// Setter for [`row1ImageProvider`][Self::row1ImageProvider].
        ///
        /// This is [copied][objc2_foundation::NSCopying::copy] when set.
        #[deprecated = "On watchOS 9.0 or later, use WidgetKit instead"]
        #[unsafe(method(setRow1ImageProvider:))]
        #[unsafe(method_family = none)]
        pub unsafe fn setRow1ImageProvider(&self, row1_image_provider: Option<&CLKImageProvider>);

        #[cfg(feature = "CLKTextProvider")]
        #[deprecated = "On watchOS 9.0 or later, use WidgetKit instead"]
        #[unsafe(method(row1Column1TextProvider))]
        #[unsafe(method_family = none)]
        pub unsafe fn row1Column1TextProvider(&self) -> Retained<CLKTextProvider>;

        #[cfg(feature = "CLKTextProvider")]
        /// Setter for [`row1Column1TextProvider`][Self::row1Column1TextProvider].
        ///
        /// This is [copied][objc2_foundation::NSCopying::copy] when set.
        #[deprecated = "On watchOS 9.0 or later, use WidgetKit instead"]
        #[unsafe(method(setRow1Column1TextProvider:))]
        #[unsafe(method_family = none)]
        pub unsafe fn setRow1Column1TextProvider(
            &self,
            row1_column1_text_provider: &CLKTextProvider,
        );

        #[cfg(feature = "CLKTextProvider")]
        #[deprecated = "On watchOS 9.0 or later, use WidgetKit instead"]
        #[unsafe(method(row1Column2TextProvider))]
        #[unsafe(method_family = none)]
        pub unsafe fn row1Column2TextProvider(&self) -> Retained<CLKTextProvider>;

        #[cfg(feature = "CLKTextProvider")]
        /// Setter for [`row1Column2TextProvider`][Self::row1Column2TextProvider].
        ///
        /// This is [copied][objc2_foundation::NSCopying::copy] when set.
        #[deprecated = "On watchOS 9.0 or later, use WidgetKit instead"]
        #[unsafe(method(setRow1Column2TextProvider:))]
        #[unsafe(method_family = none)]
        pub unsafe fn setRow1Column2TextProvider(
            &self,
            row1_column2_text_provider: &CLKTextProvider,
        );

        #[cfg(feature = "CLKImageProvider")]
        #[deprecated = "On watchOS 9.0 or later, use WidgetKit instead"]
        #[unsafe(method(row2ImageProvider))]
        #[unsafe(method_family = none)]
        pub unsafe fn row2ImageProvider(&self) -> Option<Retained<CLKImageProvider>>;

        #[cfg(feature = "CLKImageProvider")]
        /// Setter for [`row2ImageProvider`][Self::row2ImageProvider].
        ///
        /// This is [copied][objc2_foundation::NSCopying::copy] when set.
        #[deprecated = "On watchOS 9.0 or later, use WidgetKit instead"]
        #[unsafe(method(setRow2ImageProvider:))]
        #[unsafe(method_family = none)]
        pub unsafe fn setRow2ImageProvider(&self, row2_image_provider: Option<&CLKImageProvider>);

        #[cfg(feature = "CLKTextProvider")]
        #[deprecated = "On watchOS 9.0 or later, use WidgetKit instead"]
        #[unsafe(method(row2Column1TextProvider))]
        #[unsafe(method_family = none)]
        pub unsafe fn row2Column1TextProvider(&self) -> Retained<CLKTextProvider>;

        #[cfg(feature = "CLKTextProvider")]
        /// Setter for [`row2Column1TextProvider`][Self::row2Column1TextProvider].
        ///
        /// This is [copied][objc2_foundation::NSCopying::copy] when set.
        #[deprecated = "On watchOS 9.0 or later, use WidgetKit instead"]
        #[unsafe(method(setRow2Column1TextProvider:))]
        #[unsafe(method_family = none)]
        pub unsafe fn setRow2Column1TextProvider(
            &self,
            row2_column1_text_provider: &CLKTextProvider,
        );

        #[cfg(feature = "CLKTextProvider")]
        #[deprecated = "On watchOS 9.0 or later, use WidgetKit instead"]
        #[unsafe(method(row2Column2TextProvider))]
        #[unsafe(method_family = none)]
        pub unsafe fn row2Column2TextProvider(&self) -> Retained<CLKTextProvider>;

        #[cfg(feature = "CLKTextProvider")]
        /// Setter for [`row2Column2TextProvider`][Self::row2Column2TextProvider].
        ///
        /// This is [copied][objc2_foundation::NSCopying::copy] when set.
        #[deprecated = "On watchOS 9.0 or later, use WidgetKit instead"]
        #[unsafe(method(setRow2Column2TextProvider:))]
        #[unsafe(method_family = none)]
        pub unsafe fn setRow2Column2TextProvider(
            &self,
            row2_column2_text_provider: &CLKTextProvider,
        );

        #[cfg(feature = "CLKImageProvider")]
        #[deprecated = "On watchOS 9.0 or later, use WidgetKit instead"]
        #[unsafe(method(row3ImageProvider))]
        #[unsafe(method_family = none)]
        pub unsafe fn row3ImageProvider(&self) -> Option<Retained<CLKImageProvider>>;

        #[cfg(feature = "CLKImageProvider")]
        /// Setter for [`row3ImageProvider`][Self::row3ImageProvider].
        ///
        /// This is [copied][objc2_foundation::NSCopying::copy] when set.
        #[deprecated = "On watchOS 9.0 or later, use WidgetKit instead"]
        #[unsafe(method(setRow3ImageProvider:))]
        #[unsafe(method_family = none)]
        pub unsafe fn setRow3ImageProvider(&self, row3_image_provider: Option<&CLKImageProvider>);

        #[cfg(feature = "CLKTextProvider")]
        #[deprecated = "On watchOS 9.0 or later, use WidgetKit instead"]
        #[unsafe(method(row3Column1TextProvider))]
        #[unsafe(method_family = none)]
        pub unsafe fn row3Column1TextProvider(&self) -> Retained<CLKTextProvider>;

        #[cfg(feature = "CLKTextProvider")]
        /// Setter for [`row3Column1TextProvider`][Self::row3Column1TextProvider].
        ///
        /// This is [copied][objc2_foundation::NSCopying::copy] when set.
        #[deprecated = "On watchOS 9.0 or later, use WidgetKit instead"]
        #[unsafe(method(setRow3Column1TextProvider:))]
        #[unsafe(method_family = none)]
        pub unsafe fn setRow3Column1TextProvider(
            &self,
            row3_column1_text_provider: &CLKTextProvider,
        );

        #[cfg(feature = "CLKTextProvider")]
        #[deprecated = "On watchOS 9.0 or later, use WidgetKit instead"]
        #[unsafe(method(row3Column2TextProvider))]
        #[unsafe(method_family = none)]
        pub unsafe fn row3Column2TextProvider(&self) -> Retained<CLKTextProvider>;

        #[cfg(feature = "CLKTextProvider")]
        /// Setter for [`row3Column2TextProvider`][Self::row3Column2TextProvider].
        ///
        /// This is [copied][objc2_foundation::NSCopying::copy] when set.
        #[deprecated = "On watchOS 9.0 or later, use WidgetKit instead"]
        #[unsafe(method(setRow3Column2TextProvider:))]
        #[unsafe(method_family = none)]
        pub unsafe fn setRow3Column2TextProvider(
            &self,
            row3_column2_text_provider: &CLKTextProvider,
        );

        #[cfg(feature = "CLKDefines")]
        #[deprecated = "On watchOS 9.0 or later, use WidgetKit instead"]
        #[unsafe(method(column2Alignment))]
        #[unsafe(method_family = none)]
        pub unsafe fn column2Alignment(&self) -> CLKComplicationColumnAlignment;

        #[cfg(feature = "CLKDefines")]
        /// Setter for [`column2Alignment`][Self::column2Alignment].
        #[deprecated = "On watchOS 9.0 or later, use WidgetKit instead"]
        #[unsafe(method(setColumn2Alignment:))]
        #[unsafe(method_family = none)]
        pub unsafe fn setColumn2Alignment(&self, column2_alignment: CLKComplicationColumnAlignment);

        #[cfg(feature = "CLKTextProvider")]
        #[unsafe(method(initWithRow1Column1TextProvider:row1Column2TextProvider:row2Column1TextProvider:row2Column2TextProvider:row3Column1TextProvider:row3Column2TextProvider:))]
        #[unsafe(method_family = init)]
        pub unsafe fn initWithRow1Column1TextProvider_row1Column2TextProvider_row2Column1TextProvider_row2Column2TextProvider_row3Column1TextProvider_row3Column2TextProvider(
            this: Allocated<Self>,
            row1_column1_text_provider: &CLKTextProvider,
            row1_column2_text_provider: &CLKTextProvider,
            row2_column1_text_provider: &CLKTextProvider,
            row2_column2_text_provider: &CLKTextProvider,
            row3_column1_text_provider: &CLKTextProvider,
            row3_column2_text_provider: &CLKTextProvider,
        ) -> Retained<Self>;

        #[cfg(all(feature = "CLKImageProvider", feature = "CLKTextProvider"))]
        #[unsafe(method(initWithRow1ImageProvider:row1Column1TextProvider:row1Column2TextProvider:row2ImageProvider:row2Column1TextProvider:row2Column2TextProvider:row3ImageProvider:row3Column1TextProvider:row3Column2TextProvider:))]
        #[unsafe(method_family = init)]
        pub unsafe fn initWithRow1ImageProvider_row1Column1TextProvider_row1Column2TextProvider_row2ImageProvider_row2Column1TextProvider_row2Column2TextProvider_row3ImageProvider_row3Column1TextProvider_row3Column2TextProvider(
            this: Allocated<Self>,
            row1_image_provider: Option<&CLKImageProvider>,
            row1_column1_text_provider: &CLKTextProvider,
            row1_column2_text_provider: &CLKTextProvider,
            row2_image_provider: Option<&CLKImageProvider>,
            row2_column1_text_provider: &CLKTextProvider,
            row2_column2_text_provider: &CLKTextProvider,
            row3_image_provider: Option<&CLKImageProvider>,
            row3_column1_text_provider: &CLKTextProvider,
            row3_column2_text_provider: &CLKTextProvider,
        ) -> Retained<Self>;

        #[cfg(feature = "CLKTextProvider")]
        #[unsafe(method(templateWithRow1Column1TextProvider:row1Column2TextProvider:row2Column1TextProvider:row2Column2TextProvider:row3Column1TextProvider:row3Column2TextProvider:))]
        #[unsafe(method_family = none)]
        pub unsafe fn templateWithRow1Column1TextProvider_row1Column2TextProvider_row2Column1TextProvider_row2Column2TextProvider_row3Column1TextProvider_row3Column2TextProvider(
            row1_column1_text_provider: &CLKTextProvider,
            row1_column2_text_provider: &CLKTextProvider,
            row2_column1_text_provider: &CLKTextProvider,
            row2_column2_text_provider: &CLKTextProvider,
            row3_column1_text_provider: &CLKTextProvider,
            row3_column2_text_provider: &CLKTextProvider,
        ) -> Retained<Self>;

        #[cfg(all(feature = "CLKImageProvider", feature = "CLKTextProvider"))]
        #[unsafe(method(templateWithRow1ImageProvider:row1Column1TextProvider:row1Column2TextProvider:row2ImageProvider:row2Column1TextProvider:row2Column2TextProvider:row3ImageProvider:row3Column1TextProvider:row3Column2TextProvider:))]
        #[unsafe(method_family = none)]
        pub unsafe fn templateWithRow1ImageProvider_row1Column1TextProvider_row1Column2TextProvider_row2ImageProvider_row2Column1TextProvider_row2Column2TextProvider_row3ImageProvider_row3Column1TextProvider_row3Column2TextProvider(
            row1_image_provider: Option<&CLKImageProvider>,
            row1_column1_text_provider: &CLKTextProvider,
            row1_column2_text_provider: &CLKTextProvider,
            row2_image_provider: Option<&CLKImageProvider>,
            row2_column1_text_provider: &CLKTextProvider,
            row2_column2_text_provider: &CLKTextProvider,
            row3_image_provider: Option<&CLKImageProvider>,
            row3_column1_text_provider: &CLKTextProvider,
            row3_column2_text_provider: &CLKTextProvider,
        ) -> Retained<Self>;
    );
}

/// Methods declared on superclass `CLKComplicationTemplate`.
impl CLKComplicationTemplateModularLargeColumns {
    extern_methods!(
        #[deprecated = "Initializing a template without parameters is deprecated in watchOS 7.0. Use an init with parameters instead."]
        #[unsafe(method(init))]
        #[unsafe(method_family = init)]
        pub unsafe fn init(this: Allocated<Self>) -> Retained<Self>;

        #[deprecated = "Creating a template without parameters is deprecated in watchOS 7.0. Use a factory method with parameters instead."]
        #[unsafe(method(new))]
        #[unsafe(method_family = new)]
        pub unsafe fn new() -> Retained<Self>;
    );
}

extern_class!(
    /// [Apple's documentation](https://developer.apple.com/documentation/clockkit/clkcomplicationtemplateutilitariansmallsquare?language=objc)
    #[unsafe(super(CLKComplicationTemplate, NSObject))]
    #[derive(Debug, PartialEq, Eq, Hash)]
    #[deprecated = "On watchOS 9.0 or later, use WidgetKit instead"]
    pub struct CLKComplicationTemplateUtilitarianSmallSquare;
);

extern_conformance!(
    unsafe impl NSCopying for CLKComplicationTemplateUtilitarianSmallSquare {}
);

unsafe impl CopyingHelper for CLKComplicationTemplateUtilitarianSmallSquare {
    type Result = Self;
}

extern_conformance!(
    unsafe impl NSObjectProtocol for CLKComplicationTemplateUtilitarianSmallSquare {}
);

impl CLKComplicationTemplateUtilitarianSmallSquare {
    extern_methods!(
        #[cfg(feature = "CLKImageProvider")]
        #[deprecated = "On watchOS 9.0 or later, use WidgetKit instead"]
        #[unsafe(method(imageProvider))]
        #[unsafe(method_family = none)]
        pub unsafe fn imageProvider(&self) -> Retained<CLKImageProvider>;

        #[cfg(feature = "CLKImageProvider")]
        /// Setter for [`imageProvider`][Self::imageProvider].
        ///
        /// This is [copied][objc2_foundation::NSCopying::copy] when set.
        #[deprecated = "On watchOS 9.0 or later, use WidgetKit instead"]
        #[unsafe(method(setImageProvider:))]
        #[unsafe(method_family = none)]
        pub unsafe fn setImageProvider(&self, image_provider: &CLKImageProvider);

        #[cfg(feature = "CLKImageProvider")]
        #[unsafe(method(initWithImageProvider:))]
        #[unsafe(method_family = init)]
        pub unsafe fn initWithImageProvider(
            this: Allocated<Self>,
            image_provider: &CLKImageProvider,
        ) -> Retained<Self>;

        #[cfg(feature = "CLKImageProvider")]
        #[unsafe(method(templateWithImageProvider:))]
        #[unsafe(method_family = none)]
        pub unsafe fn templateWithImageProvider(
            image_provider: &CLKImageProvider,
        ) -> Retained<Self>;
    );
}

/// Methods declared on superclass `CLKComplicationTemplate`.
impl CLKComplicationTemplateUtilitarianSmallSquare {
    extern_methods!(
        #[deprecated = "Initializing a template without parameters is deprecated in watchOS 7.0. Use an init with parameters instead."]
        #[unsafe(method(init))]
        #[unsafe(method_family = init)]
        pub unsafe fn init(this: Allocated<Self>) -> Retained<Self>;

        #[deprecated = "Creating a template without parameters is deprecated in watchOS 7.0. Use a factory method with parameters instead."]
        #[unsafe(method(new))]
        #[unsafe(method_family = new)]
        pub unsafe fn new() -> Retained<Self>;
    );
}

extern_class!(
    /// [Apple's documentation](https://developer.apple.com/documentation/clockkit/clkcomplicationtemplateutilitariansmallringtext?language=objc)
    #[unsafe(super(CLKComplicationTemplate, NSObject))]
    #[derive(Debug, PartialEq, Eq, Hash)]
    #[deprecated = "On watchOS 9.0 or later, use WidgetKit instead"]
    pub struct CLKComplicationTemplateUtilitarianSmallRingText;
);

extern_conformance!(
    unsafe impl NSCopying for CLKComplicationTemplateUtilitarianSmallRingText {}
);

unsafe impl CopyingHelper for CLKComplicationTemplateUtilitarianSmallRingText {
    type Result = Self;
}

extern_conformance!(
    unsafe impl NSObjectProtocol for CLKComplicationTemplateUtilitarianSmallRingText {}
);

impl CLKComplicationTemplateUtilitarianSmallRingText {
    extern_methods!(
        #[cfg(feature = "CLKTextProvider")]
        #[deprecated = "On watchOS 9.0 or later, use WidgetKit instead"]
        #[unsafe(method(textProvider))]
        #[unsafe(method_family = none)]
        pub unsafe fn textProvider(&self) -> Retained<CLKTextProvider>;

        #[cfg(feature = "CLKTextProvider")]
        /// Setter for [`textProvider`][Self::textProvider].
        ///
        /// This is [copied][objc2_foundation::NSCopying::copy] when set.
        #[deprecated = "On watchOS 9.0 or later, use WidgetKit instead"]
        #[unsafe(method(setTextProvider:))]
        #[unsafe(method_family = none)]
        pub unsafe fn setTextProvider(&self, text_provider: &CLKTextProvider);

        #[deprecated = "On watchOS 9.0 or later, use WidgetKit instead"]
        #[unsafe(method(fillFraction))]
        #[unsafe(method_family = none)]
        pub unsafe fn fillFraction(&self) -> c_float;

        /// Setter for [`fillFraction`][Self::fillFraction].
        #[deprecated = "On watchOS 9.0 or later, use WidgetKit instead"]
        #[unsafe(method(setFillFraction:))]
        #[unsafe(method_family = none)]
        pub unsafe fn setFillFraction(&self, fill_fraction: c_float);

        #[cfg(feature = "CLKDefines")]
        #[deprecated = "On watchOS 9.0 or later, use WidgetKit instead"]
        #[unsafe(method(ringStyle))]
        #[unsafe(method_family = none)]
        pub unsafe fn ringStyle(&self) -> CLKComplicationRingStyle;

        #[cfg(feature = "CLKDefines")]
        /// Setter for [`ringStyle`][Self::ringStyle].
        #[deprecated = "On watchOS 9.0 or later, use WidgetKit instead"]
        #[unsafe(method(setRingStyle:))]
        #[unsafe(method_family = none)]
        pub unsafe fn setRingStyle(&self, ring_style: CLKComplicationRingStyle);

        #[cfg(all(feature = "CLKDefines", feature = "CLKTextProvider"))]
        #[unsafe(method(initWithTextProvider:fillFraction:ringStyle:))]
        #[unsafe(method_family = init)]
        pub unsafe fn initWithTextProvider_fillFraction_ringStyle(
            this: Allocated<Self>,
            text_provider: &CLKTextProvider,
            fill_fraction: c_float,
            ring_style: CLKComplicationRingStyle,
        ) -> Retained<Self>;

        #[cfg(all(feature = "CLKDefines", feature = "CLKTextProvider"))]
        #[unsafe(method(templateWithTextProvider:fillFraction:ringStyle:))]
        #[unsafe(method_family = none)]
        pub unsafe fn templateWithTextProvider_fillFraction_ringStyle(
            text_provider: &CLKTextProvider,
            fill_fraction: c_float,
            ring_style: CLKComplicationRingStyle,
        ) -> Retained<Self>;
    );
}

/// Methods declared on superclass `CLKComplicationTemplate`.
impl CLKComplicationTemplateUtilitarianSmallRingText {
    extern_methods!(
        #[deprecated = "Initializing a template without parameters is deprecated in watchOS 7.0. Use an init with parameters instead."]
        #[unsafe(method(init))]
        #[unsafe(method_family = init)]
        pub unsafe fn init(this: Allocated<Self>) -> Retained<Self>;

        #[deprecated = "Creating a template without parameters is deprecated in watchOS 7.0. Use a factory method with parameters instead."]
        #[unsafe(method(new))]
        #[unsafe(method_family = new)]
        pub unsafe fn new() -> Retained<Self>;
    );
}

extern_class!(
    /// [Apple's documentation](https://developer.apple.com/documentation/clockkit/clkcomplicationtemplateutilitariansmallringimage?language=objc)
    #[unsafe(super(CLKComplicationTemplate, NSObject))]
    #[derive(Debug, PartialEq, Eq, Hash)]
    #[deprecated = "On watchOS 9.0 or later, use WidgetKit instead"]
    pub struct CLKComplicationTemplateUtilitarianSmallRingImage;
);

extern_conformance!(
    unsafe impl NSCopying for CLKComplicationTemplateUtilitarianSmallRingImage {}
);

unsafe impl CopyingHelper for CLKComplicationTemplateUtilitarianSmallRingImage {
    type Result = Self;
}

extern_conformance!(
    unsafe impl NSObjectProtocol for CLKComplicationTemplateUtilitarianSmallRingImage {}
);

impl CLKComplicationTemplateUtilitarianSmallRingImage {
    extern_methods!(
        #[cfg(feature = "CLKImageProvider")]
        #[deprecated = "On watchOS 9.0 or later, use WidgetKit instead"]
        #[unsafe(method(imageProvider))]
        #[unsafe(method_family = none)]
        pub unsafe fn imageProvider(&self) -> Retained<CLKImageProvider>;

        #[cfg(feature = "CLKImageProvider")]
        /// Setter for [`imageProvider`][Self::imageProvider].
        ///
        /// This is [copied][objc2_foundation::NSCopying::copy] when set.
        #[deprecated = "On watchOS 9.0 or later, use WidgetKit instead"]
        #[unsafe(method(setImageProvider:))]
        #[unsafe(method_family = none)]
        pub unsafe fn setImageProvider(&self, image_provider: &CLKImageProvider);

        #[deprecated = "On watchOS 9.0 or later, use WidgetKit instead"]
        #[unsafe(method(fillFraction))]
        #[unsafe(method_family = none)]
        pub unsafe fn fillFraction(&self) -> c_float;

        /// Setter for [`fillFraction`][Self::fillFraction].
        #[deprecated = "On watchOS 9.0 or later, use WidgetKit instead"]
        #[unsafe(method(setFillFraction:))]
        #[unsafe(method_family = none)]
        pub unsafe fn setFillFraction(&self, fill_fraction: c_float);

        #[cfg(feature = "CLKDefines")]
        #[deprecated = "On watchOS 9.0 or later, use WidgetKit instead"]
        #[unsafe(method(ringStyle))]
        #[unsafe(method_family = none)]
        pub unsafe fn ringStyle(&self) -> CLKComplicationRingStyle;

        #[cfg(feature = "CLKDefines")]
        /// Setter for [`ringStyle`][Self::ringStyle].
        #[deprecated = "On watchOS 9.0 or later, use WidgetKit instead"]
        #[unsafe(method(setRingStyle:))]
        #[unsafe(method_family = none)]
        pub unsafe fn setRingStyle(&self, ring_style: CLKComplicationRingStyle);

        #[cfg(all(feature = "CLKDefines", feature = "CLKImageProvider"))]
        #[unsafe(method(initWithImageProvider:fillFraction:ringStyle:))]
        #[unsafe(method_family = init)]
        pub unsafe fn initWithImageProvider_fillFraction_ringStyle(
            this: Allocated<Self>,
            image_provider: &CLKImageProvider,
            fill_fraction: c_float,
            ring_style: CLKComplicationRingStyle,
        ) -> Retained<Self>;

        #[cfg(all(feature = "CLKDefines", feature = "CLKImageProvider"))]
        #[unsafe(method(templateWithImageProvider:fillFraction:ringStyle:))]
        #[unsafe(method_family = none)]
        pub unsafe fn templateWithImageProvider_fillFraction_ringStyle(
            image_provider: &CLKImageProvider,
            fill_fraction: c_float,
            ring_style: CLKComplicationRingStyle,
        ) -> Retained<Self>;
    );
}

/// Methods declared on superclass `CLKComplicationTemplate`.
impl CLKComplicationTemplateUtilitarianSmallRingImage {
    extern_methods!(
        #[deprecated = "Initializing a template without parameters is deprecated in watchOS 7.0. Use an init with parameters instead."]
        #[unsafe(method(init))]
        #[unsafe(method_family = init)]
        pub unsafe fn init(this: Allocated<Self>) -> Retained<Self>;

        #[deprecated = "Creating a template without parameters is deprecated in watchOS 7.0. Use a factory method with parameters instead."]
        #[unsafe(method(new))]
        #[unsafe(method_family = new)]
        pub unsafe fn new() -> Retained<Self>;
    );
}

extern_class!(
    /// [Apple's documentation](https://developer.apple.com/documentation/clockkit/clkcomplicationtemplateutilitariansmallflat?language=objc)
    #[unsafe(super(CLKComplicationTemplate, NSObject))]
    #[derive(Debug, PartialEq, Eq, Hash)]
    #[deprecated = "On watchOS 9.0 or later, use WidgetKit instead"]
    pub struct CLKComplicationTemplateUtilitarianSmallFlat;
);

extern_conformance!(
    unsafe impl NSCopying for CLKComplicationTemplateUtilitarianSmallFlat {}
);

unsafe impl CopyingHelper for CLKComplicationTemplateUtilitarianSmallFlat {
    type Result = Self;
}

extern_conformance!(
    unsafe impl NSObjectProtocol for CLKComplicationTemplateUtilitarianSmallFlat {}
);

impl CLKComplicationTemplateUtilitarianSmallFlat {
    extern_methods!(
        #[cfg(feature = "CLKTextProvider")]
        #[deprecated = "On watchOS 9.0 or later, use WidgetKit instead"]
        #[unsafe(method(textProvider))]
        #[unsafe(method_family = none)]
        pub unsafe fn textProvider(&self) -> Retained<CLKTextProvider>;

        #[cfg(feature = "CLKTextProvider")]
        /// Setter for [`textProvider`][Self::textProvider].
        ///
        /// This is [copied][objc2_foundation::NSCopying::copy] when set.
        #[deprecated = "On watchOS 9.0 or later, use WidgetKit instead"]
        #[unsafe(method(setTextProvider:))]
        #[unsafe(method_family = none)]
        pub unsafe fn setTextProvider(&self, text_provider: &CLKTextProvider);

        #[cfg(feature = "CLKImageProvider")]
        #[deprecated = "On watchOS 9.0 or later, use WidgetKit instead"]
        #[unsafe(method(imageProvider))]
        #[unsafe(method_family = none)]
        pub unsafe fn imageProvider(&self) -> Option<Retained<CLKImageProvider>>;

        #[cfg(feature = "CLKImageProvider")]
        /// Setter for [`imageProvider`][Self::imageProvider].
        ///
        /// This is [copied][objc2_foundation::NSCopying::copy] when set.
        #[deprecated = "On watchOS 9.0 or later, use WidgetKit instead"]
        #[unsafe(method(setImageProvider:))]
        #[unsafe(method_family = none)]
        pub unsafe fn setImageProvider(&self, image_provider: Option<&CLKImageProvider>);

        #[cfg(feature = "CLKTextProvider")]
        #[unsafe(method(initWithTextProvider:))]
        #[unsafe(method_family = init)]
        pub unsafe fn initWithTextProvider(
            this: Allocated<Self>,
            text_provider: &CLKTextProvider,
        ) -> Retained<Self>;

        #[cfg(all(feature = "CLKImageProvider", feature = "CLKTextProvider"))]
        #[unsafe(method(initWithTextProvider:imageProvider:))]
        #[unsafe(method_family = init)]
        pub unsafe fn initWithTextProvider_imageProvider(
            this: Allocated<Self>,
            text_provider: &CLKTextProvider,
            image_provider: Option<&CLKImageProvider>,
        ) -> Retained<Self>;

        #[cfg(feature = "CLKTextProvider")]
        #[unsafe(method(templateWithTextProvider:))]
        #[unsafe(method_family = none)]
        pub unsafe fn templateWithTextProvider(text_provider: &CLKTextProvider) -> Retained<Self>;

        #[cfg(all(feature = "CLKImageProvider", feature = "CLKTextProvider"))]
        #[unsafe(method(templateWithTextProvider:imageProvider:))]
        #[unsafe(method_family = none)]
        pub unsafe fn templateWithTextProvider_imageProvider(
            text_provider: &CLKTextProvider,
            image_provider: Option<&CLKImageProvider>,
        ) -> Retained<Self>;
    );
}

/// Methods declared on superclass `CLKComplicationTemplate`.
impl CLKComplicationTemplateUtilitarianSmallFlat {
    extern_methods!(
        #[deprecated = "Initializing a template without parameters is deprecated in watchOS 7.0. Use an init with parameters instead."]
        #[unsafe(method(init))]
        #[unsafe(method_family = init)]
        pub unsafe fn init(this: Allocated<Self>) -> Retained<Self>;

        #[deprecated = "Creating a template without parameters is deprecated in watchOS 7.0. Use a factory method with parameters instead."]
        #[unsafe(method(new))]
        #[unsafe(method_family = new)]
        pub unsafe fn new() -> Retained<Self>;
    );
}

extern_class!(
    /// [Apple's documentation](https://developer.apple.com/documentation/clockkit/clkcomplicationtemplateutilitarianlargeflat?language=objc)
    #[unsafe(super(CLKComplicationTemplate, NSObject))]
    #[derive(Debug, PartialEq, Eq, Hash)]
    #[deprecated = "On watchOS 9.0 or later, use WidgetKit instead"]
    pub struct CLKComplicationTemplateUtilitarianLargeFlat;
);

extern_conformance!(
    unsafe impl NSCopying for CLKComplicationTemplateUtilitarianLargeFlat {}
);

unsafe impl CopyingHelper for CLKComplicationTemplateUtilitarianLargeFlat {
    type Result = Self;
}

extern_conformance!(
    unsafe impl NSObjectProtocol for CLKComplicationTemplateUtilitarianLargeFlat {}
);

impl CLKComplicationTemplateUtilitarianLargeFlat {
    extern_methods!(
        #[cfg(feature = "CLKTextProvider")]
        #[deprecated = "On watchOS 9.0 or later, use WidgetKit instead"]
        #[unsafe(method(textProvider))]
        #[unsafe(method_family = none)]
        pub unsafe fn textProvider(&self) -> Retained<CLKTextProvider>;

        #[cfg(feature = "CLKTextProvider")]
        /// Setter for [`textProvider`][Self::textProvider].
        ///
        /// This is [copied][objc2_foundation::NSCopying::copy] when set.
        #[deprecated = "On watchOS 9.0 or later, use WidgetKit instead"]
        #[unsafe(method(setTextProvider:))]
        #[unsafe(method_family = none)]
        pub unsafe fn setTextProvider(&self, text_provider: &CLKTextProvider);

        #[cfg(feature = "CLKImageProvider")]
        #[deprecated = "On watchOS 9.0 or later, use WidgetKit instead"]
        #[unsafe(method(imageProvider))]
        #[unsafe(method_family = none)]
        pub unsafe fn imageProvider(&self) -> Option<Retained<CLKImageProvider>>;

        #[cfg(feature = "CLKImageProvider")]
        /// Setter for [`imageProvider`][Self::imageProvider].
        ///
        /// This is [copied][objc2_foundation::NSCopying::copy] when set.
        #[deprecated = "On watchOS 9.0 or later, use WidgetKit instead"]
        #[unsafe(method(setImageProvider:))]
        #[unsafe(method_family = none)]
        pub unsafe fn setImageProvider(&self, image_provider: Option<&CLKImageProvider>);

        #[cfg(feature = "CLKTextProvider")]
        #[unsafe(method(initWithTextProvider:))]
        #[unsafe(method_family = init)]
        pub unsafe fn initWithTextProvider(
            this: Allocated<Self>,
            text_provider: &CLKTextProvider,
        ) -> Retained<Self>;

        #[cfg(all(feature = "CLKImageProvider", feature = "CLKTextProvider"))]
        #[unsafe(method(initWithTextProvider:imageProvider:))]
        #[unsafe(method_family = init)]
        pub unsafe fn initWithTextProvider_imageProvider(
            this: Allocated<Self>,
            text_provider: &CLKTextProvider,
            image_provider: Option<&CLKImageProvider>,
        ) -> Retained<Self>;

        #[cfg(feature = "CLKTextProvider")]
        #[unsafe(method(templateWithTextProvider:))]
        #[unsafe(method_family = none)]
        pub unsafe fn templateWithTextProvider(text_provider: &CLKTextProvider) -> Retained<Self>;

        #[cfg(all(feature = "CLKImageProvider", feature = "CLKTextProvider"))]
        #[unsafe(method(templateWithTextProvider:imageProvider:))]
        #[unsafe(method_family = none)]
        pub unsafe fn templateWithTextProvider_imageProvider(
            text_provider: &CLKTextProvider,
            image_provider: Option<&CLKImageProvider>,
        ) -> Retained<Self>;
    );
}

/// Methods declared on superclass `CLKComplicationTemplate`.
impl CLKComplicationTemplateUtilitarianLargeFlat {
    extern_methods!(
        #[deprecated = "Initializing a template without parameters is deprecated in watchOS 7.0. Use an init with parameters instead."]
        #[unsafe(method(init))]
        #[unsafe(method_family = init)]
        pub unsafe fn init(this: Allocated<Self>) -> Retained<Self>;

        #[deprecated = "Creating a template without parameters is deprecated in watchOS 7.0. Use a factory method with parameters instead."]
        #[unsafe(method(new))]
        #[unsafe(method_family = new)]
        pub unsafe fn new() -> Retained<Self>;
    );
}

extern_class!(
    /// [Apple's documentation](https://developer.apple.com/documentation/clockkit/clkcomplicationtemplatecircularsmallsimpletext?language=objc)
    #[unsafe(super(CLKComplicationTemplate, NSObject))]
    #[derive(Debug, PartialEq, Eq, Hash)]
    #[deprecated = "On watchOS 9.0 or later, use WidgetKit instead"]
    pub struct CLKComplicationTemplateCircularSmallSimpleText;
);

extern_conformance!(
    unsafe impl NSCopying for CLKComplicationTemplateCircularSmallSimpleText {}
);

unsafe impl CopyingHelper for CLKComplicationTemplateCircularSmallSimpleText {
    type Result = Self;
}

extern_conformance!(
    unsafe impl NSObjectProtocol for CLKComplicationTemplateCircularSmallSimpleText {}
);

impl CLKComplicationTemplateCircularSmallSimpleText {
    extern_methods!(
        #[cfg(feature = "CLKTextProvider")]
        #[deprecated = "On watchOS 9.0 or later, use WidgetKit instead"]
        #[unsafe(method(textProvider))]
        #[unsafe(method_family = none)]
        pub unsafe fn textProvider(&self) -> Retained<CLKTextProvider>;

        #[cfg(feature = "CLKTextProvider")]
        /// Setter for [`textProvider`][Self::textProvider].
        ///
        /// This is [copied][objc2_foundation::NSCopying::copy] when set.
        #[deprecated = "On watchOS 9.0 or later, use WidgetKit instead"]
        #[unsafe(method(setTextProvider:))]
        #[unsafe(method_family = none)]
        pub unsafe fn setTextProvider(&self, text_provider: &CLKTextProvider);

        #[cfg(feature = "CLKTextProvider")]
        #[unsafe(method(initWithTextProvider:))]
        #[unsafe(method_family = init)]
        pub unsafe fn initWithTextProvider(
            this: Allocated<Self>,
            text_provider: &CLKTextProvider,
        ) -> Retained<Self>;

        #[cfg(feature = "CLKTextProvider")]
        #[unsafe(method(templateWithTextProvider:))]
        #[unsafe(method_family = none)]
        pub unsafe fn templateWithTextProvider(text_provider: &CLKTextProvider) -> Retained<Self>;
    );
}

/// Methods declared on superclass `CLKComplicationTemplate`.
impl CLKComplicationTemplateCircularSmallSimpleText {
    extern_methods!(
        #[deprecated = "Initializing a template without parameters is deprecated in watchOS 7.0. Use an init with parameters instead."]
        #[unsafe(method(init))]
        #[unsafe(method_family = init)]
        pub unsafe fn init(this: Allocated<Self>) -> Retained<Self>;

        #[deprecated = "Creating a template without parameters is deprecated in watchOS 7.0. Use a factory method with parameters instead."]
        #[unsafe(method(new))]
        #[unsafe(method_family = new)]
        pub unsafe fn new() -> Retained<Self>;
    );
}

extern_class!(
    /// [Apple's documentation](https://developer.apple.com/documentation/clockkit/clkcomplicationtemplatecircularsmallsimpleimage?language=objc)
    #[unsafe(super(CLKComplicationTemplate, NSObject))]
    #[derive(Debug, PartialEq, Eq, Hash)]
    #[deprecated = "On watchOS 9.0 or later, use WidgetKit instead"]
    pub struct CLKComplicationTemplateCircularSmallSimpleImage;
);

extern_conformance!(
    unsafe impl NSCopying for CLKComplicationTemplateCircularSmallSimpleImage {}
);

unsafe impl CopyingHelper for CLKComplicationTemplateCircularSmallSimpleImage {
    type Result = Self;
}

extern_conformance!(
    unsafe impl NSObjectProtocol for CLKComplicationTemplateCircularSmallSimpleImage {}
);

impl CLKComplicationTemplateCircularSmallSimpleImage {
    extern_methods!(
        #[cfg(feature = "CLKImageProvider")]
        #[deprecated = "On watchOS 9.0 or later, use WidgetKit instead"]
        #[unsafe(method(imageProvider))]
        #[unsafe(method_family = none)]
        pub unsafe fn imageProvider(&self) -> Retained<CLKImageProvider>;

        #[cfg(feature = "CLKImageProvider")]
        /// Setter for [`imageProvider`][Self::imageProvider].
        ///
        /// This is [copied][objc2_foundation::NSCopying::copy] when set.
        #[deprecated = "On watchOS 9.0 or later, use WidgetKit instead"]
        #[unsafe(method(setImageProvider:))]
        #[unsafe(method_family = none)]
        pub unsafe fn setImageProvider(&self, image_provider: &CLKImageProvider);

        #[cfg(feature = "CLKImageProvider")]
        #[unsafe(method(initWithImageProvider:))]
        #[unsafe(method_family = init)]
        pub unsafe fn initWithImageProvider(
            this: Allocated<Self>,
            image_provider: &CLKImageProvider,
        ) -> Retained<Self>;

        #[cfg(feature = "CLKImageProvider")]
        #[unsafe(method(templateWithImageProvider:))]
        #[unsafe(method_family = none)]
        pub unsafe fn templateWithImageProvider(
            image_provider: &CLKImageProvider,
        ) -> Retained<Self>;
    );
}

/// Methods declared on superclass `CLKComplicationTemplate`.
impl CLKComplicationTemplateCircularSmallSimpleImage {
    extern_methods!(
        #[deprecated = "Initializing a template without parameters is deprecated in watchOS 7.0. Use an init with parameters instead."]
        #[unsafe(method(init))]
        #[unsafe(method_family = init)]
        pub unsafe fn init(this: Allocated<Self>) -> Retained<Self>;

        #[deprecated = "Creating a template without parameters is deprecated in watchOS 7.0. Use a factory method with parameters instead."]
        #[unsafe(method(new))]
        #[unsafe(method_family = new)]
        pub unsafe fn new() -> Retained<Self>;
    );
}

extern_class!(
    /// [Apple's documentation](https://developer.apple.com/documentation/clockkit/clkcomplicationtemplatecircularsmallringtext?language=objc)
    #[unsafe(super(CLKComplicationTemplate, NSObject))]
    #[derive(Debug, PartialEq, Eq, Hash)]
    #[deprecated = "On watchOS 9.0 or later, use WidgetKit instead"]
    pub struct CLKComplicationTemplateCircularSmallRingText;
);

extern_conformance!(
    unsafe impl NSCopying for CLKComplicationTemplateCircularSmallRingText {}
);

unsafe impl CopyingHelper for CLKComplicationTemplateCircularSmallRingText {
    type Result = Self;
}

extern_conformance!(
    unsafe impl NSObjectProtocol for CLKComplicationTemplateCircularSmallRingText {}
);

impl CLKComplicationTemplateCircularSmallRingText {
    extern_methods!(
        #[cfg(feature = "CLKTextProvider")]
        #[deprecated = "On watchOS 9.0 or later, use WidgetKit instead"]
        #[unsafe(method(textProvider))]
        #[unsafe(method_family = none)]
        pub unsafe fn textProvider(&self) -> Retained<CLKTextProvider>;

        #[cfg(feature = "CLKTextProvider")]
        /// Setter for [`textProvider`][Self::textProvider].
        ///
        /// This is [copied][objc2_foundation::NSCopying::copy] when set.
        #[deprecated = "On watchOS 9.0 or later, use WidgetKit instead"]
        #[unsafe(method(setTextProvider:))]
        #[unsafe(method_family = none)]
        pub unsafe fn setTextProvider(&self, text_provider: &CLKTextProvider);

        #[deprecated = "On watchOS 9.0 or later, use WidgetKit instead"]
        #[unsafe(method(fillFraction))]
        #[unsafe(method_family = none)]
        pub unsafe fn fillFraction(&self) -> c_float;

        /// Setter for [`fillFraction`][Self::fillFraction].
        #[deprecated = "On watchOS 9.0 or later, use WidgetKit instead"]
        #[unsafe(method(setFillFraction:))]
        #[unsafe(method_family = none)]
        pub unsafe fn setFillFraction(&self, fill_fraction: c_float);

        #[cfg(feature = "CLKDefines")]
        #[deprecated = "On watchOS 9.0 or later, use WidgetKit instead"]
        #[unsafe(method(ringStyle))]
        #[unsafe(method_family = none)]
        pub unsafe fn ringStyle(&self) -> CLKComplicationRingStyle;

        #[cfg(feature = "CLKDefines")]
        /// Setter for [`ringStyle`][Self::ringStyle].
        #[deprecated = "On watchOS 9.0 or later, use WidgetKit instead"]
        #[unsafe(method(setRingStyle:))]
        #[unsafe(method_family = none)]
        pub unsafe fn setRingStyle(&self, ring_style: CLKComplicationRingStyle);

        #[cfg(all(feature = "CLKDefines", feature = "CLKTextProvider"))]
        #[unsafe(method(initWithTextProvider:fillFraction:ringStyle:))]
        #[unsafe(method_family = init)]
        pub unsafe fn initWithTextProvider_fillFraction_ringStyle(
            this: Allocated<Self>,
            text_provider: &CLKTextProvider,
            fill_fraction: c_float,
            ring_style: CLKComplicationRingStyle,
        ) -> Retained<Self>;

        #[cfg(all(feature = "CLKDefines", feature = "CLKTextProvider"))]
        #[unsafe(method(templateWithTextProvider:fillFraction:ringStyle:))]
        #[unsafe(method_family = none)]
        pub unsafe fn templateWithTextProvider_fillFraction_ringStyle(
            text_provider: &CLKTextProvider,
            fill_fraction: c_float,
            ring_style: CLKComplicationRingStyle,
        ) -> Retained<Self>;
    );
}

/// Methods declared on superclass `CLKComplicationTemplate`.
impl CLKComplicationTemplateCircularSmallRingText {
    extern_methods!(
        #[deprecated = "Initializing a template without parameters is deprecated in watchOS 7.0. Use an init with parameters instead."]
        #[unsafe(method(init))]
        #[unsafe(method_family = init)]
        pub unsafe fn init(this: Allocated<Self>) -> Retained<Self>;

        #[deprecated = "Creating a template without parameters is deprecated in watchOS 7.0. Use a factory method with parameters instead."]
        #[unsafe(method(new))]
        #[unsafe(method_family = new)]
        pub unsafe fn new() -> Retained<Self>;
    );
}

extern_class!(
    /// [Apple's documentation](https://developer.apple.com/documentation/clockkit/clkcomplicationtemplatecircularsmallringimage?language=objc)
    #[unsafe(super(CLKComplicationTemplate, NSObject))]
    #[derive(Debug, PartialEq, Eq, Hash)]
    #[deprecated = "On watchOS 9.0 or later, use WidgetKit instead"]
    pub struct CLKComplicationTemplateCircularSmallRingImage;
);

extern_conformance!(
    unsafe impl NSCopying for CLKComplicationTemplateCircularSmallRingImage {}
);

unsafe impl CopyingHelper for CLKComplicationTemplateCircularSmallRingImage {
    type Result = Self;
}

extern_conformance!(
    unsafe impl NSObjectProtocol for CLKComplicationTemplateCircularSmallRingImage {}
);

impl CLKComplicationTemplateCircularSmallRingImage {
    extern_methods!(
        #[cfg(feature = "CLKImageProvider")]
        #[deprecated = "On watchOS 9.0 or later, use WidgetKit instead"]
        #[unsafe(method(imageProvider))]
        #[unsafe(method_family = none)]
        pub unsafe fn imageProvider(&self) -> Retained<CLKImageProvider>;

        #[cfg(feature = "CLKImageProvider")]
        /// Setter for [`imageProvider`][Self::imageProvider].
        ///
        /// This is [copied][objc2_foundation::NSCopying::copy] when set.
        #[deprecated = "On watchOS 9.0 or later, use WidgetKit instead"]
        #[unsafe(method(setImageProvider:))]
        #[unsafe(method_family = none)]
        pub unsafe fn setImageProvider(&self, image_provider: &CLKImageProvider);

        #[deprecated = "On watchOS 9.0 or later, use WidgetKit instead"]
        #[unsafe(method(fillFraction))]
        #[unsafe(method_family = none)]
        pub unsafe fn fillFraction(&self) -> c_float;

        /// Setter for [`fillFraction`][Self::fillFraction].
        #[deprecated = "On watchOS 9.0 or later, use WidgetKit instead"]
        #[unsafe(method(setFillFraction:))]
        #[unsafe(method_family = none)]
        pub unsafe fn setFillFraction(&self, fill_fraction: c_float);

        #[cfg(feature = "CLKDefines")]
        #[deprecated = "On watchOS 9.0 or later, use WidgetKit instead"]
        #[unsafe(method(ringStyle))]
        #[unsafe(method_family = none)]
        pub unsafe fn ringStyle(&self) -> CLKComplicationRingStyle;

        #[cfg(feature = "CLKDefines")]
        /// Setter for [`ringStyle`][Self::ringStyle].
        #[deprecated = "On watchOS 9.0 or later, use WidgetKit instead"]
        #[unsafe(method(setRingStyle:))]
        #[unsafe(method_family = none)]
        pub unsafe fn setRingStyle(&self, ring_style: CLKComplicationRingStyle);

        #[cfg(all(feature = "CLKDefines", feature = "CLKImageProvider"))]
        #[unsafe(method(initWithImageProvider:fillFraction:ringStyle:))]
        #[unsafe(method_family = init)]
        pub unsafe fn initWithImageProvider_fillFraction_ringStyle(
            this: Allocated<Self>,
            image_provider: &CLKImageProvider,
            fill_fraction: c_float,
            ring_style: CLKComplicationRingStyle,
        ) -> Retained<Self>;

        #[cfg(all(feature = "CLKDefines", feature = "CLKImageProvider"))]
        #[unsafe(method(templateWithImageProvider:fillFraction:ringStyle:))]
        #[unsafe(method_family = none)]
        pub unsafe fn templateWithImageProvider_fillFraction_ringStyle(
            image_provider: &CLKImageProvider,
            fill_fraction: c_float,
            ring_style: CLKComplicationRingStyle,
        ) -> Retained<Self>;
    );
}

/// Methods declared on superclass `CLKComplicationTemplate`.
impl CLKComplicationTemplateCircularSmallRingImage {
    extern_methods!(
        #[deprecated = "Initializing a template without parameters is deprecated in watchOS 7.0. Use an init with parameters instead."]
        #[unsafe(method(init))]
        #[unsafe(method_family = init)]
        pub unsafe fn init(this: Allocated<Self>) -> Retained<Self>;

        #[deprecated = "Creating a template without parameters is deprecated in watchOS 7.0. Use a factory method with parameters instead."]
        #[unsafe(method(new))]
        #[unsafe(method_family = new)]
        pub unsafe fn new() -> Retained<Self>;
    );
}

extern_class!(
    /// [Apple's documentation](https://developer.apple.com/documentation/clockkit/clkcomplicationtemplatecircularsmallstacktext?language=objc)
    #[unsafe(super(CLKComplicationTemplate, NSObject))]
    #[derive(Debug, PartialEq, Eq, Hash)]
    #[deprecated = "On watchOS 9.0 or later, use WidgetKit instead"]
    pub struct CLKComplicationTemplateCircularSmallStackText;
);

extern_conformance!(
    unsafe impl NSCopying for CLKComplicationTemplateCircularSmallStackText {}
);

unsafe impl CopyingHelper for CLKComplicationTemplateCircularSmallStackText {
    type Result = Self;
}

extern_conformance!(
    unsafe impl NSObjectProtocol for CLKComplicationTemplateCircularSmallStackText {}
);

impl CLKComplicationTemplateCircularSmallStackText {
    extern_methods!(
        #[cfg(feature = "CLKTextProvider")]
        #[deprecated = "On watchOS 9.0 or later, use WidgetKit instead"]
        #[unsafe(method(line1TextProvider))]
        #[unsafe(method_family = none)]
        pub unsafe fn line1TextProvider(&self) -> Retained<CLKTextProvider>;

        #[cfg(feature = "CLKTextProvider")]
        /// Setter for [`line1TextProvider`][Self::line1TextProvider].
        ///
        /// This is [copied][objc2_foundation::NSCopying::copy] when set.
        #[deprecated = "On watchOS 9.0 or later, use WidgetKit instead"]
        #[unsafe(method(setLine1TextProvider:))]
        #[unsafe(method_family = none)]
        pub unsafe fn setLine1TextProvider(&self, line1_text_provider: &CLKTextProvider);

        #[cfg(feature = "CLKTextProvider")]
        #[deprecated = "On watchOS 9.0 or later, use WidgetKit instead"]
        #[unsafe(method(line2TextProvider))]
        #[unsafe(method_family = none)]
        pub unsafe fn line2TextProvider(&self) -> Retained<CLKTextProvider>;

        #[cfg(feature = "CLKTextProvider")]
        /// Setter for [`line2TextProvider`][Self::line2TextProvider].
        ///
        /// This is [copied][objc2_foundation::NSCopying::copy] when set.
        #[deprecated = "On watchOS 9.0 or later, use WidgetKit instead"]
        #[unsafe(method(setLine2TextProvider:))]
        #[unsafe(method_family = none)]
        pub unsafe fn setLine2TextProvider(&self, line2_text_provider: &CLKTextProvider);

        #[cfg(feature = "CLKTextProvider")]
        #[unsafe(method(initWithLine1TextProvider:line2TextProvider:))]
        #[unsafe(method_family = init)]
        pub unsafe fn initWithLine1TextProvider_line2TextProvider(
            this: Allocated<Self>,
            line1_text_provider: &CLKTextProvider,
            line2_text_provider: &CLKTextProvider,
        ) -> Retained<Self>;

        #[cfg(feature = "CLKTextProvider")]
        #[unsafe(method(templateWithLine1TextProvider:line2TextProvider:))]
        #[unsafe(method_family = none)]
        pub unsafe fn templateWithLine1TextProvider_line2TextProvider(
            line1_text_provider: &CLKTextProvider,
            line2_text_provider: &CLKTextProvider,
        ) -> Retained<Self>;
    );
}

/// Methods declared on superclass `CLKComplicationTemplate`.
impl CLKComplicationTemplateCircularSmallStackText {
    extern_methods!(
        #[deprecated = "Initializing a template without parameters is deprecated in watchOS 7.0. Use an init with parameters instead."]
        #[unsafe(method(init))]
        #[unsafe(method_family = init)]
        pub unsafe fn init(this: Allocated<Self>) -> Retained<Self>;

        #[deprecated = "Creating a template without parameters is deprecated in watchOS 7.0. Use a factory method with parameters instead."]
        #[unsafe(method(new))]
        #[unsafe(method_family = new)]
        pub unsafe fn new() -> Retained<Self>;
    );
}

extern_class!(
    /// [Apple's documentation](https://developer.apple.com/documentation/clockkit/clkcomplicationtemplatecircularsmallstackimage?language=objc)
    #[unsafe(super(CLKComplicationTemplate, NSObject))]
    #[derive(Debug, PartialEq, Eq, Hash)]
    #[deprecated = "On watchOS 9.0 or later, use WidgetKit instead"]
    pub struct CLKComplicationTemplateCircularSmallStackImage;
);

extern_conformance!(
    unsafe impl NSCopying for CLKComplicationTemplateCircularSmallStackImage {}
);

unsafe impl CopyingHelper for CLKComplicationTemplateCircularSmallStackImage {
    type Result = Self;
}

extern_conformance!(
    unsafe impl NSObjectProtocol for CLKComplicationTemplateCircularSmallStackImage {}
);

impl CLKComplicationTemplateCircularSmallStackImage {
    extern_methods!(
        #[cfg(feature = "CLKImageProvider")]
        #[deprecated = "On watchOS 9.0 or later, use WidgetKit instead"]
        #[unsafe(method(line1ImageProvider))]
        #[unsafe(method_family = none)]
        pub unsafe fn line1ImageProvider(&self) -> Retained<CLKImageProvider>;

        #[cfg(feature = "CLKImageProvider")]
        /// Setter for [`line1ImageProvider`][Self::line1ImageProvider].
        ///
        /// This is [copied][objc2_foundation::NSCopying::copy] when set.
        #[deprecated = "On watchOS 9.0 or later, use WidgetKit instead"]
        #[unsafe(method(setLine1ImageProvider:))]
        #[unsafe(method_family = none)]
        pub unsafe fn setLine1ImageProvider(&self, line1_image_provider: &CLKImageProvider);

        #[cfg(feature = "CLKTextProvider")]
        #[deprecated = "On watchOS 9.0 or later, use WidgetKit instead"]
        #[unsafe(method(line2TextProvider))]
        #[unsafe(method_family = none)]
        pub unsafe fn line2TextProvider(&self) -> Retained<CLKTextProvider>;

        #[cfg(feature = "CLKTextProvider")]
        /// Setter for [`line2TextProvider`][Self::line2TextProvider].
        ///
        /// This is [copied][objc2_foundation::NSCopying::copy] when set.
        #[deprecated = "On watchOS 9.0 or later, use WidgetKit instead"]
        #[unsafe(method(setLine2TextProvider:))]
        #[unsafe(method_family = none)]
        pub unsafe fn setLine2TextProvider(&self, line2_text_provider: &CLKTextProvider);

        #[cfg(all(feature = "CLKImageProvider", feature = "CLKTextProvider"))]
        #[unsafe(method(initWithLine1ImageProvider:line2TextProvider:))]
        #[unsafe(method_family = init)]
        pub unsafe fn initWithLine1ImageProvider_line2TextProvider(
            this: Allocated<Self>,
            line1_image_provider: &CLKImageProvider,
            line2_text_provider: &CLKTextProvider,
        ) -> Retained<Self>;

        #[cfg(all(feature = "CLKImageProvider", feature = "CLKTextProvider"))]
        #[unsafe(method(templateWithLine1ImageProvider:line2TextProvider:))]
        #[unsafe(method_family = none)]
        pub unsafe fn templateWithLine1ImageProvider_line2TextProvider(
            line1_image_provider: &CLKImageProvider,
            line2_text_provider: &CLKTextProvider,
        ) -> Retained<Self>;
    );
}

/// Methods declared on superclass `CLKComplicationTemplate`.
impl CLKComplicationTemplateCircularSmallStackImage {
    extern_methods!(
        #[deprecated = "Initializing a template without parameters is deprecated in watchOS 7.0. Use an init with parameters instead."]
        #[unsafe(method(init))]
        #[unsafe(method_family = init)]
        pub unsafe fn init(this: Allocated<Self>) -> Retained<Self>;

        #[deprecated = "Creating a template without parameters is deprecated in watchOS 7.0. Use a factory method with parameters instead."]
        #[unsafe(method(new))]
        #[unsafe(method_family = new)]
        pub unsafe fn new() -> Retained<Self>;
    );
}

extern_class!(
    /// [Apple's documentation](https://developer.apple.com/documentation/clockkit/clkcomplicationtemplateextralargesimpletext?language=objc)
    #[unsafe(super(CLKComplicationTemplate, NSObject))]
    #[derive(Debug, PartialEq, Eq, Hash)]
    #[deprecated = "On watchOS 9.0 or later, use WidgetKit instead"]
    pub struct CLKComplicationTemplateExtraLargeSimpleText;
);

extern_conformance!(
    unsafe impl NSCopying for CLKComplicationTemplateExtraLargeSimpleText {}
);

unsafe impl CopyingHelper for CLKComplicationTemplateExtraLargeSimpleText {
    type Result = Self;
}

extern_conformance!(
    unsafe impl NSObjectProtocol for CLKComplicationTemplateExtraLargeSimpleText {}
);

impl CLKComplicationTemplateExtraLargeSimpleText {
    extern_methods!(
        #[cfg(feature = "CLKTextProvider")]
        #[deprecated = "On watchOS 9.0 or later, use WidgetKit instead"]
        #[unsafe(method(textProvider))]
        #[unsafe(method_family = none)]
        pub unsafe fn textProvider(&self) -> Retained<CLKTextProvider>;

        #[cfg(feature = "CLKTextProvider")]
        /// Setter for [`textProvider`][Self::textProvider].
        ///
        /// This is [copied][objc2_foundation::NSCopying::copy] when set.
        #[deprecated = "On watchOS 9.0 or later, use WidgetKit instead"]
        #[unsafe(method(setTextProvider:))]
        #[unsafe(method_family = none)]
        pub unsafe fn setTextProvider(&self, text_provider: &CLKTextProvider);

        #[cfg(feature = "CLKTextProvider")]
        #[unsafe(method(initWithTextProvider:))]
        #[unsafe(method_family = init)]
        pub unsafe fn initWithTextProvider(
            this: Allocated<Self>,
            text_provider: &CLKTextProvider,
        ) -> Retained<Self>;

        #[cfg(feature = "CLKTextProvider")]
        #[unsafe(method(templateWithTextProvider:))]
        #[unsafe(method_family = none)]
        pub unsafe fn templateWithTextProvider(text_provider: &CLKTextProvider) -> Retained<Self>;
    );
}

/// Methods declared on superclass `CLKComplicationTemplate`.
impl CLKComplicationTemplateExtraLargeSimpleText {
    extern_methods!(
        #[deprecated = "Initializing a template without parameters is deprecated in watchOS 7.0. Use an init with parameters instead."]
        #[unsafe(method(init))]
        #[unsafe(method_family = init)]
        pub unsafe fn init(this: Allocated<Self>) -> Retained<Self>;

        #[deprecated = "Creating a template without parameters is deprecated in watchOS 7.0. Use a factory method with parameters instead."]
        #[unsafe(method(new))]
        #[unsafe(method_family = new)]
        pub unsafe fn new() -> Retained<Self>;
    );
}

extern_class!(
    /// [Apple's documentation](https://developer.apple.com/documentation/clockkit/clkcomplicationtemplateextralargesimpleimage?language=objc)
    #[unsafe(super(CLKComplicationTemplate, NSObject))]
    #[derive(Debug, PartialEq, Eq, Hash)]
    #[deprecated = "On watchOS 9.0 or later, use WidgetKit instead"]
    pub struct CLKComplicationTemplateExtraLargeSimpleImage;
);

extern_conformance!(
    unsafe impl NSCopying for CLKComplicationTemplateExtraLargeSimpleImage {}
);

unsafe impl CopyingHelper for CLKComplicationTemplateExtraLargeSimpleImage {
    type Result = Self;
}

extern_conformance!(
    unsafe impl NSObjectProtocol for CLKComplicationTemplateExtraLargeSimpleImage {}
);

impl CLKComplicationTemplateExtraLargeSimpleImage {
    extern_methods!(
        #[cfg(feature = "CLKImageProvider")]
        #[deprecated = "On watchOS 9.0 or later, use WidgetKit instead"]
        #[unsafe(method(imageProvider))]
        #[unsafe(method_family = none)]
        pub unsafe fn imageProvider(&self) -> Retained<CLKImageProvider>;

        #[cfg(feature = "CLKImageProvider")]
        /// Setter for [`imageProvider`][Self::imageProvider].
        ///
        /// This is [copied][objc2_foundation::NSCopying::copy] when set.
        #[deprecated = "On watchOS 9.0 or later, use WidgetKit instead"]
        #[unsafe(method(setImageProvider:))]
        #[unsafe(method_family = none)]
        pub unsafe fn setImageProvider(&self, image_provider: &CLKImageProvider);

        #[cfg(feature = "CLKImageProvider")]
        #[unsafe(method(initWithImageProvider:))]
        #[unsafe(method_family = init)]
        pub unsafe fn initWithImageProvider(
            this: Allocated<Self>,
            image_provider: &CLKImageProvider,
        ) -> Retained<Self>;

        #[cfg(feature = "CLKImageProvider")]
        #[unsafe(method(templateWithImageProvider:))]
        #[unsafe(method_family = none)]
        pub unsafe fn templateWithImageProvider(
            image_provider: &CLKImageProvider,
        ) -> Retained<Self>;
    );
}

/// Methods declared on superclass `CLKComplicationTemplate`.
impl CLKComplicationTemplateExtraLargeSimpleImage {
    extern_methods!(
        #[deprecated = "Initializing a template without parameters is deprecated in watchOS 7.0. Use an init with parameters instead."]
        #[unsafe(method(init))]
        #[unsafe(method_family = init)]
        pub unsafe fn init(this: Allocated<Self>) -> Retained<Self>;

        #[deprecated = "Creating a template without parameters is deprecated in watchOS 7.0. Use a factory method with parameters instead."]
        #[unsafe(method(new))]
        #[unsafe(method_family = new)]
        pub unsafe fn new() -> Retained<Self>;
    );
}

extern_class!(
    /// [Apple's documentation](https://developer.apple.com/documentation/clockkit/clkcomplicationtemplateextralargeringtext?language=objc)
    #[unsafe(super(CLKComplicationTemplate, NSObject))]
    #[derive(Debug, PartialEq, Eq, Hash)]
    #[deprecated = "On watchOS 9.0 or later, use WidgetKit instead"]
    pub struct CLKComplicationTemplateExtraLargeRingText;
);

extern_conformance!(
    unsafe impl NSCopying for CLKComplicationTemplateExtraLargeRingText {}
);

unsafe impl CopyingHelper for CLKComplicationTemplateExtraLargeRingText {
    type Result = Self;
}

extern_conformance!(
    unsafe impl NSObjectProtocol for CLKComplicationTemplateExtraLargeRingText {}
);

impl CLKComplicationTemplateExtraLargeRingText {
    extern_methods!(
        #[cfg(feature = "CLKTextProvider")]
        #[deprecated = "On watchOS 9.0 or later, use WidgetKit instead"]
        #[unsafe(method(textProvider))]
        #[unsafe(method_family = none)]
        pub unsafe fn textProvider(&self) -> Retained<CLKTextProvider>;

        #[cfg(feature = "CLKTextProvider")]
        /// Setter for [`textProvider`][Self::textProvider].
        ///
        /// This is [copied][objc2_foundation::NSCopying::copy] when set.
        #[deprecated = "On watchOS 9.0 or later, use WidgetKit instead"]
        #[unsafe(method(setTextProvider:))]
        #[unsafe(method_family = none)]
        pub unsafe fn setTextProvider(&self, text_provider: &CLKTextProvider);

        #[deprecated = "On watchOS 9.0 or later, use WidgetKit instead"]
        #[unsafe(method(fillFraction))]
        #[unsafe(method_family = none)]
        pub unsafe fn fillFraction(&self) -> c_float;

        /// Setter for [`fillFraction`][Self::fillFraction].
        #[deprecated = "On watchOS 9.0 or later, use WidgetKit instead"]
        #[unsafe(method(setFillFraction:))]
        #[unsafe(method_family = none)]
        pub unsafe fn setFillFraction(&self, fill_fraction: c_float);

        #[cfg(feature = "CLKDefines")]
        #[deprecated = "On watchOS 9.0 or later, use WidgetKit instead"]
        #[unsafe(method(ringStyle))]
        #[unsafe(method_family = none)]
        pub unsafe fn ringStyle(&self) -> CLKComplicationRingStyle;

        #[cfg(feature = "CLKDefines")]
        /// Setter for [`ringStyle`][Self::ringStyle].
        #[deprecated = "On watchOS 9.0 or later, use WidgetKit instead"]
        #[unsafe(method(setRingStyle:))]
        #[unsafe(method_family = none)]
        pub unsafe fn setRingStyle(&self, ring_style: CLKComplicationRingStyle);

        #[cfg(all(feature = "CLKDefines", feature = "CLKTextProvider"))]
        #[unsafe(method(initWithTextProvider:fillFraction:ringStyle:))]
        #[unsafe(method_family = init)]
        pub unsafe fn initWithTextProvider_fillFraction_ringStyle(
            this: Allocated<Self>,
            text_provider: &CLKTextProvider,
            fill_fraction: c_float,
            ring_style: CLKComplicationRingStyle,
        ) -> Retained<Self>;

        #[cfg(all(feature = "CLKDefines", feature = "CLKTextProvider"))]
        #[unsafe(method(templateWithTextProvider:fillFraction:ringStyle:))]
        #[unsafe(method_family = none)]
        pub unsafe fn templateWithTextProvider_fillFraction_ringStyle(
            text_provider: &CLKTextProvider,
            fill_fraction: c_float,
            ring_style: CLKComplicationRingStyle,
        ) -> Retained<Self>;
    );
}

/// Methods declared on superclass `CLKComplicationTemplate`.
impl CLKComplicationTemplateExtraLargeRingText {
    extern_methods!(
        #[deprecated = "Initializing a template without parameters is deprecated in watchOS 7.0. Use an init with parameters instead."]
        #[unsafe(method(init))]
        #[unsafe(method_family = init)]
        pub unsafe fn init(this: Allocated<Self>) -> Retained<Self>;

        #[deprecated = "Creating a template without parameters is deprecated in watchOS 7.0. Use a factory method with parameters instead."]
        #[unsafe(method(new))]
        #[unsafe(method_family = new)]
        pub unsafe fn new() -> Retained<Self>;
    );
}

extern_class!(
    /// [Apple's documentation](https://developer.apple.com/documentation/clockkit/clkcomplicationtemplateextralargeringimage?language=objc)
    #[unsafe(super(CLKComplicationTemplate, NSObject))]
    #[derive(Debug, PartialEq, Eq, Hash)]
    #[deprecated = "On watchOS 9.0 or later, use WidgetKit instead"]
    pub struct CLKComplicationTemplateExtraLargeRingImage;
);

extern_conformance!(
    unsafe impl NSCopying for CLKComplicationTemplateExtraLargeRingImage {}
);

unsafe impl CopyingHelper for CLKComplicationTemplateExtraLargeRingImage {
    type Result = Self;
}

extern_conformance!(
    unsafe impl NSObjectProtocol for CLKComplicationTemplateExtraLargeRingImage {}
);

impl CLKComplicationTemplateExtraLargeRingImage {
    extern_methods!(
        #[cfg(feature = "CLKImageProvider")]
        #[deprecated = "On watchOS 9.0 or later, use WidgetKit instead"]
        #[unsafe(method(imageProvider))]
        #[unsafe(method_family = none)]
        pub unsafe fn imageProvider(&self) -> Retained<CLKImageProvider>;

        #[cfg(feature = "CLKImageProvider")]
        /// Setter for [`imageProvider`][Self::imageProvider].
        ///
        /// This is [copied][objc2_foundation::NSCopying::copy] when set.
        #[deprecated = "On watchOS 9.0 or later, use WidgetKit instead"]
        #[unsafe(method(setImageProvider:))]
        #[unsafe(method_family = none)]
        pub unsafe fn setImageProvider(&self, image_provider: &CLKImageProvider);

        #[deprecated = "On watchOS 9.0 or later, use WidgetKit instead"]
        #[unsafe(method(fillFraction))]
        #[unsafe(method_family = none)]
        pub unsafe fn fillFraction(&self) -> c_float;

        /// Setter for [`fillFraction`][Self::fillFraction].
        #[deprecated = "On watchOS 9.0 or later, use WidgetKit instead"]
        #[unsafe(method(setFillFraction:))]
        #[unsafe(method_family = none)]
        pub unsafe fn setFillFraction(&self, fill_fraction: c_float);

        #[cfg(feature = "CLKDefines")]
        #[deprecated = "On watchOS 9.0 or later, use WidgetKit instead"]
        #[unsafe(method(ringStyle))]
        #[unsafe(method_family = none)]
        pub unsafe fn ringStyle(&self) -> CLKComplicationRingStyle;

        #[cfg(feature = "CLKDefines")]
        /// Setter for [`ringStyle`][Self::ringStyle].
        #[deprecated = "On watchOS 9.0 or later, use WidgetKit instead"]
        #[unsafe(method(setRingStyle:))]
        #[unsafe(method_family = none)]
        pub unsafe fn setRingStyle(&self, ring_style: CLKComplicationRingStyle);

        #[cfg(all(feature = "CLKDefines", feature = "CLKImageProvider"))]
        #[unsafe(method(initWithImageProvider:fillFraction:ringStyle:))]
        #[unsafe(method_family = init)]
        pub unsafe fn initWithImageProvider_fillFraction_ringStyle(
            this: Allocated<Self>,
            image_provider: &CLKImageProvider,
            fill_fraction: c_float,
            ring_style: CLKComplicationRingStyle,
        ) -> Retained<Self>;

        #[cfg(all(feature = "CLKDefines", feature = "CLKImageProvider"))]
        #[unsafe(method(templateWithImageProvider:fillFraction:ringStyle:))]
        #[unsafe(method_family = none)]
        pub unsafe fn templateWithImageProvider_fillFraction_ringStyle(
            image_provider: &CLKImageProvider,
            fill_fraction: c_float,
            ring_style: CLKComplicationRingStyle,
        ) -> Retained<Self>;
    );
}

/// Methods declared on superclass `CLKComplicationTemplate`.
impl CLKComplicationTemplateExtraLargeRingImage {
    extern_methods!(
        #[deprecated = "Initializing a template without parameters is deprecated in watchOS 7.0. Use an init with parameters instead."]
        #[unsafe(method(init))]
        #[unsafe(method_family = init)]
        pub unsafe fn init(this: Allocated<Self>) -> Retained<Self>;

        #[deprecated = "Creating a template without parameters is deprecated in watchOS 7.0. Use a factory method with parameters instead."]
        #[unsafe(method(new))]
        #[unsafe(method_family = new)]
        pub unsafe fn new() -> Retained<Self>;
    );
}

extern_class!(
    /// [Apple's documentation](https://developer.apple.com/documentation/clockkit/clkcomplicationtemplateextralargestacktext?language=objc)
    #[unsafe(super(CLKComplicationTemplate, NSObject))]
    #[derive(Debug, PartialEq, Eq, Hash)]
    #[deprecated = "On watchOS 9.0 or later, use WidgetKit instead"]
    pub struct CLKComplicationTemplateExtraLargeStackText;
);

extern_conformance!(
    unsafe impl NSCopying for CLKComplicationTemplateExtraLargeStackText {}
);

unsafe impl CopyingHelper for CLKComplicationTemplateExtraLargeStackText {
    type Result = Self;
}

extern_conformance!(
    unsafe impl NSObjectProtocol for CLKComplicationTemplateExtraLargeStackText {}
);

impl CLKComplicationTemplateExtraLargeStackText {
    extern_methods!(
        #[cfg(feature = "CLKTextProvider")]
        #[deprecated = "On watchOS 9.0 or later, use WidgetKit instead"]
        #[unsafe(method(line1TextProvider))]
        #[unsafe(method_family = none)]
        pub unsafe fn line1TextProvider(&self) -> Retained<CLKTextProvider>;

        #[cfg(feature = "CLKTextProvider")]
        /// Setter for [`line1TextProvider`][Self::line1TextProvider].
        ///
        /// This is [copied][objc2_foundation::NSCopying::copy] when set.
        #[deprecated = "On watchOS 9.0 or later, use WidgetKit instead"]
        #[unsafe(method(setLine1TextProvider:))]
        #[unsafe(method_family = none)]
        pub unsafe fn setLine1TextProvider(&self, line1_text_provider: &CLKTextProvider);

        #[cfg(feature = "CLKTextProvider")]
        #[deprecated = "On watchOS 9.0 or later, use WidgetKit instead"]
        #[unsafe(method(line2TextProvider))]
        #[unsafe(method_family = none)]
        pub unsafe fn line2TextProvider(&self) -> Retained<CLKTextProvider>;

        #[cfg(feature = "CLKTextProvider")]
        /// Setter for [`line2TextProvider`][Self::line2TextProvider].
        ///
        /// This is [copied][objc2_foundation::NSCopying::copy] when set.
        #[deprecated = "On watchOS 9.0 or later, use WidgetKit instead"]
        #[unsafe(method(setLine2TextProvider:))]
        #[unsafe(method_family = none)]
        pub unsafe fn setLine2TextProvider(&self, line2_text_provider: &CLKTextProvider);

        #[deprecated = "On watchOS 9.0 or later, use WidgetKit instead"]
        #[unsafe(method(highlightLine2))]
        #[unsafe(method_family = none)]
        pub unsafe fn highlightLine2(&self) -> bool;

        /// Setter for [`highlightLine2`][Self::highlightLine2].
        #[deprecated = "On watchOS 9.0 or later, use WidgetKit instead"]
        #[unsafe(method(setHighlightLine2:))]
        #[unsafe(method_family = none)]
        pub unsafe fn setHighlightLine2(&self, highlight_line2: bool);

        #[cfg(feature = "CLKTextProvider")]
        #[unsafe(method(initWithLine1TextProvider:line2TextProvider:))]
        #[unsafe(method_family = init)]
        pub unsafe fn initWithLine1TextProvider_line2TextProvider(
            this: Allocated<Self>,
            line1_text_provider: &CLKTextProvider,
            line2_text_provider: &CLKTextProvider,
        ) -> Retained<Self>;

        #[cfg(feature = "CLKTextProvider")]
        #[unsafe(method(templateWithLine1TextProvider:line2TextProvider:))]
        #[unsafe(method_family = none)]
        pub unsafe fn templateWithLine1TextProvider_line2TextProvider(
            line1_text_provider: &CLKTextProvider,
            line2_text_provider: &CLKTextProvider,
        ) -> Retained<Self>;
    );
}

/// Methods declared on superclass `CLKComplicationTemplate`.
impl CLKComplicationTemplateExtraLargeStackText {
    extern_methods!(
        #[deprecated = "Initializing a template without parameters is deprecated in watchOS 7.0. Use an init with parameters instead."]
        #[unsafe(method(init))]
        #[unsafe(method_family = init)]
        pub unsafe fn init(this: Allocated<Self>) -> Retained<Self>;

        #[deprecated = "Creating a template without parameters is deprecated in watchOS 7.0. Use a factory method with parameters instead."]
        #[unsafe(method(new))]
        #[unsafe(method_family = new)]
        pub unsafe fn new() -> Retained<Self>;
    );
}

extern_class!(
    /// [Apple's documentation](https://developer.apple.com/documentation/clockkit/clkcomplicationtemplateextralargestackimage?language=objc)
    #[unsafe(super(CLKComplicationTemplate, NSObject))]
    #[derive(Debug, PartialEq, Eq, Hash)]
    #[deprecated = "On watchOS 9.0 or later, use WidgetKit instead"]
    pub struct CLKComplicationTemplateExtraLargeStackImage;
);

extern_conformance!(
    unsafe impl NSCopying for CLKComplicationTemplateExtraLargeStackImage {}
);

unsafe impl CopyingHelper for CLKComplicationTemplateExtraLargeStackImage {
    type Result = Self;
}

extern_conformance!(
    unsafe impl NSObjectProtocol for CLKComplicationTemplateExtraLargeStackImage {}
);

impl CLKComplicationTemplateExtraLargeStackImage {
    extern_methods!(
        #[cfg(feature = "CLKImageProvider")]
        #[deprecated = "On watchOS 9.0 or later, use WidgetKit instead"]
        #[unsafe(method(line1ImageProvider))]
        #[unsafe(method_family = none)]
        pub unsafe fn line1ImageProvider(&self) -> Retained<CLKImageProvider>;

        #[cfg(feature = "CLKImageProvider")]
        /// Setter for [`line1ImageProvider`][Self::line1ImageProvider].
        ///
        /// This is [copied][objc2_foundation::NSCopying::copy] when set.
        #[deprecated = "On watchOS 9.0 or later, use WidgetKit instead"]
        #[unsafe(method(setLine1ImageProvider:))]
        #[unsafe(method_family = none)]
        pub unsafe fn setLine1ImageProvider(&self, line1_image_provider: &CLKImageProvider);

        #[cfg(feature = "CLKTextProvider")]
        #[deprecated = "On watchOS 9.0 or later, use WidgetKit instead"]
        #[unsafe(method(line2TextProvider))]
        #[unsafe(method_family = none)]
        pub unsafe fn line2TextProvider(&self) -> Retained<CLKTextProvider>;

        #[cfg(feature = "CLKTextProvider")]
        /// Setter for [`line2TextProvider`][Self::line2TextProvider].
        ///
        /// This is [copied][objc2_foundation::NSCopying::copy] when set.
        #[deprecated = "On watchOS 9.0 or later, use WidgetKit instead"]
        #[unsafe(method(setLine2TextProvider:))]
        #[unsafe(method_family = none)]
        pub unsafe fn setLine2TextProvider(&self, line2_text_provider: &CLKTextProvider);

        #[deprecated = "On watchOS 9.0 or later, use WidgetKit instead"]
        #[unsafe(method(highlightLine2))]
        #[unsafe(method_family = none)]
        pub unsafe fn highlightLine2(&self) -> bool;

        /// Setter for [`highlightLine2`][Self::highlightLine2].
        #[deprecated = "On watchOS 9.0 or later, use WidgetKit instead"]
        #[unsafe(method(setHighlightLine2:))]
        #[unsafe(method_family = none)]
        pub unsafe fn setHighlightLine2(&self, highlight_line2: bool);

        #[cfg(all(feature = "CLKImageProvider", feature = "CLKTextProvider"))]
        #[unsafe(method(initWithLine1ImageProvider:line2TextProvider:))]
        #[unsafe(method_family = init)]
        pub unsafe fn initWithLine1ImageProvider_line2TextProvider(
            this: Allocated<Self>,
            line1_image_provider: &CLKImageProvider,
            line2_text_provider: &CLKTextProvider,
        ) -> Retained<Self>;

        #[cfg(all(feature = "CLKImageProvider", feature = "CLKTextProvider"))]
        #[unsafe(method(templateWithLine1ImageProvider:line2TextProvider:))]
        #[unsafe(method_family = none)]
        pub unsafe fn templateWithLine1ImageProvider_line2TextProvider(
            line1_image_provider: &CLKImageProvider,
            line2_text_provider: &CLKTextProvider,
        ) -> Retained<Self>;
    );
}

/// Methods declared on superclass `CLKComplicationTemplate`.
impl CLKComplicationTemplateExtraLargeStackImage {
    extern_methods!(
        #[deprecated = "Initializing a template without parameters is deprecated in watchOS 7.0. Use an init with parameters instead."]
        #[unsafe(method(init))]
        #[unsafe(method_family = init)]
        pub unsafe fn init(this: Allocated<Self>) -> Retained<Self>;

        #[deprecated = "Creating a template without parameters is deprecated in watchOS 7.0. Use a factory method with parameters instead."]
        #[unsafe(method(new))]
        #[unsafe(method_family = new)]
        pub unsafe fn new() -> Retained<Self>;
    );
}

extern_class!(
    /// [Apple's documentation](https://developer.apple.com/documentation/clockkit/clkcomplicationtemplateextralargecolumnstext?language=objc)
    #[unsafe(super(CLKComplicationTemplate, NSObject))]
    #[derive(Debug, PartialEq, Eq, Hash)]
    #[deprecated = "On watchOS 9.0 or later, use WidgetKit instead"]
    pub struct CLKComplicationTemplateExtraLargeColumnsText;
);

extern_conformance!(
    unsafe impl NSCopying for CLKComplicationTemplateExtraLargeColumnsText {}
);

unsafe impl CopyingHelper for CLKComplicationTemplateExtraLargeColumnsText {
    type Result = Self;
}

extern_conformance!(
    unsafe impl NSObjectProtocol for CLKComplicationTemplateExtraLargeColumnsText {}
);

impl CLKComplicationTemplateExtraLargeColumnsText {
    extern_methods!(
        #[cfg(feature = "CLKTextProvider")]
        #[deprecated = "On watchOS 9.0 or later, use WidgetKit instead"]
        #[unsafe(method(row1Column1TextProvider))]
        #[unsafe(method_family = none)]
        pub unsafe fn row1Column1TextProvider(&self) -> Retained<CLKTextProvider>;

        #[cfg(feature = "CLKTextProvider")]
        /// Setter for [`row1Column1TextProvider`][Self::row1Column1TextProvider].
        ///
        /// This is [copied][objc2_foundation::NSCopying::copy] when set.
        #[deprecated = "On watchOS 9.0 or later, use WidgetKit instead"]
        #[unsafe(method(setRow1Column1TextProvider:))]
        #[unsafe(method_family = none)]
        pub unsafe fn setRow1Column1TextProvider(
            &self,
            row1_column1_text_provider: &CLKTextProvider,
        );

        #[cfg(feature = "CLKTextProvider")]
        #[deprecated = "On watchOS 9.0 or later, use WidgetKit instead"]
        #[unsafe(method(row1Column2TextProvider))]
        #[unsafe(method_family = none)]
        pub unsafe fn row1Column2TextProvider(&self) -> Retained<CLKTextProvider>;

        #[cfg(feature = "CLKTextProvider")]
        /// Setter for [`row1Column2TextProvider`][Self::row1Column2TextProvider].
        ///
        /// This is [copied][objc2_foundation::NSCopying::copy] when set.
        #[deprecated = "On watchOS 9.0 or later, use WidgetKit instead"]
        #[unsafe(method(setRow1Column2TextProvider:))]
        #[unsafe(method_family = none)]
        pub unsafe fn setRow1Column2TextProvider(
            &self,
            row1_column2_text_provider: &CLKTextProvider,
        );

        #[cfg(feature = "CLKTextProvider")]
        #[deprecated = "On watchOS 9.0 or later, use WidgetKit instead"]
        #[unsafe(method(row2Column1TextProvider))]
        #[unsafe(method_family = none)]
        pub unsafe fn row2Column1TextProvider(&self) -> Retained<CLKTextProvider>;

        #[cfg(feature = "CLKTextProvider")]
        /// Setter for [`row2Column1TextProvider`][Self::row2Column1TextProvider].
        ///
        /// This is [copied][objc2_foundation::NSCopying::copy] when set.
        #[deprecated = "On watchOS 9.0 or later, use WidgetKit instead"]
        #[unsafe(method(setRow2Column1TextProvider:))]
        #[unsafe(method_family = none)]
        pub unsafe fn setRow2Column1TextProvider(
            &self,
            row2_column1_text_provider: &CLKTextProvider,
        );

        #[cfg(feature = "CLKTextProvider")]
        #[deprecated = "On watchOS 9.0 or later, use WidgetKit instead"]
        #[unsafe(method(row2Column2TextProvider))]
        #[unsafe(method_family = none)]
        pub unsafe fn row2Column2TextProvider(&self) -> Retained<CLKTextProvider>;

        #[cfg(feature = "CLKTextProvider")]
        /// Setter for [`row2Column2TextProvider`][Self::row2Column2TextProvider].
        ///
        /// This is [copied][objc2_foundation::NSCopying::copy] when set.
        #[deprecated = "On watchOS 9.0 or later, use WidgetKit instead"]
        #[unsafe(method(setRow2Column2TextProvider:))]
        #[unsafe(method_family = none)]
        pub unsafe fn setRow2Column2TextProvider(
            &self,
            row2_column2_text_provider: &CLKTextProvider,
        );

        #[cfg(feature = "CLKDefines")]
        #[deprecated = "On watchOS 9.0 or later, use WidgetKit instead"]
        #[unsafe(method(column2Alignment))]
        #[unsafe(method_family = none)]
        pub unsafe fn column2Alignment(&self) -> CLKComplicationColumnAlignment;

        #[cfg(feature = "CLKDefines")]
        /// Setter for [`column2Alignment`][Self::column2Alignment].
        #[deprecated = "On watchOS 9.0 or later, use WidgetKit instead"]
        #[unsafe(method(setColumn2Alignment:))]
        #[unsafe(method_family = none)]
        pub unsafe fn setColumn2Alignment(&self, column2_alignment: CLKComplicationColumnAlignment);

        #[deprecated = "On watchOS 9.0 or later, use WidgetKit instead"]
        #[unsafe(method(highlightColumn2))]
        #[unsafe(method_family = none)]
        pub unsafe fn highlightColumn2(&self) -> bool;

        /// Setter for [`highlightColumn2`][Self::highlightColumn2].
        #[deprecated = "On watchOS 9.0 or later, use WidgetKit instead"]
        #[unsafe(method(setHighlightColumn2:))]
        #[unsafe(method_family = none)]
        pub unsafe fn setHighlightColumn2(&self, highlight_column2: bool);

        #[cfg(feature = "CLKTextProvider")]
        #[unsafe(method(initWithRow1Column1TextProvider:row1Column2TextProvider:row2Column1TextProvider:row2Column2TextProvider:))]
        #[unsafe(method_family = init)]
        pub unsafe fn initWithRow1Column1TextProvider_row1Column2TextProvider_row2Column1TextProvider_row2Column2TextProvider(
            this: Allocated<Self>,
            row1_column1_text_provider: &CLKTextProvider,
            row1_column2_text_provider: &CLKTextProvider,
            row2_column1_text_provider: &CLKTextProvider,
            row2_column2_text_provider: &CLKTextProvider,
        ) -> Retained<Self>;

        #[cfg(feature = "CLKTextProvider")]
        #[unsafe(method(templateWithRow1Column1TextProvider:row1Column2TextProvider:row2Column1TextProvider:row2Column2TextProvider:))]
        #[unsafe(method_family = none)]
        pub unsafe fn templateWithRow1Column1TextProvider_row1Column2TextProvider_row2Column1TextProvider_row2Column2TextProvider(
            row1_column1_text_provider: &CLKTextProvider,
            row1_column2_text_provider: &CLKTextProvider,
            row2_column1_text_provider: &CLKTextProvider,
            row2_column2_text_provider: &CLKTextProvider,
        ) -> Retained<Self>;
    );
}

/// Methods declared on superclass `CLKComplicationTemplate`.
impl CLKComplicationTemplateExtraLargeColumnsText {
    extern_methods!(
        #[deprecated = "Initializing a template without parameters is deprecated in watchOS 7.0. Use an init with parameters instead."]
        #[unsafe(method(init))]
        #[unsafe(method_family = init)]
        pub unsafe fn init(this: Allocated<Self>) -> Retained<Self>;

        #[deprecated = "Creating a template without parameters is deprecated in watchOS 7.0. Use a factory method with parameters instead."]
        #[unsafe(method(new))]
        #[unsafe(method_family = new)]
        pub unsafe fn new() -> Retained<Self>;
    );
}

extern_class!(
    /// [Apple's documentation](https://developer.apple.com/documentation/clockkit/clkcomplicationtemplategraphiccornergaugetext?language=objc)
    #[unsafe(super(CLKComplicationTemplate, NSObject))]
    #[derive(Debug, PartialEq, Eq, Hash)]
    #[deprecated = "On watchOS 9.0 or later, use WidgetKit instead"]
    pub struct CLKComplicationTemplateGraphicCornerGaugeText;
);

extern_conformance!(
    unsafe impl NSCopying for CLKComplicationTemplateGraphicCornerGaugeText {}
);

unsafe impl CopyingHelper for CLKComplicationTemplateGraphicCornerGaugeText {
    type Result = Self;
}

extern_conformance!(
    unsafe impl NSObjectProtocol for CLKComplicationTemplateGraphicCornerGaugeText {}
);

impl CLKComplicationTemplateGraphicCornerGaugeText {
    extern_methods!(
        #[cfg(feature = "CLKGaugeProvider")]
        #[deprecated = "On watchOS 9.0 or later, use WidgetKit instead"]
        #[unsafe(method(gaugeProvider))]
        #[unsafe(method_family = none)]
        pub unsafe fn gaugeProvider(&self) -> Retained<CLKGaugeProvider>;

        #[cfg(feature = "CLKGaugeProvider")]
        /// Setter for [`gaugeProvider`][Self::gaugeProvider].
        ///
        /// This is [copied][objc2_foundation::NSCopying::copy] when set.
        #[deprecated = "On watchOS 9.0 or later, use WidgetKit instead"]
        #[unsafe(method(setGaugeProvider:))]
        #[unsafe(method_family = none)]
        pub unsafe fn setGaugeProvider(&self, gauge_provider: &CLKGaugeProvider);

        #[cfg(feature = "CLKTextProvider")]
        #[deprecated = "On watchOS 9.0 or later, use WidgetKit instead"]
        #[unsafe(method(leadingTextProvider))]
        #[unsafe(method_family = none)]
        pub unsafe fn leadingTextProvider(&self) -> Option<Retained<CLKTextProvider>>;

        #[cfg(feature = "CLKTextProvider")]
        /// Setter for [`leadingTextProvider`][Self::leadingTextProvider].
        ///
        /// This is [copied][objc2_foundation::NSCopying::copy] when set.
        #[deprecated = "On watchOS 9.0 or later, use WidgetKit instead"]
        #[unsafe(method(setLeadingTextProvider:))]
        #[unsafe(method_family = none)]
        pub unsafe fn setLeadingTextProvider(
            &self,
            leading_text_provider: Option<&CLKTextProvider>,
        );

        #[cfg(feature = "CLKTextProvider")]
        #[deprecated = "On watchOS 9.0 or later, use WidgetKit instead"]
        #[unsafe(method(trailingTextProvider))]
        #[unsafe(method_family = none)]
        pub unsafe fn trailingTextProvider(&self) -> Option<Retained<CLKTextProvider>>;

        #[cfg(feature = "CLKTextProvider")]
        /// Setter for [`trailingTextProvider`][Self::trailingTextProvider].
        ///
        /// This is [copied][objc2_foundation::NSCopying::copy] when set.
        #[deprecated = "On watchOS 9.0 or later, use WidgetKit instead"]
        #[unsafe(method(setTrailingTextProvider:))]
        #[unsafe(method_family = none)]
        pub unsafe fn setTrailingTextProvider(
            &self,
            trailing_text_provider: Option<&CLKTextProvider>,
        );

        #[cfg(feature = "CLKTextProvider")]
        #[deprecated = "On watchOS 9.0 or later, use WidgetKit instead"]
        #[unsafe(method(outerTextProvider))]
        #[unsafe(method_family = none)]
        pub unsafe fn outerTextProvider(&self) -> Retained<CLKTextProvider>;

        #[cfg(feature = "CLKTextProvider")]
        /// Setter for [`outerTextProvider`][Self::outerTextProvider].
        ///
        /// This is [copied][objc2_foundation::NSCopying::copy] when set.
        #[deprecated = "On watchOS 9.0 or later, use WidgetKit instead"]
        #[unsafe(method(setOuterTextProvider:))]
        #[unsafe(method_family = none)]
        pub unsafe fn setOuterTextProvider(&self, outer_text_provider: &CLKTextProvider);

        #[cfg(all(feature = "CLKGaugeProvider", feature = "CLKTextProvider"))]
        #[unsafe(method(initWithGaugeProvider:outerTextProvider:))]
        #[unsafe(method_family = init)]
        pub unsafe fn initWithGaugeProvider_outerTextProvider(
            this: Allocated<Self>,
            gauge_provider: &CLKGaugeProvider,
            outer_text_provider: &CLKTextProvider,
        ) -> Retained<Self>;

        #[cfg(all(feature = "CLKGaugeProvider", feature = "CLKTextProvider"))]
        #[unsafe(method(initWithGaugeProvider:leadingTextProvider:trailingTextProvider:outerTextProvider:))]
        #[unsafe(method_family = init)]
        pub unsafe fn initWithGaugeProvider_leadingTextProvider_trailingTextProvider_outerTextProvider(
            this: Allocated<Self>,
            gauge_provider: &CLKGaugeProvider,
            leading_text_provider: Option<&CLKTextProvider>,
            trailing_text_provider: Option<&CLKTextProvider>,
            outer_text_provider: &CLKTextProvider,
        ) -> Retained<Self>;

        #[cfg(all(feature = "CLKGaugeProvider", feature = "CLKTextProvider"))]
        #[unsafe(method(templateWithGaugeProvider:outerTextProvider:))]
        #[unsafe(method_family = none)]
        pub unsafe fn templateWithGaugeProvider_outerTextProvider(
            gauge_provider: &CLKGaugeProvider,
            outer_text_provider: &CLKTextProvider,
        ) -> Retained<Self>;

        #[cfg(all(feature = "CLKGaugeProvider", feature = "CLKTextProvider"))]
        #[unsafe(method(templateWithGaugeProvider:leadingTextProvider:trailingTextProvider:outerTextProvider:))]
        #[unsafe(method_family = none)]
        pub unsafe fn templateWithGaugeProvider_leadingTextProvider_trailingTextProvider_outerTextProvider(
            gauge_provider: &CLKGaugeProvider,
            leading_text_provider: Option<&CLKTextProvider>,
            trailing_text_provider: Option<&CLKTextProvider>,
            outer_text_provider: &CLKTextProvider,
        ) -> Retained<Self>;
    );
}

/// Methods declared on superclass `CLKComplicationTemplate`.
impl CLKComplicationTemplateGraphicCornerGaugeText {
    extern_methods!(
        #[deprecated = "Initializing a template without parameters is deprecated in watchOS 7.0. Use an init with parameters instead."]
        #[unsafe(method(init))]
        #[unsafe(method_family = init)]
        pub unsafe fn init(this: Allocated<Self>) -> Retained<Self>;

        #[deprecated = "Creating a template without parameters is deprecated in watchOS 7.0. Use a factory method with parameters instead."]
        #[unsafe(method(new))]
        #[unsafe(method_family = new)]
        pub unsafe fn new() -> Retained<Self>;
    );
}

extern_class!(
    /// [Apple's documentation](https://developer.apple.com/documentation/clockkit/clkcomplicationtemplategraphiccornergaugeimage?language=objc)
    #[unsafe(super(CLKComplicationTemplate, NSObject))]
    #[derive(Debug, PartialEq, Eq, Hash)]
    #[deprecated = "On watchOS 9.0 or later, use WidgetKit instead"]
    pub struct CLKComplicationTemplateGraphicCornerGaugeImage;
);

extern_conformance!(
    unsafe impl NSCopying for CLKComplicationTemplateGraphicCornerGaugeImage {}
);

unsafe impl CopyingHelper for CLKComplicationTemplateGraphicCornerGaugeImage {
    type Result = Self;
}

extern_conformance!(
    unsafe impl NSObjectProtocol for CLKComplicationTemplateGraphicCornerGaugeImage {}
);

impl CLKComplicationTemplateGraphicCornerGaugeImage {
    extern_methods!(
        #[cfg(feature = "CLKGaugeProvider")]
        #[deprecated = "On watchOS 9.0 or later, use WidgetKit instead"]
        #[unsafe(method(gaugeProvider))]
        #[unsafe(method_family = none)]
        pub unsafe fn gaugeProvider(&self) -> Retained<CLKGaugeProvider>;

        #[cfg(feature = "CLKGaugeProvider")]
        /// Setter for [`gaugeProvider`][Self::gaugeProvider].
        ///
        /// This is [copied][objc2_foundation::NSCopying::copy] when set.
        #[deprecated = "On watchOS 9.0 or later, use WidgetKit instead"]
        #[unsafe(method(setGaugeProvider:))]
        #[unsafe(method_family = none)]
        pub unsafe fn setGaugeProvider(&self, gauge_provider: &CLKGaugeProvider);

        #[cfg(feature = "CLKTextProvider")]
        #[deprecated = "On watchOS 9.0 or later, use WidgetKit instead"]
        #[unsafe(method(leadingTextProvider))]
        #[unsafe(method_family = none)]
        pub unsafe fn leadingTextProvider(&self) -> Option<Retained<CLKTextProvider>>;

        #[cfg(feature = "CLKTextProvider")]
        /// Setter for [`leadingTextProvider`][Self::leadingTextProvider].
        ///
        /// This is [copied][objc2_foundation::NSCopying::copy] when set.
        #[deprecated = "On watchOS 9.0 or later, use WidgetKit instead"]
        #[unsafe(method(setLeadingTextProvider:))]
        #[unsafe(method_family = none)]
        pub unsafe fn setLeadingTextProvider(
            &self,
            leading_text_provider: Option<&CLKTextProvider>,
        );

        #[cfg(feature = "CLKTextProvider")]
        #[deprecated = "On watchOS 9.0 or later, use WidgetKit instead"]
        #[unsafe(method(trailingTextProvider))]
        #[unsafe(method_family = none)]
        pub unsafe fn trailingTextProvider(&self) -> Option<Retained<CLKTextProvider>>;

        #[cfg(feature = "CLKTextProvider")]
        /// Setter for [`trailingTextProvider`][Self::trailingTextProvider].
        ///
        /// This is [copied][objc2_foundation::NSCopying::copy] when set.
        #[deprecated = "On watchOS 9.0 or later, use WidgetKit instead"]
        #[unsafe(method(setTrailingTextProvider:))]
        #[unsafe(method_family = none)]
        pub unsafe fn setTrailingTextProvider(
            &self,
            trailing_text_provider: Option<&CLKTextProvider>,
        );

        #[cfg(feature = "CLKFullColorImageProvider")]
        #[deprecated = "On watchOS 9.0 or later, use WidgetKit instead"]
        #[unsafe(method(imageProvider))]
        #[unsafe(method_family = none)]
        pub unsafe fn imageProvider(&self) -> Retained<CLKFullColorImageProvider>;

        #[cfg(feature = "CLKFullColorImageProvider")]
        /// Setter for [`imageProvider`][Self::imageProvider].
        ///
        /// This is [copied][objc2_foundation::NSCopying::copy] when set.
        #[deprecated = "On watchOS 9.0 or later, use WidgetKit instead"]
        #[unsafe(method(setImageProvider:))]
        #[unsafe(method_family = none)]
        pub unsafe fn setImageProvider(&self, image_provider: &CLKFullColorImageProvider);

        #[cfg(all(feature = "CLKFullColorImageProvider", feature = "CLKGaugeProvider"))]
        #[unsafe(method(initWithGaugeProvider:imageProvider:))]
        #[unsafe(method_family = init)]
        pub unsafe fn initWithGaugeProvider_imageProvider(
            this: Allocated<Self>,
            gauge_provider: &CLKGaugeProvider,
            image_provider: &CLKFullColorImageProvider,
        ) -> Retained<Self>;

        #[cfg(all(
            feature = "CLKFullColorImageProvider",
            feature = "CLKGaugeProvider",
            feature = "CLKTextProvider"
        ))]
        #[unsafe(method(initWithGaugeProvider:leadingTextProvider:trailingTextProvider:imageProvider:))]
        #[unsafe(method_family = init)]
        pub unsafe fn initWithGaugeProvider_leadingTextProvider_trailingTextProvider_imageProvider(
            this: Allocated<Self>,
            gauge_provider: &CLKGaugeProvider,
            leading_text_provider: Option<&CLKTextProvider>,
            trailing_text_provider: Option<&CLKTextProvider>,
            image_provider: &CLKFullColorImageProvider,
        ) -> Retained<Self>;

        #[cfg(all(feature = "CLKFullColorImageProvider", feature = "CLKGaugeProvider"))]
        #[unsafe(method(templateWithGaugeProvider:imageProvider:))]
        #[unsafe(method_family = none)]
        pub unsafe fn templateWithGaugeProvider_imageProvider(
            gauge_provider: &CLKGaugeProvider,
            image_provider: &CLKFullColorImageProvider,
        ) -> Retained<Self>;

        #[cfg(all(
            feature = "CLKFullColorImageProvider",
            feature = "CLKGaugeProvider",
            feature = "CLKTextProvider"
        ))]
        #[unsafe(method(templateWithGaugeProvider:leadingTextProvider:trailingTextProvider:imageProvider:))]
        #[unsafe(method_family = none)]
        pub unsafe fn templateWithGaugeProvider_leadingTextProvider_trailingTextProvider_imageProvider(
            gauge_provider: &CLKGaugeProvider,
            leading_text_provider: Option<&CLKTextProvider>,
            trailing_text_provider: Option<&CLKTextProvider>,
            image_provider: &CLKFullColorImageProvider,
        ) -> Retained<Self>;
    );
}

/// Methods declared on superclass `CLKComplicationTemplate`.
impl CLKComplicationTemplateGraphicCornerGaugeImage {
    extern_methods!(
        #[deprecated = "Initializing a template without parameters is deprecated in watchOS 7.0. Use an init with parameters instead."]
        #[unsafe(method(init))]
        #[unsafe(method_family = init)]
        pub unsafe fn init(this: Allocated<Self>) -> Retained<Self>;

        #[deprecated = "Creating a template without parameters is deprecated in watchOS 7.0. Use a factory method with parameters instead."]
        #[unsafe(method(new))]
        #[unsafe(method_family = new)]
        pub unsafe fn new() -> Retained<Self>;
    );
}

extern_class!(
    /// [Apple's documentation](https://developer.apple.com/documentation/clockkit/clkcomplicationtemplategraphiccornertextimage?language=objc)
    #[unsafe(super(CLKComplicationTemplate, NSObject))]
    #[derive(Debug, PartialEq, Eq, Hash)]
    #[deprecated = "On watchOS 9.0 or later, use WidgetKit instead"]
    pub struct CLKComplicationTemplateGraphicCornerTextImage;
);

extern_conformance!(
    unsafe impl NSCopying for CLKComplicationTemplateGraphicCornerTextImage {}
);

unsafe impl CopyingHelper for CLKComplicationTemplateGraphicCornerTextImage {
    type Result = Self;
}

extern_conformance!(
    unsafe impl NSObjectProtocol for CLKComplicationTemplateGraphicCornerTextImage {}
);

impl CLKComplicationTemplateGraphicCornerTextImage {
    extern_methods!(
        #[cfg(feature = "CLKTextProvider")]
        #[deprecated = "On watchOS 9.0 or later, use WidgetKit instead"]
        #[unsafe(method(textProvider))]
        #[unsafe(method_family = none)]
        pub unsafe fn textProvider(&self) -> Retained<CLKTextProvider>;

        #[cfg(feature = "CLKTextProvider")]
        /// Setter for [`textProvider`][Self::textProvider].
        ///
        /// This is [copied][objc2_foundation::NSCopying::copy] when set.
        #[deprecated = "On watchOS 9.0 or later, use WidgetKit instead"]
        #[unsafe(method(setTextProvider:))]
        #[unsafe(method_family = none)]
        pub unsafe fn setTextProvider(&self, text_provider: &CLKTextProvider);

        #[cfg(feature = "CLKFullColorImageProvider")]
        #[deprecated = "On watchOS 9.0 or later, use WidgetKit instead"]
        #[unsafe(method(imageProvider))]
        #[unsafe(method_family = none)]
        pub unsafe fn imageProvider(&self) -> Retained<CLKFullColorImageProvider>;

        #[cfg(feature = "CLKFullColorImageProvider")]
        /// Setter for [`imageProvider`][Self::imageProvider].
        ///
        /// This is [copied][objc2_foundation::NSCopying::copy] when set.
        #[deprecated = "On watchOS 9.0 or later, use WidgetKit instead"]
        #[unsafe(method(setImageProvider:))]
        #[unsafe(method_family = none)]
        pub unsafe fn setImageProvider(&self, image_provider: &CLKFullColorImageProvider);

        #[cfg(all(feature = "CLKFullColorImageProvider", feature = "CLKTextProvider"))]
        #[unsafe(method(initWithTextProvider:imageProvider:))]
        #[unsafe(method_family = init)]
        pub unsafe fn initWithTextProvider_imageProvider(
            this: Allocated<Self>,
            text_provider: &CLKTextProvider,
            image_provider: &CLKFullColorImageProvider,
        ) -> Retained<Self>;

        #[cfg(all(feature = "CLKFullColorImageProvider", feature = "CLKTextProvider"))]
        #[unsafe(method(templateWithTextProvider:imageProvider:))]
        #[unsafe(method_family = none)]
        pub unsafe fn templateWithTextProvider_imageProvider(
            text_provider: &CLKTextProvider,
            image_provider: &CLKFullColorImageProvider,
        ) -> Retained<Self>;
    );
}

/// Methods declared on superclass `CLKComplicationTemplate`.
impl CLKComplicationTemplateGraphicCornerTextImage {
    extern_methods!(
        #[deprecated = "Initializing a template without parameters is deprecated in watchOS 7.0. Use an init with parameters instead."]
        #[unsafe(method(init))]
        #[unsafe(method_family = init)]
        pub unsafe fn init(this: Allocated<Self>) -> Retained<Self>;

        #[deprecated = "Creating a template without parameters is deprecated in watchOS 7.0. Use a factory method with parameters instead."]
        #[unsafe(method(new))]
        #[unsafe(method_family = new)]
        pub unsafe fn new() -> Retained<Self>;
    );
}

extern_class!(
    /// [Apple's documentation](https://developer.apple.com/documentation/clockkit/clkcomplicationtemplategraphiccornerstacktext?language=objc)
    #[unsafe(super(CLKComplicationTemplate, NSObject))]
    #[derive(Debug, PartialEq, Eq, Hash)]
    #[deprecated = "On watchOS 9.0 or later, use WidgetKit instead"]
    pub struct CLKComplicationTemplateGraphicCornerStackText;
);

extern_conformance!(
    unsafe impl NSCopying for CLKComplicationTemplateGraphicCornerStackText {}
);

unsafe impl CopyingHelper for CLKComplicationTemplateGraphicCornerStackText {
    type Result = Self;
}

extern_conformance!(
    unsafe impl NSObjectProtocol for CLKComplicationTemplateGraphicCornerStackText {}
);

impl CLKComplicationTemplateGraphicCornerStackText {
    extern_methods!(
        #[cfg(feature = "CLKTextProvider")]
        #[deprecated = "On watchOS 9.0 or later, use WidgetKit instead"]
        #[unsafe(method(innerTextProvider))]
        #[unsafe(method_family = none)]
        pub unsafe fn innerTextProvider(&self) -> Retained<CLKTextProvider>;

        #[cfg(feature = "CLKTextProvider")]
        /// Setter for [`innerTextProvider`][Self::innerTextProvider].
        ///
        /// This is [copied][objc2_foundation::NSCopying::copy] when set.
        #[deprecated = "On watchOS 9.0 or later, use WidgetKit instead"]
        #[unsafe(method(setInnerTextProvider:))]
        #[unsafe(method_family = none)]
        pub unsafe fn setInnerTextProvider(&self, inner_text_provider: &CLKTextProvider);

        #[cfg(feature = "CLKTextProvider")]
        #[deprecated = "On watchOS 9.0 or later, use WidgetKit instead"]
        #[unsafe(method(outerTextProvider))]
        #[unsafe(method_family = none)]
        pub unsafe fn outerTextProvider(&self) -> Retained<CLKTextProvider>;

        #[cfg(feature = "CLKTextProvider")]
        /// Setter for [`outerTextProvider`][Self::outerTextProvider].
        ///
        /// This is [copied][objc2_foundation::NSCopying::copy] when set.
        #[deprecated = "On watchOS 9.0 or later, use WidgetKit instead"]
        #[unsafe(method(setOuterTextProvider:))]
        #[unsafe(method_family = none)]
        pub unsafe fn setOuterTextProvider(&self, outer_text_provider: &CLKTextProvider);

        #[cfg(feature = "CLKTextProvider")]
        #[unsafe(method(initWithInnerTextProvider:outerTextProvider:))]
        #[unsafe(method_family = init)]
        pub unsafe fn initWithInnerTextProvider_outerTextProvider(
            this: Allocated<Self>,
            inner_text_provider: &CLKTextProvider,
            outer_text_provider: &CLKTextProvider,
        ) -> Retained<Self>;

        #[cfg(feature = "CLKTextProvider")]
        #[unsafe(method(templateWithInnerTextProvider:outerTextProvider:))]
        #[unsafe(method_family = none)]
        pub unsafe fn templateWithInnerTextProvider_outerTextProvider(
            inner_text_provider: &CLKTextProvider,
            outer_text_provider: &CLKTextProvider,
        ) -> Retained<Self>;
    );
}

/// Methods declared on superclass `CLKComplicationTemplate`.
impl CLKComplicationTemplateGraphicCornerStackText {
    extern_methods!(
        #[deprecated = "Initializing a template without parameters is deprecated in watchOS 7.0. Use an init with parameters instead."]
        #[unsafe(method(init))]
        #[unsafe(method_family = init)]
        pub unsafe fn init(this: Allocated<Self>) -> Retained<Self>;

        #[deprecated = "Creating a template without parameters is deprecated in watchOS 7.0. Use a factory method with parameters instead."]
        #[unsafe(method(new))]
        #[unsafe(method_family = new)]
        pub unsafe fn new() -> Retained<Self>;
    );
}

extern_class!(
    /// [Apple's documentation](https://developer.apple.com/documentation/clockkit/clkcomplicationtemplategraphiccornercircularimage?language=objc)
    #[unsafe(super(CLKComplicationTemplate, NSObject))]
    #[derive(Debug, PartialEq, Eq, Hash)]
    #[deprecated = "On watchOS 9.0 or later, use WidgetKit instead"]
    pub struct CLKComplicationTemplateGraphicCornerCircularImage;
);

extern_conformance!(
    unsafe impl NSCopying for CLKComplicationTemplateGraphicCornerCircularImage {}
);

unsafe impl CopyingHelper for CLKComplicationTemplateGraphicCornerCircularImage {
    type Result = Self;
}

extern_conformance!(
    unsafe impl NSObjectProtocol for CLKComplicationTemplateGraphicCornerCircularImage {}
);

impl CLKComplicationTemplateGraphicCornerCircularImage {
    extern_methods!(
        #[cfg(feature = "CLKFullColorImageProvider")]
        #[deprecated = "On watchOS 9.0 or later, use WidgetKit instead"]
        #[unsafe(method(imageProvider))]
        #[unsafe(method_family = none)]
        pub unsafe fn imageProvider(&self) -> Retained<CLKFullColorImageProvider>;

        #[cfg(feature = "CLKFullColorImageProvider")]
        /// Setter for [`imageProvider`][Self::imageProvider].
        ///
        /// This is [copied][objc2_foundation::NSCopying::copy] when set.
        #[deprecated = "On watchOS 9.0 or later, use WidgetKit instead"]
        #[unsafe(method(setImageProvider:))]
        #[unsafe(method_family = none)]
        pub unsafe fn setImageProvider(&self, image_provider: &CLKFullColorImageProvider);

        #[cfg(feature = "CLKFullColorImageProvider")]
        #[unsafe(method(initWithImageProvider:))]
        #[unsafe(method_family = init)]
        pub unsafe fn initWithImageProvider(
            this: Allocated<Self>,
            image_provider: &CLKFullColorImageProvider,
        ) -> Retained<Self>;

        #[cfg(feature = "CLKFullColorImageProvider")]
        #[unsafe(method(templateWithImageProvider:))]
        #[unsafe(method_family = none)]
        pub unsafe fn templateWithImageProvider(
            image_provider: &CLKFullColorImageProvider,
        ) -> Retained<Self>;
    );
}

/// Methods declared on superclass `CLKComplicationTemplate`.
impl CLKComplicationTemplateGraphicCornerCircularImage {
    extern_methods!(
        #[deprecated = "Initializing a template without parameters is deprecated in watchOS 7.0. Use an init with parameters instead."]
        #[unsafe(method(init))]
        #[unsafe(method_family = init)]
        pub unsafe fn init(this: Allocated<Self>) -> Retained<Self>;

        #[deprecated = "Creating a template without parameters is deprecated in watchOS 7.0. Use a factory method with parameters instead."]
        #[unsafe(method(new))]
        #[unsafe(method_family = new)]
        pub unsafe fn new() -> Retained<Self>;
    );
}

extern_class!(
    /// [Apple's documentation](https://developer.apple.com/documentation/clockkit/clkcomplicationtemplategraphiccircular?language=objc)
    #[unsafe(super(CLKComplicationTemplate, NSObject))]
    #[derive(Debug, PartialEq, Eq, Hash)]
    #[deprecated = "On watchOS 9.0 or later, use WidgetKit instead"]
    pub struct CLKComplicationTemplateGraphicCircular;
);

extern_conformance!(
    unsafe impl NSCopying for CLKComplicationTemplateGraphicCircular {}
);

unsafe impl CopyingHelper for CLKComplicationTemplateGraphicCircular {
    type Result = Self;
}

extern_conformance!(
    unsafe impl NSObjectProtocol for CLKComplicationTemplateGraphicCircular {}
);

impl CLKComplicationTemplateGraphicCircular {
    extern_methods!();
}

/// Methods declared on superclass `CLKComplicationTemplate`.
impl CLKComplicationTemplateGraphicCircular {
    extern_methods!(
        #[deprecated = "Initializing a template without parameters is deprecated in watchOS 7.0. Use an init with parameters instead."]
        #[unsafe(method(init))]
        #[unsafe(method_family = init)]
        pub unsafe fn init(this: Allocated<Self>) -> Retained<Self>;

        #[deprecated = "Creating a template without parameters is deprecated in watchOS 7.0. Use a factory method with parameters instead."]
        #[unsafe(method(new))]
        #[unsafe(method_family = new)]
        pub unsafe fn new() -> Retained<Self>;
    );
}

extern_class!(
    /// [Apple's documentation](https://developer.apple.com/documentation/clockkit/clkcomplicationtemplategraphiccircularimage?language=objc)
    #[unsafe(super(
        CLKComplicationTemplateGraphicCircular,
        CLKComplicationTemplate,
        NSObject
    ))]
    #[derive(Debug, PartialEq, Eq, Hash)]
    #[deprecated = "On watchOS 9.0 or later, use WidgetKit instead"]
    pub struct CLKComplicationTemplateGraphicCircularImage;
);

extern_conformance!(
    unsafe impl NSCopying for CLKComplicationTemplateGraphicCircularImage {}
);

unsafe impl CopyingHelper for CLKComplicationTemplateGraphicCircularImage {
    type Result = Self;
}

extern_conformance!(
    unsafe impl NSObjectProtocol for CLKComplicationTemplateGraphicCircularImage {}
);

impl CLKComplicationTemplateGraphicCircularImage {
    extern_methods!(
        #[cfg(feature = "CLKFullColorImageProvider")]
        #[deprecated = "On watchOS 9.0 or later, use WidgetKit instead"]
        #[unsafe(method(imageProvider))]
        #[unsafe(method_family = none)]
        pub unsafe fn imageProvider(&self) -> Retained<CLKFullColorImageProvider>;

        #[cfg(feature = "CLKFullColorImageProvider")]
        /// Setter for [`imageProvider`][Self::imageProvider].
        ///
        /// This is [copied][objc2_foundation::NSCopying::copy] when set.
        #[deprecated = "On watchOS 9.0 or later, use WidgetKit instead"]
        #[unsafe(method(setImageProvider:))]
        #[unsafe(method_family = none)]
        pub unsafe fn setImageProvider(&self, image_provider: &CLKFullColorImageProvider);

        #[cfg(feature = "CLKFullColorImageProvider")]
        #[unsafe(method(initWithImageProvider:))]
        #[unsafe(method_family = init)]
        pub unsafe fn initWithImageProvider(
            this: Allocated<Self>,
            image_provider: &CLKFullColorImageProvider,
        ) -> Retained<Self>;

        #[cfg(feature = "CLKFullColorImageProvider")]
        #[unsafe(method(templateWithImageProvider:))]
        #[unsafe(method_family = none)]
        pub unsafe fn templateWithImageProvider(
            image_provider: &CLKFullColorImageProvider,
        ) -> Retained<Self>;
    );
}

/// Methods declared on superclass `CLKComplicationTemplate`.
impl CLKComplicationTemplateGraphicCircularImage {
    extern_methods!(
        #[deprecated = "Initializing a template without parameters is deprecated in watchOS 7.0. Use an init with parameters instead."]
        #[unsafe(method(init))]
        #[unsafe(method_family = init)]
        pub unsafe fn init(this: Allocated<Self>) -> Retained<Self>;

        #[deprecated = "Creating a template without parameters is deprecated in watchOS 7.0. Use a factory method with parameters instead."]
        #[unsafe(method(new))]
        #[unsafe(method_family = new)]
        pub unsafe fn new() -> Retained<Self>;
    );
}

extern_class!(
    /// [Apple's documentation](https://developer.apple.com/documentation/clockkit/clkcomplicationtemplategraphiccircularopengaugerangetext?language=objc)
    #[unsafe(super(
        CLKComplicationTemplateGraphicCircular,
        CLKComplicationTemplate,
        NSObject
    ))]
    #[derive(Debug, PartialEq, Eq, Hash)]
    #[deprecated = "On watchOS 9.0 or later, use WidgetKit instead"]
    pub struct CLKComplicationTemplateGraphicCircularOpenGaugeRangeText;
);

extern_conformance!(
    unsafe impl NSCopying for CLKComplicationTemplateGraphicCircularOpenGaugeRangeText {}
);

unsafe impl CopyingHelper for CLKComplicationTemplateGraphicCircularOpenGaugeRangeText {
    type Result = Self;
}

extern_conformance!(
    unsafe impl NSObjectProtocol for CLKComplicationTemplateGraphicCircularOpenGaugeRangeText {}
);

impl CLKComplicationTemplateGraphicCircularOpenGaugeRangeText {
    extern_methods!(
        #[cfg(feature = "CLKGaugeProvider")]
        #[deprecated = "On watchOS 9.0 or later, use WidgetKit instead"]
        #[unsafe(method(gaugeProvider))]
        #[unsafe(method_family = none)]
        pub unsafe fn gaugeProvider(&self) -> Retained<CLKGaugeProvider>;

        #[cfg(feature = "CLKGaugeProvider")]
        /// Setter for [`gaugeProvider`][Self::gaugeProvider].
        ///
        /// This is [copied][objc2_foundation::NSCopying::copy] when set.
        #[deprecated = "On watchOS 9.0 or later, use WidgetKit instead"]
        #[unsafe(method(setGaugeProvider:))]
        #[unsafe(method_family = none)]
        pub unsafe fn setGaugeProvider(&self, gauge_provider: &CLKGaugeProvider);

        #[cfg(feature = "CLKTextProvider")]
        #[deprecated = "On watchOS 9.0 or later, use WidgetKit instead"]
        #[unsafe(method(leadingTextProvider))]
        #[unsafe(method_family = none)]
        pub unsafe fn leadingTextProvider(&self) -> Retained<CLKTextProvider>;

        #[cfg(feature = "CLKTextProvider")]
        /// Setter for [`leadingTextProvider`][Self::leadingTextProvider].
        ///
        /// This is [copied][objc2_foundation::NSCopying::copy] when set.
        #[deprecated = "On watchOS 9.0 or later, use WidgetKit instead"]
        #[unsafe(method(setLeadingTextProvider:))]
        #[unsafe(method_family = none)]
        pub unsafe fn setLeadingTextProvider(&self, leading_text_provider: &CLKTextProvider);

        #[cfg(feature = "CLKTextProvider")]
        #[deprecated = "On watchOS 9.0 or later, use WidgetKit instead"]
        #[unsafe(method(trailingTextProvider))]
        #[unsafe(method_family = none)]
        pub unsafe fn trailingTextProvider(&self) -> Retained<CLKTextProvider>;

        #[cfg(feature = "CLKTextProvider")]
        /// Setter for [`trailingTextProvider`][Self::trailingTextProvider].
        ///
        /// This is [copied][objc2_foundation::NSCopying::copy] when set.
        #[deprecated = "On watchOS 9.0 or later, use WidgetKit instead"]
        #[unsafe(method(setTrailingTextProvider:))]
        #[unsafe(method_family = none)]
        pub unsafe fn setTrailingTextProvider(&self, trailing_text_provider: &CLKTextProvider);

        #[cfg(feature = "CLKTextProvider")]
        #[deprecated = "On watchOS 9.0 or later, use WidgetKit instead"]
        #[unsafe(method(centerTextProvider))]
        #[unsafe(method_family = none)]
        pub unsafe fn centerTextProvider(&self) -> Retained<CLKTextProvider>;

        #[cfg(feature = "CLKTextProvider")]
        /// Setter for [`centerTextProvider`][Self::centerTextProvider].
        ///
        /// This is [copied][objc2_foundation::NSCopying::copy] when set.
        #[deprecated = "On watchOS 9.0 or later, use WidgetKit instead"]
        #[unsafe(method(setCenterTextProvider:))]
        #[unsafe(method_family = none)]
        pub unsafe fn setCenterTextProvider(&self, center_text_provider: &CLKTextProvider);

        #[cfg(all(feature = "CLKGaugeProvider", feature = "CLKTextProvider"))]
        #[unsafe(method(initWithGaugeProvider:leadingTextProvider:trailingTextProvider:centerTextProvider:))]
        #[unsafe(method_family = init)]
        pub unsafe fn initWithGaugeProvider_leadingTextProvider_trailingTextProvider_centerTextProvider(
            this: Allocated<Self>,
            gauge_provider: &CLKGaugeProvider,
            leading_text_provider: &CLKTextProvider,
            trailing_text_provider: &CLKTextProvider,
            center_text_provider: &CLKTextProvider,
        ) -> Retained<Self>;

        #[cfg(all(feature = "CLKGaugeProvider", feature = "CLKTextProvider"))]
        #[unsafe(method(templateWithGaugeProvider:leadingTextProvider:trailingTextProvider:centerTextProvider:))]
        #[unsafe(method_family = none)]
        pub unsafe fn templateWithGaugeProvider_leadingTextProvider_trailingTextProvider_centerTextProvider(
            gauge_provider: &CLKGaugeProvider,
            leading_text_provider: &CLKTextProvider,
            trailing_text_provider: &CLKTextProvider,
            center_text_provider: &CLKTextProvider,
        ) -> Retained<Self>;
    );
}

/// Methods declared on superclass `CLKComplicationTemplate`.
impl CLKComplicationTemplateGraphicCircularOpenGaugeRangeText {
    extern_methods!(
        #[deprecated = "Initializing a template without parameters is deprecated in watchOS 7.0. Use an init with parameters instead."]
        #[unsafe(method(init))]
        #[unsafe(method_family = init)]
        pub unsafe fn init(this: Allocated<Self>) -> Retained<Self>;

        #[deprecated = "Creating a template without parameters is deprecated in watchOS 7.0. Use a factory method with parameters instead."]
        #[unsafe(method(new))]
        #[unsafe(method_family = new)]
        pub unsafe fn new() -> Retained<Self>;
    );
}

extern_class!(
    /// [Apple's documentation](https://developer.apple.com/documentation/clockkit/clkcomplicationtemplategraphiccircularopengaugesimpletext?language=objc)
    #[unsafe(super(
        CLKComplicationTemplateGraphicCircular,
        CLKComplicationTemplate,
        NSObject
    ))]
    #[derive(Debug, PartialEq, Eq, Hash)]
    #[deprecated = "On watchOS 9.0 or later, use WidgetKit instead"]
    pub struct CLKComplicationTemplateGraphicCircularOpenGaugeSimpleText;
);

extern_conformance!(
    unsafe impl NSCopying for CLKComplicationTemplateGraphicCircularOpenGaugeSimpleText {}
);

unsafe impl CopyingHelper for CLKComplicationTemplateGraphicCircularOpenGaugeSimpleText {
    type Result = Self;
}

extern_conformance!(
    unsafe impl NSObjectProtocol for CLKComplicationTemplateGraphicCircularOpenGaugeSimpleText {}
);

impl CLKComplicationTemplateGraphicCircularOpenGaugeSimpleText {
    extern_methods!(
        #[cfg(feature = "CLKGaugeProvider")]
        #[deprecated = "On watchOS 9.0 or later, use WidgetKit instead"]
        #[unsafe(method(gaugeProvider))]
        #[unsafe(method_family = none)]
        pub unsafe fn gaugeProvider(&self) -> Retained<CLKGaugeProvider>;

        #[cfg(feature = "CLKGaugeProvider")]
        /// Setter for [`gaugeProvider`][Self::gaugeProvider].
        ///
        /// This is [copied][objc2_foundation::NSCopying::copy] when set.
        #[deprecated = "On watchOS 9.0 or later, use WidgetKit instead"]
        #[unsafe(method(setGaugeProvider:))]
        #[unsafe(method_family = none)]
        pub unsafe fn setGaugeProvider(&self, gauge_provider: &CLKGaugeProvider);

        #[cfg(feature = "CLKTextProvider")]
        #[deprecated = "On watchOS 9.0 or later, use WidgetKit instead"]
        #[unsafe(method(bottomTextProvider))]
        #[unsafe(method_family = none)]
        pub unsafe fn bottomTextProvider(&self) -> Retained<CLKTextProvider>;

        #[cfg(feature = "CLKTextProvider")]
        /// Setter for [`bottomTextProvider`][Self::bottomTextProvider].
        ///
        /// This is [copied][objc2_foundation::NSCopying::copy] when set.
        #[deprecated = "On watchOS 9.0 or later, use WidgetKit instead"]
        #[unsafe(method(setBottomTextProvider:))]
        #[unsafe(method_family = none)]
        pub unsafe fn setBottomTextProvider(&self, bottom_text_provider: &CLKTextProvider);

        #[cfg(feature = "CLKTextProvider")]
        #[deprecated = "On watchOS 9.0 or later, use WidgetKit instead"]
        #[unsafe(method(centerTextProvider))]
        #[unsafe(method_family = none)]
        pub unsafe fn centerTextProvider(&self) -> Retained<CLKTextProvider>;

        #[cfg(feature = "CLKTextProvider")]
        /// Setter for [`centerTextProvider`][Self::centerTextProvider].
        ///
        /// This is [copied][objc2_foundation::NSCopying::copy] when set.
        #[deprecated = "On watchOS 9.0 or later, use WidgetKit instead"]
        #[unsafe(method(setCenterTextProvider:))]
        #[unsafe(method_family = none)]
        pub unsafe fn setCenterTextProvider(&self, center_text_provider: &CLKTextProvider);

        #[cfg(all(feature = "CLKGaugeProvider", feature = "CLKTextProvider"))]
        #[unsafe(method(initWithGaugeProvider:bottomTextProvider:centerTextProvider:))]
        #[unsafe(method_family = init)]
        pub unsafe fn initWithGaugeProvider_bottomTextProvider_centerTextProvider(
            this: Allocated<Self>,
            gauge_provider: &CLKGaugeProvider,
            bottom_text_provider: &CLKTextProvider,
            center_text_provider: &CLKTextProvider,
        ) -> Retained<Self>;

        #[cfg(all(feature = "CLKGaugeProvider", feature = "CLKTextProvider"))]
        #[unsafe(method(templateWithGaugeProvider:bottomTextProvider:centerTextProvider:))]
        #[unsafe(method_family = none)]
        pub unsafe fn templateWithGaugeProvider_bottomTextProvider_centerTextProvider(
            gauge_provider: &CLKGaugeProvider,
            bottom_text_provider: &CLKTextProvider,
            center_text_provider: &CLKTextProvider,
        ) -> Retained<Self>;
    );
}

/// Methods declared on superclass `CLKComplicationTemplate`.
impl CLKComplicationTemplateGraphicCircularOpenGaugeSimpleText {
    extern_methods!(
        #[deprecated = "Initializing a template without parameters is deprecated in watchOS 7.0. Use an init with parameters instead."]
        #[unsafe(method(init))]
        #[unsafe(method_family = init)]
        pub unsafe fn init(this: Allocated<Self>) -> Retained<Self>;

        #[deprecated = "Creating a template without parameters is deprecated in watchOS 7.0. Use a factory method with parameters instead."]
        #[unsafe(method(new))]
        #[unsafe(method_family = new)]
        pub unsafe fn new() -> Retained<Self>;
    );
}

extern_class!(
    /// [Apple's documentation](https://developer.apple.com/documentation/clockkit/clkcomplicationtemplategraphiccircularopengaugeimage?language=objc)
    #[unsafe(super(
        CLKComplicationTemplateGraphicCircular,
        CLKComplicationTemplate,
        NSObject
    ))]
    #[derive(Debug, PartialEq, Eq, Hash)]
    #[deprecated = "On watchOS 9.0 or later, use WidgetKit instead"]
    pub struct CLKComplicationTemplateGraphicCircularOpenGaugeImage;
);

extern_conformance!(
    unsafe impl NSCopying for CLKComplicationTemplateGraphicCircularOpenGaugeImage {}
);

unsafe impl CopyingHelper for CLKComplicationTemplateGraphicCircularOpenGaugeImage {
    type Result = Self;
}

extern_conformance!(
    unsafe impl NSObjectProtocol for CLKComplicationTemplateGraphicCircularOpenGaugeImage {}
);

impl CLKComplicationTemplateGraphicCircularOpenGaugeImage {
    extern_methods!(
        #[cfg(feature = "CLKGaugeProvider")]
        #[deprecated = "On watchOS 9.0 or later, use WidgetKit instead"]
        #[unsafe(method(gaugeProvider))]
        #[unsafe(method_family = none)]
        pub unsafe fn gaugeProvider(&self) -> Retained<CLKGaugeProvider>;

        #[cfg(feature = "CLKGaugeProvider")]
        /// Setter for [`gaugeProvider`][Self::gaugeProvider].
        ///
        /// This is [copied][objc2_foundation::NSCopying::copy] when set.
        #[deprecated = "On watchOS 9.0 or later, use WidgetKit instead"]
        #[unsafe(method(setGaugeProvider:))]
        #[unsafe(method_family = none)]
        pub unsafe fn setGaugeProvider(&self, gauge_provider: &CLKGaugeProvider);

        #[cfg(feature = "CLKFullColorImageProvider")]
        #[deprecated = "On watchOS 9.0 or later, use WidgetKit instead"]
        #[unsafe(method(bottomImageProvider))]
        #[unsafe(method_family = none)]
        pub unsafe fn bottomImageProvider(&self) -> Retained<CLKFullColorImageProvider>;

        #[cfg(feature = "CLKFullColorImageProvider")]
        /// Setter for [`bottomImageProvider`][Self::bottomImageProvider].
        ///
        /// This is [copied][objc2_foundation::NSCopying::copy] when set.
        #[deprecated = "On watchOS 9.0 or later, use WidgetKit instead"]
        #[unsafe(method(setBottomImageProvider:))]
        #[unsafe(method_family = none)]
        pub unsafe fn setBottomImageProvider(
            &self,
            bottom_image_provider: &CLKFullColorImageProvider,
        );

        #[cfg(feature = "CLKTextProvider")]
        #[deprecated = "On watchOS 9.0 or later, use WidgetKit instead"]
        #[unsafe(method(centerTextProvider))]
        #[unsafe(method_family = none)]
        pub unsafe fn centerTextProvider(&self) -> Retained<CLKTextProvider>;

        #[cfg(feature = "CLKTextProvider")]
        /// Setter for [`centerTextProvider`][Self::centerTextProvider].
        ///
        /// This is [copied][objc2_foundation::NSCopying::copy] when set.
        #[deprecated = "On watchOS 9.0 or later, use WidgetKit instead"]
        #[unsafe(method(setCenterTextProvider:))]
        #[unsafe(method_family = none)]
        pub unsafe fn setCenterTextProvider(&self, center_text_provider: &CLKTextProvider);

        #[cfg(all(
            feature = "CLKFullColorImageProvider",
            feature = "CLKGaugeProvider",
            feature = "CLKTextProvider"
        ))]
        #[unsafe(method(initWithGaugeProvider:bottomImageProvider:centerTextProvider:))]
        #[unsafe(method_family = init)]
        pub unsafe fn initWithGaugeProvider_bottomImageProvider_centerTextProvider(
            this: Allocated<Self>,
            gauge_provider: &CLKGaugeProvider,
            bottom_image_provider: &CLKFullColorImageProvider,
            center_text_provider: &CLKTextProvider,
        ) -> Retained<Self>;

        #[cfg(all(
            feature = "CLKFullColorImageProvider",
            feature = "CLKGaugeProvider",
            feature = "CLKTextProvider"
        ))]
        #[unsafe(method(templateWithGaugeProvider:bottomImageProvider:centerTextProvider:))]
        #[unsafe(method_family = none)]
        pub unsafe fn templateWithGaugeProvider_bottomImageProvider_centerTextProvider(
            gauge_provider: &CLKGaugeProvider,
            bottom_image_provider: &CLKFullColorImageProvider,
            center_text_provider: &CLKTextProvider,
        ) -> Retained<Self>;
    );
}

/// Methods declared on superclass `CLKComplicationTemplate`.
impl CLKComplicationTemplateGraphicCircularOpenGaugeImage {
    extern_methods!(
        #[deprecated = "Initializing a template without parameters is deprecated in watchOS 7.0. Use an init with parameters instead."]
        #[unsafe(method(init))]
        #[unsafe(method_family = init)]
        pub unsafe fn init(this: Allocated<Self>) -> Retained<Self>;

        #[deprecated = "Creating a template without parameters is deprecated in watchOS 7.0. Use a factory method with parameters instead."]
        #[unsafe(method(new))]
        #[unsafe(method_family = new)]
        pub unsafe fn new() -> Retained<Self>;
    );
}

extern_class!(
    /// [Apple's documentation](https://developer.apple.com/documentation/clockkit/clkcomplicationtemplategraphiccircularclosedgaugetext?language=objc)
    #[unsafe(super(
        CLKComplicationTemplateGraphicCircular,
        CLKComplicationTemplate,
        NSObject
    ))]
    #[derive(Debug, PartialEq, Eq, Hash)]
    #[deprecated = "On watchOS 9.0 or later, use WidgetKit instead"]
    pub struct CLKComplicationTemplateGraphicCircularClosedGaugeText;
);

extern_conformance!(
    unsafe impl NSCopying for CLKComplicationTemplateGraphicCircularClosedGaugeText {}
);

unsafe impl CopyingHelper for CLKComplicationTemplateGraphicCircularClosedGaugeText {
    type Result = Self;
}

extern_conformance!(
    unsafe impl NSObjectProtocol for CLKComplicationTemplateGraphicCircularClosedGaugeText {}
);

impl CLKComplicationTemplateGraphicCircularClosedGaugeText {
    extern_methods!(
        #[cfg(feature = "CLKGaugeProvider")]
        #[deprecated = "On watchOS 9.0 or later, use WidgetKit instead"]
        #[unsafe(method(gaugeProvider))]
        #[unsafe(method_family = none)]
        pub unsafe fn gaugeProvider(&self) -> Retained<CLKGaugeProvider>;

        #[cfg(feature = "CLKGaugeProvider")]
        /// Setter for [`gaugeProvider`][Self::gaugeProvider].
        ///
        /// This is [copied][objc2_foundation::NSCopying::copy] when set.
        #[deprecated = "On watchOS 9.0 or later, use WidgetKit instead"]
        #[unsafe(method(setGaugeProvider:))]
        #[unsafe(method_family = none)]
        pub unsafe fn setGaugeProvider(&self, gauge_provider: &CLKGaugeProvider);

        #[cfg(feature = "CLKTextProvider")]
        #[deprecated = "On watchOS 9.0 or later, use WidgetKit instead"]
        #[unsafe(method(centerTextProvider))]
        #[unsafe(method_family = none)]
        pub unsafe fn centerTextProvider(&self) -> Retained<CLKTextProvider>;

        #[cfg(feature = "CLKTextProvider")]
        /// Setter for [`centerTextProvider`][Self::centerTextProvider].
        ///
        /// This is [copied][objc2_foundation::NSCopying::copy] when set.
        #[deprecated = "On watchOS 9.0 or later, use WidgetKit instead"]
        #[unsafe(method(setCenterTextProvider:))]
        #[unsafe(method_family = none)]
        pub unsafe fn setCenterTextProvider(&self, center_text_provider: &CLKTextProvider);

        #[cfg(all(feature = "CLKGaugeProvider", feature = "CLKTextProvider"))]
        #[unsafe(method(initWithGaugeProvider:centerTextProvider:))]
        #[unsafe(method_family = init)]
        pub unsafe fn initWithGaugeProvider_centerTextProvider(
            this: Allocated<Self>,
            gauge_provider: &CLKGaugeProvider,
            center_text_provider: &CLKTextProvider,
        ) -> Retained<Self>;

        #[cfg(all(feature = "CLKGaugeProvider", feature = "CLKTextProvider"))]
        #[unsafe(method(templateWithGaugeProvider:centerTextProvider:))]
        #[unsafe(method_family = none)]
        pub unsafe fn templateWithGaugeProvider_centerTextProvider(
            gauge_provider: &CLKGaugeProvider,
            center_text_provider: &CLKTextProvider,
        ) -> Retained<Self>;
    );
}

/// Methods declared on superclass `CLKComplicationTemplate`.
impl CLKComplicationTemplateGraphicCircularClosedGaugeText {
    extern_methods!(
        #[deprecated = "Initializing a template without parameters is deprecated in watchOS 7.0. Use an init with parameters instead."]
        #[unsafe(method(init))]
        #[unsafe(method_family = init)]
        pub unsafe fn init(this: Allocated<Self>) -> Retained<Self>;

        #[deprecated = "Creating a template without parameters is deprecated in watchOS 7.0. Use a factory method with parameters instead."]
        #[unsafe(method(new))]
        #[unsafe(method_family = new)]
        pub unsafe fn new() -> Retained<Self>;
    );
}

extern_class!(
    /// [Apple's documentation](https://developer.apple.com/documentation/clockkit/clkcomplicationtemplategraphiccircularclosedgaugeimage?language=objc)
    #[unsafe(super(
        CLKComplicationTemplateGraphicCircular,
        CLKComplicationTemplate,
        NSObject
    ))]
    #[derive(Debug, PartialEq, Eq, Hash)]
    #[deprecated = "On watchOS 9.0 or later, use WidgetKit instead"]
    pub struct CLKComplicationTemplateGraphicCircularClosedGaugeImage;
);

extern_conformance!(
    unsafe impl NSCopying for CLKComplicationTemplateGraphicCircularClosedGaugeImage {}
);

unsafe impl CopyingHelper for CLKComplicationTemplateGraphicCircularClosedGaugeImage {
    type Result = Self;
}

extern_conformance!(
    unsafe impl NSObjectProtocol for CLKComplicationTemplateGraphicCircularClosedGaugeImage {}
);

impl CLKComplicationTemplateGraphicCircularClosedGaugeImage {
    extern_methods!(
        #[cfg(feature = "CLKGaugeProvider")]
        #[deprecated = "On watchOS 9.0 or later, use WidgetKit instead"]
        #[unsafe(method(gaugeProvider))]
        #[unsafe(method_family = none)]
        pub unsafe fn gaugeProvider(&self) -> Retained<CLKGaugeProvider>;

        #[cfg(feature = "CLKGaugeProvider")]
        /// Setter for [`gaugeProvider`][Self::gaugeProvider].
        ///
        /// This is [copied][objc2_foundation::NSCopying::copy] when set.
        #[deprecated = "On watchOS 9.0 or later, use WidgetKit instead"]
        #[unsafe(method(setGaugeProvider:))]
        #[unsafe(method_family = none)]
        pub unsafe fn setGaugeProvider(&self, gauge_provider: &CLKGaugeProvider);

        #[cfg(feature = "CLKFullColorImageProvider")]
        #[deprecated = "On watchOS 9.0 or later, use WidgetKit instead"]
        #[unsafe(method(imageProvider))]
        #[unsafe(method_family = none)]
        pub unsafe fn imageProvider(&self) -> Retained<CLKFullColorImageProvider>;

        #[cfg(feature = "CLKFullColorImageProvider")]
        /// Setter for [`imageProvider`][Self::imageProvider].
        ///
        /// This is [copied][objc2_foundation::NSCopying::copy] when set.
        #[deprecated = "On watchOS 9.0 or later, use WidgetKit instead"]
        #[unsafe(method(setImageProvider:))]
        #[unsafe(method_family = none)]
        pub unsafe fn setImageProvider(&self, image_provider: &CLKFullColorImageProvider);

        #[cfg(all(feature = "CLKFullColorImageProvider", feature = "CLKGaugeProvider"))]
        #[unsafe(method(initWithGaugeProvider:imageProvider:))]
        #[unsafe(method_family = init)]
        pub unsafe fn initWithGaugeProvider_imageProvider(
            this: Allocated<Self>,
            gauge_provider: &CLKGaugeProvider,
            image_provider: &CLKFullColorImageProvider,
        ) -> Retained<Self>;

        #[cfg(all(feature = "CLKFullColorImageProvider", feature = "CLKGaugeProvider"))]
        #[unsafe(method(templateWithGaugeProvider:imageProvider:))]
        #[unsafe(method_family = none)]
        pub unsafe fn templateWithGaugeProvider_imageProvider(
            gauge_provider: &CLKGaugeProvider,
            image_provider: &CLKFullColorImageProvider,
        ) -> Retained<Self>;
    );
}

/// Methods declared on superclass `CLKComplicationTemplate`.
impl CLKComplicationTemplateGraphicCircularClosedGaugeImage {
    extern_methods!(
        #[deprecated = "Initializing a template without parameters is deprecated in watchOS 7.0. Use an init with parameters instead."]
        #[unsafe(method(init))]
        #[unsafe(method_family = init)]
        pub unsafe fn init(this: Allocated<Self>) -> Retained<Self>;

        #[deprecated = "Creating a template without parameters is deprecated in watchOS 7.0. Use a factory method with parameters instead."]
        #[unsafe(method(new))]
        #[unsafe(method_family = new)]
        pub unsafe fn new() -> Retained<Self>;
    );
}

extern_class!(
    /// [Apple's documentation](https://developer.apple.com/documentation/clockkit/clkcomplicationtemplategraphiccircularstacktext?language=objc)
    #[unsafe(super(
        CLKComplicationTemplateGraphicCircular,
        CLKComplicationTemplate,
        NSObject
    ))]
    #[derive(Debug, PartialEq, Eq, Hash)]
    #[deprecated = "On watchOS 9.0 or later, use WidgetKit instead"]
    pub struct CLKComplicationTemplateGraphicCircularStackText;
);

extern_conformance!(
    unsafe impl NSCopying for CLKComplicationTemplateGraphicCircularStackText {}
);

unsafe impl CopyingHelper for CLKComplicationTemplateGraphicCircularStackText {
    type Result = Self;
}

extern_conformance!(
    unsafe impl NSObjectProtocol for CLKComplicationTemplateGraphicCircularStackText {}
);

impl CLKComplicationTemplateGraphicCircularStackText {
    extern_methods!(
        #[cfg(feature = "CLKTextProvider")]
        #[deprecated = "On watchOS 9.0 or later, use WidgetKit instead"]
        #[unsafe(method(line1TextProvider))]
        #[unsafe(method_family = none)]
        pub unsafe fn line1TextProvider(&self) -> Retained<CLKTextProvider>;

        #[cfg(feature = "CLKTextProvider")]
        /// Setter for [`line1TextProvider`][Self::line1TextProvider].
        ///
        /// This is [copied][objc2_foundation::NSCopying::copy] when set.
        #[deprecated = "On watchOS 9.0 or later, use WidgetKit instead"]
        #[unsafe(method(setLine1TextProvider:))]
        #[unsafe(method_family = none)]
        pub unsafe fn setLine1TextProvider(&self, line1_text_provider: &CLKTextProvider);

        #[cfg(feature = "CLKTextProvider")]
        #[deprecated = "On watchOS 9.0 or later, use WidgetKit instead"]
        #[unsafe(method(line2TextProvider))]
        #[unsafe(method_family = none)]
        pub unsafe fn line2TextProvider(&self) -> Retained<CLKTextProvider>;

        #[cfg(feature = "CLKTextProvider")]
        /// Setter for [`line2TextProvider`][Self::line2TextProvider].
        ///
        /// This is [copied][objc2_foundation::NSCopying::copy] when set.
        #[deprecated = "On watchOS 9.0 or later, use WidgetKit instead"]
        #[unsafe(method(setLine2TextProvider:))]
        #[unsafe(method_family = none)]
        pub unsafe fn setLine2TextProvider(&self, line2_text_provider: &CLKTextProvider);

        #[cfg(feature = "CLKTextProvider")]
        #[unsafe(method(initWithLine1TextProvider:line2TextProvider:))]
        #[unsafe(method_family = init)]
        pub unsafe fn initWithLine1TextProvider_line2TextProvider(
            this: Allocated<Self>,
            line1_text_provider: &CLKTextProvider,
            line2_text_provider: &CLKTextProvider,
        ) -> Retained<Self>;

        #[cfg(feature = "CLKTextProvider")]
        #[unsafe(method(templateWithLine1TextProvider:line2TextProvider:))]
        #[unsafe(method_family = none)]
        pub unsafe fn templateWithLine1TextProvider_line2TextProvider(
            line1_text_provider: &CLKTextProvider,
            line2_text_provider: &CLKTextProvider,
        ) -> Retained<Self>;
    );
}

/// Methods declared on superclass `CLKComplicationTemplate`.
impl CLKComplicationTemplateGraphicCircularStackText {
    extern_methods!(
        #[deprecated = "Initializing a template without parameters is deprecated in watchOS 7.0. Use an init with parameters instead."]
        #[unsafe(method(init))]
        #[unsafe(method_family = init)]
        pub unsafe fn init(this: Allocated<Self>) -> Retained<Self>;

        #[deprecated = "Creating a template without parameters is deprecated in watchOS 7.0. Use a factory method with parameters instead."]
        #[unsafe(method(new))]
        #[unsafe(method_family = new)]
        pub unsafe fn new() -> Retained<Self>;
    );
}

extern_class!(
    /// [Apple's documentation](https://developer.apple.com/documentation/clockkit/clkcomplicationtemplategraphiccircularstackimage?language=objc)
    #[unsafe(super(
        CLKComplicationTemplateGraphicCircular,
        CLKComplicationTemplate,
        NSObject
    ))]
    #[derive(Debug, PartialEq, Eq, Hash)]
    #[deprecated = "On watchOS 9.0 or later, use WidgetKit instead"]
    pub struct CLKComplicationTemplateGraphicCircularStackImage;
);

extern_conformance!(
    unsafe impl NSCopying for CLKComplicationTemplateGraphicCircularStackImage {}
);

unsafe impl CopyingHelper for CLKComplicationTemplateGraphicCircularStackImage {
    type Result = Self;
}

extern_conformance!(
    unsafe impl NSObjectProtocol for CLKComplicationTemplateGraphicCircularStackImage {}
);

impl CLKComplicationTemplateGraphicCircularStackImage {
    extern_methods!(
        #[cfg(feature = "CLKFullColorImageProvider")]
        #[deprecated = "On watchOS 9.0 or later, use WidgetKit instead"]
        #[unsafe(method(line1ImageProvider))]
        #[unsafe(method_family = none)]
        pub unsafe fn line1ImageProvider(&self) -> Retained<CLKFullColorImageProvider>;

        #[cfg(feature = "CLKFullColorImageProvider")]
        /// Setter for [`line1ImageProvider`][Self::line1ImageProvider].
        ///
        /// This is [copied][objc2_foundation::NSCopying::copy] when set.
        #[deprecated = "On watchOS 9.0 or later, use WidgetKit instead"]
        #[unsafe(method(setLine1ImageProvider:))]
        #[unsafe(method_family = none)]
        pub unsafe fn setLine1ImageProvider(
            &self,
            line1_image_provider: &CLKFullColorImageProvider,
        );

        #[cfg(feature = "CLKTextProvider")]
        #[deprecated = "On watchOS 9.0 or later, use WidgetKit instead"]
        #[unsafe(method(line2TextProvider))]
        #[unsafe(method_family = none)]
        pub unsafe fn line2TextProvider(&self) -> Retained<CLKTextProvider>;

        #[cfg(feature = "CLKTextProvider")]
        /// Setter for [`line2TextProvider`][Self::line2TextProvider].
        ///
        /// This is [copied][objc2_foundation::NSCopying::copy] when set.
        #[deprecated = "On watchOS 9.0 or later, use WidgetKit instead"]
        #[unsafe(method(setLine2TextProvider:))]
        #[unsafe(method_family = none)]
        pub unsafe fn setLine2TextProvider(&self, line2_text_provider: &CLKTextProvider);

        #[cfg(all(feature = "CLKFullColorImageProvider", feature = "CLKTextProvider"))]
        #[unsafe(method(initWithLine1ImageProvider:line2TextProvider:))]
        #[unsafe(method_family = init)]
        pub unsafe fn initWithLine1ImageProvider_line2TextProvider(
            this: Allocated<Self>,
            line1_image_provider: &CLKFullColorImageProvider,
            line2_text_provider: &CLKTextProvider,
        ) -> Retained<Self>;

        #[cfg(all(feature = "CLKFullColorImageProvider", feature = "CLKTextProvider"))]
        #[unsafe(method(templateWithLine1ImageProvider:line2TextProvider:))]
        #[unsafe(method_family = none)]
        pub unsafe fn templateWithLine1ImageProvider_line2TextProvider(
            line1_image_provider: &CLKFullColorImageProvider,
            line2_text_provider: &CLKTextProvider,
        ) -> Retained<Self>;
    );
}

/// Methods declared on superclass `CLKComplicationTemplate`.
impl CLKComplicationTemplateGraphicCircularStackImage {
    extern_methods!(
        #[deprecated = "Initializing a template without parameters is deprecated in watchOS 7.0. Use an init with parameters instead."]
        #[unsafe(method(init))]
        #[unsafe(method_family = init)]
        pub unsafe fn init(this: Allocated<Self>) -> Retained<Self>;

        #[deprecated = "Creating a template without parameters is deprecated in watchOS 7.0. Use a factory method with parameters instead."]
        #[unsafe(method(new))]
        #[unsafe(method_family = new)]
        pub unsafe fn new() -> Retained<Self>;
    );
}

extern_class!(
    /// [Apple's documentation](https://developer.apple.com/documentation/clockkit/clkcomplicationtemplategraphicbezelcirculartext?language=objc)
    #[unsafe(super(CLKComplicationTemplate, NSObject))]
    #[derive(Debug, PartialEq, Eq, Hash)]
    #[deprecated = "On watchOS 9.0 or later, use WidgetKit instead"]
    pub struct CLKComplicationTemplateGraphicBezelCircularText;
);

extern_conformance!(
    unsafe impl NSCopying for CLKComplicationTemplateGraphicBezelCircularText {}
);

unsafe impl CopyingHelper for CLKComplicationTemplateGraphicBezelCircularText {
    type Result = Self;
}

extern_conformance!(
    unsafe impl NSObjectProtocol for CLKComplicationTemplateGraphicBezelCircularText {}
);

impl CLKComplicationTemplateGraphicBezelCircularText {
    extern_methods!(
        #[deprecated = "On watchOS 9.0 or later, use WidgetKit instead"]
        #[unsafe(method(circularTemplate))]
        #[unsafe(method_family = none)]
        pub unsafe fn circularTemplate(&self) -> Retained<CLKComplicationTemplateGraphicCircular>;

        /// Setter for [`circularTemplate`][Self::circularTemplate].
        ///
        /// This is [copied][objc2_foundation::NSCopying::copy] when set.
        #[deprecated = "On watchOS 9.0 or later, use WidgetKit instead"]
        #[unsafe(method(setCircularTemplate:))]
        #[unsafe(method_family = none)]
        pub unsafe fn setCircularTemplate(
            &self,
            circular_template: &CLKComplicationTemplateGraphicCircular,
        );

        #[cfg(feature = "CLKTextProvider")]
        #[deprecated = "On watchOS 9.0 or later, use WidgetKit instead"]
        #[unsafe(method(textProvider))]
        #[unsafe(method_family = none)]
        pub unsafe fn textProvider(&self) -> Option<Retained<CLKTextProvider>>;

        #[cfg(feature = "CLKTextProvider")]
        /// Setter for [`textProvider`][Self::textProvider].
        ///
        /// This is [copied][objc2_foundation::NSCopying::copy] when set.
        #[deprecated = "On watchOS 9.0 or later, use WidgetKit instead"]
        #[unsafe(method(setTextProvider:))]
        #[unsafe(method_family = none)]
        pub unsafe fn setTextProvider(&self, text_provider: Option<&CLKTextProvider>);

        #[unsafe(method(initWithCircularTemplate:))]
        #[unsafe(method_family = init)]
        pub unsafe fn initWithCircularTemplate(
            this: Allocated<Self>,
            circular_template: &CLKComplicationTemplateGraphicCircular,
        ) -> Retained<Self>;

        #[cfg(feature = "CLKTextProvider")]
        #[unsafe(method(initWithCircularTemplate:textProvider:))]
        #[unsafe(method_family = init)]
        pub unsafe fn initWithCircularTemplate_textProvider(
            this: Allocated<Self>,
            circular_template: &CLKComplicationTemplateGraphicCircular,
            text_provider: Option<&CLKTextProvider>,
        ) -> Retained<Self>;

        #[unsafe(method(templateWithCircularTemplate:))]
        #[unsafe(method_family = none)]
        pub unsafe fn templateWithCircularTemplate(
            circular_template: &CLKComplicationTemplateGraphicCircular,
        ) -> Retained<Self>;

        #[cfg(feature = "CLKTextProvider")]
        #[unsafe(method(templateWithCircularTemplate:textProvider:))]
        #[unsafe(method_family = none)]
        pub unsafe fn templateWithCircularTemplate_textProvider(
            circular_template: &CLKComplicationTemplateGraphicCircular,
            text_provider: Option<&CLKTextProvider>,
        ) -> Retained<Self>;
    );
}

/// Methods declared on superclass `CLKComplicationTemplate`.
impl CLKComplicationTemplateGraphicBezelCircularText {
    extern_methods!(
        #[deprecated = "Initializing a template without parameters is deprecated in watchOS 7.0. Use an init with parameters instead."]
        #[unsafe(method(init))]
        #[unsafe(method_family = init)]
        pub unsafe fn init(this: Allocated<Self>) -> Retained<Self>;

        #[deprecated = "Creating a template without parameters is deprecated in watchOS 7.0. Use a factory method with parameters instead."]
        #[unsafe(method(new))]
        #[unsafe(method_family = new)]
        pub unsafe fn new() -> Retained<Self>;
    );
}

extern_class!(
    /// [Apple's documentation](https://developer.apple.com/documentation/clockkit/clkcomplicationtemplategraphicrectangularfullimage?language=objc)
    #[unsafe(super(CLKComplicationTemplate, NSObject))]
    #[derive(Debug, PartialEq, Eq, Hash)]
    #[deprecated = "On watchOS 9.0 or later, use WidgetKit instead"]
    pub struct CLKComplicationTemplateGraphicRectangularFullImage;
);

extern_conformance!(
    unsafe impl NSCopying for CLKComplicationTemplateGraphicRectangularFullImage {}
);

unsafe impl CopyingHelper for CLKComplicationTemplateGraphicRectangularFullImage {
    type Result = Self;
}

extern_conformance!(
    unsafe impl NSObjectProtocol for CLKComplicationTemplateGraphicRectangularFullImage {}
);

impl CLKComplicationTemplateGraphicRectangularFullImage {
    extern_methods!(
        #[cfg(feature = "CLKFullColorImageProvider")]
        #[deprecated = "On watchOS 9.0 or later, use WidgetKit instead"]
        #[unsafe(method(imageProvider))]
        #[unsafe(method_family = none)]
        pub unsafe fn imageProvider(&self) -> Retained<CLKFullColorImageProvider>;

        #[cfg(feature = "CLKFullColorImageProvider")]
        /// Setter for [`imageProvider`][Self::imageProvider].
        ///
        /// This is [copied][objc2_foundation::NSCopying::copy] when set.
        #[deprecated = "On watchOS 9.0 or later, use WidgetKit instead"]
        #[unsafe(method(setImageProvider:))]
        #[unsafe(method_family = none)]
        pub unsafe fn setImageProvider(&self, image_provider: &CLKFullColorImageProvider);

        #[cfg(feature = "CLKFullColorImageProvider")]
        #[unsafe(method(initWithImageProvider:))]
        #[unsafe(method_family = init)]
        pub unsafe fn initWithImageProvider(
            this: Allocated<Self>,
            image_provider: &CLKFullColorImageProvider,
        ) -> Retained<Self>;

        #[cfg(feature = "CLKFullColorImageProvider")]
        #[unsafe(method(templateWithImageProvider:))]
        #[unsafe(method_family = none)]
        pub unsafe fn templateWithImageProvider(
            image_provider: &CLKFullColorImageProvider,
        ) -> Retained<Self>;
    );
}

/// Methods declared on superclass `CLKComplicationTemplate`.
impl CLKComplicationTemplateGraphicRectangularFullImage {
    extern_methods!(
        #[deprecated = "Initializing a template without parameters is deprecated in watchOS 7.0. Use an init with parameters instead."]
        #[unsafe(method(init))]
        #[unsafe(method_family = init)]
        pub unsafe fn init(this: Allocated<Self>) -> Retained<Self>;

        #[deprecated = "Creating a template without parameters is deprecated in watchOS 7.0. Use a factory method with parameters instead."]
        #[unsafe(method(new))]
        #[unsafe(method_family = new)]
        pub unsafe fn new() -> Retained<Self>;
    );
}

extern_class!(
    /// [Apple's documentation](https://developer.apple.com/documentation/clockkit/clkcomplicationtemplategraphicrectangularlargeimage?language=objc)
    #[unsafe(super(CLKComplicationTemplate, NSObject))]
    #[derive(Debug, PartialEq, Eq, Hash)]
    #[deprecated = "On watchOS 9.0 or later, use WidgetKit instead"]
    pub struct CLKComplicationTemplateGraphicRectangularLargeImage;
);

extern_conformance!(
    unsafe impl NSCopying for CLKComplicationTemplateGraphicRectangularLargeImage {}
);

unsafe impl CopyingHelper for CLKComplicationTemplateGraphicRectangularLargeImage {
    type Result = Self;
}

extern_conformance!(
    unsafe impl NSObjectProtocol for CLKComplicationTemplateGraphicRectangularLargeImage {}
);

impl CLKComplicationTemplateGraphicRectangularLargeImage {
    extern_methods!(
        #[cfg(feature = "CLKTextProvider")]
        #[deprecated = "On watchOS 9.0 or later, use WidgetKit instead"]
        #[unsafe(method(textProvider))]
        #[unsafe(method_family = none)]
        pub unsafe fn textProvider(&self) -> Retained<CLKTextProvider>;

        #[cfg(feature = "CLKTextProvider")]
        /// Setter for [`textProvider`][Self::textProvider].
        ///
        /// This is [copied][objc2_foundation::NSCopying::copy] when set.
        #[deprecated = "On watchOS 9.0 or later, use WidgetKit instead"]
        #[unsafe(method(setTextProvider:))]
        #[unsafe(method_family = none)]
        pub unsafe fn setTextProvider(&self, text_provider: &CLKTextProvider);

        #[cfg(feature = "CLKFullColorImageProvider")]
        #[deprecated = "On watchOS 9.0 or later, use WidgetKit instead"]
        #[unsafe(method(imageProvider))]
        #[unsafe(method_family = none)]
        pub unsafe fn imageProvider(&self) -> Retained<CLKFullColorImageProvider>;

        #[cfg(feature = "CLKFullColorImageProvider")]
        /// Setter for [`imageProvider`][Self::imageProvider].
        ///
        /// This is [copied][objc2_foundation::NSCopying::copy] when set.
        #[deprecated = "On watchOS 9.0 or later, use WidgetKit instead"]
        #[unsafe(method(setImageProvider:))]
        #[unsafe(method_family = none)]
        pub unsafe fn setImageProvider(&self, image_provider: &CLKFullColorImageProvider);

        #[cfg(all(feature = "CLKFullColorImageProvider", feature = "CLKTextProvider"))]
        #[unsafe(method(initWithTextProvider:imageProvider:))]
        #[unsafe(method_family = init)]
        pub unsafe fn initWithTextProvider_imageProvider(
            this: Allocated<Self>,
            text_provider: &CLKTextProvider,
            image_provider: &CLKFullColorImageProvider,
        ) -> Retained<Self>;

        #[cfg(all(feature = "CLKFullColorImageProvider", feature = "CLKTextProvider"))]
        #[unsafe(method(templateWithTextProvider:imageProvider:))]
        #[unsafe(method_family = none)]
        pub unsafe fn templateWithTextProvider_imageProvider(
            text_provider: &CLKTextProvider,
            image_provider: &CLKFullColorImageProvider,
        ) -> Retained<Self>;
    );
}

/// Methods declared on superclass `CLKComplicationTemplate`.
impl CLKComplicationTemplateGraphicRectangularLargeImage {
    extern_methods!(
        #[deprecated = "Initializing a template without parameters is deprecated in watchOS 7.0. Use an init with parameters instead."]
        #[unsafe(method(init))]
        #[unsafe(method_family = init)]
        pub unsafe fn init(this: Allocated<Self>) -> Retained<Self>;

        #[deprecated = "Creating a template without parameters is deprecated in watchOS 7.0. Use a factory method with parameters instead."]
        #[unsafe(method(new))]
        #[unsafe(method_family = new)]
        pub unsafe fn new() -> Retained<Self>;
    );
}

extern_class!(
    /// [Apple's documentation](https://developer.apple.com/documentation/clockkit/clkcomplicationtemplategraphicrectangularstandardbody?language=objc)
    #[unsafe(super(CLKComplicationTemplate, NSObject))]
    #[derive(Debug, PartialEq, Eq, Hash)]
    #[deprecated = "On watchOS 9.0 or later, use WidgetKit instead"]
    pub struct CLKComplicationTemplateGraphicRectangularStandardBody;
);

extern_conformance!(
    unsafe impl NSCopying for CLKComplicationTemplateGraphicRectangularStandardBody {}
);

unsafe impl CopyingHelper for CLKComplicationTemplateGraphicRectangularStandardBody {
    type Result = Self;
}

extern_conformance!(
    unsafe impl NSObjectProtocol for CLKComplicationTemplateGraphicRectangularStandardBody {}
);

impl CLKComplicationTemplateGraphicRectangularStandardBody {
    extern_methods!(
        #[cfg(feature = "CLKFullColorImageProvider")]
        #[deprecated = "On watchOS 9.0 or later, use WidgetKit instead"]
        #[unsafe(method(headerImageProvider))]
        #[unsafe(method_family = none)]
        pub unsafe fn headerImageProvider(&self) -> Option<Retained<CLKFullColorImageProvider>>;

        #[cfg(feature = "CLKFullColorImageProvider")]
        /// Setter for [`headerImageProvider`][Self::headerImageProvider].
        ///
        /// This is [copied][objc2_foundation::NSCopying::copy] when set.
        #[deprecated = "On watchOS 9.0 or later, use WidgetKit instead"]
        #[unsafe(method(setHeaderImageProvider:))]
        #[unsafe(method_family = none)]
        pub unsafe fn setHeaderImageProvider(
            &self,
            header_image_provider: Option<&CLKFullColorImageProvider>,
        );

        #[cfg(feature = "CLKTextProvider")]
        #[deprecated = "On watchOS 9.0 or later, use WidgetKit instead"]
        #[unsafe(method(headerTextProvider))]
        #[unsafe(method_family = none)]
        pub unsafe fn headerTextProvider(&self) -> Retained<CLKTextProvider>;

        #[cfg(feature = "CLKTextProvider")]
        /// Setter for [`headerTextProvider`][Self::headerTextProvider].
        ///
        /// This is [copied][objc2_foundation::NSCopying::copy] when set.
        #[deprecated = "On watchOS 9.0 or later, use WidgetKit instead"]
        #[unsafe(method(setHeaderTextProvider:))]
        #[unsafe(method_family = none)]
        pub unsafe fn setHeaderTextProvider(&self, header_text_provider: &CLKTextProvider);

        #[cfg(feature = "CLKTextProvider")]
        #[deprecated = "On watchOS 9.0 or later, use WidgetKit instead"]
        #[unsafe(method(body1TextProvider))]
        #[unsafe(method_family = none)]
        pub unsafe fn body1TextProvider(&self) -> Retained<CLKTextProvider>;

        #[cfg(feature = "CLKTextProvider")]
        /// Setter for [`body1TextProvider`][Self::body1TextProvider].
        ///
        /// This is [copied][objc2_foundation::NSCopying::copy] when set.
        #[deprecated = "On watchOS 9.0 or later, use WidgetKit instead"]
        #[unsafe(method(setBody1TextProvider:))]
        #[unsafe(method_family = none)]
        pub unsafe fn setBody1TextProvider(&self, body1_text_provider: &CLKTextProvider);

        #[cfg(feature = "CLKTextProvider")]
        #[deprecated = "On watchOS 9.0 or later, use WidgetKit instead"]
        #[unsafe(method(body2TextProvider))]
        #[unsafe(method_family = none)]
        pub unsafe fn body2TextProvider(&self) -> Option<Retained<CLKTextProvider>>;

        #[cfg(feature = "CLKTextProvider")]
        /// Setter for [`body2TextProvider`][Self::body2TextProvider].
        ///
        /// This is [copied][objc2_foundation::NSCopying::copy] when set.
        #[deprecated = "On watchOS 9.0 or later, use WidgetKit instead"]
        #[unsafe(method(setBody2TextProvider:))]
        #[unsafe(method_family = none)]
        pub unsafe fn setBody2TextProvider(&self, body2_text_provider: Option<&CLKTextProvider>);

        #[cfg(feature = "CLKTextProvider")]
        #[unsafe(method(initWithHeaderTextProvider:body1TextProvider:))]
        #[unsafe(method_family = init)]
        pub unsafe fn initWithHeaderTextProvider_body1TextProvider(
            this: Allocated<Self>,
            header_text_provider: &CLKTextProvider,
            body1_text_provider: &CLKTextProvider,
        ) -> Retained<Self>;

        #[cfg(feature = "CLKTextProvider")]
        #[unsafe(method(initWithHeaderTextProvider:body1TextProvider:body2TextProvider:))]
        #[unsafe(method_family = init)]
        pub unsafe fn initWithHeaderTextProvider_body1TextProvider_body2TextProvider(
            this: Allocated<Self>,
            header_text_provider: &CLKTextProvider,
            body1_text_provider: &CLKTextProvider,
            body2_text_provider: Option<&CLKTextProvider>,
        ) -> Retained<Self>;

        #[cfg(all(feature = "CLKFullColorImageProvider", feature = "CLKTextProvider"))]
        #[unsafe(method(initWithHeaderImageProvider:headerTextProvider:body1TextProvider:))]
        #[unsafe(method_family = init)]
        pub unsafe fn initWithHeaderImageProvider_headerTextProvider_body1TextProvider(
            this: Allocated<Self>,
            header_image_provider: Option<&CLKFullColorImageProvider>,
            header_text_provider: &CLKTextProvider,
            body1_text_provider: &CLKTextProvider,
        ) -> Retained<Self>;

        #[cfg(all(feature = "CLKFullColorImageProvider", feature = "CLKTextProvider"))]
        #[unsafe(method(initWithHeaderImageProvider:headerTextProvider:body1TextProvider:body2TextProvider:))]
        #[unsafe(method_family = init)]
        pub unsafe fn initWithHeaderImageProvider_headerTextProvider_body1TextProvider_body2TextProvider(
            this: Allocated<Self>,
            header_image_provider: Option<&CLKFullColorImageProvider>,
            header_text_provider: &CLKTextProvider,
            body1_text_provider: &CLKTextProvider,
            body2_text_provider: Option<&CLKTextProvider>,
        ) -> Retained<Self>;

        #[cfg(feature = "CLKTextProvider")]
        #[unsafe(method(templateWithHeaderTextProvider:body1TextProvider:))]
        #[unsafe(method_family = none)]
        pub unsafe fn templateWithHeaderTextProvider_body1TextProvider(
            header_text_provider: &CLKTextProvider,
            body1_text_provider: &CLKTextProvider,
        ) -> Retained<Self>;

        #[cfg(feature = "CLKTextProvider")]
        #[unsafe(method(templateWithHeaderTextProvider:body1TextProvider:body2TextProvider:))]
        #[unsafe(method_family = none)]
        pub unsafe fn templateWithHeaderTextProvider_body1TextProvider_body2TextProvider(
            header_text_provider: &CLKTextProvider,
            body1_text_provider: &CLKTextProvider,
            body2_text_provider: Option<&CLKTextProvider>,
        ) -> Retained<Self>;

        #[cfg(all(feature = "CLKFullColorImageProvider", feature = "CLKTextProvider"))]
        #[unsafe(method(templateWithHeaderImageProvider:headerTextProvider:body1TextProvider:))]
        #[unsafe(method_family = none)]
        pub unsafe fn templateWithHeaderImageProvider_headerTextProvider_body1TextProvider(
            header_image_provider: Option<&CLKFullColorImageProvider>,
            header_text_provider: &CLKTextProvider,
            body1_text_provider: &CLKTextProvider,
        ) -> Retained<Self>;

        #[cfg(all(feature = "CLKFullColorImageProvider", feature = "CLKTextProvider"))]
        #[unsafe(method(templateWithHeaderImageProvider:headerTextProvider:body1TextProvider:body2TextProvider:))]
        #[unsafe(method_family = none)]
        pub unsafe fn templateWithHeaderImageProvider_headerTextProvider_body1TextProvider_body2TextProvider(
            header_image_provider: Option<&CLKFullColorImageProvider>,
            header_text_provider: &CLKTextProvider,
            body1_text_provider: &CLKTextProvider,
            body2_text_provider: Option<&CLKTextProvider>,
        ) -> Retained<Self>;
    );
}

/// Methods declared on superclass `CLKComplicationTemplate`.
impl CLKComplicationTemplateGraphicRectangularStandardBody {
    extern_methods!(
        #[deprecated = "Initializing a template without parameters is deprecated in watchOS 7.0. Use an init with parameters instead."]
        #[unsafe(method(init))]
        #[unsafe(method_family = init)]
        pub unsafe fn init(this: Allocated<Self>) -> Retained<Self>;

        #[deprecated = "Creating a template without parameters is deprecated in watchOS 7.0. Use a factory method with parameters instead."]
        #[unsafe(method(new))]
        #[unsafe(method_family = new)]
        pub unsafe fn new() -> Retained<Self>;
    );
}

extern_class!(
    /// [Apple's documentation](https://developer.apple.com/documentation/clockkit/clkcomplicationtemplategraphicrectangulartextgauge?language=objc)
    #[unsafe(super(CLKComplicationTemplate, NSObject))]
    #[derive(Debug, PartialEq, Eq, Hash)]
    #[deprecated = "On watchOS 9.0 or later, use WidgetKit instead"]
    pub struct CLKComplicationTemplateGraphicRectangularTextGauge;
);

extern_conformance!(
    unsafe impl NSCopying for CLKComplicationTemplateGraphicRectangularTextGauge {}
);

unsafe impl CopyingHelper for CLKComplicationTemplateGraphicRectangularTextGauge {
    type Result = Self;
}

extern_conformance!(
    unsafe impl NSObjectProtocol for CLKComplicationTemplateGraphicRectangularTextGauge {}
);

impl CLKComplicationTemplateGraphicRectangularTextGauge {
    extern_methods!(
        #[cfg(feature = "CLKFullColorImageProvider")]
        #[deprecated = "On watchOS 9.0 or later, use WidgetKit instead"]
        #[unsafe(method(headerImageProvider))]
        #[unsafe(method_family = none)]
        pub unsafe fn headerImageProvider(&self) -> Option<Retained<CLKFullColorImageProvider>>;

        #[cfg(feature = "CLKFullColorImageProvider")]
        /// Setter for [`headerImageProvider`][Self::headerImageProvider].
        ///
        /// This is [copied][objc2_foundation::NSCopying::copy] when set.
        #[deprecated = "On watchOS 9.0 or later, use WidgetKit instead"]
        #[unsafe(method(setHeaderImageProvider:))]
        #[unsafe(method_family = none)]
        pub unsafe fn setHeaderImageProvider(
            &self,
            header_image_provider: Option<&CLKFullColorImageProvider>,
        );

        #[cfg(feature = "CLKTextProvider")]
        #[deprecated = "On watchOS 9.0 or later, use WidgetKit instead"]
        #[unsafe(method(headerTextProvider))]
        #[unsafe(method_family = none)]
        pub unsafe fn headerTextProvider(&self) -> Retained<CLKTextProvider>;

        #[cfg(feature = "CLKTextProvider")]
        /// Setter for [`headerTextProvider`][Self::headerTextProvider].
        ///
        /// This is [copied][objc2_foundation::NSCopying::copy] when set.
        #[deprecated = "On watchOS 9.0 or later, use WidgetKit instead"]
        #[unsafe(method(setHeaderTextProvider:))]
        #[unsafe(method_family = none)]
        pub unsafe fn setHeaderTextProvider(&self, header_text_provider: &CLKTextProvider);

        #[cfg(feature = "CLKTextProvider")]
        #[deprecated = "On watchOS 9.0 or later, use WidgetKit instead"]
        #[unsafe(method(body1TextProvider))]
        #[unsafe(method_family = none)]
        pub unsafe fn body1TextProvider(&self) -> Retained<CLKTextProvider>;

        #[cfg(feature = "CLKTextProvider")]
        /// Setter for [`body1TextProvider`][Self::body1TextProvider].
        ///
        /// This is [copied][objc2_foundation::NSCopying::copy] when set.
        #[deprecated = "On watchOS 9.0 or later, use WidgetKit instead"]
        #[unsafe(method(setBody1TextProvider:))]
        #[unsafe(method_family = none)]
        pub unsafe fn setBody1TextProvider(&self, body1_text_provider: &CLKTextProvider);

        #[cfg(feature = "CLKGaugeProvider")]
        #[deprecated = "On watchOS 9.0 or later, use WidgetKit instead"]
        #[unsafe(method(gaugeProvider))]
        #[unsafe(method_family = none)]
        pub unsafe fn gaugeProvider(&self) -> Retained<CLKGaugeProvider>;

        #[cfg(feature = "CLKGaugeProvider")]
        /// Setter for [`gaugeProvider`][Self::gaugeProvider].
        ///
        /// This is [copied][objc2_foundation::NSCopying::copy] when set.
        #[deprecated = "On watchOS 9.0 or later, use WidgetKit instead"]
        #[unsafe(method(setGaugeProvider:))]
        #[unsafe(method_family = none)]
        pub unsafe fn setGaugeProvider(&self, gauge_provider: &CLKGaugeProvider);

        #[cfg(all(feature = "CLKGaugeProvider", feature = "CLKTextProvider"))]
        #[unsafe(method(initWithHeaderTextProvider:body1TextProvider:gaugeProvider:))]
        #[unsafe(method_family = init)]
        pub unsafe fn initWithHeaderTextProvider_body1TextProvider_gaugeProvider(
            this: Allocated<Self>,
            header_text_provider: &CLKTextProvider,
            body1_text_provider: &CLKTextProvider,
            gauge_provider: &CLKGaugeProvider,
        ) -> Retained<Self>;

        #[cfg(all(
            feature = "CLKFullColorImageProvider",
            feature = "CLKGaugeProvider",
            feature = "CLKTextProvider"
        ))]
        #[unsafe(method(initWithHeaderImageProvider:headerTextProvider:body1TextProvider:gaugeProvider:))]
        #[unsafe(method_family = init)]
        pub unsafe fn initWithHeaderImageProvider_headerTextProvider_body1TextProvider_gaugeProvider(
            this: Allocated<Self>,
            header_image_provider: Option<&CLKFullColorImageProvider>,
            header_text_provider: &CLKTextProvider,
            body1_text_provider: &CLKTextProvider,
            gauge_provider: &CLKGaugeProvider,
        ) -> Retained<Self>;

        #[cfg(all(feature = "CLKGaugeProvider", feature = "CLKTextProvider"))]
        #[unsafe(method(templateWithHeaderTextProvider:body1TextProvider:gaugeProvider:))]
        #[unsafe(method_family = none)]
        pub unsafe fn templateWithHeaderTextProvider_body1TextProvider_gaugeProvider(
            header_text_provider: &CLKTextProvider,
            body1_text_provider: &CLKTextProvider,
            gauge_provider: &CLKGaugeProvider,
        ) -> Retained<Self>;

        #[cfg(all(
            feature = "CLKFullColorImageProvider",
            feature = "CLKGaugeProvider",
            feature = "CLKTextProvider"
        ))]
        #[unsafe(method(templateWithHeaderImageProvider:headerTextProvider:body1TextProvider:gaugeProvider:))]
        #[unsafe(method_family = none)]
        pub unsafe fn templateWithHeaderImageProvider_headerTextProvider_body1TextProvider_gaugeProvider(
            header_image_provider: Option<&CLKFullColorImageProvider>,
            header_text_provider: &CLKTextProvider,
            body1_text_provider: &CLKTextProvider,
            gauge_provider: &CLKGaugeProvider,
        ) -> Retained<Self>;
    );
}

/// Methods declared on superclass `CLKComplicationTemplate`.
impl CLKComplicationTemplateGraphicRectangularTextGauge {
    extern_methods!(
        #[deprecated = "Initializing a template without parameters is deprecated in watchOS 7.0. Use an init with parameters instead."]
        #[unsafe(method(init))]
        #[unsafe(method_family = init)]
        pub unsafe fn init(this: Allocated<Self>) -> Retained<Self>;

        #[deprecated = "Creating a template without parameters is deprecated in watchOS 7.0. Use a factory method with parameters instead."]
        #[unsafe(method(new))]
        #[unsafe(method_family = new)]
        pub unsafe fn new() -> Retained<Self>;
    );
}

extern_class!(
    /// [Apple's documentation](https://developer.apple.com/documentation/clockkit/clkcomplicationtemplategraphicextralargecircular?language=objc)
    #[unsafe(super(CLKComplicationTemplate, NSObject))]
    #[derive(Debug, PartialEq, Eq, Hash)]
    #[deprecated = "On watchOS 9.0 or later, use WidgetKit instead"]
    pub struct CLKComplicationTemplateGraphicExtraLargeCircular;
);

extern_conformance!(
    unsafe impl NSCopying for CLKComplicationTemplateGraphicExtraLargeCircular {}
);

unsafe impl CopyingHelper for CLKComplicationTemplateGraphicExtraLargeCircular {
    type Result = Self;
}

extern_conformance!(
    unsafe impl NSObjectProtocol for CLKComplicationTemplateGraphicExtraLargeCircular {}
);

impl CLKComplicationTemplateGraphicExtraLargeCircular {
    extern_methods!();
}

/// Methods declared on superclass `CLKComplicationTemplate`.
impl CLKComplicationTemplateGraphicExtraLargeCircular {
    extern_methods!(
        #[deprecated = "Initializing a template without parameters is deprecated in watchOS 7.0. Use an init with parameters instead."]
        #[unsafe(method(init))]
        #[unsafe(method_family = init)]
        pub unsafe fn init(this: Allocated<Self>) -> Retained<Self>;

        #[deprecated = "Creating a template without parameters is deprecated in watchOS 7.0. Use a factory method with parameters instead."]
        #[unsafe(method(new))]
        #[unsafe(method_family = new)]
        pub unsafe fn new() -> Retained<Self>;
    );
}

extern_class!(
    /// [Apple's documentation](https://developer.apple.com/documentation/clockkit/clkcomplicationtemplategraphicextralargecircularimage?language=objc)
    #[unsafe(super(
        CLKComplicationTemplateGraphicExtraLargeCircular,
        CLKComplicationTemplate,
        NSObject
    ))]
    #[derive(Debug, PartialEq, Eq, Hash)]
    #[deprecated = "On watchOS 9.0 or later, use WidgetKit instead"]
    pub struct CLKComplicationTemplateGraphicExtraLargeCircularImage;
);

extern_conformance!(
    unsafe impl NSCopying for CLKComplicationTemplateGraphicExtraLargeCircularImage {}
);

unsafe impl CopyingHelper for CLKComplicationTemplateGraphicExtraLargeCircularImage {
    type Result = Self;
}

extern_conformance!(
    unsafe impl NSObjectProtocol for CLKComplicationTemplateGraphicExtraLargeCircularImage {}
);

impl CLKComplicationTemplateGraphicExtraLargeCircularImage {
    extern_methods!(
        #[cfg(feature = "CLKFullColorImageProvider")]
        #[deprecated = "On watchOS 9.0 or later, use WidgetKit instead"]
        #[unsafe(method(imageProvider))]
        #[unsafe(method_family = none)]
        pub unsafe fn imageProvider(&self) -> Retained<CLKFullColorImageProvider>;

        #[cfg(feature = "CLKFullColorImageProvider")]
        /// Setter for [`imageProvider`][Self::imageProvider].
        ///
        /// This is [copied][objc2_foundation::NSCopying::copy] when set.
        #[deprecated = "On watchOS 9.0 or later, use WidgetKit instead"]
        #[unsafe(method(setImageProvider:))]
        #[unsafe(method_family = none)]
        pub unsafe fn setImageProvider(&self, image_provider: &CLKFullColorImageProvider);

        #[cfg(feature = "CLKFullColorImageProvider")]
        #[deprecated = "On watchOS 9.0 or later, use WidgetKit instead"]
        #[unsafe(method(initWithImageProvider:))]
        #[unsafe(method_family = init)]
        pub unsafe fn initWithImageProvider(
            this: Allocated<Self>,
            image_provider: &CLKFullColorImageProvider,
        ) -> Retained<Self>;

        #[cfg(feature = "CLKFullColorImageProvider")]
        #[unsafe(method(templateWithImageProvider:))]
        #[unsafe(method_family = none)]
        pub unsafe fn templateWithImageProvider(
            image_provider: &CLKFullColorImageProvider,
        ) -> Retained<Self>;
    );
}

/// Methods declared on superclass `CLKComplicationTemplate`.
impl CLKComplicationTemplateGraphicExtraLargeCircularImage {
    extern_methods!(
        #[deprecated = "Initializing a template without parameters is deprecated in watchOS 7.0. Use an init with parameters instead."]
        #[unsafe(method(init))]
        #[unsafe(method_family = init)]
        pub unsafe fn init(this: Allocated<Self>) -> Retained<Self>;

        #[deprecated = "Creating a template without parameters is deprecated in watchOS 7.0. Use a factory method with parameters instead."]
        #[unsafe(method(new))]
        #[unsafe(method_family = new)]
        pub unsafe fn new() -> Retained<Self>;
    );
}

extern_class!(
    /// [Apple's documentation](https://developer.apple.com/documentation/clockkit/clkcomplicationtemplategraphicextralargecircularopengaugerangetext?language=objc)
    #[unsafe(super(
        CLKComplicationTemplateGraphicExtraLargeCircular,
        CLKComplicationTemplate,
        NSObject
    ))]
    #[derive(Debug, PartialEq, Eq, Hash)]
    #[deprecated = "On watchOS 9.0 or later, use WidgetKit instead"]
    pub struct CLKComplicationTemplateGraphicExtraLargeCircularOpenGaugeRangeText;
);

extern_conformance!(
    unsafe impl NSCopying for CLKComplicationTemplateGraphicExtraLargeCircularOpenGaugeRangeText {}
);

unsafe impl CopyingHelper for CLKComplicationTemplateGraphicExtraLargeCircularOpenGaugeRangeText {
    type Result = Self;
}

extern_conformance!(
    unsafe impl NSObjectProtocol
        for CLKComplicationTemplateGraphicExtraLargeCircularOpenGaugeRangeText
    {
    }
);

impl CLKComplicationTemplateGraphicExtraLargeCircularOpenGaugeRangeText {
    extern_methods!(
        #[cfg(feature = "CLKGaugeProvider")]
        #[deprecated = "On watchOS 9.0 or later, use WidgetKit instead"]
        #[unsafe(method(gaugeProvider))]
        #[unsafe(method_family = none)]
        pub unsafe fn gaugeProvider(&self) -> Retained<CLKGaugeProvider>;

        #[cfg(feature = "CLKGaugeProvider")]
        /// Setter for [`gaugeProvider`][Self::gaugeProvider].
        ///
        /// This is [copied][objc2_foundation::NSCopying::copy] when set.
        #[deprecated = "On watchOS 9.0 or later, use WidgetKit instead"]
        #[unsafe(method(setGaugeProvider:))]
        #[unsafe(method_family = none)]
        pub unsafe fn setGaugeProvider(&self, gauge_provider: &CLKGaugeProvider);

        #[cfg(feature = "CLKTextProvider")]
        #[deprecated = "On watchOS 9.0 or later, use WidgetKit instead"]
        #[unsafe(method(leadingTextProvider))]
        #[unsafe(method_family = none)]
        pub unsafe fn leadingTextProvider(&self) -> Retained<CLKTextProvider>;

        #[cfg(feature = "CLKTextProvider")]
        /// Setter for [`leadingTextProvider`][Self::leadingTextProvider].
        ///
        /// This is [copied][objc2_foundation::NSCopying::copy] when set.
        #[deprecated = "On watchOS 9.0 or later, use WidgetKit instead"]
        #[unsafe(method(setLeadingTextProvider:))]
        #[unsafe(method_family = none)]
        pub unsafe fn setLeadingTextProvider(&self, leading_text_provider: &CLKTextProvider);

        #[cfg(feature = "CLKTextProvider")]
        #[deprecated = "On watchOS 9.0 or later, use WidgetKit instead"]
        #[unsafe(method(trailingTextProvider))]
        #[unsafe(method_family = none)]
        pub unsafe fn trailingTextProvider(&self) -> Retained<CLKTextProvider>;

        #[cfg(feature = "CLKTextProvider")]
        /// Setter for [`trailingTextProvider`][Self::trailingTextProvider].
        ///
        /// This is [copied][objc2_foundation::NSCopying::copy] when set.
        #[deprecated = "On watchOS 9.0 or later, use WidgetKit instead"]
        #[unsafe(method(setTrailingTextProvider:))]
        #[unsafe(method_family = none)]
        pub unsafe fn setTrailingTextProvider(&self, trailing_text_provider: &CLKTextProvider);

        #[cfg(feature = "CLKTextProvider")]
        #[deprecated = "On watchOS 9.0 or later, use WidgetKit instead"]
        #[unsafe(method(centerTextProvider))]
        #[unsafe(method_family = none)]
        pub unsafe fn centerTextProvider(&self) -> Retained<CLKTextProvider>;

        #[cfg(feature = "CLKTextProvider")]
        /// Setter for [`centerTextProvider`][Self::centerTextProvider].
        ///
        /// This is [copied][objc2_foundation::NSCopying::copy] when set.
        #[deprecated = "On watchOS 9.0 or later, use WidgetKit instead"]
        #[unsafe(method(setCenterTextProvider:))]
        #[unsafe(method_family = none)]
        pub unsafe fn setCenterTextProvider(&self, center_text_provider: &CLKTextProvider);

        #[cfg(all(feature = "CLKGaugeProvider", feature = "CLKTextProvider"))]
        #[deprecated = "On watchOS 9.0 or later, use WidgetKit instead"]
        #[unsafe(method(initWithGaugeProvider:leadingTextProvider:trailingTextProvider:centerTextProvider:))]
        #[unsafe(method_family = init)]
        pub unsafe fn initWithGaugeProvider_leadingTextProvider_trailingTextProvider_centerTextProvider(
            this: Allocated<Self>,
            gauge_provider: &CLKGaugeProvider,
            leading_text_provider: &CLKTextProvider,
            trailing_text_provider: &CLKTextProvider,
            center_text_provider: &CLKTextProvider,
        ) -> Retained<Self>;

        #[cfg(all(feature = "CLKGaugeProvider", feature = "CLKTextProvider"))]
        #[unsafe(method(templateWithGaugeProvider:leadingTextProvider:trailingTextProvider:centerTextProvider:))]
        #[unsafe(method_family = none)]
        pub unsafe fn templateWithGaugeProvider_leadingTextProvider_trailingTextProvider_centerTextProvider(
            gauge_provider: &CLKGaugeProvider,
            leading_text_provider: &CLKTextProvider,
            trailing_text_provider: &CLKTextProvider,
            center_text_provider: &CLKTextProvider,
        ) -> Retained<Self>;
    );
}

/// Methods declared on superclass `CLKComplicationTemplate`.
impl CLKComplicationTemplateGraphicExtraLargeCircularOpenGaugeRangeText {
    extern_methods!(
        #[deprecated = "Initializing a template without parameters is deprecated in watchOS 7.0. Use an init with parameters instead."]
        #[unsafe(method(init))]
        #[unsafe(method_family = init)]
        pub unsafe fn init(this: Allocated<Self>) -> Retained<Self>;

        #[deprecated = "Creating a template without parameters is deprecated in watchOS 7.0. Use a factory method with parameters instead."]
        #[unsafe(method(new))]
        #[unsafe(method_family = new)]
        pub unsafe fn new() -> Retained<Self>;
    );
}

extern_class!(
    /// [Apple's documentation](https://developer.apple.com/documentation/clockkit/clkcomplicationtemplategraphicextralargecircularopengaugesimpletext?language=objc)
    #[unsafe(super(
        CLKComplicationTemplateGraphicExtraLargeCircular,
        CLKComplicationTemplate,
        NSObject
    ))]
    #[derive(Debug, PartialEq, Eq, Hash)]
    #[deprecated = "On watchOS 9.0 or later, use WidgetKit instead"]
    pub struct CLKComplicationTemplateGraphicExtraLargeCircularOpenGaugeSimpleText;
);

extern_conformance!(
    unsafe impl NSCopying for CLKComplicationTemplateGraphicExtraLargeCircularOpenGaugeSimpleText {}
);

unsafe impl CopyingHelper for CLKComplicationTemplateGraphicExtraLargeCircularOpenGaugeSimpleText {
    type Result = Self;
}

extern_conformance!(
    unsafe impl NSObjectProtocol
        for CLKComplicationTemplateGraphicExtraLargeCircularOpenGaugeSimpleText
    {
    }
);

impl CLKComplicationTemplateGraphicExtraLargeCircularOpenGaugeSimpleText {
    extern_methods!(
        #[cfg(feature = "CLKGaugeProvider")]
        #[deprecated = "On watchOS 9.0 or later, use WidgetKit instead"]
        #[unsafe(method(gaugeProvider))]
        #[unsafe(method_family = none)]
        pub unsafe fn gaugeProvider(&self) -> Retained<CLKGaugeProvider>;

        #[cfg(feature = "CLKGaugeProvider")]
        /// Setter for [`gaugeProvider`][Self::gaugeProvider].
        ///
        /// This is [copied][objc2_foundation::NSCopying::copy] when set.
        #[deprecated = "On watchOS 9.0 or later, use WidgetKit instead"]
        #[unsafe(method(setGaugeProvider:))]
        #[unsafe(method_family = none)]
        pub unsafe fn setGaugeProvider(&self, gauge_provider: &CLKGaugeProvider);

        #[cfg(feature = "CLKTextProvider")]
        #[deprecated = "On watchOS 9.0 or later, use WidgetKit instead"]
        #[unsafe(method(bottomTextProvider))]
        #[unsafe(method_family = none)]
        pub unsafe fn bottomTextProvider(&self) -> Retained<CLKTextProvider>;

        #[cfg(feature = "CLKTextProvider")]
        /// Setter for [`bottomTextProvider`][Self::bottomTextProvider].
        ///
        /// This is [copied][objc2_foundation::NSCopying::copy] when set.
        #[deprecated = "On watchOS 9.0 or later, use WidgetKit instead"]
        #[unsafe(method(setBottomTextProvider:))]
        #[unsafe(method_family = none)]
        pub unsafe fn setBottomTextProvider(&self, bottom_text_provider: &CLKTextProvider);

        #[cfg(feature = "CLKTextProvider")]
        #[deprecated = "On watchOS 9.0 or later, use WidgetKit instead"]
        #[unsafe(method(centerTextProvider))]
        #[unsafe(method_family = none)]
        pub unsafe fn centerTextProvider(&self) -> Retained<CLKTextProvider>;

        #[cfg(feature = "CLKTextProvider")]
        /// Setter for [`centerTextProvider`][Self::centerTextProvider].
        ///
        /// This is [copied][objc2_foundation::NSCopying::copy] when set.
        #[deprecated = "On watchOS 9.0 or later, use WidgetKit instead"]
        #[unsafe(method(setCenterTextProvider:))]
        #[unsafe(method_family = none)]
        pub unsafe fn setCenterTextProvider(&self, center_text_provider: &CLKTextProvider);

        #[cfg(all(feature = "CLKGaugeProvider", feature = "CLKTextProvider"))]
        #[deprecated = "On watchOS 9.0 or later, use WidgetKit instead"]
        #[unsafe(method(initWithGaugeProvider:bottomTextProvider:centerTextProvider:))]
        #[unsafe(method_family = init)]
        pub unsafe fn initWithGaugeProvider_bottomTextProvider_centerTextProvider(
            this: Allocated<Self>,
            gauge_provider: &CLKGaugeProvider,
            bottom_text_provider: &CLKTextProvider,
            center_text_provider: &CLKTextProvider,
        ) -> Retained<Self>;

        #[cfg(all(feature = "CLKGaugeProvider", feature = "CLKTextProvider"))]
        #[unsafe(method(templateWithGaugeProvider:bottomTextProvider:centerTextProvider:))]
        #[unsafe(method_family = none)]
        pub unsafe fn templateWithGaugeProvider_bottomTextProvider_centerTextProvider(
            gauge_provider: &CLKGaugeProvider,
            bottom_text_provider: &CLKTextProvider,
            center_text_provider: &CLKTextProvider,
        ) -> Retained<Self>;
    );
}

/// Methods declared on superclass `CLKComplicationTemplate`.
impl CLKComplicationTemplateGraphicExtraLargeCircularOpenGaugeSimpleText {
    extern_methods!(
        #[deprecated = "Initializing a template without parameters is deprecated in watchOS 7.0. Use an init with parameters instead."]
        #[unsafe(method(init))]
        #[unsafe(method_family = init)]
        pub unsafe fn init(this: Allocated<Self>) -> Retained<Self>;

        #[deprecated = "Creating a template without parameters is deprecated in watchOS 7.0. Use a factory method with parameters instead."]
        #[unsafe(method(new))]
        #[unsafe(method_family = new)]
        pub unsafe fn new() -> Retained<Self>;
    );
}

extern_class!(
    /// [Apple's documentation](https://developer.apple.com/documentation/clockkit/clkcomplicationtemplategraphicextralargecircularopengaugeimage?language=objc)
    #[unsafe(super(
        CLKComplicationTemplateGraphicExtraLargeCircular,
        CLKComplicationTemplate,
        NSObject
    ))]
    #[derive(Debug, PartialEq, Eq, Hash)]
    #[deprecated = "On watchOS 9.0 or later, use WidgetKit instead"]
    pub struct CLKComplicationTemplateGraphicExtraLargeCircularOpenGaugeImage;
);

extern_conformance!(
    unsafe impl NSCopying for CLKComplicationTemplateGraphicExtraLargeCircularOpenGaugeImage {}
);

unsafe impl CopyingHelper for CLKComplicationTemplateGraphicExtraLargeCircularOpenGaugeImage {
    type Result = Self;
}

extern_conformance!(
    unsafe impl NSObjectProtocol for CLKComplicationTemplateGraphicExtraLargeCircularOpenGaugeImage {}
);

impl CLKComplicationTemplateGraphicExtraLargeCircularOpenGaugeImage {
    extern_methods!(
        #[cfg(feature = "CLKGaugeProvider")]
        #[deprecated = "On watchOS 9.0 or later, use WidgetKit instead"]
        #[unsafe(method(gaugeProvider))]
        #[unsafe(method_family = none)]
        pub unsafe fn gaugeProvider(&self) -> Retained<CLKGaugeProvider>;

        #[cfg(feature = "CLKGaugeProvider")]
        /// Setter for [`gaugeProvider`][Self::gaugeProvider].
        ///
        /// This is [copied][objc2_foundation::NSCopying::copy] when set.
        #[deprecated = "On watchOS 9.0 or later, use WidgetKit instead"]
        #[unsafe(method(setGaugeProvider:))]
        #[unsafe(method_family = none)]
        pub unsafe fn setGaugeProvider(&self, gauge_provider: &CLKGaugeProvider);

        #[cfg(feature = "CLKFullColorImageProvider")]
        #[deprecated = "On watchOS 9.0 or later, use WidgetKit instead"]
        #[unsafe(method(bottomImageProvider))]
        #[unsafe(method_family = none)]
        pub unsafe fn bottomImageProvider(&self) -> Retained<CLKFullColorImageProvider>;

        #[cfg(feature = "CLKFullColorImageProvider")]
        /// Setter for [`bottomImageProvider`][Self::bottomImageProvider].
        ///
        /// This is [copied][objc2_foundation::NSCopying::copy] when set.
        #[deprecated = "On watchOS 9.0 or later, use WidgetKit instead"]
        #[unsafe(method(setBottomImageProvider:))]
        #[unsafe(method_family = none)]
        pub unsafe fn setBottomImageProvider(
            &self,
            bottom_image_provider: &CLKFullColorImageProvider,
        );

        #[cfg(feature = "CLKTextProvider")]
        #[deprecated = "On watchOS 9.0 or later, use WidgetKit instead"]
        #[unsafe(method(centerTextProvider))]
        #[unsafe(method_family = none)]
        pub unsafe fn centerTextProvider(&self) -> Retained<CLKTextProvider>;

        #[cfg(feature = "CLKTextProvider")]
        /// Setter for [`centerTextProvider`][Self::centerTextProvider].
        ///
        /// This is [copied][objc2_foundation::NSCopying::copy] when set.
        #[deprecated = "On watchOS 9.0 or later, use WidgetKit instead"]
        #[unsafe(method(setCenterTextProvider:))]
        #[unsafe(method_family = none)]
        pub unsafe fn setCenterTextProvider(&self, center_text_provider: &CLKTextProvider);

        #[cfg(all(
            feature = "CLKFullColorImageProvider",
            feature = "CLKGaugeProvider",
            feature = "CLKTextProvider"
        ))]
        #[deprecated = "On watchOS 9.0 or later, use WidgetKit instead"]
        #[unsafe(method(initWithGaugeProvider:bottomImageProvider:centerTextProvider:))]
        #[unsafe(method_family = init)]
        pub unsafe fn initWithGaugeProvider_bottomImageProvider_centerTextProvider(
            this: Allocated<Self>,
            gauge_provider: &CLKGaugeProvider,
            bottom_image_provider: &CLKFullColorImageProvider,
            center_text_provider: &CLKTextProvider,
        ) -> Retained<Self>;

        #[cfg(all(
            feature = "CLKFullColorImageProvider",
            feature = "CLKGaugeProvider",
            feature = "CLKTextProvider"
        ))]
        #[unsafe(method(templateWithGaugeProvider:bottomImageProvider:centerTextProvider:))]
        #[unsafe(method_family = none)]
        pub unsafe fn templateWithGaugeProvider_bottomImageProvider_centerTextProvider(
            gauge_provider: &CLKGaugeProvider,
            bottom_image_provider: &CLKFullColorImageProvider,
            center_text_provider: &CLKTextProvider,
        ) -> Retained<Self>;
    );
}

/// Methods declared on superclass `CLKComplicationTemplate`.
impl CLKComplicationTemplateGraphicExtraLargeCircularOpenGaugeImage {
    extern_methods!(
        #[deprecated = "Initializing a template without parameters is deprecated in watchOS 7.0. Use an init with parameters instead."]
        #[unsafe(method(init))]
        #[unsafe(method_family = init)]
        pub unsafe fn init(this: Allocated<Self>) -> Retained<Self>;

        #[deprecated = "Creating a template without parameters is deprecated in watchOS 7.0. Use a factory method with parameters instead."]
        #[unsafe(method(new))]
        #[unsafe(method_family = new)]
        pub unsafe fn new() -> Retained<Self>;
    );
}

extern_class!(
    /// [Apple's documentation](https://developer.apple.com/documentation/clockkit/clkcomplicationtemplategraphicextralargecircularclosedgaugetext?language=objc)
    #[unsafe(super(
        CLKComplicationTemplateGraphicExtraLargeCircular,
        CLKComplicationTemplate,
        NSObject
    ))]
    #[derive(Debug, PartialEq, Eq, Hash)]
    #[deprecated = "On watchOS 9.0 or later, use WidgetKit instead"]
    pub struct CLKComplicationTemplateGraphicExtraLargeCircularClosedGaugeText;
);

extern_conformance!(
    unsafe impl NSCopying for CLKComplicationTemplateGraphicExtraLargeCircularClosedGaugeText {}
);

unsafe impl CopyingHelper for CLKComplicationTemplateGraphicExtraLargeCircularClosedGaugeText {
    type Result = Self;
}

extern_conformance!(
    unsafe impl NSObjectProtocol for CLKComplicationTemplateGraphicExtraLargeCircularClosedGaugeText {}
);

impl CLKComplicationTemplateGraphicExtraLargeCircularClosedGaugeText {
    extern_methods!(
        #[cfg(feature = "CLKGaugeProvider")]
        #[deprecated = "On watchOS 9.0 or later, use WidgetKit instead"]
        #[unsafe(method(gaugeProvider))]
        #[unsafe(method_family = none)]
        pub unsafe fn gaugeProvider(&self) -> Retained<CLKGaugeProvider>;

        #[cfg(feature = "CLKGaugeProvider")]
        /// Setter for [`gaugeProvider`][Self::gaugeProvider].
        ///
        /// This is [copied][objc2_foundation::NSCopying::copy] when set.
        #[deprecated = "On watchOS 9.0 or later, use WidgetKit instead"]
        #[unsafe(method(setGaugeProvider:))]
        #[unsafe(method_family = none)]
        pub unsafe fn setGaugeProvider(&self, gauge_provider: &CLKGaugeProvider);

        #[cfg(feature = "CLKTextProvider")]
        #[deprecated = "On watchOS 9.0 or later, use WidgetKit instead"]
        #[unsafe(method(centerTextProvider))]
        #[unsafe(method_family = none)]
        pub unsafe fn centerTextProvider(&self) -> Retained<CLKTextProvider>;

        #[cfg(feature = "CLKTextProvider")]
        /// Setter for [`centerTextProvider`][Self::centerTextProvider].
        ///
        /// This is [copied][objc2_foundation::NSCopying::copy] when set.
        #[deprecated = "On watchOS 9.0 or later, use WidgetKit instead"]
        #[unsafe(method(setCenterTextProvider:))]
        #[unsafe(method_family = none)]
        pub unsafe fn setCenterTextProvider(&self, center_text_provider: &CLKTextProvider);

        #[cfg(all(feature = "CLKGaugeProvider", feature = "CLKTextProvider"))]
        #[deprecated = "On watchOS 9.0 or later, use WidgetKit instead"]
        #[unsafe(method(initWithGaugeProvider:centerTextProvider:))]
        #[unsafe(method_family = init)]
        pub unsafe fn initWithGaugeProvider_centerTextProvider(
            this: Allocated<Self>,
            gauge_provider: &CLKGaugeProvider,
            center_text_provider: &CLKTextProvider,
        ) -> Retained<Self>;

        #[cfg(all(feature = "CLKGaugeProvider", feature = "CLKTextProvider"))]
        #[unsafe(method(templateWithGaugeProvider:centerTextProvider:))]
        #[unsafe(method_family = none)]
        pub unsafe fn templateWithGaugeProvider_centerTextProvider(
            gauge_provider: &CLKGaugeProvider,
            center_text_provider: &CLKTextProvider,
        ) -> Retained<Self>;
    );
}

/// Methods declared on superclass `CLKComplicationTemplate`.
impl CLKComplicationTemplateGraphicExtraLargeCircularClosedGaugeText {
    extern_methods!(
        #[deprecated = "Initializing a template without parameters is deprecated in watchOS 7.0. Use an init with parameters instead."]
        #[unsafe(method(init))]
        #[unsafe(method_family = init)]
        pub unsafe fn init(this: Allocated<Self>) -> Retained<Self>;

        #[deprecated = "Creating a template without parameters is deprecated in watchOS 7.0. Use a factory method with parameters instead."]
        #[unsafe(method(new))]
        #[unsafe(method_family = new)]
        pub unsafe fn new() -> Retained<Self>;
    );
}

extern_class!(
    /// [Apple's documentation](https://developer.apple.com/documentation/clockkit/clkcomplicationtemplategraphicextralargecircularclosedgaugeimage?language=objc)
    #[unsafe(super(
        CLKComplicationTemplateGraphicExtraLargeCircular,
        CLKComplicationTemplate,
        NSObject
    ))]
    #[derive(Debug, PartialEq, Eq, Hash)]
    #[deprecated = "On watchOS 9.0 or later, use WidgetKit instead"]
    pub struct CLKComplicationTemplateGraphicExtraLargeCircularClosedGaugeImage;
);

extern_conformance!(
    unsafe impl NSCopying for CLKComplicationTemplateGraphicExtraLargeCircularClosedGaugeImage {}
);

unsafe impl CopyingHelper for CLKComplicationTemplateGraphicExtraLargeCircularClosedGaugeImage {
    type Result = Self;
}

extern_conformance!(
    unsafe impl NSObjectProtocol for CLKComplicationTemplateGraphicExtraLargeCircularClosedGaugeImage {}
);

impl CLKComplicationTemplateGraphicExtraLargeCircularClosedGaugeImage {
    extern_methods!(
        #[cfg(feature = "CLKGaugeProvider")]
        #[deprecated = "On watchOS 9.0 or later, use WidgetKit instead"]
        #[unsafe(method(gaugeProvider))]
        #[unsafe(method_family = none)]
        pub unsafe fn gaugeProvider(&self) -> Retained<CLKGaugeProvider>;

        #[cfg(feature = "CLKGaugeProvider")]
        /// Setter for [`gaugeProvider`][Self::gaugeProvider].
        ///
        /// This is [copied][objc2_foundation::NSCopying::copy] when set.
        #[deprecated = "On watchOS 9.0 or later, use WidgetKit instead"]
        #[unsafe(method(setGaugeProvider:))]
        #[unsafe(method_family = none)]
        pub unsafe fn setGaugeProvider(&self, gauge_provider: &CLKGaugeProvider);

        #[cfg(feature = "CLKFullColorImageProvider")]
        #[deprecated = "On watchOS 9.0 or later, use WidgetKit instead"]
        #[unsafe(method(imageProvider))]
        #[unsafe(method_family = none)]
        pub unsafe fn imageProvider(&self) -> Retained<CLKFullColorImageProvider>;

        #[cfg(feature = "CLKFullColorImageProvider")]
        /// Setter for [`imageProvider`][Self::imageProvider].
        ///
        /// This is [copied][objc2_foundation::NSCopying::copy] when set.
        #[deprecated = "On watchOS 9.0 or later, use WidgetKit instead"]
        #[unsafe(method(setImageProvider:))]
        #[unsafe(method_family = none)]
        pub unsafe fn setImageProvider(&self, image_provider: &CLKFullColorImageProvider);

        #[cfg(all(feature = "CLKFullColorImageProvider", feature = "CLKGaugeProvider"))]
        #[deprecated = "On watchOS 9.0 or later, use WidgetKit instead"]
        #[unsafe(method(initWithGaugeProvider:imageProvider:))]
        #[unsafe(method_family = init)]
        pub unsafe fn initWithGaugeProvider_imageProvider(
            this: Allocated<Self>,
            gauge_provider: &CLKGaugeProvider,
            image_provider: &CLKFullColorImageProvider,
        ) -> Retained<Self>;

        #[cfg(all(feature = "CLKFullColorImageProvider", feature = "CLKGaugeProvider"))]
        #[unsafe(method(templateWithGaugeProvider:imageProvider:))]
        #[unsafe(method_family = none)]
        pub unsafe fn templateWithGaugeProvider_imageProvider(
            gauge_provider: &CLKGaugeProvider,
            image_provider: &CLKFullColorImageProvider,
        ) -> Retained<Self>;
    );
}

/// Methods declared on superclass `CLKComplicationTemplate`.
impl CLKComplicationTemplateGraphicExtraLargeCircularClosedGaugeImage {
    extern_methods!(
        #[deprecated = "Initializing a template without parameters is deprecated in watchOS 7.0. Use an init with parameters instead."]
        #[unsafe(method(init))]
        #[unsafe(method_family = init)]
        pub unsafe fn init(this: Allocated<Self>) -> Retained<Self>;

        #[deprecated = "Creating a template without parameters is deprecated in watchOS 7.0. Use a factory method with parameters instead."]
        #[unsafe(method(new))]
        #[unsafe(method_family = new)]
        pub unsafe fn new() -> Retained<Self>;
    );
}

extern_class!(
    /// [Apple's documentation](https://developer.apple.com/documentation/clockkit/clkcomplicationtemplategraphicextralargecircularstacktext?language=objc)
    #[unsafe(super(
        CLKComplicationTemplateGraphicExtraLargeCircular,
        CLKComplicationTemplate,
        NSObject
    ))]
    #[derive(Debug, PartialEq, Eq, Hash)]
    #[deprecated = "On watchOS 9.0 or later, use WidgetKit instead"]
    pub struct CLKComplicationTemplateGraphicExtraLargeCircularStackText;
);

extern_conformance!(
    unsafe impl NSCopying for CLKComplicationTemplateGraphicExtraLargeCircularStackText {}
);

unsafe impl CopyingHelper for CLKComplicationTemplateGraphicExtraLargeCircularStackText {
    type Result = Self;
}

extern_conformance!(
    unsafe impl NSObjectProtocol for CLKComplicationTemplateGraphicExtraLargeCircularStackText {}
);

impl CLKComplicationTemplateGraphicExtraLargeCircularStackText {
    extern_methods!(
        #[cfg(feature = "CLKTextProvider")]
        #[deprecated = "On watchOS 9.0 or later, use WidgetKit instead"]
        #[unsafe(method(line1TextProvider))]
        #[unsafe(method_family = none)]
        pub unsafe fn line1TextProvider(&self) -> Retained<CLKTextProvider>;

        #[cfg(feature = "CLKTextProvider")]
        /// Setter for [`line1TextProvider`][Self::line1TextProvider].
        ///
        /// This is [copied][objc2_foundation::NSCopying::copy] when set.
        #[deprecated = "On watchOS 9.0 or later, use WidgetKit instead"]
        #[unsafe(method(setLine1TextProvider:))]
        #[unsafe(method_family = none)]
        pub unsafe fn setLine1TextProvider(&self, line1_text_provider: &CLKTextProvider);

        #[cfg(feature = "CLKTextProvider")]
        #[deprecated = "On watchOS 9.0 or later, use WidgetKit instead"]
        #[unsafe(method(line2TextProvider))]
        #[unsafe(method_family = none)]
        pub unsafe fn line2TextProvider(&self) -> Retained<CLKTextProvider>;

        #[cfg(feature = "CLKTextProvider")]
        /// Setter for [`line2TextProvider`][Self::line2TextProvider].
        ///
        /// This is [copied][objc2_foundation::NSCopying::copy] when set.
        #[deprecated = "On watchOS 9.0 or later, use WidgetKit instead"]
        #[unsafe(method(setLine2TextProvider:))]
        #[unsafe(method_family = none)]
        pub unsafe fn setLine2TextProvider(&self, line2_text_provider: &CLKTextProvider);

        #[cfg(feature = "CLKTextProvider")]
        #[deprecated = "On watchOS 9.0 or later, use WidgetKit instead"]
        #[unsafe(method(initWithLine1TextProvider:line2TextProvider:))]
        #[unsafe(method_family = init)]
        pub unsafe fn initWithLine1TextProvider_line2TextProvider(
            this: Allocated<Self>,
            line1_text_provider: &CLKTextProvider,
            line2_text_provider: &CLKTextProvider,
        ) -> Retained<Self>;

        #[cfg(feature = "CLKTextProvider")]
        #[unsafe(method(templateWithLine1TextProvider:line2TextProvider:))]
        #[unsafe(method_family = none)]
        pub unsafe fn templateWithLine1TextProvider_line2TextProvider(
            line1_text_provider: &CLKTextProvider,
            line2_text_provider: &CLKTextProvider,
        ) -> Retained<Self>;
    );
}

/// Methods declared on superclass `CLKComplicationTemplate`.
impl CLKComplicationTemplateGraphicExtraLargeCircularStackText {
    extern_methods!(
        #[deprecated = "Initializing a template without parameters is deprecated in watchOS 7.0. Use an init with parameters instead."]
        #[unsafe(method(init))]
        #[unsafe(method_family = init)]
        pub unsafe fn init(this: Allocated<Self>) -> Retained<Self>;

        #[deprecated = "Creating a template without parameters is deprecated in watchOS 7.0. Use a factory method with parameters instead."]
        #[unsafe(method(new))]
        #[unsafe(method_family = new)]
        pub unsafe fn new() -> Retained<Self>;
    );
}

extern_class!(
    /// [Apple's documentation](https://developer.apple.com/documentation/clockkit/clkcomplicationtemplategraphicextralargecircularstackimage?language=objc)
    #[unsafe(super(
        CLKComplicationTemplateGraphicExtraLargeCircular,
        CLKComplicationTemplate,
        NSObject
    ))]
    #[derive(Debug, PartialEq, Eq, Hash)]
    #[deprecated = "On watchOS 9.0 or later, use WidgetKit instead"]
    pub struct CLKComplicationTemplateGraphicExtraLargeCircularStackImage;
);

extern_conformance!(
    unsafe impl NSCopying for CLKComplicationTemplateGraphicExtraLargeCircularStackImage {}
);

unsafe impl CopyingHelper for CLKComplicationTemplateGraphicExtraLargeCircularStackImage {
    type Result = Self;
}

extern_conformance!(
    unsafe impl NSObjectProtocol for CLKComplicationTemplateGraphicExtraLargeCircularStackImage {}
);

impl CLKComplicationTemplateGraphicExtraLargeCircularStackImage {
    extern_methods!(
        #[cfg(feature = "CLKFullColorImageProvider")]
        #[deprecated = "On watchOS 9.0 or later, use WidgetKit instead"]
        #[unsafe(method(line1ImageProvider))]
        #[unsafe(method_family = none)]
        pub unsafe fn line1ImageProvider(&self) -> Retained<CLKFullColorImageProvider>;

        #[cfg(feature = "CLKFullColorImageProvider")]
        /// Setter for [`line1ImageProvider`][Self::line1ImageProvider].
        ///
        /// This is [copied][objc2_foundation::NSCopying::copy] when set.
        #[deprecated = "On watchOS 9.0 or later, use WidgetKit instead"]
        #[unsafe(method(setLine1ImageProvider:))]
        #[unsafe(method_family = none)]
        pub unsafe fn setLine1ImageProvider(
            &self,
            line1_image_provider: &CLKFullColorImageProvider,
        );

        #[cfg(feature = "CLKTextProvider")]
        #[deprecated = "On watchOS 9.0 or later, use WidgetKit instead"]
        #[unsafe(method(line2TextProvider))]
        #[unsafe(method_family = none)]
        pub unsafe fn line2TextProvider(&self) -> Retained<CLKTextProvider>;

        #[cfg(feature = "CLKTextProvider")]
        /// Setter for [`line2TextProvider`][Self::line2TextProvider].
        ///
        /// This is [copied][objc2_foundation::NSCopying::copy] when set.
        #[deprecated = "On watchOS 9.0 or later, use WidgetKit instead"]
        #[unsafe(method(setLine2TextProvider:))]
        #[unsafe(method_family = none)]
        pub unsafe fn setLine2TextProvider(&self, line2_text_provider: &CLKTextProvider);

        #[cfg(all(feature = "CLKFullColorImageProvider", feature = "CLKTextProvider"))]
        #[deprecated = "On watchOS 9.0 or later, use WidgetKit instead"]
        #[unsafe(method(initWithLine1ImageProvider:line2TextProvider:))]
        #[unsafe(method_family = init)]
        pub unsafe fn initWithLine1ImageProvider_line2TextProvider(
            this: Allocated<Self>,
            line1_image_provider: &CLKFullColorImageProvider,
            line2_text_provider: &CLKTextProvider,
        ) -> Retained<Self>;

        #[cfg(all(feature = "CLKFullColorImageProvider", feature = "CLKTextProvider"))]
        #[unsafe(method(templateWithLine1ImageProvider:line2TextProvider:))]
        #[unsafe(method_family = none)]
        pub unsafe fn templateWithLine1ImageProvider_line2TextProvider(
            line1_image_provider: &CLKFullColorImageProvider,
            line2_text_provider: &CLKTextProvider,
        ) -> Retained<Self>;
    );
}

/// Methods declared on superclass `CLKComplicationTemplate`.
impl CLKComplicationTemplateGraphicExtraLargeCircularStackImage {
    extern_methods!(
        #[deprecated = "Initializing a template without parameters is deprecated in watchOS 7.0. Use an init with parameters instead."]
        #[unsafe(method(init))]
        #[unsafe(method_family = init)]
        pub unsafe fn init(this: Allocated<Self>) -> Retained<Self>;

        #[deprecated = "Creating a template without parameters is deprecated in watchOS 7.0. Use a factory method with parameters instead."]
        #[unsafe(method(new))]
        #[unsafe(method_family = new)]
        pub unsafe fn new() -> Retained<Self>;
    );
}
