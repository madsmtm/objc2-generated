// This file has been automatically generated by `objc2`'s `header-translator`.
// DO NOT EDIT

#![allow(unused_imports)]
#![allow(deprecated)]
#![allow(non_snake_case)]
#![allow(non_camel_case_types)]
#![allow(non_upper_case_globals)]
#![allow(missing_docs)]
#![allow(clippy::too_many_arguments)]
#![allow(clippy::type_complexity)]
#![allow(clippy::upper_case_acronyms)]
#![allow(clippy::identity_op)]
#![allow(clippy::missing_safety_doc)]
#![allow(clippy::doc_lazy_continuation)]
#![allow(rustdoc::broken_intra_doc_links)]
#![allow(rustdoc::bare_urls)]
#![allow(rustdoc::invalid_html_tags)]

#[link(name = "ClockKit", kind = "framework")]
extern "C" {}

#[cfg(feature = "CLKComplication")]
#[path = "CLKComplication.rs"]
mod __CLKComplication;
#[cfg(feature = "CLKComplicationDataSource")]
#[path = "CLKComplicationDataSource.rs"]
mod __CLKComplicationDataSource;
#[cfg(feature = "CLKComplicationDescriptor")]
#[path = "CLKComplicationDescriptor.rs"]
mod __CLKComplicationDescriptor;
#[cfg(feature = "CLKComplicationIntentWidgetMigrationConfiguration")]
#[path = "CLKComplicationIntentWidgetMigrationConfiguration.rs"]
mod __CLKComplicationIntentWidgetMigrationConfiguration;
#[cfg(feature = "CLKComplicationServer")]
#[path = "CLKComplicationServer.rs"]
mod __CLKComplicationServer;
#[cfg(feature = "CLKComplicationStaticWidgetMigrationConfiguration")]
#[path = "CLKComplicationStaticWidgetMigrationConfiguration.rs"]
mod __CLKComplicationStaticWidgetMigrationConfiguration;
#[cfg(feature = "CLKComplicationTemplate")]
#[path = "CLKComplicationTemplate.rs"]
mod __CLKComplicationTemplate;
#[cfg(feature = "CLKComplicationTimelineEntry")]
#[path = "CLKComplicationTimelineEntry.rs"]
mod __CLKComplicationTimelineEntry;
#[cfg(feature = "CLKComplicationWidgetMigrationConfiguration")]
#[path = "CLKComplicationWidgetMigrationConfiguration.rs"]
mod __CLKComplicationWidgetMigrationConfiguration;
#[cfg(feature = "CLKComplicationWidgetMigrator")]
#[path = "CLKComplicationWidgetMigrator.rs"]
mod __CLKComplicationWidgetMigrator;
#[cfg(feature = "CLKDefines")]
#[path = "CLKDefines.rs"]
mod __CLKDefines;
#[cfg(feature = "CLKFullColorImageProvider")]
#[path = "CLKFullColorImageProvider.rs"]
mod __CLKFullColorImageProvider;
#[cfg(feature = "CLKGaugeProvider")]
#[path = "CLKGaugeProvider.rs"]
mod __CLKGaugeProvider;
#[cfg(feature = "CLKImageProvider")]
#[path = "CLKImageProvider.rs"]
mod __CLKImageProvider;
#[cfg(feature = "CLKTextProvider")]
#[path = "CLKTextProvider.rs"]
mod __CLKTextProvider;
#[cfg(feature = "CLKWatchFaceLibrary")]
#[path = "CLKWatchFaceLibrary.rs"]
mod __CLKWatchFaceLibrary;

#[cfg(feature = "CLKComplication")]
pub use self::__CLKComplication::CLKComplication;
#[cfg(feature = "CLKComplicationDataSource")]
pub use self::__CLKComplicationDataSource::CLKComplicationDataSource;
#[cfg(feature = "CLKComplicationDescriptor")]
pub use self::__CLKComplicationDescriptor::CLKComplicationDescriptor;
#[cfg(all(
    feature = "CLKComplicationIntentWidgetMigrationConfiguration",
    feature = "CLKComplicationWidgetMigrationConfiguration"
))]
pub use self::__CLKComplicationIntentWidgetMigrationConfiguration::CLKComplicationIntentWidgetMigrationConfiguration;
#[cfg(feature = "CLKComplicationServer")]
pub use self::__CLKComplicationServer::CLKComplicationServer;
#[cfg(feature = "CLKComplicationServer")]
pub use self::__CLKComplicationServer::CLKComplicationServerActiveComplicationsDidChangeNotification;
#[cfg(all(
    feature = "CLKComplicationStaticWidgetMigrationConfiguration",
    feature = "CLKComplicationWidgetMigrationConfiguration"
))]
pub use self::__CLKComplicationStaticWidgetMigrationConfiguration::CLKComplicationStaticWidgetMigrationConfiguration;
#[cfg(feature = "CLKComplicationTemplate")]
pub use self::__CLKComplicationTemplate::CLKComplicationTemplate;
#[cfg(feature = "CLKComplicationTemplate")]
pub use self::__CLKComplicationTemplate::CLKComplicationTemplateCircularSmallRingImage;
#[cfg(feature = "CLKComplicationTemplate")]
pub use self::__CLKComplicationTemplate::CLKComplicationTemplateCircularSmallRingText;
#[cfg(feature = "CLKComplicationTemplate")]
pub use self::__CLKComplicationTemplate::CLKComplicationTemplateCircularSmallSimpleImage;
#[cfg(feature = "CLKComplicationTemplate")]
pub use self::__CLKComplicationTemplate::CLKComplicationTemplateCircularSmallSimpleText;
#[cfg(feature = "CLKComplicationTemplate")]
pub use self::__CLKComplicationTemplate::CLKComplicationTemplateCircularSmallStackImage;
#[cfg(feature = "CLKComplicationTemplate")]
pub use self::__CLKComplicationTemplate::CLKComplicationTemplateCircularSmallStackText;
#[cfg(feature = "CLKComplicationTemplate")]
pub use self::__CLKComplicationTemplate::CLKComplicationTemplateExtraLargeColumnsText;
#[cfg(feature = "CLKComplicationTemplate")]
pub use self::__CLKComplicationTemplate::CLKComplicationTemplateExtraLargeRingImage;
#[cfg(feature = "CLKComplicationTemplate")]
pub use self::__CLKComplicationTemplate::CLKComplicationTemplateExtraLargeRingText;
#[cfg(feature = "CLKComplicationTemplate")]
pub use self::__CLKComplicationTemplate::CLKComplicationTemplateExtraLargeSimpleImage;
#[cfg(feature = "CLKComplicationTemplate")]
pub use self::__CLKComplicationTemplate::CLKComplicationTemplateExtraLargeSimpleText;
#[cfg(feature = "CLKComplicationTemplate")]
pub use self::__CLKComplicationTemplate::CLKComplicationTemplateExtraLargeStackImage;
#[cfg(feature = "CLKComplicationTemplate")]
pub use self::__CLKComplicationTemplate::CLKComplicationTemplateExtraLargeStackText;
#[cfg(feature = "CLKComplicationTemplate")]
pub use self::__CLKComplicationTemplate::CLKComplicationTemplateGraphicBezelCircularText;
#[cfg(feature = "CLKComplicationTemplate")]
pub use self::__CLKComplicationTemplate::CLKComplicationTemplateGraphicCircular;
#[cfg(feature = "CLKComplicationTemplate")]
pub use self::__CLKComplicationTemplate::CLKComplicationTemplateGraphicCircularClosedGaugeImage;
#[cfg(feature = "CLKComplicationTemplate")]
pub use self::__CLKComplicationTemplate::CLKComplicationTemplateGraphicCircularClosedGaugeText;
#[cfg(feature = "CLKComplicationTemplate")]
pub use self::__CLKComplicationTemplate::CLKComplicationTemplateGraphicCircularImage;
#[cfg(feature = "CLKComplicationTemplate")]
pub use self::__CLKComplicationTemplate::CLKComplicationTemplateGraphicCircularOpenGaugeImage;
#[cfg(feature = "CLKComplicationTemplate")]
pub use self::__CLKComplicationTemplate::CLKComplicationTemplateGraphicCircularOpenGaugeRangeText;
#[cfg(feature = "CLKComplicationTemplate")]
pub use self::__CLKComplicationTemplate::CLKComplicationTemplateGraphicCircularOpenGaugeSimpleText;
#[cfg(feature = "CLKComplicationTemplate")]
pub use self::__CLKComplicationTemplate::CLKComplicationTemplateGraphicCircularStackImage;
#[cfg(feature = "CLKComplicationTemplate")]
pub use self::__CLKComplicationTemplate::CLKComplicationTemplateGraphicCircularStackText;
#[cfg(feature = "CLKComplicationTemplate")]
pub use self::__CLKComplicationTemplate::CLKComplicationTemplateGraphicCornerCircularImage;
#[cfg(feature = "CLKComplicationTemplate")]
pub use self::__CLKComplicationTemplate::CLKComplicationTemplateGraphicCornerGaugeImage;
#[cfg(feature = "CLKComplicationTemplate")]
pub use self::__CLKComplicationTemplate::CLKComplicationTemplateGraphicCornerGaugeText;
#[cfg(feature = "CLKComplicationTemplate")]
pub use self::__CLKComplicationTemplate::CLKComplicationTemplateGraphicCornerStackText;
#[cfg(feature = "CLKComplicationTemplate")]
pub use self::__CLKComplicationTemplate::CLKComplicationTemplateGraphicCornerTextImage;
#[cfg(feature = "CLKComplicationTemplate")]
pub use self::__CLKComplicationTemplate::CLKComplicationTemplateGraphicExtraLargeCircular;
#[cfg(feature = "CLKComplicationTemplate")]
pub use self::__CLKComplicationTemplate::CLKComplicationTemplateGraphicExtraLargeCircularClosedGaugeImage;
#[cfg(feature = "CLKComplicationTemplate")]
pub use self::__CLKComplicationTemplate::CLKComplicationTemplateGraphicExtraLargeCircularClosedGaugeText;
#[cfg(feature = "CLKComplicationTemplate")]
pub use self::__CLKComplicationTemplate::CLKComplicationTemplateGraphicExtraLargeCircularImage;
#[cfg(feature = "CLKComplicationTemplate")]
pub use self::__CLKComplicationTemplate::CLKComplicationTemplateGraphicExtraLargeCircularOpenGaugeImage;
#[cfg(feature = "CLKComplicationTemplate")]
pub use self::__CLKComplicationTemplate::CLKComplicationTemplateGraphicExtraLargeCircularOpenGaugeRangeText;
#[cfg(feature = "CLKComplicationTemplate")]
pub use self::__CLKComplicationTemplate::CLKComplicationTemplateGraphicExtraLargeCircularOpenGaugeSimpleText;
#[cfg(feature = "CLKComplicationTemplate")]
pub use self::__CLKComplicationTemplate::CLKComplicationTemplateGraphicExtraLargeCircularStackImage;
#[cfg(feature = "CLKComplicationTemplate")]
pub use self::__CLKComplicationTemplate::CLKComplicationTemplateGraphicExtraLargeCircularStackText;
#[cfg(feature = "CLKComplicationTemplate")]
pub use self::__CLKComplicationTemplate::CLKComplicationTemplateGraphicRectangularFullImage;
#[cfg(feature = "CLKComplicationTemplate")]
pub use self::__CLKComplicationTemplate::CLKComplicationTemplateGraphicRectangularLargeImage;
#[cfg(feature = "CLKComplicationTemplate")]
pub use self::__CLKComplicationTemplate::CLKComplicationTemplateGraphicRectangularStandardBody;
#[cfg(feature = "CLKComplicationTemplate")]
pub use self::__CLKComplicationTemplate::CLKComplicationTemplateGraphicRectangularTextGauge;
#[cfg(feature = "CLKComplicationTemplate")]
pub use self::__CLKComplicationTemplate::CLKComplicationTemplateModularLargeColumns;
#[cfg(feature = "CLKComplicationTemplate")]
pub use self::__CLKComplicationTemplate::CLKComplicationTemplateModularLargeStandardBody;
#[cfg(feature = "CLKComplicationTemplate")]
pub use self::__CLKComplicationTemplate::CLKComplicationTemplateModularLargeTable;
#[cfg(feature = "CLKComplicationTemplate")]
pub use self::__CLKComplicationTemplate::CLKComplicationTemplateModularLargeTallBody;
#[cfg(feature = "CLKComplicationTemplate")]
pub use self::__CLKComplicationTemplate::CLKComplicationTemplateModularSmallColumnsText;
#[cfg(feature = "CLKComplicationTemplate")]
pub use self::__CLKComplicationTemplate::CLKComplicationTemplateModularSmallRingImage;
#[cfg(feature = "CLKComplicationTemplate")]
pub use self::__CLKComplicationTemplate::CLKComplicationTemplateModularSmallRingText;
#[cfg(feature = "CLKComplicationTemplate")]
pub use self::__CLKComplicationTemplate::CLKComplicationTemplateModularSmallSimpleImage;
#[cfg(feature = "CLKComplicationTemplate")]
pub use self::__CLKComplicationTemplate::CLKComplicationTemplateModularSmallSimpleText;
#[cfg(feature = "CLKComplicationTemplate")]
pub use self::__CLKComplicationTemplate::CLKComplicationTemplateModularSmallStackImage;
#[cfg(feature = "CLKComplicationTemplate")]
pub use self::__CLKComplicationTemplate::CLKComplicationTemplateModularSmallStackText;
#[cfg(feature = "CLKComplicationTemplate")]
pub use self::__CLKComplicationTemplate::CLKComplicationTemplateUtilitarianLargeFlat;
#[cfg(feature = "CLKComplicationTemplate")]
pub use self::__CLKComplicationTemplate::CLKComplicationTemplateUtilitarianSmallFlat;
#[cfg(feature = "CLKComplicationTemplate")]
pub use self::__CLKComplicationTemplate::CLKComplicationTemplateUtilitarianSmallRingImage;
#[cfg(feature = "CLKComplicationTemplate")]
pub use self::__CLKComplicationTemplate::CLKComplicationTemplateUtilitarianSmallRingText;
#[cfg(feature = "CLKComplicationTemplate")]
pub use self::__CLKComplicationTemplate::CLKComplicationTemplateUtilitarianSmallSquare;
#[cfg(feature = "CLKComplicationTimelineEntry")]
pub use self::__CLKComplicationTimelineEntry::CLKComplicationTimelineEntry;
#[cfg(feature = "CLKComplicationWidgetMigrationConfiguration")]
pub use self::__CLKComplicationWidgetMigrationConfiguration::CLKComplicationWidgetMigrationConfiguration;
#[cfg(feature = "CLKComplicationWidgetMigrator")]
pub use self::__CLKComplicationWidgetMigrator::CLKComplicationWidgetMigrator;
#[cfg(feature = "CLKDefines")]
pub use self::__CLKDefines::CLKAllComplicationFamilies;
#[cfg(feature = "CLKDefines")]
pub use self::__CLKDefines::CLKComplicationColumnAlignment;
#[cfg(feature = "CLKDefines")]
pub use self::__CLKDefines::CLKComplicationFamily;
#[cfg(feature = "CLKDefines")]
pub use self::__CLKDefines::CLKComplicationPrivacyBehavior;
#[cfg(feature = "CLKDefines")]
pub use self::__CLKDefines::CLKComplicationRingStyle;
#[cfg(feature = "CLKDefines")]
pub use self::__CLKDefines::CLKComplicationTimeTravelDirections;
#[cfg(feature = "CLKDefines")]
pub use self::__CLKDefines::CLKComplicationTimelineAnimationBehavior;
#[cfg(feature = "CLKDefines")]
pub use self::__CLKDefines::CLKDefaultComplicationIdentifier;
#[cfg(feature = "CLKDefines")]
pub use self::__CLKDefines::CLKGaugeProviderStyle;
#[cfg(feature = "CLKDefines")]
pub use self::__CLKDefines::CLKLaunchedComplicationIdentifierKey;
#[cfg(feature = "CLKDefines")]
pub use self::__CLKDefines::CLKLaunchedTimelineEntryDateKey;
#[cfg(feature = "CLKDefines")]
pub use self::__CLKDefines::CLKSimpleGaugeProviderFillFractionEmpty;
#[cfg(feature = "CLKFullColorImageProvider")]
pub use self::__CLKFullColorImageProvider::CLKFullColorImageProvider;
#[cfg(feature = "CLKGaugeProvider")]
pub use self::__CLKGaugeProvider::CLKGaugeProvider;
#[cfg(feature = "CLKGaugeProvider")]
pub use self::__CLKGaugeProvider::CLKSimpleGaugeProvider;
#[cfg(feature = "CLKGaugeProvider")]
pub use self::__CLKGaugeProvider::CLKTimeIntervalGaugeProvider;
#[cfg(feature = "CLKImageProvider")]
pub use self::__CLKImageProvider::CLKImageProvider;
#[cfg(feature = "CLKTextProvider")]
pub use self::__CLKTextProvider::CLKDateTextProvider;
#[cfg(feature = "CLKTextProvider")]
pub use self::__CLKTextProvider::CLKRelativeDateStyle;
#[cfg(feature = "CLKTextProvider")]
pub use self::__CLKTextProvider::CLKRelativeDateTextProvider;
#[cfg(feature = "CLKTextProvider")]
pub use self::__CLKTextProvider::CLKSimpleTextProvider;
#[cfg(feature = "CLKTextProvider")]
pub use self::__CLKTextProvider::CLKTextProvider;
#[cfg(feature = "CLKTextProvider")]
pub use self::__CLKTextProvider::CLKTimeIntervalTextProvider;
#[cfg(feature = "CLKTextProvider")]
pub use self::__CLKTextProvider::CLKTimeTextProvider;
#[cfg(feature = "CLKWatchFaceLibrary")]
pub use self::__CLKWatchFaceLibrary::CLKWatchFaceLibrary;
#[cfg(feature = "CLKWatchFaceLibrary")]
pub use self::__CLKWatchFaceLibrary::CLKWatchFaceLibraryErrorCode;
#[cfg(feature = "CLKWatchFaceLibrary")]
pub use self::__CLKWatchFaceLibrary::CLKWatchFaceLibraryErrorDomain;
