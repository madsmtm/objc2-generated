//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use core::ffi::*;
use core::ptr::NonNull;
use objc2::__framework_prelude::*;
#[cfg(feature = "objc2-core-media")]
use objc2_core_media::*;
use objc2_foundation::*;

use crate::*;

extern_class!(
    /// AVMetadataGroup is the common superclass for AVTimedMetadataGroup and AVDateRangeMetadataGroup; each represents a collection of metadata items associated with a segment of a timeline. AVTimedMetadataGroup is typically used with content that defines an independent timeline, while AVDateRangeMetadataGroup is typically used with content that's associated with a specific range of dates.
    ///
    /// See also [Apple's documentation](https://developer.apple.com/documentation/avfoundation/avmetadatagroup?language=objc)
    #[unsafe(super(NSObject))]
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub struct AVMetadataGroup;
);

extern_conformance!(
    unsafe impl NSObjectProtocol for AVMetadataGroup {}
);

impl AVMetadataGroup {
    extern_methods!(
        #[cfg(feature = "AVMetadataItem")]
        #[unsafe(method(items))]
        #[unsafe(method_family = none)]
        pub unsafe fn items(&self) -> Retained<NSArray<AVMetadataItem>>;
    );
}

/// Methods declared on superclass `NSObject`.
impl AVMetadataGroup {
    extern_methods!(
        #[unsafe(method(init))]
        #[unsafe(method_family = init)]
        pub unsafe fn init(this: Allocated<Self>) -> Retained<Self>;

        #[unsafe(method(new))]
        #[unsafe(method_family = new)]
        pub unsafe fn new() -> Retained<Self>;
    );
}

/// AVMetadataGroupIdentification.
impl AVMetadataGroup {
    extern_methods!(
        #[unsafe(method(classifyingLabel))]
        #[unsafe(method_family = none)]
        pub unsafe fn classifyingLabel(&self) -> Option<Retained<NSString>>;

        #[unsafe(method(uniqueID))]
        #[unsafe(method_family = none)]
        pub unsafe fn uniqueID(&self) -> Option<Retained<NSString>>;
    );
}

extern_class!(
    /// AVTimedMetadataGroup is used to represent a collection of metadata items that are valid for use during a specific range of time. For example, AVTimedMetadataGroups are used to represent chapters, optionally containing metadata items for chapter titles and chapter images.
    ///
    /// See also [Apple's documentation](https://developer.apple.com/documentation/avfoundation/avtimedmetadatagroup?language=objc)
    #[unsafe(super(AVMetadataGroup, NSObject))]
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub struct AVTimedMetadataGroup;
);

extern_conformance!(
    unsafe impl NSCopying for AVTimedMetadataGroup {}
);

unsafe impl CopyingHelper for AVTimedMetadataGroup {
    type Result = Self;
}

extern_conformance!(
    unsafe impl NSMutableCopying for AVTimedMetadataGroup {}
);

unsafe impl MutableCopyingHelper for AVTimedMetadataGroup {
    type Result = AVMutableTimedMetadataGroup;
}

extern_conformance!(
    unsafe impl NSObjectProtocol for AVTimedMetadataGroup {}
);

impl AVTimedMetadataGroup {
    extern_methods!(
        #[cfg(all(feature = "AVMetadataItem", feature = "objc2-core-media"))]
        /// Initializes an instance of AVTimedMetadataGroup with a collection of metadata items.
        ///
        /// Parameter `items`: An NSArray of AVMetadataItems.
        ///
        /// Parameter `timeRange`: The timeRange of the collection of AVMetadataItems.
        ///
        /// Returns: An instance of AVTimedMetadataGroup.
        #[unsafe(method(initWithItems:timeRange:))]
        #[unsafe(method_family = init)]
        pub unsafe fn initWithItems_timeRange(
            this: Allocated<Self>,
            items: &NSArray<AVMetadataItem>,
            time_range: CMTimeRange,
        ) -> Retained<Self>;

        #[cfg(feature = "objc2-core-media")]
        /// Initializes an instance of AVTimedMetadataGroup with a sample buffer.
        ///
        /// Parameter `sampleBuffer`: A CMSampleBuffer with media type kCMMediaType_Metadata.
        ///
        /// Returns: An instance of AVTimedMetadataGroup.
        #[unsafe(method(initWithSampleBuffer:))]
        #[unsafe(method_family = init)]
        pub unsafe fn initWithSampleBuffer(
            this: Allocated<Self>,
            sample_buffer: &CMSampleBuffer,
        ) -> Option<Retained<Self>>;

        #[cfg(feature = "objc2-core-media")]
        #[unsafe(method(timeRange))]
        #[unsafe(method_family = none)]
        pub unsafe fn timeRange(&self) -> CMTimeRange;

        #[cfg(feature = "AVMetadataItem")]
        #[unsafe(method(items))]
        #[unsafe(method_family = none)]
        pub unsafe fn items(&self) -> Retained<NSArray<AVMetadataItem>>;
    );
}

/// Methods declared on superclass `NSObject`.
impl AVTimedMetadataGroup {
    extern_methods!(
        #[unsafe(method(init))]
        #[unsafe(method_family = init)]
        pub unsafe fn init(this: Allocated<Self>) -> Retained<Self>;

        #[unsafe(method(new))]
        #[unsafe(method_family = new)]
        pub unsafe fn new() -> Retained<Self>;
    );
}

/// AVTimedMetadataGroupSerializationSupport.
impl AVTimedMetadataGroup {
    extern_methods!(
        #[cfg(feature = "objc2-core-media")]
        /// Creates a format description based on the receiver's items.
        ///
        /// Returns: An instance of CMMetadataFormatDescription sufficient to describe the contents of all the items referenced by the receiver.
        ///
        /// The returned format description is suitable for use as the format hint parameter when creating an instance of AVAssetWriterInput.
        ///
        /// Each item referenced by the receiver must carry a non-nil value for its dataType property.  An exception will be thrown if any item does not have a data type.
        #[unsafe(method(copyFormatDescription))]
        #[unsafe(method_family = copy)]
        pub unsafe fn copyFormatDescription(&self)
            -> Option<Retained<CMMetadataFormatDescription>>;
    );
}

extern_class!(
    /// AVMutableTimedMetadataGroup is used to represent a mutable collection of metadata items that are valid for use during a specific range of time.
    ///
    /// See also [Apple's documentation](https://developer.apple.com/documentation/avfoundation/avmutabletimedmetadatagroup?language=objc)
    #[unsafe(super(AVTimedMetadataGroup, AVMetadataGroup, NSObject))]
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub struct AVMutableTimedMetadataGroup;
);

extern_conformance!(
    unsafe impl NSCopying for AVMutableTimedMetadataGroup {}
);

unsafe impl CopyingHelper for AVMutableTimedMetadataGroup {
    type Result = AVTimedMetadataGroup;
}

extern_conformance!(
    unsafe impl NSMutableCopying for AVMutableTimedMetadataGroup {}
);

unsafe impl MutableCopyingHelper for AVMutableTimedMetadataGroup {
    type Result = Self;
}

extern_conformance!(
    unsafe impl NSObjectProtocol for AVMutableTimedMetadataGroup {}
);

impl AVMutableTimedMetadataGroup {
    extern_methods!(
        #[cfg(feature = "objc2-core-media")]
        #[unsafe(method(timeRange))]
        #[unsafe(method_family = none)]
        pub unsafe fn timeRange(&self) -> CMTimeRange;

        #[cfg(feature = "objc2-core-media")]
        /// Setter for [`timeRange`][Self::timeRange].
        #[unsafe(method(setTimeRange:))]
        #[unsafe(method_family = none)]
        pub unsafe fn setTimeRange(&self, time_range: CMTimeRange);

        #[cfg(feature = "AVMetadataItem")]
        #[unsafe(method(items))]
        #[unsafe(method_family = none)]
        pub unsafe fn items(&self) -> Retained<NSArray<AVMetadataItem>>;

        #[cfg(feature = "AVMetadataItem")]
        /// Setter for [`items`][Self::items].
        ///
        /// This is [copied][objc2_foundation::NSCopying::copy] when set.
        #[unsafe(method(setItems:))]
        #[unsafe(method_family = none)]
        pub unsafe fn setItems(&self, items: &NSArray<AVMetadataItem>);
    );
}

/// Methods declared on superclass `AVTimedMetadataGroup`.
impl AVMutableTimedMetadataGroup {
    extern_methods!(
        #[cfg(all(feature = "AVMetadataItem", feature = "objc2-core-media"))]
        /// Initializes an instance of AVTimedMetadataGroup with a collection of metadata items.
        ///
        /// Parameter `items`: An NSArray of AVMetadataItems.
        ///
        /// Parameter `timeRange`: The timeRange of the collection of AVMetadataItems.
        ///
        /// Returns: An instance of AVTimedMetadataGroup.
        #[unsafe(method(initWithItems:timeRange:))]
        #[unsafe(method_family = init)]
        pub unsafe fn initWithItems_timeRange(
            this: Allocated<Self>,
            items: &NSArray<AVMetadataItem>,
            time_range: CMTimeRange,
        ) -> Retained<Self>;

        #[cfg(feature = "objc2-core-media")]
        /// Initializes an instance of AVTimedMetadataGroup with a sample buffer.
        ///
        /// Parameter `sampleBuffer`: A CMSampleBuffer with media type kCMMediaType_Metadata.
        ///
        /// Returns: An instance of AVTimedMetadataGroup.
        #[unsafe(method(initWithSampleBuffer:))]
        #[unsafe(method_family = init)]
        pub unsafe fn initWithSampleBuffer(
            this: Allocated<Self>,
            sample_buffer: &CMSampleBuffer,
        ) -> Option<Retained<Self>>;
    );
}

/// Methods declared on superclass `NSObject`.
impl AVMutableTimedMetadataGroup {
    extern_methods!(
        #[unsafe(method(init))]
        #[unsafe(method_family = init)]
        pub unsafe fn init(this: Allocated<Self>) -> Retained<Self>;

        #[unsafe(method(new))]
        #[unsafe(method_family = new)]
        pub unsafe fn new() -> Retained<Self>;
    );
}

extern_class!(
    /// AVDateRangeMetadataGroup is used to represent a collection of metadata items that are valid for use within a specific range of dates.
    ///
    /// See also [Apple's documentation](https://developer.apple.com/documentation/avfoundation/avdaterangemetadatagroup?language=objc)
    #[unsafe(super(AVMetadataGroup, NSObject))]
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub struct AVDateRangeMetadataGroup;
);

extern_conformance!(
    unsafe impl NSCopying for AVDateRangeMetadataGroup {}
);

unsafe impl CopyingHelper for AVDateRangeMetadataGroup {
    type Result = Self;
}

extern_conformance!(
    unsafe impl NSMutableCopying for AVDateRangeMetadataGroup {}
);

unsafe impl MutableCopyingHelper for AVDateRangeMetadataGroup {
    type Result = AVMutableDateRangeMetadataGroup;
}

extern_conformance!(
    unsafe impl NSObjectProtocol for AVDateRangeMetadataGroup {}
);

impl AVDateRangeMetadataGroup {
    extern_methods!(
        #[cfg(feature = "AVMetadataItem")]
        /// Initializes an instance of AVDateRangeMetadataGroup with a collection of metadata items.
        ///
        /// Parameter `items`: An NSArray of AVMetadataItems.
        ///
        /// Parameter `startDate`: The start date of the collection of AVMetadataItems.
        ///
        /// Parameter `endDate`: The end date of the collection of AVMetadataItems. If the receiver is intended to represent information about an instantaneous event, the value of endDate should be equal to the value of startDate. A value of nil for endDate indicates that the endDate is indefinite.
        ///
        /// Returns: An instance of AVDateRangeMetadataGroup.
        #[unsafe(method(initWithItems:startDate:endDate:))]
        #[unsafe(method_family = init)]
        pub unsafe fn initWithItems_startDate_endDate(
            this: Allocated<Self>,
            items: &NSArray<AVMetadataItem>,
            start_date: &NSDate,
            end_date: Option<&NSDate>,
        ) -> Retained<Self>;

        #[unsafe(method(startDate))]
        #[unsafe(method_family = none)]
        pub unsafe fn startDate(&self) -> Retained<NSDate>;

        #[unsafe(method(endDate))]
        #[unsafe(method_family = none)]
        pub unsafe fn endDate(&self) -> Option<Retained<NSDate>>;

        #[cfg(feature = "AVMetadataItem")]
        #[unsafe(method(items))]
        #[unsafe(method_family = none)]
        pub unsafe fn items(&self) -> Retained<NSArray<AVMetadataItem>>;
    );
}

/// Methods declared on superclass `NSObject`.
impl AVDateRangeMetadataGroup {
    extern_methods!(
        #[unsafe(method(init))]
        #[unsafe(method_family = init)]
        pub unsafe fn init(this: Allocated<Self>) -> Retained<Self>;

        #[unsafe(method(new))]
        #[unsafe(method_family = new)]
        pub unsafe fn new() -> Retained<Self>;
    );
}

extern_class!(
    /// AVMutableDateRangeMetadataGroup is used to represent a mutable collection of metadata items that are valid for use within a specific range of dates.
    ///
    /// See also [Apple's documentation](https://developer.apple.com/documentation/avfoundation/avmutabledaterangemetadatagroup?language=objc)
    #[unsafe(super(AVDateRangeMetadataGroup, AVMetadataGroup, NSObject))]
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub struct AVMutableDateRangeMetadataGroup;
);

extern_conformance!(
    unsafe impl NSCopying for AVMutableDateRangeMetadataGroup {}
);

unsafe impl CopyingHelper for AVMutableDateRangeMetadataGroup {
    type Result = AVDateRangeMetadataGroup;
}

extern_conformance!(
    unsafe impl NSMutableCopying for AVMutableDateRangeMetadataGroup {}
);

unsafe impl MutableCopyingHelper for AVMutableDateRangeMetadataGroup {
    type Result = Self;
}

extern_conformance!(
    unsafe impl NSObjectProtocol for AVMutableDateRangeMetadataGroup {}
);

impl AVMutableDateRangeMetadataGroup {
    extern_methods!(
        #[unsafe(method(startDate))]
        #[unsafe(method_family = none)]
        pub unsafe fn startDate(&self) -> Retained<NSDate>;

        /// Setter for [`startDate`][Self::startDate].
        ///
        /// This is [copied][objc2_foundation::NSCopying::copy] when set.
        #[unsafe(method(setStartDate:))]
        #[unsafe(method_family = none)]
        pub unsafe fn setStartDate(&self, start_date: &NSDate);

        #[unsafe(method(endDate))]
        #[unsafe(method_family = none)]
        pub unsafe fn endDate(&self) -> Option<Retained<NSDate>>;

        /// Setter for [`endDate`][Self::endDate].
        ///
        /// This is [copied][objc2_foundation::NSCopying::copy] when set.
        #[unsafe(method(setEndDate:))]
        #[unsafe(method_family = none)]
        pub unsafe fn setEndDate(&self, end_date: Option<&NSDate>);

        #[cfg(feature = "AVMetadataItem")]
        #[unsafe(method(items))]
        #[unsafe(method_family = none)]
        pub unsafe fn items(&self) -> Retained<NSArray<AVMetadataItem>>;

        #[cfg(feature = "AVMetadataItem")]
        /// Setter for [`items`][Self::items].
        ///
        /// This is [copied][objc2_foundation::NSCopying::copy] when set.
        #[unsafe(method(setItems:))]
        #[unsafe(method_family = none)]
        pub unsafe fn setItems(&self, items: &NSArray<AVMetadataItem>);
    );
}

/// Methods declared on superclass `AVDateRangeMetadataGroup`.
impl AVMutableDateRangeMetadataGroup {
    extern_methods!(
        #[cfg(feature = "AVMetadataItem")]
        /// Initializes an instance of AVDateRangeMetadataGroup with a collection of metadata items.
        ///
        /// Parameter `items`: An NSArray of AVMetadataItems.
        ///
        /// Parameter `startDate`: The start date of the collection of AVMetadataItems.
        ///
        /// Parameter `endDate`: The end date of the collection of AVMetadataItems. If the receiver is intended to represent information about an instantaneous event, the value of endDate should be equal to the value of startDate. A value of nil for endDate indicates that the endDate is indefinite.
        ///
        /// Returns: An instance of AVDateRangeMetadataGroup.
        #[unsafe(method(initWithItems:startDate:endDate:))]
        #[unsafe(method_family = init)]
        pub unsafe fn initWithItems_startDate_endDate(
            this: Allocated<Self>,
            items: &NSArray<AVMetadataItem>,
            start_date: &NSDate,
            end_date: Option<&NSDate>,
        ) -> Retained<Self>;
    );
}

/// Methods declared on superclass `NSObject`.
impl AVMutableDateRangeMetadataGroup {
    extern_methods!(
        #[unsafe(method(init))]
        #[unsafe(method_family = init)]
        pub unsafe fn init(this: Allocated<Self>) -> Retained<Self>;

        #[unsafe(method(new))]
        #[unsafe(method_family = new)]
        pub unsafe fn new() -> Retained<Self>;
    );
}
