//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use core::ffi::*;
use core::ptr::NonNull;
use objc2::__framework_prelude::*;
#[cfg(feature = "objc2-core-media")]
use objc2_core_media::*;

use crate::*;

extern_class!(
    /// Defines an interface for generating a spatial audio timed metadata sample.
    ///
    /// See also [Apple's documentation](https://developer.apple.com/documentation/avfoundation/avcapturespatialaudiometadatasamplegenerator?language=objc)
    #[unsafe(super(NSObject))]
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub struct AVCaptureSpatialAudioMetadataSampleGenerator;
);

extern_conformance!(
    unsafe impl NSObjectProtocol for AVCaptureSpatialAudioMetadataSampleGenerator {}
);

impl AVCaptureSpatialAudioMetadataSampleGenerator {
    extern_methods!(
        #[cfg(feature = "objc2-core-media")]
        /// Returns the CMFormatDescription that will be specified by the buffer returned from the createTimedMetadataSampleBuffer method.
        ///
        ///
        /// Clients can use this format description when creating their AVAssetWriter track that will contain the metadata.
        #[unsafe(method(timedMetadataSampleBufferFormatDescription))]
        #[unsafe(method_family = none)]
        pub unsafe fn timedMetadataSampleBufferFormatDescription(
            &self,
        ) -> Retained<CMFormatDescription>;

        #[cfg(feature = "objc2-core-media")]
        /// Analyzes the audio sample buffer for its contribution to the spatial audio timed metadata value.
        ///
        ///
        /// Parameter `sbuf`: An CMSampleBuffer containing spatial audio.
        ///
        /// Returns: Returns noErr if the sample was able to be analyzed.
        ///
        ///
        /// All of the spatial audio sample buffer that given to an AVAssetWriter need to be analyzed for the generation of the proper spatial audio timed metadata value.
        #[unsafe(method(analyzeAudioSample:))]
        #[unsafe(method_family = none)]
        pub unsafe fn analyzeAudioSample(&self, sbuf: &CMSampleBuffer) -> OSStatus;

        #[cfg(feature = "objc2-core-media")]
        /// Returns a CMSampleBuffer containing a spatial audio timed metadata sample containing the value computed from all of the prior audio sample buffers passed to analyzeAudioSample:. The analyzer is also reset to its initial state, making it ready for a new run of sample buffers.
        ///
        ///
        /// Returns: Returns an CMSampleBuffer that contains the spatial audio timed metadata sample. If no value can be computed, NULL will be returned.
        ///
        ///
        /// This method is to be called after the last audio sample buffer has been passed to the client's AVAssetWriterInput for audio. The returned CMSampleBuffer can be passed directly to the client's AVAssetWriterInput for the audio timed metadata track. Note that it is expected that one and only one sample buffer be present in the timed metadata track.
        #[unsafe(method(newTimedMetadataSampleBufferAndResetAnalyzer))]
        #[unsafe(method_family = none)]
        pub unsafe fn newTimedMetadataSampleBufferAndResetAnalyzer(
            &self,
        ) -> Option<Retained<CMSampleBuffer>>;

        /// Calling this method will reset the analyzer to its initial state so that a new run of audio sample buffers can be analyzed.
        ///
        ///
        /// If the client needs to abort generating the audio timed metadata buffer for audio buffers already given to analyzeAudioSample:, calling this method is required to prepare the analyzer for a new run of sample buffers.
        #[unsafe(method(resetAnalyzer))]
        #[unsafe(method_family = none)]
        pub unsafe fn resetAnalyzer(&self);
    );
}

/// Methods declared on superclass `NSObject`.
impl AVCaptureSpatialAudioMetadataSampleGenerator {
    extern_methods!(
        #[unsafe(method(init))]
        #[unsafe(method_family = init)]
        pub unsafe fn init(this: Allocated<Self>) -> Retained<Self>;

        #[unsafe(method(new))]
        #[unsafe(method_family = new)]
        pub unsafe fn new() -> Retained<Self>;
    );
}
