//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use core::ffi::*;
use core::ptr::NonNull;
use objc2::__framework_prelude::*;
use objc2_foundation::*;

use crate::*;

/// The coordinate types of DL-TDOA measurement updates that Nearby Interaction supports.
///
/// See also [Apple's documentation](https://developer.apple.com/documentation/nearbyinteraction/nidltdoacoordinatestype?language=objc)
// NS_ENUM
#[repr(transparent)]
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash, PartialOrd, Ord)]
pub struct NIDLTDOACoordinatesType(pub NSInteger);
impl NIDLTDOACoordinatesType {
    #[doc(alias = "NIDLTDOACoordinatesTypeGeodetic")]
    pub const Geodetic: Self = Self(0);
    #[doc(alias = "NIDLTDOACoordinatesTypeRelative")]
    pub const Relative: Self = Self(1);
}

unsafe impl Encode for NIDLTDOACoordinatesType {
    const ENCODING: Encoding = NSInteger::ENCODING;
}

unsafe impl RefEncode for NIDLTDOACoordinatesType {
    const ENCODING_REF: Encoding = Encoding::Pointer(&Self::ENCODING);
}

/// The measurement types of DL-TDOA measurement updates that Nearby Interaction supports.
///
/// See also [Apple's documentation](https://developer.apple.com/documentation/nearbyinteraction/nidltdoameasurementtype?language=objc)
// NS_ENUM
#[repr(transparent)]
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash, PartialOrd, Ord)]
pub struct NIDLTDOAMeasurementType(pub NSInteger);
impl NIDLTDOAMeasurementType {
    #[doc(alias = "NIDLTDOAMeasurementTypePoll")]
    pub const Poll: Self = Self(0);
    #[doc(alias = "NIDLTDOAMeasurementTypeResponse")]
    pub const Response: Self = Self(1);
    #[doc(alias = "NIDLTDOAMeasurementTypeFinal")]
    pub const Final: Self = Self(2);
}

unsafe impl Encode for NIDLTDOAMeasurementType {
    const ENCODING: Encoding = NSInteger::ENCODING;
}

unsafe impl RefEncode for NIDLTDOAMeasurementType {
    const ENCODING_REF: Encoding = Encoding::Pointer(&Self::ENCODING);
}

extern_class!(
    /// Represents a single measurement relative to a DL-TDOA anchor.
    ///
    /// See also [Apple's documentation](https://developer.apple.com/documentation/nearbyinteraction/nidltdoameasurement?language=objc)
    #[unsafe(super(NSObject))]
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub struct NIDLTDOAMeasurement;
);

unsafe impl Send for NIDLTDOAMeasurement {}

unsafe impl Sync for NIDLTDOAMeasurement {}

extern_conformance!(
    unsafe impl NSCoding for NIDLTDOAMeasurement {}
);

extern_conformance!(
    unsafe impl NSCopying for NIDLTDOAMeasurement {}
);

unsafe impl CopyingHelper for NIDLTDOAMeasurement {
    type Result = Self;
}

extern_conformance!(
    unsafe impl NSObjectProtocol for NIDLTDOAMeasurement {}
);

extern_conformance!(
    unsafe impl NSSecureCoding for NIDLTDOAMeasurement {}
);

impl NIDLTDOAMeasurement {
    extern_methods!(
        /// Indicates the address of anchor of this measurement.
        #[unsafe(method(address))]
        #[unsafe(method_family = none)]
        pub unsafe fn address(&self) -> NSUInteger;

        /// Indicates the type of this measurement.
        #[unsafe(method(measurementType))]
        #[unsafe(method_family = none)]
        pub unsafe fn measurementType(&self) -> NIDLTDOAMeasurementType;

        /// Indicates the transmission timestamp (in seconds).
        #[unsafe(method(transmitTime))]
        #[unsafe(method_family = none)]
        pub unsafe fn transmitTime(&self) -> c_double;

        /// Indicates the reception timestamp (in seconds).
        #[unsafe(method(receiveTime))]
        #[unsafe(method_family = none)]
        pub unsafe fn receiveTime(&self) -> c_double;

        /// Indicates the signal strength in dBm.
        #[unsafe(method(signalStrength))]
        #[unsafe(method_family = none)]
        pub unsafe fn signalStrength(&self) -> c_double;

        /// Indicates the estimated carrier frequency offset (dimensionless).
        #[unsafe(method(carrierFrequencyOffset))]
        #[unsafe(method_family = none)]
        pub unsafe fn carrierFrequencyOffset(&self) -> c_double;

        /// Inidicates the type of coordinates of this anchor.
        #[unsafe(method(coordinatesType))]
        #[unsafe(method_family = none)]
        pub unsafe fn coordinatesType(&self) -> NIDLTDOACoordinatesType;

        /// Unavailable
        #[unsafe(method(init))]
        #[unsafe(method_family = init)]
        pub unsafe fn init(this: Allocated<Self>) -> Retained<Self>;

        #[unsafe(method(new))]
        #[unsafe(method_family = new)]
        pub unsafe fn new() -> Retained<Self>;
    );
}
