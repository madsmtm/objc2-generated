//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use core::ptr::NonNull;
use objc2::__framework_prelude::*;
use objc2_foundation::*;

use crate::*;

extern_class!(
    /// [Apple's documentation](https://developer.apple.com/documentation/mapkit/mkaddress?language=objc)
    #[unsafe(super(NSObject))]
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub struct MKAddress;
);

extern_conformance!(
    unsafe impl NSObjectProtocol for MKAddress {}
);

impl MKAddress {
    extern_methods!(
        #[unsafe(method(initWithFullAddress:shortAddress:))]
        #[unsafe(method_family = init)]
        pub unsafe fn initWithFullAddress_shortAddress(
            this: Allocated<Self>,
            full_address: &NSString,
            short_address: Option<&NSString>,
        ) -> Option<Retained<Self>>;

        #[unsafe(method(init))]
        #[unsafe(method_family = init)]
        pub unsafe fn init(this: Allocated<Self>) -> Retained<Self>;

        #[unsafe(method(new))]
        #[unsafe(method_family = new)]
        pub unsafe fn new() -> Retained<Self>;

        #[unsafe(method(fullAddress))]
        #[unsafe(method_family = none)]
        pub unsafe fn fullAddress(&self) -> Retained<NSString>;

        #[unsafe(method(shortAddress))]
        #[unsafe(method_family = none)]
        pub unsafe fn shortAddress(&self) -> Option<Retained<NSString>>;
    );
}
