//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use core::ffi::*;
use core::ptr::NonNull;
use objc2::__framework_prelude::*;
use objc2_foundation::*;

use crate::*;

extern_class!(
    /// [Apple's documentation](https://developer.apple.com/documentation/callkit/cxsetheldcallaction?language=objc)
    #[unsafe(super(CXCallAction, CXAction, NSObject))]
    #[derive(Debug, PartialEq, Eq, Hash)]
    #[cfg(all(feature = "CXAction", feature = "CXCallAction"))]
    pub struct CXSetHeldCallAction;
);

#[cfg(all(feature = "CXAction", feature = "CXCallAction"))]
extern_conformance!(
    unsafe impl NSCoding for CXSetHeldCallAction {}
);

#[cfg(all(feature = "CXAction", feature = "CXCallAction"))]
extern_conformance!(
    unsafe impl NSCopying for CXSetHeldCallAction {}
);

#[cfg(all(feature = "CXAction", feature = "CXCallAction"))]
unsafe impl CopyingHelper for CXSetHeldCallAction {
    type Result = Self;
}

#[cfg(all(feature = "CXAction", feature = "CXCallAction"))]
extern_conformance!(
    unsafe impl NSObjectProtocol for CXSetHeldCallAction {}
);

#[cfg(all(feature = "CXAction", feature = "CXCallAction"))]
extern_conformance!(
    unsafe impl NSSecureCoding for CXSetHeldCallAction {}
);

#[cfg(all(feature = "CXAction", feature = "CXCallAction"))]
impl CXSetHeldCallAction {
    extern_methods!(
        #[unsafe(method(initWithCallUUID:onHold:))]
        #[unsafe(method_family = init)]
        pub unsafe fn initWithCallUUID_onHold(
            this: Allocated<Self>,
            call_uuid: &NSUUID,
            on_hold: bool,
        ) -> Retained<Self>;

        /// # Safety
        ///
        /// `a_decoder` possibly has further requirements.
        #[unsafe(method(initWithCoder:))]
        #[unsafe(method_family = init)]
        pub unsafe fn initWithCoder(
            this: Allocated<Self>,
            a_decoder: &NSCoder,
        ) -> Option<Retained<Self>>;

        #[unsafe(method(initWithCallUUID:))]
        #[unsafe(method_family = init)]
        pub unsafe fn initWithCallUUID(this: Allocated<Self>, call_uuid: &NSUUID)
            -> Retained<Self>;

        #[unsafe(method(isOnHold))]
        #[unsafe(method_family = none)]
        pub unsafe fn isOnHold(&self) -> bool;

        /// Setter for [`isOnHold`][Self::isOnHold].
        #[unsafe(method(setOnHold:))]
        #[unsafe(method_family = none)]
        pub unsafe fn setOnHold(&self, on_hold: bool);
    );
}

/// Methods declared on superclass `CXCallAction`.
#[cfg(all(feature = "CXAction", feature = "CXCallAction"))]
impl CXSetHeldCallAction {
    extern_methods!(
        #[unsafe(method(init))]
        #[unsafe(method_family = init)]
        pub unsafe fn init(this: Allocated<Self>) -> Retained<Self>;
    );
}

/// Methods declared on superclass `NSObject`.
#[cfg(all(feature = "CXAction", feature = "CXCallAction"))]
impl CXSetHeldCallAction {
    extern_methods!(
        #[unsafe(method(new))]
        #[unsafe(method_family = new)]
        pub unsafe fn new() -> Retained<Self>;
    );
}
