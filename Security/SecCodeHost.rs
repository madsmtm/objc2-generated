//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use core::ptr::NonNull;
use objc2_core_foundation::*;

use crate::*;

/// [Apple's documentation](https://developer.apple.com/documentation/security/kseccsdedicatedhost?language=objc)
pub const kSecCSDedicatedHost: u32 = 1;
/// [Apple's documentation](https://developer.apple.com/documentation/security/kseccsgenerateguesthash?language=objc)
pub const kSecCSGenerateGuestHash: u32 = 2;

extern "C-unwind" {
    /// # Safety
    ///
    /// - `attributes` generics must be of the correct type.
    /// - `new_guest` must be a valid pointer.
    #[cfg(feature = "CSCommon")]
    #[deprecated]
    pub fn SecHostCreateGuest(
        host: SecGuestRef,
        status: u32,
        path: &CFURL,
        attributes: Option<&CFDictionary>,
        flags: SecCSFlags,
        new_guest: NonNull<SecGuestRef>,
    ) -> OSStatus;
}

extern "C-unwind" {
    #[cfg(feature = "CSCommon")]
    #[deprecated]
    pub fn SecHostRemoveGuest(host: SecGuestRef, guest: SecGuestRef, flags: SecCSFlags)
        -> OSStatus;
}

extern "C-unwind" {
    #[cfg(feature = "CSCommon")]
    #[deprecated]
    pub fn SecHostSelectGuest(guest_ref: SecGuestRef, flags: SecCSFlags) -> OSStatus;
}

extern "C-unwind" {
    /// # Safety
    ///
    /// `guest_ref` must be a valid pointer.
    #[cfg(feature = "CSCommon")]
    #[deprecated]
    pub fn SecHostSelectedGuest(flags: SecCSFlags, guest_ref: NonNull<SecGuestRef>) -> OSStatus;
}

extern "C-unwind" {
    /// # Safety
    ///
    /// `attributes` generics must be of the correct type.
    #[cfg(feature = "CSCommon")]
    #[deprecated]
    pub fn SecHostSetGuestStatus(
        guest_ref: SecGuestRef,
        status: u32,
        attributes: Option<&CFDictionary>,
        flags: SecCSFlags,
    ) -> OSStatus;
}

extern "C-unwind" {
    #[cfg(all(feature = "CSCommon", feature = "libc"))]
    #[deprecated]
    pub fn SecHostSetHostingPort(hosting_port: libc::mach_port_t, flags: SecCSFlags) -> OSStatus;
}
