// This file has been automatically generated by `objc2`'s `header-translator`.
// DO NOT EDIT

#![allow(unused_imports)]
#![allow(deprecated)]
#![allow(non_snake_case)]
#![allow(non_camel_case_types)]
#![allow(non_upper_case_globals)]
#![allow(missing_docs)]
#![allow(clippy::too_many_arguments)]
#![allow(clippy::type_complexity)]
#![allow(clippy::upper_case_acronyms)]
#![allow(clippy::identity_op)]
#![allow(clippy::missing_safety_doc)]
#![allow(clippy::doc_lazy_continuation)]
#![allow(rustdoc::broken_intra_doc_links)]
#![allow(rustdoc::bare_urls)]
#![allow(rustdoc::invalid_html_tags)]

#[link(name = "SafariServices", kind = "framework")]
extern "C" {}

#[cfg(feature = "SFContentBlockerManager")]
#[path = "SFContentBlockerManager.rs"]
mod __SFContentBlockerManager;
#[cfg(feature = "SFContentBlockerState")]
#[path = "SFContentBlockerState.rs"]
mod __SFContentBlockerState;
#[cfg(feature = "SFError")]
#[path = "SFError.rs"]
mod __SFError;
#[cfg(feature = "SFFoundation")]
#[path = "SFFoundation.rs"]
mod __SFFoundation;
#[cfg(feature = "SFSafariApplication")]
#[path = "SFSafariApplication.rs"]
mod __SFSafariApplication;
#[cfg(feature = "SFSafariExtension")]
#[path = "SFSafariExtension.rs"]
mod __SFSafariExtension;
#[cfg(feature = "SFSafariExtensionHandler")]
#[path = "SFSafariExtensionHandler.rs"]
mod __SFSafariExtensionHandler;
#[cfg(feature = "SFSafariExtensionHandling")]
#[path = "SFSafariExtensionHandling.rs"]
mod __SFSafariExtensionHandling;
#[cfg(feature = "SFSafariExtensionManager")]
#[path = "SFSafariExtensionManager.rs"]
mod __SFSafariExtensionManager;
#[cfg(feature = "SFSafariExtensionState")]
#[path = "SFSafariExtensionState.rs"]
mod __SFSafariExtensionState;
#[cfg(feature = "SFSafariExtensionViewController")]
#[path = "SFSafariExtensionViewController.rs"]
mod __SFSafariExtensionViewController;
#[cfg(feature = "SFSafariPage")]
#[path = "SFSafariPage.rs"]
mod __SFSafariPage;
#[cfg(feature = "SFSafariPageProperties")]
#[path = "SFSafariPageProperties.rs"]
mod __SFSafariPageProperties;
#[cfg(feature = "SFSafariTab")]
#[path = "SFSafariTab.rs"]
mod __SFSafariTab;
#[cfg(feature = "SFSafariToolbarItem")]
#[path = "SFSafariToolbarItem.rs"]
mod __SFSafariToolbarItem;
#[cfg(feature = "SFSafariWindow")]
#[path = "SFSafariWindow.rs"]
mod __SFSafariWindow;
#[cfg(feature = "SFUniversalLink")]
#[path = "SFUniversalLink.rs"]
mod __SFUniversalLink;

#[cfg(feature = "SFContentBlockerManager")]
pub use self::__SFContentBlockerManager::SFContentBlockerManager;
#[cfg(feature = "SFContentBlockerState")]
pub use self::__SFContentBlockerState::SFContentBlockerState;
#[cfg(feature = "SFError")]
pub use self::__SFError::SFErrorCode;
#[cfg(feature = "SFError")]
pub use self::__SFError::SFErrorDomain;
#[cfg(feature = "SFSafariApplication")]
pub use self::__SFSafariApplication::SFExtensionMessageKey;
#[cfg(feature = "SFSafariApplication")]
pub use self::__SFSafariApplication::SFExtensionProfileKey;
#[cfg(feature = "SFSafariApplication")]
pub use self::__SFSafariApplication::SFSafariApplication;
#[cfg(feature = "SFSafariExtension")]
pub use self::__SFSafariExtension::SFSafariExtension;
#[cfg(feature = "SFSafariExtensionHandler")]
pub use self::__SFSafariExtensionHandler::SFSafariExtensionHandler;
#[cfg(feature = "SFSafariExtensionHandling")]
pub use self::__SFSafariExtensionHandling::SFSafariExtensionHandling;
#[cfg(feature = "SFSafariExtensionManager")]
pub use self::__SFSafariExtensionManager::SFSafariExtensionManager;
#[cfg(feature = "SFSafariExtensionState")]
pub use self::__SFSafariExtensionState::SFSafariExtensionState;
#[cfg(all(feature = "SFSafariExtensionViewController", feature = "objc2-app-kit"))]
#[cfg(target_os = "macos")]
pub use self::__SFSafariExtensionViewController::SFSafariExtensionViewController;
#[cfg(feature = "SFSafariPage")]
pub use self::__SFSafariPage::SFSafariPage;
#[cfg(feature = "SFSafariPageProperties")]
pub use self::__SFSafariPageProperties::SFSafariPageProperties;
#[cfg(feature = "SFSafariTab")]
pub use self::__SFSafariTab::SFSafariTab;
#[cfg(feature = "SFSafariToolbarItem")]
pub use self::__SFSafariToolbarItem::SFSafariToolbarItem;
#[cfg(feature = "SFSafariWindow")]
pub use self::__SFSafariWindow::SFSafariWindow;
#[cfg(feature = "SFUniversalLink")]
pub use self::__SFUniversalLink::SFUniversalLink;
use objc2::__framework_prelude::*;

use crate::*;

/// [Apple's documentation](https://developer.apple.com/documentation/safariservices/sfsafariservicesversion?language=objc)
// NS_ENUM
#[repr(transparent)]
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash, PartialOrd, Ord)]
pub struct SFSafariServicesVersion(pub NSInteger);
impl SFSafariServicesVersion {
    #[doc(alias = "SFSafariServicesVersion10_0")]
    pub const Version10_0: Self = Self(0);
    #[doc(alias = "SFSafariServicesVersion10_1")]
    pub const Version10_1: Self = Self(1);
    #[doc(alias = "SFSafariServicesVersion11_0")]
    pub const Version11_0: Self = Self(2);
    #[doc(alias = "SFSafariServicesVersion12_0")]
    pub const Version12_0: Self = Self(3);
    #[doc(alias = "SFSafariServicesVersion12_1")]
    pub const Version12_1: Self = Self(4);
    #[doc(alias = "SFSafariServicesVersion13_0")]
    pub const Version13_0: Self = Self(5);
}

unsafe impl Encode for SFSafariServicesVersion {
    const ENCODING: Encoding = NSInteger::ENCODING;
}

unsafe impl RefEncode for SFSafariServicesVersion {
    const ENCODING_REF: Encoding = Encoding::Pointer(&Self::ENCODING);
}
