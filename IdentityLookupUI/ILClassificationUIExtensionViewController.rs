//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use core::ffi::*;
use core::ptr::NonNull;
use objc2::__framework_prelude::*;
use objc2_foundation::*;
#[cfg(feature = "objc2-identity-lookup")]
use objc2_identity_lookup::*;
#[cfg(feature = "objc2-ui-kit")]
use objc2_ui_kit::*;

use crate::*;

extern_class!(
    /// Represents a view controller to subclass for displaying classification UI
    ///
    /// See also [Apple's documentation](https://developer.apple.com/documentation/identitylookupui/ilclassificationuiextensionviewcontroller?language=objc)
    #[unsafe(super(UIViewController, UIResponder, NSObject))]
    #[derive(Debug, PartialEq, Eq, Hash)]
    #[cfg(feature = "objc2-ui-kit")]
    pub struct ILClassificationUIExtensionViewController;
);

#[cfg(feature = "objc2-ui-kit")]
extern_conformance!(
    unsafe impl NSCoding for ILClassificationUIExtensionViewController {}
);

#[cfg(feature = "objc2-ui-kit")]
extern_conformance!(
    unsafe impl NSObjectProtocol for ILClassificationUIExtensionViewController {}
);

#[cfg(feature = "objc2-ui-kit")]
extern_conformance!(
    unsafe impl UIAppearanceContainer for ILClassificationUIExtensionViewController {}
);

#[cfg(feature = "objc2-ui-kit")]
extern_conformance!(
    unsafe impl UIContentContainer for ILClassificationUIExtensionViewController {}
);

#[cfg(feature = "objc2-ui-kit")]
extern_conformance!(
    unsafe impl UIFocusEnvironment for ILClassificationUIExtensionViewController {}
);

#[cfg(feature = "objc2-ui-kit")]
extern_conformance!(
    unsafe impl UIResponderStandardEditActions for ILClassificationUIExtensionViewController {}
);

#[cfg(feature = "objc2-ui-kit")]
extern_conformance!(
    unsafe impl UITraitEnvironment for ILClassificationUIExtensionViewController {}
);

#[cfg(feature = "objc2-ui-kit")]
impl ILClassificationUIExtensionViewController {
    extern_methods!(
        #[cfg(feature = "ILClassificationUIExtensionContext")]
        /// The extension context to use for completing the classification request
        #[unsafe(method(extensionContext))]
        #[unsafe(method_family = none)]
        pub unsafe fn extensionContext(&self) -> Retained<ILClassificationUIExtensionContext>;

        #[cfg(feature = "objc2-identity-lookup")]
        /// Override to customize UI based on the classification request before the view is loaded
        #[unsafe(method(prepareForClassificationRequest:))]
        #[unsafe(method_family = none)]
        pub unsafe fn prepareForClassificationRequest(&self, request: &ILClassificationRequest);

        #[cfg(feature = "objc2-identity-lookup")]
        /// Override to provide a classification response for the classification request
        #[unsafe(method(classificationResponseForRequest:))]
        #[unsafe(method_family = none)]
        pub unsafe fn classificationResponseForRequest(
            &self,
            request: &ILClassificationRequest,
        ) -> Retained<ILClassificationResponse>;
    );
}

/// Methods declared on superclass `UIViewController`.
#[cfg(feature = "objc2-ui-kit")]
impl ILClassificationUIExtensionViewController {
    extern_methods!(
        #[unsafe(method(initWithNibName:bundle:))]
        #[unsafe(method_family = init)]
        pub unsafe fn initWithNibName_bundle(
            this: Allocated<Self>,
            nib_name_or_nil: Option<&NSString>,
            nib_bundle_or_nil: Option<&NSBundle>,
        ) -> Retained<Self>;

        /// # Safety
        ///
        /// `coder` possibly has further requirements.
        #[unsafe(method(initWithCoder:))]
        #[unsafe(method_family = init)]
        pub unsafe fn initWithCoder(
            this: Allocated<Self>,
            coder: &NSCoder,
        ) -> Option<Retained<Self>>;
    );
}

/// Methods declared on superclass `NSObject`.
#[cfg(feature = "objc2-ui-kit")]
impl ILClassificationUIExtensionViewController {
    extern_methods!(
        #[unsafe(method(init))]
        #[unsafe(method_family = init)]
        pub unsafe fn init(this: Allocated<Self>) -> Retained<Self>;

        #[unsafe(method(new))]
        #[unsafe(method_family = new)]
        pub unsafe fn new(mtm: MainThreadMarker) -> Retained<Self>;
    );
}
