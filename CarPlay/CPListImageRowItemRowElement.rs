//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use core::ffi::*;
use core::ptr::NonNull;
use objc2::__framework_prelude::*;
use objc2_foundation::*;
#[cfg(feature = "objc2-ui-kit")]
use objc2_ui_kit::*;

use crate::*;

extern_class!(
    /// [Apple's documentation](https://developer.apple.com/documentation/carplay/cplistimagerowitemrowelement?language=objc)
    #[unsafe(super(CPListImageRowItemElement, NSObject))]
    #[thread_kind = MainThreadOnly]
    #[derive(Debug, PartialEq, Eq, Hash)]
    #[cfg(feature = "CPListImageRowItemElement")]
    pub struct CPListImageRowItemRowElement;
);

#[cfg(feature = "CPListImageRowItemElement")]
extern_conformance!(
    unsafe impl NSObjectProtocol for CPListImageRowItemRowElement {}
);

#[cfg(feature = "CPListImageRowItemElement")]
impl CPListImageRowItemRowElement {
    extern_methods!(
        #[cfg(feature = "objc2-ui-kit")]
        /// Initialize an element that is constituted of an image, title and subtitle. Only image is required while the two others can be omitted.
        ///
        /// When providing an image, your app should provide a
        /// `UIImage`that is display-ready. If necessary for the image, provide
        /// light and dark styles by using an asset from your asset catalog, prepared with light and dark styles
        /// or by using
        /// `UIImageAsset`to combine two
        /// `UIImage`instances into a single image with
        /// both styles.
        ///
        /// UIImageAsset is used to combine multiple UIImages with different trait collections into a single UIImage.
        ///
        ///
        /// Note: The expected image size is given by +[CPListImageRowItemRowElement maximumImageSize]. Images provided will be resized to this size if necessary.
        ///
        ///
        /// To properly size your images, your app should size them to the display scale of the car screen.
        /// See -[CPInterfaceController carTraitCollection].
        ///
        ///
        /// Parameter `image`: The image associated to the element.
        ///
        /// Parameter `title`: The title of the element.
        ///
        /// Parameter `subtitle`: The subtitle of the element.
        #[unsafe(method(initWithImage:title:subtitle:))]
        #[unsafe(method_family = init)]
        pub unsafe fn initWithImage_title_subtitle(
            this: Allocated<Self>,
            image: &UIImage,
            title: Option<&NSString>,
            subtitle: Option<&NSString>,
        ) -> Retained<Self>;

        /// The title associated with this element.
        #[unsafe(method(title))]
        #[unsafe(method_family = none)]
        pub unsafe fn title(&self) -> Option<Retained<NSString>>;

        /// Setter for [`title`][Self::title].
        #[unsafe(method(setTitle:))]
        #[unsafe(method_family = none)]
        pub unsafe fn setTitle(&self, title: Option<&NSString>);

        /// The subtitle associated with this element.
        #[unsafe(method(subtitle))]
        #[unsafe(method_family = none)]
        pub unsafe fn subtitle(&self) -> Option<Retained<NSString>>;

        /// Setter for [`subtitle`][Self::subtitle].
        #[unsafe(method(setSubtitle:))]
        #[unsafe(method_family = none)]
        pub unsafe fn setSubtitle(&self, subtitle: Option<&NSString>);
    );
}

/// Methods declared on superclass `CPListImageRowItemElement`.
#[cfg(feature = "CPListImageRowItemElement")]
impl CPListImageRowItemRowElement {
    extern_methods!(
        #[unsafe(method(init))]
        #[unsafe(method_family = init)]
        pub unsafe fn init(this: Allocated<Self>) -> Retained<Self>;
    );
}

/// Methods declared on superclass `NSObject`.
#[cfg(feature = "CPListImageRowItemElement")]
impl CPListImageRowItemRowElement {
    extern_methods!(
        #[unsafe(method(new))]
        #[unsafe(method_family = new)]
        pub unsafe fn new(mtm: MainThreadMarker) -> Retained<Self>;
    );
}
