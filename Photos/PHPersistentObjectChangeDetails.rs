//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use core::ptr::NonNull;
use objc2::__framework_prelude::*;
use objc2_foundation::*;

use crate::*;

extern_class!(
    /// [Apple's documentation](https://developer.apple.com/documentation/photos/phpersistentobjectchangedetails?language=objc)
    #[unsafe(super(NSObject))]
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub struct PHPersistentObjectChangeDetails;
);

unsafe impl Send for PHPersistentObjectChangeDetails {}

unsafe impl Sync for PHPersistentObjectChangeDetails {}

extern_conformance!(
    unsafe impl NSObjectProtocol for PHPersistentObjectChangeDetails {}
);

impl PHPersistentObjectChangeDetails {
    extern_methods!(
        #[cfg(feature = "PhotosTypes")]
        /// This property is not atomic.
        ///
        /// # Safety
        ///
        /// This might not be thread-safe.
        #[unsafe(method(objectType))]
        #[unsafe(method_family = none)]
        pub unsafe fn objectType(&self) -> PHObjectType;

        /// This property is not atomic.
        ///
        /// # Safety
        ///
        /// This might not be thread-safe.
        #[unsafe(method(insertedLocalIdentifiers))]
        #[unsafe(method_family = none)]
        pub unsafe fn insertedLocalIdentifiers(&self) -> Retained<NSSet<NSString>>;

        /// This property is not atomic.
        ///
        /// # Safety
        ///
        /// This might not be thread-safe.
        #[unsafe(method(updatedLocalIdentifiers))]
        #[unsafe(method_family = none)]
        pub unsafe fn updatedLocalIdentifiers(&self) -> Retained<NSSet<NSString>>;

        /// This property is not atomic.
        ///
        /// # Safety
        ///
        /// This might not be thread-safe.
        #[unsafe(method(deletedLocalIdentifiers))]
        #[unsafe(method_family = none)]
        pub unsafe fn deletedLocalIdentifiers(&self) -> Retained<NSSet<NSString>>;

        #[unsafe(method(new))]
        #[unsafe(method_family = new)]
        pub unsafe fn new() -> Retained<Self>;

        #[unsafe(method(init))]
        #[unsafe(method_family = init)]
        pub unsafe fn init(this: Allocated<Self>) -> Retained<Self>;
    );
}
