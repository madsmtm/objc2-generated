//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use core::ffi::*;
use core::ptr::NonNull;
use objc2::__framework_prelude::*;
use objc2_foundation::*;
use objc2_metal::*;

use crate::*;

extern_class!(
    /// An acceleration structure built over triangles
    ///
    ///
    /// See MPSPolygonAccelerationStructure for more information
    ///
    /// See also [Apple's documentation](https://developer.apple.com/documentation/metalperformanceshaders/mpstriangleaccelerationstructure?language=objc)
    #[unsafe(super(
        MPSPolygonAccelerationStructure,
        MPSAccelerationStructure,
        MPSKernel,
        NSObject
    ))]
    #[derive(Debug, PartialEq, Eq, Hash)]
    #[cfg(all(
        feature = "MPSAccelerationStructure",
        feature = "MPSCore",
        feature = "MPSKernel",
        feature = "MPSPolygonAccelerationStructure"
    ))]
    #[deprecated]
    pub struct MPSTriangleAccelerationStructure;
);

#[cfg(all(
    feature = "MPSAccelerationStructure",
    feature = "MPSCore",
    feature = "MPSKernel",
    feature = "MPSPolygonAccelerationStructure"
))]
extern_conformance!(
    unsafe impl NSCoding for MPSTriangleAccelerationStructure {}
);

#[cfg(all(
    feature = "MPSAccelerationStructure",
    feature = "MPSCore",
    feature = "MPSKernel",
    feature = "MPSPolygonAccelerationStructure"
))]
extern_conformance!(
    unsafe impl NSCopying for MPSTriangleAccelerationStructure {}
);

#[cfg(all(
    feature = "MPSAccelerationStructure",
    feature = "MPSCore",
    feature = "MPSKernel",
    feature = "MPSPolygonAccelerationStructure"
))]
unsafe impl CopyingHelper for MPSTriangleAccelerationStructure {
    type Result = Self;
}

#[cfg(all(
    feature = "MPSAccelerationStructure",
    feature = "MPSCore",
    feature = "MPSKernel",
    feature = "MPSPolygonAccelerationStructure"
))]
extern_conformance!(
    unsafe impl NSObjectProtocol for MPSTriangleAccelerationStructure {}
);

#[cfg(all(
    feature = "MPSAccelerationStructure",
    feature = "MPSCore",
    feature = "MPSKernel",
    feature = "MPSPolygonAccelerationStructure"
))]
extern_conformance!(
    unsafe impl NSSecureCoding for MPSTriangleAccelerationStructure {}
);

#[cfg(all(
    feature = "MPSAccelerationStructure",
    feature = "MPSCore",
    feature = "MPSKernel",
    feature = "MPSPolygonAccelerationStructure"
))]
impl MPSTriangleAccelerationStructure {
    extern_methods!(
        /// Number of triangles. Changes to this property require rebuilding the acceleration
        /// structure.
        ///
        /// Note that this property is an alias for the polygonCount property.
        #[deprecated]
        #[unsafe(method(triangleCount))]
        #[unsafe(method_family = none)]
        pub unsafe fn triangleCount(&self) -> NSUInteger;

        /// Setter for [`triangleCount`][Self::triangleCount].
        #[deprecated]
        #[unsafe(method(setTriangleCount:))]
        #[unsafe(method_family = none)]
        pub unsafe fn setTriangleCount(&self, triangle_count: NSUInteger);
    );
}

/// Methods declared on superclass `MPSAccelerationStructure`.
#[cfg(all(
    feature = "MPSAccelerationStructure",
    feature = "MPSCore",
    feature = "MPSKernel",
    feature = "MPSPolygonAccelerationStructure"
))]
impl MPSTriangleAccelerationStructure {
    extern_methods!(
        #[deprecated]
        #[unsafe(method(init))]
        #[unsafe(method_family = init)]
        pub unsafe fn init(this: Allocated<Self>) -> Retained<Self>;

        /// Initialize the acceleration structure with a Metal device
        #[deprecated]
        #[unsafe(method(initWithDevice:))]
        #[unsafe(method_family = init)]
        pub unsafe fn initWithDevice(
            this: Allocated<Self>,
            device: &ProtocolObject<dyn MTLDevice>,
        ) -> Retained<Self>;

        /// Initialize the acceleration structure with an NSCoder and a Metal device. Buffer
        /// properties such as the vertex buffer, instance buffer, etc. are set to nil. Encode and decode
        /// these buffers along with the acceleration structure instead.
        ///
        /// # Safety
        ///
        /// `a_decoder` possibly has further requirements.
        #[deprecated]
        #[unsafe(method(initWithCoder:device:))]
        #[unsafe(method_family = init)]
        pub unsafe fn initWithCoder_device(
            this: Allocated<Self>,
            a_decoder: &NSCoder,
            device: &ProtocolObject<dyn MTLDevice>,
        ) -> Option<Retained<Self>>;

        #[cfg(feature = "MPSAccelerationStructureGroup")]
        /// Initialize the acceleration structure with an acceleration structure group, if the
        /// acceleration structure will be used in an instance hierarchy.
        ///
        ///
        /// The Metal device is determined from the acceleration structure group. All
        /// acceleration structures in the instance hierarchy must share the same group.
        #[deprecated]
        #[unsafe(method(initWithGroup:))]
        #[unsafe(method_family = init)]
        pub unsafe fn initWithGroup(
            this: Allocated<Self>,
            group: &MPSAccelerationStructureGroup,
        ) -> Retained<Self>;

        #[cfg(feature = "MPSAccelerationStructureGroup")]
        /// Initialize the acceleration structure with an NSCoder and an acceleration structure
        /// group, if the acceleration structure will be used in an instance hierarchy. All acceleration
        /// structures in the instance hierarchy must share the same group. Buffer properties such as the
        /// vertex buffer, instance buffer, etc. are set to nil. Encode and decode these buffers along with
        /// the acceleration structure instead.
        ///
        /// # Safety
        ///
        /// `a_decoder` possibly has further requirements.
        #[deprecated]
        #[unsafe(method(initWithCoder:group:))]
        #[unsafe(method_family = init)]
        pub unsafe fn initWithCoder_group(
            this: Allocated<Self>,
            a_decoder: &NSCoder,
            group: &MPSAccelerationStructureGroup,
        ) -> Option<Retained<Self>>;
    );
}

/// Methods declared on superclass `MPSKernel`.
#[cfg(all(
    feature = "MPSAccelerationStructure",
    feature = "MPSCore",
    feature = "MPSKernel",
    feature = "MPSPolygonAccelerationStructure"
))]
impl MPSTriangleAccelerationStructure {
    extern_methods!(
        /// Called by NSCoder to decode MPSKernels
        ///
        /// This isn't the right interface to decode a MPSKernel, but
        /// it is the one that NSCoder uses. To enable your NSCoder
        /// (e.g. NSKeyedUnarchiver) to set which device to use
        /// extend the object to adopt the MPSDeviceProvider
        /// protocol. Otherwise, the Metal system default device
        /// will be used.
        ///
        /// # Safety
        ///
        /// `a_decoder` possibly has further requirements.
        #[unsafe(method(initWithCoder:))]
        #[unsafe(method_family = init)]
        pub unsafe fn initWithCoder(
            this: Allocated<Self>,
            a_decoder: &NSCoder,
        ) -> Option<Retained<Self>>;
    );
}

/// Methods declared on superclass `NSObject`.
#[cfg(all(
    feature = "MPSAccelerationStructure",
    feature = "MPSCore",
    feature = "MPSKernel",
    feature = "MPSPolygonAccelerationStructure"
))]
impl MPSTriangleAccelerationStructure {
    extern_methods!(
        #[unsafe(method(new))]
        #[unsafe(method_family = new)]
        pub unsafe fn new() -> Retained<Self>;
    );
}
