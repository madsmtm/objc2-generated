//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use core::ffi::*;
use core::ptr::NonNull;
use objc2_core_foundation::*;
#[cfg(feature = "objc2-core-graphics")]
use objc2_core_graphics::*;

use crate::*;

extern "C" {
    /// [Apple's documentation](https://developer.apple.com/documentation/corevideo/kcvimagebuffercgcolorspacekey?language=objc)
    pub static kCVImageBufferCGColorSpaceKey: &'static CFString;
}

extern "C" {
    /// [Apple's documentation](https://developer.apple.com/documentation/corevideo/kcvimagebuffercleanaperturekey?language=objc)
    pub static kCVImageBufferCleanApertureKey: &'static CFString;
}

extern "C" {
    /// [Apple's documentation](https://developer.apple.com/documentation/corevideo/kcvimagebuffercleanaperturewidthkey?language=objc)
    pub static kCVImageBufferCleanApertureWidthKey: &'static CFString;
}

extern "C" {
    /// [Apple's documentation](https://developer.apple.com/documentation/corevideo/kcvimagebuffercleanapertureheightkey?language=objc)
    pub static kCVImageBufferCleanApertureHeightKey: &'static CFString;
}

extern "C" {
    /// [Apple's documentation](https://developer.apple.com/documentation/corevideo/kcvimagebuffercleanaperturehorizontaloffsetkey?language=objc)
    pub static kCVImageBufferCleanApertureHorizontalOffsetKey: &'static CFString;
}

extern "C" {
    /// [Apple's documentation](https://developer.apple.com/documentation/corevideo/kcvimagebuffercleanapertureverticaloffsetkey?language=objc)
    pub static kCVImageBufferCleanApertureVerticalOffsetKey: &'static CFString;
}

extern "C" {
    /// [Apple's documentation](https://developer.apple.com/documentation/corevideo/kcvimagebufferpreferredcleanaperturekey?language=objc)
    pub static kCVImageBufferPreferredCleanApertureKey: &'static CFString;
}

extern "C" {
    /// [Apple's documentation](https://developer.apple.com/documentation/corevideo/kcvimagebufferfieldcountkey?language=objc)
    pub static kCVImageBufferFieldCountKey: &'static CFString;
}

extern "C" {
    /// [Apple's documentation](https://developer.apple.com/documentation/corevideo/kcvimagebufferfielddetailkey?language=objc)
    pub static kCVImageBufferFieldDetailKey: &'static CFString;
}

extern "C" {
    /// [Apple's documentation](https://developer.apple.com/documentation/corevideo/kcvimagebufferfielddetailtemporaltopfirst?language=objc)
    pub static kCVImageBufferFieldDetailTemporalTopFirst: &'static CFString;
}

extern "C" {
    /// [Apple's documentation](https://developer.apple.com/documentation/corevideo/kcvimagebufferfielddetailtemporalbottomfirst?language=objc)
    pub static kCVImageBufferFieldDetailTemporalBottomFirst: &'static CFString;
}

extern "C" {
    /// [Apple's documentation](https://developer.apple.com/documentation/corevideo/kcvimagebufferfielddetailspatialfirstlineearly?language=objc)
    pub static kCVImageBufferFieldDetailSpatialFirstLineEarly: &'static CFString;
}

extern "C" {
    /// [Apple's documentation](https://developer.apple.com/documentation/corevideo/kcvimagebufferfielddetailspatialfirstlinelate?language=objc)
    pub static kCVImageBufferFieldDetailSpatialFirstLineLate: &'static CFString;
}

extern "C" {
    /// [Apple's documentation](https://developer.apple.com/documentation/corevideo/kcvimagebufferpixelaspectratiokey?language=objc)
    pub static kCVImageBufferPixelAspectRatioKey: &'static CFString;
}

extern "C" {
    /// [Apple's documentation](https://developer.apple.com/documentation/corevideo/kcvimagebufferpixelaspectratiohorizontalspacingkey?language=objc)
    pub static kCVImageBufferPixelAspectRatioHorizontalSpacingKey: &'static CFString;
}

extern "C" {
    /// [Apple's documentation](https://developer.apple.com/documentation/corevideo/kcvimagebufferpixelaspectratioverticalspacingkey?language=objc)
    pub static kCVImageBufferPixelAspectRatioVerticalSpacingKey: &'static CFString;
}

extern "C" {
    /// [Apple's documentation](https://developer.apple.com/documentation/corevideo/kcvimagebufferdisplaydimensionskey?language=objc)
    pub static kCVImageBufferDisplayDimensionsKey: &'static CFString;
}

extern "C" {
    /// [Apple's documentation](https://developer.apple.com/documentation/corevideo/kcvimagebufferdisplaywidthkey?language=objc)
    pub static kCVImageBufferDisplayWidthKey: &'static CFString;
}

extern "C" {
    /// [Apple's documentation](https://developer.apple.com/documentation/corevideo/kcvimagebufferdisplayheightkey?language=objc)
    pub static kCVImageBufferDisplayHeightKey: &'static CFString;
}

extern "C" {
    /// [Apple's documentation](https://developer.apple.com/documentation/corevideo/kcvimagebuffergammalevelkey?language=objc)
    pub static kCVImageBufferGammaLevelKey: &'static CFString;
}

extern "C" {
    /// [Apple's documentation](https://developer.apple.com/documentation/corevideo/kcvimagebuffericcprofilekey?language=objc)
    pub static kCVImageBufferICCProfileKey: &'static CFString;
}

extern "C" {
    /// [Apple's documentation](https://developer.apple.com/documentation/corevideo/kcvimagebufferycbcrmatrixkey?language=objc)
    pub static kCVImageBufferYCbCrMatrixKey: &'static CFString;
}

extern "C" {
    /// [Apple's documentation](https://developer.apple.com/documentation/corevideo/kcvimagebufferycbcrmatrix_itu_r_709_2?language=objc)
    pub static kCVImageBufferYCbCrMatrix_ITU_R_709_2: &'static CFString;
}

extern "C" {
    /// [Apple's documentation](https://developer.apple.com/documentation/corevideo/kcvimagebufferycbcrmatrix_itu_r_601_4?language=objc)
    pub static kCVImageBufferYCbCrMatrix_ITU_R_601_4: &'static CFString;
}

extern "C" {
    /// [Apple's documentation](https://developer.apple.com/documentation/corevideo/kcvimagebufferycbcrmatrix_smpte_240m_1995?language=objc)
    pub static kCVImageBufferYCbCrMatrix_SMPTE_240M_1995: &'static CFString;
}

extern "C" {
    /// [Apple's documentation](https://developer.apple.com/documentation/corevideo/kcvimagebufferycbcrmatrix_dci_p3?language=objc)
    #[deprecated = "kCVImageBufferYCbCrMatrix_DCI_P3 no longer supported."]
    pub static kCVImageBufferYCbCrMatrix_DCI_P3: &'static CFString;
}

extern "C" {
    /// [Apple's documentation](https://developer.apple.com/documentation/corevideo/kcvimagebufferycbcrmatrix_p3_d65?language=objc)
    #[deprecated = "kCVImageBufferYCbCrMatrix_P3_D65 no longer supported."]
    pub static kCVImageBufferYCbCrMatrix_P3_D65: &'static CFString;
}

extern "C" {
    /// [Apple's documentation](https://developer.apple.com/documentation/corevideo/kcvimagebufferycbcrmatrix_itu_r_2020?language=objc)
    pub static kCVImageBufferYCbCrMatrix_ITU_R_2020: &'static CFString;
}

extern "C" {
    /// [Apple's documentation](https://developer.apple.com/documentation/corevideo/kcvimagebuffercolorprimarieskey?language=objc)
    pub static kCVImageBufferColorPrimariesKey: &'static CFString;
}

extern "C" {
    /// [Apple's documentation](https://developer.apple.com/documentation/corevideo/kcvimagebuffercolorprimaries_itu_r_709_2?language=objc)
    pub static kCVImageBufferColorPrimaries_ITU_R_709_2: &'static CFString;
}

extern "C" {
    /// [Apple's documentation](https://developer.apple.com/documentation/corevideo/kcvimagebuffercolorprimaries_ebu_3213?language=objc)
    pub static kCVImageBufferColorPrimaries_EBU_3213: &'static CFString;
}

extern "C" {
    /// [Apple's documentation](https://developer.apple.com/documentation/corevideo/kcvimagebuffercolorprimaries_smpte_c?language=objc)
    pub static kCVImageBufferColorPrimaries_SMPTE_C: &'static CFString;
}

extern "C" {
    /// [Apple's documentation](https://developer.apple.com/documentation/corevideo/kcvimagebuffercolorprimaries_p22?language=objc)
    pub static kCVImageBufferColorPrimaries_P22: &'static CFString;
}

extern "C" {
    /// [Apple's documentation](https://developer.apple.com/documentation/corevideo/kcvimagebuffercolorprimaries_dci_p3?language=objc)
    pub static kCVImageBufferColorPrimaries_DCI_P3: &'static CFString;
}

extern "C" {
    /// [Apple's documentation](https://developer.apple.com/documentation/corevideo/kcvimagebuffercolorprimaries_p3_d65?language=objc)
    pub static kCVImageBufferColorPrimaries_P3_D65: &'static CFString;
}

extern "C" {
    /// [Apple's documentation](https://developer.apple.com/documentation/corevideo/kcvimagebuffercolorprimaries_itu_r_2020?language=objc)
    pub static kCVImageBufferColorPrimaries_ITU_R_2020: &'static CFString;
}

extern "C" {
    /// [Apple's documentation](https://developer.apple.com/documentation/corevideo/kcvimagebuffertransferfunctionkey?language=objc)
    pub static kCVImageBufferTransferFunctionKey: &'static CFString;
}

extern "C" {
    /// [Apple's documentation](https://developer.apple.com/documentation/corevideo/kcvimagebuffertransferfunction_itu_r_709_2?language=objc)
    pub static kCVImageBufferTransferFunction_ITU_R_709_2: &'static CFString;
}

extern "C" {
    /// [Apple's documentation](https://developer.apple.com/documentation/corevideo/kcvimagebuffertransferfunction_smpte_240m_1995?language=objc)
    pub static kCVImageBufferTransferFunction_SMPTE_240M_1995: &'static CFString;
}

extern "C" {
    /// [Apple's documentation](https://developer.apple.com/documentation/corevideo/kcvimagebuffertransferfunction_usegamma?language=objc)
    pub static kCVImageBufferTransferFunction_UseGamma: &'static CFString;
}

extern "C" {
    /// [Apple's documentation](https://developer.apple.com/documentation/corevideo/kcvimagebuffertransferfunction_ebu_3213?language=objc)
    #[deprecated]
    pub static kCVImageBufferTransferFunction_EBU_3213: &'static CFString;
}

extern "C" {
    /// [Apple's documentation](https://developer.apple.com/documentation/corevideo/kcvimagebuffertransferfunction_smpte_c?language=objc)
    #[deprecated]
    pub static kCVImageBufferTransferFunction_SMPTE_C: &'static CFString;
}

extern "C" {
    /// [Apple's documentation](https://developer.apple.com/documentation/corevideo/kcvimagebuffertransferfunction_srgb?language=objc)
    pub static kCVImageBufferTransferFunction_sRGB: &'static CFString;
}

extern "C" {
    /// [Apple's documentation](https://developer.apple.com/documentation/corevideo/kcvimagebuffertransferfunction_itu_r_2020?language=objc)
    pub static kCVImageBufferTransferFunction_ITU_R_2020: &'static CFString;
}

extern "C" {
    /// [Apple's documentation](https://developer.apple.com/documentation/corevideo/kcvimagebuffertransferfunction_smpte_st_428_1?language=objc)
    pub static kCVImageBufferTransferFunction_SMPTE_ST_428_1: &'static CFString;
}

extern "C" {
    /// [Apple's documentation](https://developer.apple.com/documentation/corevideo/kcvimagebuffertransferfunction_smpte_st_2084_pq?language=objc)
    pub static kCVImageBufferTransferFunction_SMPTE_ST_2084_PQ: &'static CFString;
}

extern "C" {
    /// [Apple's documentation](https://developer.apple.com/documentation/corevideo/kcvimagebuffertransferfunction_itu_r_2100_hlg?language=objc)
    pub static kCVImageBufferTransferFunction_ITU_R_2100_HLG: &'static CFString;
}

extern "C" {
    /// [Apple's documentation](https://developer.apple.com/documentation/corevideo/kcvimagebuffertransferfunction_linear?language=objc)
    pub static kCVImageBufferTransferFunction_Linear: &'static CFString;
}

extern "C" {
    /// [Apple's documentation](https://developer.apple.com/documentation/corevideo/kcvimagebufferchromalocationtopfieldkey?language=objc)
    pub static kCVImageBufferChromaLocationTopFieldKey: &'static CFString;
}

extern "C" {
    /// [Apple's documentation](https://developer.apple.com/documentation/corevideo/kcvimagebufferchromalocationbottomfieldkey?language=objc)
    pub static kCVImageBufferChromaLocationBottomFieldKey: &'static CFString;
}

extern "C" {
    /// [Apple's documentation](https://developer.apple.com/documentation/corevideo/kcvimagebufferchromalocation_left?language=objc)
    pub static kCVImageBufferChromaLocation_Left: &'static CFString;
}

extern "C" {
    /// [Apple's documentation](https://developer.apple.com/documentation/corevideo/kcvimagebufferchromalocation_center?language=objc)
    pub static kCVImageBufferChromaLocation_Center: &'static CFString;
}

extern "C" {
    /// [Apple's documentation](https://developer.apple.com/documentation/corevideo/kcvimagebufferchromalocation_topleft?language=objc)
    pub static kCVImageBufferChromaLocation_TopLeft: &'static CFString;
}

extern "C" {
    /// [Apple's documentation](https://developer.apple.com/documentation/corevideo/kcvimagebufferchromalocation_top?language=objc)
    pub static kCVImageBufferChromaLocation_Top: &'static CFString;
}

extern "C" {
    /// [Apple's documentation](https://developer.apple.com/documentation/corevideo/kcvimagebufferchromalocation_bottomleft?language=objc)
    pub static kCVImageBufferChromaLocation_BottomLeft: &'static CFString;
}

extern "C" {
    /// [Apple's documentation](https://developer.apple.com/documentation/corevideo/kcvimagebufferchromalocation_bottom?language=objc)
    pub static kCVImageBufferChromaLocation_Bottom: &'static CFString;
}

extern "C" {
    /// [Apple's documentation](https://developer.apple.com/documentation/corevideo/kcvimagebufferchromalocation_dv420?language=objc)
    pub static kCVImageBufferChromaLocation_DV420: &'static CFString;
}

extern "C" {
    /// [Apple's documentation](https://developer.apple.com/documentation/corevideo/kcvimagebufferchromasubsamplingkey?language=objc)
    pub static kCVImageBufferChromaSubsamplingKey: &'static CFString;
}

extern "C" {
    /// [Apple's documentation](https://developer.apple.com/documentation/corevideo/kcvimagebufferchromasubsampling_420?language=objc)
    pub static kCVImageBufferChromaSubsampling_420: &'static CFString;
}

extern "C" {
    /// [Apple's documentation](https://developer.apple.com/documentation/corevideo/kcvimagebufferchromasubsampling_422?language=objc)
    pub static kCVImageBufferChromaSubsampling_422: &'static CFString;
}

extern "C" {
    /// [Apple's documentation](https://developer.apple.com/documentation/corevideo/kcvimagebufferchromasubsampling_411?language=objc)
    pub static kCVImageBufferChromaSubsampling_411: &'static CFString;
}

extern "C" {
    /// [Apple's documentation](https://developer.apple.com/documentation/corevideo/kcvimagebufferalphachannelisopaque?language=objc)
    pub static kCVImageBufferAlphaChannelIsOpaque: &'static CFString;
}

extern "C" {
    /// [Apple's documentation](https://developer.apple.com/documentation/corevideo/kcvimagebufferalphachannelmodekey?language=objc)
    pub static kCVImageBufferAlphaChannelModeKey: &'static CFString;
}

extern "C" {
    /// [Apple's documentation](https://developer.apple.com/documentation/corevideo/kcvimagebufferalphachannelmode_straightalpha?language=objc)
    pub static kCVImageBufferAlphaChannelMode_StraightAlpha: &'static CFString;
}

extern "C" {
    /// [Apple's documentation](https://developer.apple.com/documentation/corevideo/kcvimagebufferalphachannelmode_premultipliedalpha?language=objc)
    pub static kCVImageBufferAlphaChannelMode_PremultipliedAlpha: &'static CFString;
}

extern "C" {
    /// [Apple's documentation](https://developer.apple.com/documentation/corevideo/kcvimagebufferpostdecodeprocessingsequencemetadatakey?language=objc)
    pub static kCVImageBufferPostDecodeProcessingSequenceMetadataKey: Option<&'static CFString>;
}

extern "C" {
    /// [Apple's documentation](https://developer.apple.com/documentation/corevideo/kcvimagebufferpostdecodeprocessingframemetadatakey?language=objc)
    pub static kCVImageBufferPostDecodeProcessingFrameMetadataKey: Option<&'static CFString>;
}

extern "C-unwind" {
    pub fn CVYCbCrMatrixGetIntegerCodePointForString(
        y_cb_cr_matrix_string: Option<&CFString>,
    ) -> c_int;
}

extern "C-unwind" {
    pub fn CVColorPrimariesGetIntegerCodePointForString(
        color_primaries_string: Option<&CFString>,
    ) -> c_int;
}

extern "C-unwind" {
    pub fn CVTransferFunctionGetIntegerCodePointForString(
        transfer_function_string: Option<&CFString>,
    ) -> c_int;
}

#[inline]
pub unsafe extern "C-unwind" fn CVYCbCrMatrixGetStringForIntegerCodePoint(
    y_cb_cr_matrix_code_point: c_int,
) -> Option<CFRetained<CFString>> {
    extern "C-unwind" {
        fn CVYCbCrMatrixGetStringForIntegerCodePoint(
            y_cb_cr_matrix_code_point: c_int,
        ) -> Option<NonNull<CFString>>;
    }
    let ret = unsafe { CVYCbCrMatrixGetStringForIntegerCodePoint(y_cb_cr_matrix_code_point) };
    ret.map(|ret| unsafe { CFRetained::retain(ret) })
}

#[inline]
pub unsafe extern "C-unwind" fn CVColorPrimariesGetStringForIntegerCodePoint(
    color_primaries_code_point: c_int,
) -> Option<CFRetained<CFString>> {
    extern "C-unwind" {
        fn CVColorPrimariesGetStringForIntegerCodePoint(
            color_primaries_code_point: c_int,
        ) -> Option<NonNull<CFString>>;
    }
    let ret = unsafe { CVColorPrimariesGetStringForIntegerCodePoint(color_primaries_code_point) };
    ret.map(|ret| unsafe { CFRetained::retain(ret) })
}

#[inline]
pub unsafe extern "C-unwind" fn CVTransferFunctionGetStringForIntegerCodePoint(
    transfer_function_code_point: c_int,
) -> Option<CFRetained<CFString>> {
    extern "C-unwind" {
        fn CVTransferFunctionGetStringForIntegerCodePoint(
            transfer_function_code_point: c_int,
        ) -> Option<NonNull<CFString>>;
    }
    let ret =
        unsafe { CVTransferFunctionGetStringForIntegerCodePoint(transfer_function_code_point) };
    ret.map(|ret| unsafe { CFRetained::retain(ret) })
}

/// Base type for all CoreVideo image buffers
///
/// See also [Apple's documentation](https://developer.apple.com/documentation/corevideo/cvimagebuffer?language=objc)
#[cfg(feature = "CVBuffer")]
pub type CVImageBuffer = CVBuffer;

extern "C-unwind" {
    /// Returns the full encoded dimensions of a CVImageBuffer.  For example, for an NTSC DV frame this would be 720x480
    ///
    /// Parameter `imageBuffer`: A CVImageBuffer that you wish to retrieve the encoded size from.
    ///
    /// Returns: A CGSize returning the full encoded size of the buffer
    /// Returns zero size if called with a non-CVImageBufferRef type or NULL.
    #[cfg(feature = "CVBuffer")]
    pub fn CVImageBufferGetEncodedSize(image_buffer: &CVImageBuffer) -> CGSize;
}

extern "C-unwind" {
    /// Returns the nominal output display size (in square pixels) of a CVImageBuffer.
    /// For example, for an NTSC DV frame this would be 640x480
    ///
    /// Parameter `imageBuffer`: A CVImageBuffer that you wish to retrieve the display size from.
    ///
    /// Returns: A CGSize returning the nominal display size of the buffer
    /// Returns zero size if called with a non-CVImageBufferRef type or NULL.
    #[cfg(feature = "CVBuffer")]
    pub fn CVImageBufferGetDisplaySize(image_buffer: &CVImageBuffer) -> CGSize;
}

extern "C-unwind" {
    /// Returns the source rectangle of a CVImageBuffer that represents the clean aperture
    /// of the buffer in encoded pixels.    For example, an NTSC DV frame would return a CGRect with an
    /// origin of 8,0 and a size of 704,480.
    /// Note that the origin of this rect always the lower left    corner.   This is the same coordinate system as
    /// used by CoreImage.
    ///
    /// Parameter `imageBuffer`: A CVImageBuffer that you wish to retrieve the display size from.
    ///
    /// Returns: A CGSize returning the nominal display size of the buffer
    /// Returns zero rect if called with a non-CVImageBufferRef type or NULL.
    #[cfg(feature = "CVBuffer")]
    pub fn CVImageBufferGetCleanRect(image_buffer: &CVImageBuffer) -> CGRect;
}

/// Returns whether the image is flipped vertically or not.
///
/// Parameter `imageBuffer`: target
///
/// Returns: True if 0,0 in the texture is upper left, false if 0,0 is lower left.
#[cfg(feature = "CVBuffer")]
#[inline]
pub unsafe extern "C-unwind" fn CVImageBufferIsFlipped(image_buffer: &CVImageBuffer) -> bool {
    extern "C-unwind" {
        fn CVImageBufferIsFlipped(image_buffer: &CVImageBuffer) -> Boolean;
    }
    let ret = unsafe { CVImageBufferIsFlipped(image_buffer) };
    ret != 0
}

/// Returns the color space of a CVImageBuffer.
///
/// Parameter `imageBuffer`: A CVImageBuffer that you wish to retrieve the color space from.
///
/// Returns: A CGColorSpaceRef representing the color space of the buffer.
/// Returns NULL if called with a non-CVImageBufferRef type or NULL.
#[cfg(all(feature = "CVBuffer", feature = "objc2-core-graphics"))]
#[inline]
pub unsafe extern "C-unwind" fn CVImageBufferGetColorSpace(
    image_buffer: &CVImageBuffer,
) -> Option<CFRetained<CGColorSpace>> {
    extern "C-unwind" {
        fn CVImageBufferGetColorSpace(
            image_buffer: &CVImageBuffer,
        ) -> Option<NonNull<CGColorSpace>>;
    }
    let ret = unsafe { CVImageBufferGetColorSpace(image_buffer) };
    ret.map(|ret| unsafe { CFRetained::retain(ret) })
}

/// Attempts to synthesize a CGColorSpace from an image buffer's attachments.
///
/// Parameter `attachments`: A CFDictionary of attachments for an image buffer, obtained using CVBufferCopyAttachments().
///
/// Returns: A CGColorSpaceRef representing the color space of the buffer.
/// Returns NULL if the attachments dictionary does not contain the information required to synthesize a CGColorSpace.
///
/// To generate a CGColorSpace, the attachments dictionary should include values for either:
/// 1. kCVImageBufferICCProfile
/// 2. kCVImageBufferColorPrimariesKey, kCVImageBufferTransferFunctionKey, and kCVImageBufferYCbCrMatrixKey (and possibly kCVImageBufferGammaLevelKey)
/// The client is responsible for releasing the CGColorSpaceRef when it is done with it (CGColorSpaceRelease() or CFRelease())
///
/// # Safety
///
/// `attachments` generics must be of the correct type.
#[cfg(feature = "objc2-core-graphics")]
#[inline]
pub unsafe extern "C-unwind" fn CVImageBufferCreateColorSpaceFromAttachments(
    attachments: &CFDictionary,
) -> Option<CFRetained<CGColorSpace>> {
    extern "C-unwind" {
        fn CVImageBufferCreateColorSpaceFromAttachments(
            attachments: &CFDictionary,
        ) -> Option<NonNull<CGColorSpace>>;
    }
    let ret = unsafe { CVImageBufferCreateColorSpaceFromAttachments(attachments) };
    ret.map(|ret| unsafe { CFRetained::from_raw(ret) })
}

extern "C" {
    /// [Apple's documentation](https://developer.apple.com/documentation/corevideo/kcvimagebuffermasteringdisplaycolorvolumekey?language=objc)
    pub static kCVImageBufferMasteringDisplayColorVolumeKey: &'static CFString;
}

extern "C" {
    /// [Apple's documentation](https://developer.apple.com/documentation/corevideo/kcvimagebuffercontentlightlevelinfokey?language=objc)
    pub static kCVImageBufferContentLightLevelInfoKey: &'static CFString;
}

extern "C" {
    /// [Apple's documentation](https://developer.apple.com/documentation/corevideo/kcvimagebufferambientviewingenvironmentkey?language=objc)
    pub static kCVImageBufferAmbientViewingEnvironmentKey: &'static CFString;
}

extern "C" {
    /// [Apple's documentation](https://developer.apple.com/documentation/corevideo/kcvimagebuffersceneilluminationkey?language=objc)
    pub static kCVImageBufferSceneIlluminationKey: &'static CFString;
}

extern "C" {
    /// Specifies region of interest that image statistics cover.
    ///
    /// This value should be a CGRect dictionary created by CGRectCreateDictionaryRepresentation(). The origin in the CGRect represents the x,y coordinate within the CVPixelBuffer where region of interest is located.
    ///
    /// See also [Apple's documentation](https://developer.apple.com/documentation/corevideo/kcvimagebufferregionofinterestkey?language=objc)
    pub static kCVImageBufferRegionOfInterestKey: &'static CFString;
}

extern "C" {
    /// Indicates that the transfer function or gamma of the content is a log format and identifies the specific log curve.
    ///
    /// The value is a CFString holding fully specified reverse DNS identifier.
    /// Content captured in Apple Log will have this key set to kCVImageBufferLogTransferFunction_AppleLog.
    ///
    /// Indicates the Apple Log identifier.
    ///
    /// You can download the Apple Log Profile White Paper from the Apple Developer Downloads website.
    ///
    /// See also [Apple's documentation](https://developer.apple.com/documentation/corevideo/kcvimagebufferlogtransferfunctionkey?language=objc)
    pub static kCVImageBufferLogTransferFunctionKey: &'static CFString;
}

extern "C" {
    /// [Apple's documentation](https://developer.apple.com/documentation/corevideo/kcvimagebufferlogtransferfunction_applelog?language=objc)
    pub static kCVImageBufferLogTransferFunction_AppleLog: &'static CFString;
}
