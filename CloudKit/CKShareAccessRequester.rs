//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use core::ptr::NonNull;
use objc2::__framework_prelude::*;
#[cfg(feature = "objc2-contacts")]
#[cfg(not(target_os = "tvos"))]
use objc2_contacts::*;
use objc2_foundation::*;

use crate::*;

extern_class!(
    /// [Apple's documentation](https://developer.apple.com/documentation/cloudkit/ckshareaccessrequester?language=objc)
    #[unsafe(super(NSObject))]
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub struct CKShareAccessRequester;
);

unsafe impl Send for CKShareAccessRequester {}

unsafe impl Sync for CKShareAccessRequester {}

extern_conformance!(
    unsafe impl NSCoding for CKShareAccessRequester {}
);

extern_conformance!(
    unsafe impl NSCopying for CKShareAccessRequester {}
);

unsafe impl CopyingHelper for CKShareAccessRequester {
    type Result = Self;
}

extern_conformance!(
    unsafe impl NSObjectProtocol for CKShareAccessRequester {}
);

extern_conformance!(
    unsafe impl NSSecureCoding for CKShareAccessRequester {}
);

impl CKShareAccessRequester {
    extern_methods!(
        #[unsafe(method(new))]
        #[unsafe(method_family = new)]
        pub unsafe fn new() -> Retained<Self>;

        #[unsafe(method(init))]
        #[unsafe(method_family = init)]
        pub unsafe fn init(this: Allocated<Self>) -> Retained<Self>;

        #[cfg(feature = "CKUserIdentity")]
        /// The user identity this share access requester represents.
        #[unsafe(method(userIdentity))]
        #[unsafe(method_family = none)]
        pub unsafe fn userIdentity(&self) -> Retained<CKUserIdentity>;

        #[cfg(feature = "CKUserIdentityLookupInfo")]
        /// Convenience method to get the requester's lookup info.
        /// This lookup info can be used in ``CKFetchShareParticipantsOperation`` to approve the requester by fetching the corresponding participant and adding the participant to the share.
        #[unsafe(method(participantLookupInfo))]
        #[unsafe(method_family = none)]
        pub unsafe fn participantLookupInfo(&self) -> Retained<CKUserIdentityLookupInfo>;

        #[cfg(feature = "objc2-contacts")]
        #[cfg(not(target_os = "tvos"))]
        /// Returns a displayable `CNContact` for the requester, or a new `CNContact` if none exists in the user's contacts.
        /// Provides a standardized format for the requester's underlying lookup info in the user identity.
        /// Use when displaying the requester information to other participants and approvers in application UI.
        #[unsafe(method(contact))]
        #[unsafe(method_family = none)]
        pub unsafe fn contact(&self) -> Retained<CNContact>;
    );
}
