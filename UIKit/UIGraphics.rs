//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use core::ffi::*;
use core::ptr::NonNull;
use objc2::__framework_prelude::*;
#[cfg(feature = "objc2-core-foundation")]
use objc2_core_foundation::*;
#[cfg(feature = "objc2-core-graphics")]
use objc2_core_graphics::*;
use objc2_foundation::*;

use crate::*;

#[cfg(all(feature = "objc2-core-foundation", feature = "objc2-core-graphics"))]
#[inline]
pub unsafe extern "C-unwind" fn UIGraphicsGetCurrentContext() -> Option<CFRetained<CGContext>> {
    extern "C-unwind" {
        fn UIGraphicsGetCurrentContext() -> Option<NonNull<CGContext>>;
    }
    let ret = unsafe { UIGraphicsGetCurrentContext() };
    ret.map(|ret| unsafe { CFRetained::retain(ret) })
}

extern "C-unwind" {
    #[cfg(feature = "objc2-core-graphics")]
    pub fn UIGraphicsPushContext(context: &CGContext);
}

extern "C-unwind" {
    pub fn UIGraphicsPopContext();
}

extern "C-unwind" {
    #[cfg(all(feature = "objc2-core-foundation", feature = "objc2-core-graphics"))]
    pub fn UIRectFillUsingBlendMode(rect: CGRect, blend_mode: CGBlendMode);
}

extern "C-unwind" {
    #[cfg(feature = "objc2-core-foundation")]
    pub fn UIRectFill(rect: CGRect);
}

extern "C-unwind" {
    #[cfg(all(feature = "objc2-core-foundation", feature = "objc2-core-graphics"))]
    pub fn UIRectFrameUsingBlendMode(rect: CGRect, blend_mode: CGBlendMode);
}

extern "C-unwind" {
    #[cfg(feature = "objc2-core-foundation")]
    pub fn UIRectFrame(rect: CGRect);
}

extern "C-unwind" {
    #[cfg(feature = "objc2-core-foundation")]
    pub fn UIRectClip(rect: CGRect);
}

extern "C-unwind" {
    #[cfg(feature = "objc2-core-foundation")]
    #[deprecated = "Replace usage of UIGraphicsBeginImageContext with UIGraphicsImageRenderer."]
    pub fn UIGraphicsBeginImageContext(size: CGSize);
}

#[cfg(feature = "objc2-core-foundation")]
#[deprecated = "Replace usage of UIGraphicsBeginImageContextWithOptions with UIGraphicsImageRenderer."]
#[inline]
pub unsafe extern "C-unwind" fn UIGraphicsBeginImageContextWithOptions(
    size: CGSize,
    opaque: bool,
    scale: CGFloat,
) {
    extern "C-unwind" {
        fn UIGraphicsBeginImageContextWithOptions(size: CGSize, opaque: Bool, scale: CGFloat);
    }
    unsafe { UIGraphicsBeginImageContextWithOptions(size, Bool::new(opaque), scale) }
}

#[cfg(feature = "UIImage")]
#[deprecated = "Replace usage of UIGraphicsGetImageFromCurrentImageContext with UIGraphicsImageRendererContext.currentImage."]
#[inline]
pub unsafe extern "C-unwind" fn UIGraphicsGetImageFromCurrentImageContext(
) -> Option<Retained<UIImage>> {
    extern "C-unwind" {
        fn UIGraphicsGetImageFromCurrentImageContext() -> *mut UIImage;
    }
    let ret = unsafe { UIGraphicsGetImageFromCurrentImageContext() };
    unsafe { Retained::retain_autoreleased(ret) }
}

extern "C-unwind" {
    #[deprecated = "UIGraphicsEndImageContext should only be used alongside UIGraphicsBeginImageContext[WithOptions]."]
    pub fn UIGraphicsEndImageContext();
}

#[cfg(feature = "objc2-core-foundation")]
#[inline]
pub unsafe extern "C-unwind" fn UIGraphicsBeginPDFContextToFile(
    path: &NSString,
    bounds: CGRect,
    document_info: Option<&NSDictionary>,
) -> bool {
    extern "C-unwind" {
        fn UIGraphicsBeginPDFContextToFile(
            path: &NSString,
            bounds: CGRect,
            document_info: Option<&NSDictionary>,
        ) -> Bool;
    }
    unsafe { UIGraphicsBeginPDFContextToFile(path, bounds, document_info) }.as_bool()
}

extern "C-unwind" {
    #[cfg(feature = "objc2-core-foundation")]
    pub fn UIGraphicsBeginPDFContextToData(
        data: &NSMutableData,
        bounds: CGRect,
        document_info: Option<&NSDictionary>,
    );
}

extern "C-unwind" {
    pub fn UIGraphicsEndPDFContext();
}

extern "C-unwind" {
    pub fn UIGraphicsBeginPDFPage();
}

extern "C-unwind" {
    #[cfg(feature = "objc2-core-foundation")]
    pub fn UIGraphicsBeginPDFPageWithInfo(bounds: CGRect, page_info: Option<&NSDictionary>);
}

extern "C-unwind" {
    #[cfg(feature = "objc2-core-foundation")]
    pub fn UIGraphicsGetPDFContextBounds() -> CGRect;
}

extern "C-unwind" {
    #[cfg(feature = "objc2-core-foundation")]
    pub fn UIGraphicsSetPDFContextURLForRect(url: &NSURL, rect: CGRect);
}

extern "C-unwind" {
    #[cfg(feature = "objc2-core-foundation")]
    pub fn UIGraphicsAddPDFContextDestinationAtPoint(name: &NSString, point: CGPoint);
}

extern "C-unwind" {
    #[cfg(feature = "objc2-core-foundation")]
    pub fn UIGraphicsSetPDFContextDestinationForRect(name: &NSString, rect: CGRect);
}
