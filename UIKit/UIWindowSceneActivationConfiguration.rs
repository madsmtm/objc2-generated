//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use core::ffi::*;
use core::ptr::NonNull;
use objc2::__framework_prelude::*;
use objc2_foundation::*;

use crate::*;

extern_class!(
    /// [Apple's documentation](https://developer.apple.com/documentation/uikit/uiwindowsceneactivationconfiguration?language=objc)
    #[unsafe(super(NSObject))]
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub struct UIWindowSceneActivationConfiguration;
);

extern_conformance!(
    unsafe impl NSObjectProtocol for UIWindowSceneActivationConfiguration {}
);

impl UIWindowSceneActivationConfiguration {
    extern_methods!(
        /// The user activity that will be used to request a scene
        #[unsafe(method(userActivity))]
        #[unsafe(method_family = none)]
        pub fn userActivity(&self) -> Retained<NSUserActivity>;

        #[cfg(all(
            feature = "UISceneOptions",
            feature = "UIWindowSceneActivationRequestOptions"
        ))]
        /// Options for customizing the scene request. If omitted default options are used.
        #[unsafe(method(options))]
        #[unsafe(method_family = none)]
        pub fn options(
            &self,
            mtm: MainThreadMarker,
        ) -> Option<Retained<UIWindowSceneActivationRequestOptions>>;

        #[cfg(all(
            feature = "UISceneOptions",
            feature = "UIWindowSceneActivationRequestOptions"
        ))]
        /// Setter for [`options`][Self::options].
        #[unsafe(method(setOptions:))]
        #[unsafe(method_family = none)]
        pub fn setOptions(&self, options: Option<&UIWindowSceneActivationRequestOptions>);

        #[cfg(feature = "UITargetedPreview")]
        /// An optional preview used to define the visual "source" of the newly activated scene for use in system animations.
        #[unsafe(method(preview))]
        #[unsafe(method_family = none)]
        pub fn preview(&self, mtm: MainThreadMarker) -> Option<Retained<UITargetedPreview>>;

        #[cfg(feature = "UITargetedPreview")]
        /// Setter for [`preview`][Self::preview].
        #[unsafe(method(setPreview:))]
        #[unsafe(method_family = none)]
        pub fn setPreview(&self, preview: Option<&UITargetedPreview>);

        #[unsafe(method(initWithUserActivity:))]
        #[unsafe(method_family = init)]
        pub fn initWithUserActivity(
            this: Allocated<Self>,
            user_activity: &NSUserActivity,
        ) -> Retained<Self>;

        #[unsafe(method(init))]
        #[unsafe(method_family = init)]
        pub fn init(this: Allocated<Self>) -> Retained<Self>;

        #[unsafe(method(new))]
        #[unsafe(method_family = new)]
        pub fn new() -> Retained<Self>;
    );
}

impl DefaultRetained for UIWindowSceneActivationConfiguration {
    #[inline]
    fn default_retained() -> Retained<Self> {
        Self::new()
    }
}
