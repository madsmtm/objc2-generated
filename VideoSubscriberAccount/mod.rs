// This file has been automatically generated by `objc2`'s `header-translator`.
// DO NOT EDIT

#![allow(unused_imports)]
#![allow(deprecated)]
#![allow(non_snake_case)]
#![allow(non_camel_case_types)]
#![allow(non_upper_case_globals)]
#![allow(missing_docs)]
#![allow(clippy::too_many_arguments)]
#![allow(clippy::type_complexity)]
#![allow(clippy::upper_case_acronyms)]
#![allow(clippy::identity_op)]
#![allow(clippy::missing_safety_doc)]
#![allow(clippy::doc_lazy_continuation)]
#![allow(rustdoc::broken_intra_doc_links)]
#![allow(rustdoc::bare_urls)]
#![allow(rustdoc::unportable_markdown)]
#![allow(rustdoc::invalid_html_tags)]

#[link(name = "VideoSubscriberAccount", kind = "framework")]
extern "C" {}

#[cfg(feature = "VSAccountApplicationProvider")]
#[path = "VSAccountApplicationProvider.rs"]
mod __VSAccountApplicationProvider;
#[cfg(feature = "VSAccountManager")]
#[path = "VSAccountManager.rs"]
mod __VSAccountManager;
#[cfg(feature = "VSAccountManagerResult")]
#[path = "VSAccountManagerResult.rs"]
mod __VSAccountManagerResult;
#[cfg(feature = "VSAccountMetadata")]
#[path = "VSAccountMetadata.rs"]
mod __VSAccountMetadata;
#[cfg(feature = "VSAccountMetadataRequest")]
#[path = "VSAccountMetadataRequest.rs"]
mod __VSAccountMetadataRequest;
#[cfg(feature = "VSAccountProviderResponse")]
#[path = "VSAccountProviderResponse.rs"]
mod __VSAccountProviderResponse;
#[cfg(feature = "VSAppleSubscription")]
#[path = "VSAppleSubscription.rs"]
mod __VSAppleSubscription;
#[cfg(feature = "VSAutoSignInAuthorization")]
#[path = "VSAutoSignInAuthorization.rs"]
mod __VSAutoSignInAuthorization;
#[cfg(feature = "VSAutoSignInToken")]
#[path = "VSAutoSignInToken.rs"]
mod __VSAutoSignInToken;
#[cfg(feature = "VSAutoSignInTokenUpdateContext")]
#[path = "VSAutoSignInTokenUpdateContext.rs"]
mod __VSAutoSignInTokenUpdateContext;
#[cfg(feature = "VSSubscription")]
#[path = "VSSubscription.rs"]
mod __VSSubscription;
#[cfg(feature = "VSSubscriptionRegistrationCenter")]
#[path = "VSSubscriptionRegistrationCenter.rs"]
mod __VSSubscriptionRegistrationCenter;
#[cfg(feature = "VSUserAccount")]
#[path = "VSUserAccount.rs"]
mod __VSUserAccount;
#[cfg(feature = "VSUserAccountManager")]
#[path = "VSUserAccountManager.rs"]
mod __VSUserAccountManager;
#[cfg(feature = "VideoSubscriberAccountDefines")]
#[path = "VideoSubscriberAccountDefines.rs"]
mod __VideoSubscriberAccountDefines;
#[cfg(feature = "VideoSubscriberAccountErrors")]
#[path = "VideoSubscriberAccountErrors.rs"]
mod __VideoSubscriberAccountErrors;

#[cfg(feature = "VSAccountApplicationProvider")]
pub use self::__VSAccountApplicationProvider::VSAccountApplicationProvider;
#[cfg(feature = "VSAccountManager")]
pub use self::__VSAccountManager::VSAccountAccessStatus;
#[cfg(feature = "VSAccountManager")]
pub use self::__VSAccountManager::VSAccountManager;
#[cfg(feature = "VSAccountManager")]
pub use self::__VSAccountManager::VSAccountManagerDelegate;
#[cfg(feature = "VSAccountManager")]
pub use self::__VSAccountManager::VSCheckAccessOption;
#[cfg(feature = "VSAccountManager")]
pub use self::__VSAccountManager::VSCheckAccessOptionPrompt;
#[cfg(feature = "VSAccountManager")]
pub use self::__VSAccountManager::VSOpenTVProviderSettingsURLString;
#[cfg(feature = "VSAccountManagerResult")]
pub use self::__VSAccountManagerResult::VSAccountManagerResult;
#[cfg(feature = "VSAccountMetadata")]
pub use self::__VSAccountMetadata::VSAccountMetadata;
#[cfg(feature = "VSAccountMetadataRequest")]
pub use self::__VSAccountMetadataRequest::VSAccountMetadataRequest;
#[cfg(feature = "VSAccountProviderResponse")]
pub use self::__VSAccountProviderResponse::VSAccountProviderAuthenticationScheme;
#[cfg(feature = "VSAccountProviderResponse")]
pub use self::__VSAccountProviderResponse::VSAccountProviderAuthenticationSchemeAPI;
#[cfg(feature = "VSAccountProviderResponse")]
pub use self::__VSAccountProviderResponse::VSAccountProviderAuthenticationSchemeSAML;
#[cfg(feature = "VSAccountProviderResponse")]
pub use self::__VSAccountProviderResponse::VSAccountProviderResponse;
#[cfg(feature = "VSAppleSubscription")]
pub use self::__VSAppleSubscription::VSAppleSubscription;
#[cfg(feature = "VSAutoSignInAuthorization")]
pub use self::__VSAutoSignInAuthorization::VSAutoSignInAuthorization;
#[cfg(feature = "VSAutoSignInToken")]
pub use self::__VSAutoSignInToken::VSAutoSignInToken;
#[cfg(feature = "VSAutoSignInTokenUpdateContext")]
pub use self::__VSAutoSignInTokenUpdateContext::VSAutoSignInTokenUpdateContext;
#[cfg(feature = "VSSubscription")]
pub use self::__VSSubscription::VSSubscription;
#[cfg(feature = "VSSubscription")]
pub use self::__VSSubscription::VSSubscriptionAccessLevel;
#[cfg(feature = "VSSubscriptionRegistrationCenter")]
pub use self::__VSSubscriptionRegistrationCenter::VSSubscriptionRegistrationCenter;
#[cfg(feature = "VSUserAccount")]
pub use self::__VSUserAccount::VSOriginatingDeviceCategory;
#[cfg(feature = "VSUserAccount")]
pub use self::__VSUserAccount::VSUserAccount;
#[cfg(feature = "VSUserAccount")]
pub use self::__VSUserAccount::VSUserAccountType;
#[cfg(feature = "VSUserAccountManager")]
pub use self::__VSUserAccountManager::VSUserAccountManager;
#[cfg(feature = "VSUserAccountManager")]
pub use self::__VSUserAccountManager::VSUserAccountQueryOptions;
#[cfg(feature = "VideoSubscriberAccountErrors")]
pub use self::__VideoSubscriberAccountErrors::VSErrorCode;
#[cfg(feature = "VideoSubscriberAccountErrors")]
pub use self::__VideoSubscriberAccountErrors::VSErrorDomain;
#[cfg(feature = "VideoSubscriberAccountErrors")]
pub use self::__VideoSubscriberAccountErrors::VSErrorInfoKeyAccountProviderResponse;
#[cfg(feature = "VideoSubscriberAccountErrors")]
pub use self::__VideoSubscriberAccountErrors::VSErrorInfoKeySAMLResponse;
#[cfg(feature = "VideoSubscriberAccountErrors")]
pub use self::__VideoSubscriberAccountErrors::VSErrorInfoKeySAMLResponseStatus;
#[cfg(feature = "VideoSubscriberAccountErrors")]
pub use self::__VideoSubscriberAccountErrors::VSErrorInfoKeyUnsupportedProviderIdentifier;
