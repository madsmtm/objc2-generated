//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use core::ffi::*;
use core::ptr::NonNull;
use objc2::__framework_prelude::*;
use objc2_foundation::*;

use crate::*;

extern_class!(
    /// [Apple's documentation](https://developer.apple.com/documentation/videosubscriberaccount/vsapplesubscription?language=objc)
    #[unsafe(super(NSObject))]
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub struct VSAppleSubscription;
);

unsafe impl Send for VSAppleSubscription {}

unsafe impl Sync for VSAppleSubscription {}

extern_conformance!(
    unsafe impl NSObjectProtocol for VSAppleSubscription {}
);

impl VSAppleSubscription {
    extern_methods!(
        /// This property is not atomic.
        #[unsafe(method(customerID))]
        #[unsafe(method_family = none)]
        pub unsafe fn customerID(&self) -> Retained<NSString>;

        /// Setter for [`customerID`][Self::customerID].
        #[unsafe(method(setCustomerID:))]
        #[unsafe(method_family = none)]
        pub unsafe fn setCustomerID(&self, customer_id: &NSString);

        /// This property is not atomic.
        #[unsafe(method(productCodes))]
        #[unsafe(method_family = none)]
        pub unsafe fn productCodes(&self) -> Retained<NSArray<NSString>>;

        /// Setter for [`productCodes`][Self::productCodes].
        #[unsafe(method(setProductCodes:))]
        #[unsafe(method_family = none)]
        pub unsafe fn setProductCodes(&self, product_codes: &NSArray<NSString>);

        #[unsafe(method(initWithCustomerID:productCodes:))]
        #[unsafe(method_family = init)]
        pub unsafe fn initWithCustomerID_productCodes(
            this: Allocated<Self>,
            customer_id: &NSString,
            product_codes: &NSArray<NSString>,
        ) -> Retained<Self>;

        #[unsafe(method(init))]
        #[unsafe(method_family = init)]
        pub unsafe fn init(this: Allocated<Self>) -> Retained<Self>;

        #[unsafe(method(new))]
        #[unsafe(method_family = new)]
        pub unsafe fn new() -> Retained<Self>;
    );
}
