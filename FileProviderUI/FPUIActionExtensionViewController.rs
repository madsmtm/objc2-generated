//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use core::ffi::*;
use core::ptr::NonNull;
use objc2::__framework_prelude::*;
#[cfg(feature = "objc2-app-kit")]
#[cfg(target_os = "macos")]
use objc2_app_kit::*;
use objc2_file_provider::*;
use objc2_foundation::*;

use crate::*;

extern_class!(
    /// The custom user interface used to perform a selected action.
    ///
    /// Subclass this view controller to provide the user interface for your
    /// actions.
    ///
    /// No matter how many actions you define, your File Provider UI extension has
    /// only one ``FPUIActionExtensionViewController`` subclass. When the user
    /// selects one of your actions, the system instantiates a copy of your
    /// subclass, calls its
    /// ``FPUIActionExtensionViewController/prepareForActionWithIdentifier:itemIdentifiers:``
    /// method, and presents it to the user.
    ///
    /// Your subclass must do the following:
    ///
    /// - Override the
    /// ``FPUIActionExtensionViewController/prepareForActionWithIdentifier:itemIdentifiers:``
    /// method to check the action identifiers and present an appropriate user
    /// interface for the selected actions.
    /// - Provide some sort of feedback, even if
    /// the action doesn't require interaction with the user. For example, present a
    /// view that quickly fades out and automatically completes the action.
    /// - Call the ``FPUIActionExtensionViewController/extensionContext`` object's
    /// ``FPUIActionExtensionContext/cancelRequestWithError:`` or
    /// ``FPUIActionExtensionContext/completeRequest`` method when the action is
    /// finished to complete the action.
    ///
    /// See also [Apple's documentation](https://developer.apple.com/documentation/fileproviderui/fpuiactionextensionviewcontroller?language=objc)
    #[unsafe(super(NSViewController, NSResponder, NSObject))]
    #[derive(Debug, PartialEq, Eq, Hash)]
    #[cfg(feature = "objc2-app-kit")]
    #[cfg(target_os = "macos")]
    pub struct FPUIActionExtensionViewController;
);

#[cfg(feature = "objc2-app-kit")]
#[cfg(target_os = "macos")]
extern_conformance!(
    unsafe impl NSCoding for FPUIActionExtensionViewController {}
);

#[cfg(feature = "objc2-app-kit")]
#[cfg(target_os = "macos")]
extern_conformance!(
    unsafe impl NSEditor for FPUIActionExtensionViewController {}
);

#[cfg(feature = "objc2-app-kit")]
#[cfg(target_os = "macos")]
extern_conformance!(
    unsafe impl NSObjectProtocol for FPUIActionExtensionViewController {}
);

#[cfg(feature = "objc2-app-kit")]
#[cfg(target_os = "macos")]
extern_conformance!(
    unsafe impl NSSeguePerforming for FPUIActionExtensionViewController {}
);

#[cfg(feature = "objc2-app-kit")]
#[cfg(target_os = "macos")]
extern_conformance!(
    unsafe impl NSUserInterfaceItemIdentification for FPUIActionExtensionViewController {}
);

#[cfg(feature = "objc2-app-kit")]
#[cfg(target_os = "macos")]
impl FPUIActionExtensionViewController {
    extern_methods!(
        #[cfg(feature = "FPUIActionExtensionContext")]
        /// The extension context provided by the host app.
        #[unsafe(method(extensionContext))]
        #[unsafe(method_family = none)]
        pub unsafe fn extensionContext(&self) -> Retained<FPUIActionExtensionContext>;

        /// Performs any necessary setup or configuration when an authentication error
        /// occurs.
        ///
        /// While your file provider is enumerating its content, the system calls this
        /// method whenever your file provider returns an
        /// <doc
        /// ://com.apple.documentation/documentation/fileprovider/nsfileprovidererrordomain>
        /// error with a
        /// <doc
        /// ://com.apple.documentation/documentation/fileprovider/nsfileprovidererrorcode/nsfileprovidererrornotauthenticated>
        /// code. Use this method to present an interface to authenticate the user.
        ///
        /// - Parameters:
        /// - error: An object representing the authentication error. Your File Provider
        /// extension can pass additional information in the error's
        /// <doc
        /// ://com.apple.documentation/documentation/foundation/nserror/1411580-userinfo>
        /// property.
        #[unsafe(method(prepareForError:))]
        #[unsafe(method_family = none)]
        pub unsafe fn prepareForError(&self, error: &NSError);

        /// Performs any necessary setup or configuration for the specified action.
        ///
        /// Use this method to prepare a user interface for handling the action. At a
        /// minimum, you should display feedback about the action.
        ///
        /// For more information, see
        /// <doc
        /// :adding-actions-to-the-context-menu>.
        ///
        /// - Parameters:
        /// - actionIdentifier: The identifier for the action performed by the user.
        ///
        /// - itemIdentifiers: The identifiers of the items affected by the action.
        #[unsafe(method(prepareForActionWithIdentifier:itemIdentifiers:))]
        #[unsafe(method_family = none)]
        pub unsafe fn prepareForActionWithIdentifier_itemIdentifiers(
            &self,
            action_identifier: &NSString,
            item_identifiers: &NSArray<NSFileProviderItemIdentifier>,
        );
    );
}

/// Methods declared on superclass `NSViewController`.
#[cfg(feature = "objc2-app-kit")]
#[cfg(target_os = "macos")]
impl FPUIActionExtensionViewController {
    extern_methods!(
        #[unsafe(method(initWithNibName:bundle:))]
        #[unsafe(method_family = init)]
        pub unsafe fn initWithNibName_bundle(
            this: Allocated<Self>,
            nib_name_or_nil: Option<&NSNibName>,
            nib_bundle_or_nil: Option<&NSBundle>,
        ) -> Retained<Self>;

        /// # Safety
        ///
        /// `coder` possibly has further requirements.
        #[unsafe(method(initWithCoder:))]
        #[unsafe(method_family = init)]
        pub unsafe fn initWithCoder(
            this: Allocated<Self>,
            coder: &NSCoder,
        ) -> Option<Retained<Self>>;
    );
}

/// Methods declared on superclass `NSResponder`.
#[cfg(feature = "objc2-app-kit")]
#[cfg(target_os = "macos")]
impl FPUIActionExtensionViewController {
    extern_methods!(
        #[unsafe(method(init))]
        #[unsafe(method_family = init)]
        pub unsafe fn init(this: Allocated<Self>) -> Retained<Self>;
    );
}

/// Methods declared on superclass `NSObject`.
#[cfg(feature = "objc2-app-kit")]
#[cfg(target_os = "macos")]
impl FPUIActionExtensionViewController {
    extern_methods!(
        #[unsafe(method(new))]
        #[unsafe(method_family = new)]
        pub unsafe fn new(mtm: MainThreadMarker) -> Retained<Self>;
    );
}
