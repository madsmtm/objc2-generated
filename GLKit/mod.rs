// This file has been automatically generated by `objc2`'s `header-translator`.
// DO NOT EDIT

#![allow(unused_imports)]
#![allow(deprecated)]
#![allow(non_snake_case)]
#![allow(non_camel_case_types)]
#![allow(non_upper_case_globals)]
#![allow(missing_docs)]
#![allow(clippy::too_many_arguments)]
#![allow(clippy::type_complexity)]
#![allow(clippy::upper_case_acronyms)]
#![allow(clippy::identity_op)]
#![allow(clippy::missing_safety_doc)]
#![allow(clippy::doc_lazy_continuation)]
#![allow(rustdoc::broken_intra_doc_links)]
#![allow(rustdoc::bare_urls)]
#![allow(rustdoc::invalid_html_tags)]

#[link(name = "GLKit", kind = "framework")]
extern "C" {}

#[cfg(feature = "GLKBaseEffect")]
#[path = "GLKBaseEffect.rs"]
mod __GLKBaseEffect;
#[cfg(feature = "GLKEffectProperty")]
#[path = "GLKEffectProperty.rs"]
mod __GLKEffectProperty;
#[cfg(feature = "GLKEffectPropertyFog")]
#[path = "GLKEffectPropertyFog.rs"]
mod __GLKEffectPropertyFog;
#[cfg(feature = "GLKEffectPropertyLight")]
#[path = "GLKEffectPropertyLight.rs"]
mod __GLKEffectPropertyLight;
#[cfg(feature = "GLKEffectPropertyMaterial")]
#[path = "GLKEffectPropertyMaterial.rs"]
mod __GLKEffectPropertyMaterial;
#[cfg(feature = "GLKEffectPropertyTexture")]
#[path = "GLKEffectPropertyTexture.rs"]
mod __GLKEffectPropertyTexture;
#[cfg(feature = "GLKEffectPropertyTransform")]
#[path = "GLKEffectPropertyTransform.rs"]
mod __GLKEffectPropertyTransform;
#[cfg(feature = "GLKEffects")]
#[path = "GLKEffects.rs"]
mod __GLKEffects;
#[cfg(feature = "GLKMath")]
#[path = "GLKMath.rs"]
mod __GLKMath;
#[cfg(feature = "GLKMathTypes")]
#[path = "GLKMathTypes.rs"]
mod __GLKMathTypes;
#[cfg(feature = "GLKMathUtils")]
#[path = "GLKMathUtils.rs"]
mod __GLKMathUtils;
#[cfg(feature = "GLKMatrix3")]
#[path = "GLKMatrix3.rs"]
mod __GLKMatrix3;
#[cfg(feature = "GLKMatrix4")]
#[path = "GLKMatrix4.rs"]
mod __GLKMatrix4;
#[cfg(feature = "GLKMatrixStack")]
#[path = "GLKMatrixStack.rs"]
mod __GLKMatrixStack;
#[cfg(feature = "GLKModel")]
#[path = "GLKModel.rs"]
mod __GLKModel;
#[cfg(feature = "GLKNamedEffect")]
#[path = "GLKNamedEffect.rs"]
mod __GLKNamedEffect;
#[cfg(feature = "GLKQuaternion")]
#[path = "GLKQuaternion.rs"]
mod __GLKQuaternion;
#[cfg(feature = "GLKReflectionMapEffect")]
#[path = "GLKReflectionMapEffect.rs"]
mod __GLKReflectionMapEffect;
#[cfg(feature = "GLKSkyboxEffect")]
#[path = "GLKSkyboxEffect.rs"]
mod __GLKSkyboxEffect;
#[cfg(feature = "GLKTextureLoader")]
#[path = "GLKTextureLoader.rs"]
mod __GLKTextureLoader;
#[cfg(feature = "GLKVector2")]
#[path = "GLKVector2.rs"]
mod __GLKVector2;
#[cfg(feature = "GLKVector3")]
#[path = "GLKVector3.rs"]
mod __GLKVector3;
#[cfg(feature = "GLKVector4")]
#[path = "GLKVector4.rs"]
mod __GLKVector4;
#[cfg(feature = "GLKitBase")]
#[path = "GLKitBase.rs"]
mod __GLKitBase;

#[cfg(feature = "GLKBaseEffect")]
pub use self::__GLKBaseEffect::GLKBaseEffect;
#[cfg(feature = "GLKEffectProperty")]
pub use self::__GLKEffectProperty::GLKEffectProperty;
#[cfg(feature = "GLKEffectProperty")]
pub use self::__GLKEffectProperty::GLKEffectPropertyPrv;
#[cfg(feature = "GLKEffectProperty")]
pub use self::__GLKEffectProperty::GLKEffectPropertyPrvPtr;
#[cfg(all(feature = "GLKEffectProperty", feature = "GLKEffectPropertyFog"))]
pub use self::__GLKEffectPropertyFog::GLKEffectPropertyFog;
#[cfg(all(feature = "GLKEffectPropertyFog", feature = "objc2-open-gl"))]
#[cfg(target_os = "macos")]
pub use self::__GLKEffectPropertyFog::GLKFogMode;
#[cfg(all(feature = "GLKEffectProperty", feature = "GLKEffectPropertyLight"))]
pub use self::__GLKEffectPropertyLight::GLKEffectPropertyLight;
#[cfg(all(feature = "GLKEffectPropertyLight", feature = "objc2-open-gl"))]
#[cfg(target_os = "macos")]
pub use self::__GLKEffectPropertyLight::GLKLightingType;
#[cfg(all(feature = "GLKEffectProperty", feature = "GLKEffectPropertyMaterial"))]
pub use self::__GLKEffectPropertyMaterial::GLKEffectPropertyMaterial;
#[cfg(all(feature = "GLKEffectProperty", feature = "GLKEffectPropertyTexture"))]
pub use self::__GLKEffectPropertyTexture::GLKEffectPropertyTexture;
#[cfg(all(feature = "GLKEffectPropertyTexture", feature = "objc2-open-gl"))]
#[cfg(target_os = "macos")]
pub use self::__GLKEffectPropertyTexture::GLKTextureEnvMode;
#[cfg(all(feature = "GLKEffectPropertyTexture", feature = "objc2-open-gl"))]
#[cfg(target_os = "macos")]
pub use self::__GLKEffectPropertyTexture::GLKTextureTarget;
#[cfg(all(feature = "GLKEffectProperty", feature = "GLKEffectPropertyTransform"))]
pub use self::__GLKEffectPropertyTransform::GLKEffectPropertyTransform;
#[cfg(all(feature = "GLKEffects", feature = "objc2-open-gl"))]
#[cfg(target_os = "macos")]
pub use self::__GLKEffects::GLKVertexAttrib;
#[cfg(feature = "GLKMathTypes")]
pub use self::__GLKMathTypes::GLKMatrix2;
#[cfg(feature = "GLKMathTypes")]
pub use self::__GLKMathTypes::GLKMatrix3;
#[cfg(feature = "GLKMathTypes")]
pub use self::__GLKMathTypes::GLKMatrix4;
#[cfg(feature = "GLKMathTypes")]
pub use self::__GLKMathTypes::GLKQuaternion;
#[cfg(feature = "GLKMathTypes")]
pub use self::__GLKMathTypes::GLKVector2;
#[cfg(feature = "GLKMathTypes")]
pub use self::__GLKMathTypes::GLKVector3;
#[cfg(feature = "GLKMathTypes")]
pub use self::__GLKMathTypes::GLKVector4;
#[cfg(all(feature = "GLKMathTypes", feature = "GLKMathUtils"))]
pub use self::__GLKMathUtils::GLKMathProject;
#[cfg(all(feature = "GLKMathTypes", feature = "GLKMathUtils"))]
pub use self::__GLKMathUtils::GLKMathUnproject;
#[cfg(all(feature = "GLKMathTypes", feature = "GLKMathUtils"))]
pub use self::__GLKMathUtils::NSStringFromGLKMatrix2;
#[cfg(all(feature = "GLKMathTypes", feature = "GLKMathUtils"))]
pub use self::__GLKMathUtils::NSStringFromGLKMatrix3;
#[cfg(all(feature = "GLKMathTypes", feature = "GLKMathUtils"))]
pub use self::__GLKMathUtils::NSStringFromGLKMatrix4;
#[cfg(all(feature = "GLKMathTypes", feature = "GLKMathUtils"))]
pub use self::__GLKMathUtils::NSStringFromGLKQuaternion;
#[cfg(all(feature = "GLKMathTypes", feature = "GLKMathUtils"))]
pub use self::__GLKMathUtils::NSStringFromGLKVector2;
#[cfg(all(feature = "GLKMathTypes", feature = "GLKMathUtils"))]
pub use self::__GLKMathUtils::NSStringFromGLKVector3;
#[cfg(all(feature = "GLKMathTypes", feature = "GLKMathUtils"))]
pub use self::__GLKMathUtils::NSStringFromGLKVector4;
#[cfg(all(feature = "GLKMathTypes", feature = "GLKMatrix3"))]
pub use self::__GLKMatrix3::GLKMatrix3Identity;
#[cfg(all(feature = "GLKMathTypes", feature = "GLKMatrix3"))]
pub use self::__GLKMatrix3::GLKMatrix3Invert;
#[cfg(all(feature = "GLKMathTypes", feature = "GLKMatrix3"))]
pub use self::__GLKMatrix3::GLKMatrix3InvertAndTranspose;
#[cfg(all(feature = "GLKMathTypes", feature = "GLKMatrix4"))]
pub use self::__GLKMatrix4::GLKMatrix4Identity;
#[cfg(all(feature = "GLKMathTypes", feature = "GLKMatrix4"))]
pub use self::__GLKMatrix4::GLKMatrix4Invert;
#[cfg(all(feature = "GLKMathTypes", feature = "GLKMatrix4"))]
pub use self::__GLKMatrix4::GLKMatrix4InvertAndTranspose;
#[cfg(feature = "GLKMatrixStack")]
pub use self::__GLKMatrixStack::GLKMatrixStack;
#[cfg(all(feature = "GLKMatrixStack", feature = "objc2-core-foundation"))]
pub use self::__GLKMatrixStack::GLKMatrixStackCreate;
#[cfg(all(feature = "GLKMathTypes", feature = "GLKMatrixStack"))]
pub use self::__GLKMatrixStack::GLKMatrixStackGetMatrix2;
#[cfg(all(feature = "GLKMathTypes", feature = "GLKMatrixStack"))]
pub use self::__GLKMatrixStack::GLKMatrixStackGetMatrix3;
#[cfg(all(feature = "GLKMathTypes", feature = "GLKMatrixStack"))]
pub use self::__GLKMatrixStack::GLKMatrixStackGetMatrix3Inverse;
#[cfg(all(feature = "GLKMathTypes", feature = "GLKMatrixStack"))]
pub use self::__GLKMatrixStack::GLKMatrixStackGetMatrix3InverseTranspose;
#[cfg(all(feature = "GLKMathTypes", feature = "GLKMatrixStack"))]
pub use self::__GLKMatrixStack::GLKMatrixStackGetMatrix4;
#[cfg(all(feature = "GLKMathTypes", feature = "GLKMatrixStack"))]
pub use self::__GLKMatrixStack::GLKMatrixStackGetMatrix4Inverse;
#[cfg(all(feature = "GLKMathTypes", feature = "GLKMatrixStack"))]
pub use self::__GLKMatrixStack::GLKMatrixStackGetMatrix4InverseTranspose;
#[cfg(all(feature = "GLKMathTypes", feature = "GLKMatrixStack"))]
pub use self::__GLKMatrixStack::GLKMatrixStackLoadMatrix4;
#[cfg(all(feature = "GLKMathTypes", feature = "GLKMatrixStack"))]
pub use self::__GLKMatrixStack::GLKMatrixStackMultiplyMatrix4;
#[cfg(feature = "GLKMatrixStack")]
pub use self::__GLKMatrixStack::GLKMatrixStackMultiplyMatrixStack;
#[cfg(feature = "GLKMatrixStack")]
pub use self::__GLKMatrixStack::GLKMatrixStackPop;
#[cfg(feature = "GLKMatrixStack")]
pub use self::__GLKMatrixStack::GLKMatrixStackPush;
#[cfg(feature = "GLKMatrixStack")]
pub use self::__GLKMatrixStack::GLKMatrixStackRotate;
#[cfg(all(feature = "GLKMathTypes", feature = "GLKMatrixStack"))]
pub use self::__GLKMatrixStack::GLKMatrixStackRotateWithVector3;
#[cfg(all(feature = "GLKMathTypes", feature = "GLKMatrixStack"))]
pub use self::__GLKMatrixStack::GLKMatrixStackRotateWithVector4;
#[cfg(feature = "GLKMatrixStack")]
pub use self::__GLKMatrixStack::GLKMatrixStackRotateX;
#[cfg(feature = "GLKMatrixStack")]
pub use self::__GLKMatrixStack::GLKMatrixStackRotateY;
#[cfg(feature = "GLKMatrixStack")]
pub use self::__GLKMatrixStack::GLKMatrixStackRotateZ;
#[cfg(feature = "GLKMatrixStack")]
pub use self::__GLKMatrixStack::GLKMatrixStackScale;
#[cfg(all(feature = "GLKMathTypes", feature = "GLKMatrixStack"))]
pub use self::__GLKMatrixStack::GLKMatrixStackScaleWithVector3;
#[cfg(all(feature = "GLKMathTypes", feature = "GLKMatrixStack"))]
pub use self::__GLKMatrixStack::GLKMatrixStackScaleWithVector4;
#[cfg(feature = "GLKMatrixStack")]
pub use self::__GLKMatrixStack::GLKMatrixStackSize;
#[cfg(feature = "GLKMatrixStack")]
pub use self::__GLKMatrixStack::GLKMatrixStackTranslate;
#[cfg(all(feature = "GLKMathTypes", feature = "GLKMatrixStack"))]
pub use self::__GLKMatrixStack::GLKMatrixStackTranslateWithVector3;
#[cfg(all(feature = "GLKMathTypes", feature = "GLKMatrixStack"))]
pub use self::__GLKMatrixStack::GLKMatrixStackTranslateWithVector4;
#[cfg(feature = "GLKModel")]
pub use self::__GLKModel::kGLKModelErrorDomain;
#[cfg(feature = "GLKModel")]
pub use self::__GLKModel::kGLKModelErrorKey;
#[cfg(feature = "GLKModel")]
pub use self::__GLKModel::GLKMesh;
#[cfg(feature = "GLKModel")]
pub use self::__GLKModel::GLKMeshBuffer;
#[cfg(feature = "GLKModel")]
pub use self::__GLKModel::GLKMeshBufferAllocator;
#[cfg(feature = "GLKModel")]
pub use self::__GLKModel::GLKSubmesh;
#[cfg(all(feature = "GLKModel", feature = "objc2-open-gl"))]
#[cfg(target_os = "macos")]
pub use self::__GLKModel::GLKVertexAttributeParameters;
#[cfg(all(
    feature = "GLKModel",
    feature = "objc2-model-io",
    feature = "objc2-open-gl"
))]
#[cfg(target_os = "macos")]
pub use self::__GLKModel::GLKVertexAttributeParametersFromModelIO;
#[cfg(feature = "GLKNamedEffect")]
pub use self::__GLKNamedEffect::GLKNamedEffect;
#[cfg(all(feature = "GLKMathTypes", feature = "GLKQuaternion"))]
pub use self::__GLKQuaternion::GLKQuaternionAngle;
#[cfg(all(feature = "GLKMathTypes", feature = "GLKQuaternion"))]
pub use self::__GLKQuaternion::GLKQuaternionAxis;
#[cfg(all(feature = "GLKMathTypes", feature = "GLKQuaternion"))]
pub use self::__GLKQuaternion::GLKQuaternionIdentity;
#[cfg(all(feature = "GLKMathTypes", feature = "GLKQuaternion"))]
pub use self::__GLKQuaternion::GLKQuaternionMakeWithMatrix3;
#[cfg(all(feature = "GLKMathTypes", feature = "GLKQuaternion"))]
pub use self::__GLKQuaternion::GLKQuaternionMakeWithMatrix4;
#[cfg(all(feature = "GLKMathTypes", feature = "GLKQuaternion"))]
pub use self::__GLKQuaternion::GLKQuaternionRotateVector3Array;
#[cfg(all(feature = "GLKMathTypes", feature = "GLKQuaternion"))]
pub use self::__GLKQuaternion::GLKQuaternionRotateVector4Array;
#[cfg(all(feature = "GLKMathTypes", feature = "GLKQuaternion"))]
pub use self::__GLKQuaternion::GLKQuaternionSlerp;
#[cfg(all(feature = "GLKBaseEffect", feature = "GLKReflectionMapEffect"))]
pub use self::__GLKReflectionMapEffect::GLKReflectionMapEffect;
#[cfg(feature = "GLKSkyboxEffect")]
pub use self::__GLKSkyboxEffect::GLKSkyboxEffect;
#[cfg(feature = "GLKTextureLoader")]
pub use self::__GLKTextureLoader::GLKTextureInfo;
#[cfg(all(feature = "GLKTextureLoader", feature = "objc2-open-gl"))]
#[cfg(target_os = "macos")]
pub use self::__GLKTextureLoader::GLKTextureInfoAlphaState;
#[cfg(all(feature = "GLKTextureLoader", feature = "objc2-open-gl"))]
#[cfg(target_os = "macos")]
pub use self::__GLKTextureLoader::GLKTextureInfoOrigin;
#[cfg(feature = "GLKTextureLoader")]
pub use self::__GLKTextureLoader::GLKTextureLoader;
#[cfg(feature = "GLKTextureLoader")]
pub use self::__GLKTextureLoader::GLKTextureLoaderApplyPremultiplication;
#[cfg(all(feature = "GLKTextureLoader", feature = "block2"))]
pub use self::__GLKTextureLoader::GLKTextureLoaderCallback;
#[cfg(all(feature = "GLKTextureLoader", feature = "objc2-open-gl"))]
#[cfg(target_os = "macos")]
pub use self::__GLKTextureLoader::GLKTextureLoaderError;
#[cfg(feature = "GLKTextureLoader")]
pub use self::__GLKTextureLoader::GLKTextureLoaderErrorDomain;
#[cfg(feature = "GLKTextureLoader")]
pub use self::__GLKTextureLoader::GLKTextureLoaderErrorKey;
#[cfg(feature = "GLKTextureLoader")]
pub use self::__GLKTextureLoader::GLKTextureLoaderGLErrorKey;
#[cfg(feature = "GLKTextureLoader")]
pub use self::__GLKTextureLoader::GLKTextureLoaderGenerateMipmaps;
#[cfg(feature = "GLKTextureLoader")]
pub use self::__GLKTextureLoader::GLKTextureLoaderGrayscaleAsAlpha;
#[cfg(feature = "GLKTextureLoader")]
pub use self::__GLKTextureLoader::GLKTextureLoaderOriginBottomLeft;
#[cfg(feature = "GLKTextureLoader")]
pub use self::__GLKTextureLoader::GLKTextureLoaderSRGB;
