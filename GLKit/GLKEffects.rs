//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use objc2::__framework_prelude::*;
#[cfg(feature = "objc2-open-gl")]
#[cfg(target_os = "macos")]
use objc2_open_gl::*;

use crate::*;

/// [Apple's documentation](https://developer.apple.com/documentation/glkit/glkvertexattrib?language=objc)
// NS_ENUM
#[cfg(feature = "objc2-open-gl")]
#[cfg(target_os = "macos")]
#[repr(transparent)]
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash, PartialOrd, Ord)]
pub struct GLKVertexAttrib(pub GLint);
#[cfg(feature = "objc2-open-gl")]
#[cfg(target_os = "macos")]
impl GLKVertexAttrib {
    #[doc(alias = "GLKVertexAttribPosition")]
    pub const Position: Self = Self(0);
    #[doc(alias = "GLKVertexAttribNormal")]
    pub const Normal: Self = Self(1);
    #[doc(alias = "GLKVertexAttribColor")]
    pub const Color: Self = Self(2);
    #[doc(alias = "GLKVertexAttribTexCoord0")]
    pub const TexCoord0: Self = Self(3);
    #[doc(alias = "GLKVertexAttribTexCoord1")]
    pub const TexCoord1: Self = Self(4);
}

#[cfg(feature = "objc2-open-gl")]
#[cfg(target_os = "macos")]
unsafe impl Encode for GLKVertexAttrib {
    const ENCODING: Encoding = GLint::ENCODING;
}

#[cfg(feature = "objc2-open-gl")]
#[cfg(target_os = "macos")]
unsafe impl RefEncode for GLKVertexAttrib {
    const ENCODING_REF: Encoding = Encoding::Pointer(&Self::ENCODING);
}
