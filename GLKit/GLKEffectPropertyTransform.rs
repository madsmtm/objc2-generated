//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use core::ffi::*;
use core::ptr::NonNull;
use objc2::__framework_prelude::*;

use crate::*;

extern_class!(
    /// [Apple's documentation](https://developer.apple.com/documentation/glkit/glkeffectpropertytransform?language=objc)
    #[unsafe(super(GLKEffectProperty, NSObject))]
    #[derive(Debug, PartialEq, Eq, Hash)]
    #[cfg(feature = "GLKEffectProperty")]
    pub struct GLKEffectPropertyTransform;
);

#[cfg(feature = "GLKEffectProperty")]
extern_conformance!(
    unsafe impl NSObjectProtocol for GLKEffectPropertyTransform {}
);

#[cfg(feature = "GLKEffectProperty")]
impl GLKEffectPropertyTransform {
    extern_methods!(
        #[cfg(feature = "GLKMathTypes")]
        #[unsafe(method(modelviewMatrix))]
        #[unsafe(method_family = none)]
        pub unsafe fn modelviewMatrix(&self) -> GLKMatrix4;

        #[cfg(feature = "GLKMathTypes")]
        /// Setter for [`modelviewMatrix`][Self::modelviewMatrix].
        #[unsafe(method(setModelviewMatrix:))]
        #[unsafe(method_family = none)]
        pub unsafe fn setModelviewMatrix(&self, modelview_matrix: GLKMatrix4);

        #[cfg(feature = "GLKMathTypes")]
        #[unsafe(method(projectionMatrix))]
        #[unsafe(method_family = none)]
        pub unsafe fn projectionMatrix(&self) -> GLKMatrix4;

        #[cfg(feature = "GLKMathTypes")]
        /// Setter for [`projectionMatrix`][Self::projectionMatrix].
        #[unsafe(method(setProjectionMatrix:))]
        #[unsafe(method_family = none)]
        pub unsafe fn setProjectionMatrix(&self, projection_matrix: GLKMatrix4);

        #[cfg(feature = "GLKMathTypes")]
        #[unsafe(method(normalMatrix))]
        #[unsafe(method_family = none)]
        pub unsafe fn normalMatrix(&self) -> GLKMatrix3;
    );
}

/// Methods declared on superclass `NSObject`.
#[cfg(feature = "GLKEffectProperty")]
impl GLKEffectPropertyTransform {
    extern_methods!(
        #[unsafe(method(init))]
        #[unsafe(method_family = init)]
        pub unsafe fn init(this: Allocated<Self>) -> Retained<Self>;

        #[unsafe(method(new))]
        #[unsafe(method_family = new)]
        pub unsafe fn new() -> Retained<Self>;
    );
}
