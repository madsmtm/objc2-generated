//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use core::ffi::*;
use objc2::__framework_prelude::*;

use crate::*;

/// [Apple's documentation](https://developer.apple.com/documentation/glkit/glkmatrix2?language=objc)
#[repr(C)]
#[derive(Clone, Copy, Debug, PartialEq)]
pub struct GLKMatrix2 {
    pub m: [c_float; 4],
}

unsafe impl Encode for GLKMatrix2 {
    const ENCODING: Encoding = Encoding::Struct("_GLKMatrix2", &[<[c_float; 4]>::ENCODING]);
}

unsafe impl RefEncode for GLKMatrix2 {
    const ENCODING_REF: Encoding = Encoding::Pointer(&Self::ENCODING);
}

/// [Apple's documentation](https://developer.apple.com/documentation/glkit/glkmatrix3?language=objc)
#[repr(C)]
#[derive(Clone, Copy, Debug, PartialEq)]
pub struct GLKMatrix3 {
    pub m: [c_float; 9],
}

unsafe impl Encode for GLKMatrix3 {
    const ENCODING: Encoding = Encoding::Struct("_GLKMatrix3", &[<[c_float; 9]>::ENCODING]);
}

unsafe impl RefEncode for GLKMatrix3 {
    const ENCODING_REF: Encoding = Encoding::Pointer(&Self::ENCODING);
}

/// [Apple's documentation](https://developer.apple.com/documentation/glkit/glkmatrix4?language=objc)
#[repr(C, align(16))]
#[derive(Clone, Copy, Debug, PartialEq)]
pub struct GLKMatrix4 {
    pub m: [c_float; 16],
}

unsafe impl Encode for GLKMatrix4 {
    const ENCODING: Encoding = Encoding::Struct("_GLKMatrix4", &[<[c_float; 16]>::ENCODING]);
}

unsafe impl RefEncode for GLKMatrix4 {
    const ENCODING_REF: Encoding = Encoding::Pointer(&Self::ENCODING);
}

/// [Apple's documentation](https://developer.apple.com/documentation/glkit/glkvector2?language=objc)
#[repr(C, align(8))]
#[derive(Clone, Copy, Debug, PartialEq)]
pub struct GLKVector2 {
    pub v: [c_float; 2],
}

unsafe impl Encode for GLKVector2 {
    const ENCODING: Encoding = Encoding::Struct("_GLKVector2", &[<[c_float; 2]>::ENCODING]);
}

unsafe impl RefEncode for GLKVector2 {
    const ENCODING_REF: Encoding = Encoding::Pointer(&Self::ENCODING);
}

/// [Apple's documentation](https://developer.apple.com/documentation/glkit/glkvector3?language=objc)
#[repr(C)]
#[derive(Clone, Copy, Debug, PartialEq)]
pub struct GLKVector3 {
    pub v: [c_float; 3],
}

unsafe impl Encode for GLKVector3 {
    const ENCODING: Encoding = Encoding::Struct("_GLKVector3", &[<[c_float; 3]>::ENCODING]);
}

unsafe impl RefEncode for GLKVector3 {
    const ENCODING_REF: Encoding = Encoding::Pointer(&Self::ENCODING);
}

/// [Apple's documentation](https://developer.apple.com/documentation/glkit/glkvector4?language=objc)
#[repr(C, align(16))]
#[derive(Clone, Copy, Debug, PartialEq)]
pub struct GLKVector4 {
    pub v: [c_float; 4],
}

unsafe impl Encode for GLKVector4 {
    const ENCODING: Encoding = Encoding::Struct("_GLKVector4", &[<[c_float; 4]>::ENCODING]);
}

unsafe impl RefEncode for GLKVector4 {
    const ENCODING_REF: Encoding = Encoding::Pointer(&Self::ENCODING);
}

/// [Apple's documentation](https://developer.apple.com/documentation/glkit/glkquaternion?language=objc)
#[repr(C, align(16))]
#[derive(Clone, Copy, Debug, PartialEq)]
pub struct GLKQuaternion {
    pub q: [c_float; 4],
}

unsafe impl Encode for GLKQuaternion {
    const ENCODING: Encoding = Encoding::Struct("_GLKQuaternion", &[<[c_float; 4]>::ENCODING]);
}

unsafe impl RefEncode for GLKQuaternion {
    const ENCODING_REF: Encoding = Encoding::Pointer(&Self::ENCODING);
}
