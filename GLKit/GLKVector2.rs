//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT

use crate::*;

// TODO: pub fn GLKVector2Make(x: c_float,y: c_float,) -> GLKVector2;

// TODO: pub fn GLKVector2MakeWithArray(values: Option<&mut [c_float; 2]>,) -> GLKVector2;

// TODO: pub fn GLKVector2Negate(vector: GLKVector2,) -> GLKVector2;

// TODO: pub fn GLKVector2Add(vector_left: GLKVector2,vector_right: GLKVector2,) -> GLKVector2;

// TODO: pub fn GLKVector2Subtract(vector_left: GLKVector2,vector_right: GLKVector2,) -> GLKVector2;

// TODO: pub fn GLKVector2Multiply(vector_left: GLKVector2,vector_right: GLKVector2,) -> GLKVector2;

// TODO: pub fn GLKVector2Divide(vector_left: GLKVector2,vector_right: GLKVector2,) -> GLKVector2;

// TODO: pub fn GLKVector2AddScalar(vector: GLKVector2,value: c_float,) -> GLKVector2;

// TODO: pub fn GLKVector2SubtractScalar(vector: GLKVector2,value: c_float,) -> GLKVector2;

// TODO: pub fn GLKVector2MultiplyScalar(vector: GLKVector2,value: c_float,) -> GLKVector2;

// TODO: pub fn GLKVector2DivideScalar(vector: GLKVector2,value: c_float,) -> GLKVector2;

// TODO: pub fn GLKVector2Maximum(vector_left: GLKVector2,vector_right: GLKVector2,) -> GLKVector2;

// TODO: pub fn GLKVector2Minimum(vector_left: GLKVector2,vector_right: GLKVector2,) -> GLKVector2;

// TODO: pub fn GLKVector2AllEqualToVector2(vector_left: GLKVector2,vector_right: GLKVector2,) -> bool;

// TODO: pub fn GLKVector2AllEqualToScalar(vector: GLKVector2,value: c_float,) -> bool;

// TODO: pub fn GLKVector2AllGreaterThanVector2(vector_left: GLKVector2,vector_right: GLKVector2,) -> bool;

// TODO: pub fn GLKVector2AllGreaterThanScalar(vector: GLKVector2,value: c_float,) -> bool;

// TODO: pub fn GLKVector2AllGreaterThanOrEqualToVector2(vector_left: GLKVector2,vector_right: GLKVector2,) -> bool;

// TODO: pub fn GLKVector2AllGreaterThanOrEqualToScalar(vector: GLKVector2,value: c_float,) -> bool;

// TODO: pub fn GLKVector2Normalize(vector: GLKVector2,) -> GLKVector2;

// TODO: pub fn GLKVector2DotProduct(vector_left: GLKVector2,vector_right: GLKVector2,) -> c_float;

// TODO: pub fn GLKVector2Length(vector: GLKVector2,) -> c_float;

// TODO: pub fn GLKVector2Distance(vector_start: GLKVector2,vector_end: GLKVector2,) -> c_float;

// TODO: pub fn GLKVector2Lerp(vector_start: GLKVector2,vector_end: GLKVector2,t: c_float,) -> GLKVector2;

// TODO: pub fn GLKVector2Project(vector_to_project: GLKVector2,projection_vector: GLKVector2,) -> GLKVector2;

// TODO: pub fn GLKVector2Make(x: c_float,y: c_float,) -> GLKVector2;

// TODO: pub fn GLKVector2MakeWithArray(values: Option<&mut [c_float; 2]>,) -> GLKVector2;

// TODO: pub fn GLKVector2Negate(vector: GLKVector2,) -> GLKVector2;

// TODO: pub fn GLKVector2Add(vector_left: GLKVector2,vector_right: GLKVector2,) -> GLKVector2;

// TODO: pub fn GLKVector2Subtract(vector_left: GLKVector2,vector_right: GLKVector2,) -> GLKVector2;

// TODO: pub fn GLKVector2Multiply(vector_left: GLKVector2,vector_right: GLKVector2,) -> GLKVector2;

// TODO: pub fn GLKVector2Divide(vector_left: GLKVector2,vector_right: GLKVector2,) -> GLKVector2;

// TODO: pub fn GLKVector2AddScalar(vector: GLKVector2,value: c_float,) -> GLKVector2;

// TODO: pub fn GLKVector2SubtractScalar(vector: GLKVector2,value: c_float,) -> GLKVector2;

// TODO: pub fn GLKVector2MultiplyScalar(vector: GLKVector2,value: c_float,) -> GLKVector2;

// TODO: pub fn GLKVector2DivideScalar(vector: GLKVector2,value: c_float,) -> GLKVector2;

// TODO: pub fn GLKVector2Maximum(vector_left: GLKVector2,vector_right: GLKVector2,) -> GLKVector2;

// TODO: pub fn GLKVector2Minimum(vector_left: GLKVector2,vector_right: GLKVector2,) -> GLKVector2;

// TODO: pub fn GLKVector2AllEqualToVector2(vector_left: GLKVector2,vector_right: GLKVector2,) -> bool;

// TODO: pub fn GLKVector2AllEqualToScalar(vector: GLKVector2,value: c_float,) -> bool;

// TODO: pub fn GLKVector2AllGreaterThanVector2(vector_left: GLKVector2,vector_right: GLKVector2,) -> bool;

// TODO: pub fn GLKVector2AllGreaterThanScalar(vector: GLKVector2,value: c_float,) -> bool;

// TODO: pub fn GLKVector2AllGreaterThanOrEqualToVector2(vector_left: GLKVector2,vector_right: GLKVector2,) -> bool;

// TODO: pub fn GLKVector2AllGreaterThanOrEqualToScalar(vector: GLKVector2,value: c_float,) -> bool;

// TODO: pub fn GLKVector2Normalize(vector: GLKVector2,) -> GLKVector2;

// TODO: pub fn GLKVector2DotProduct(vector_left: GLKVector2,vector_right: GLKVector2,) -> c_float;

// TODO: pub fn GLKVector2Length(vector: GLKVector2,) -> c_float;

// TODO: pub fn GLKVector2Distance(vector_start: GLKVector2,vector_end: GLKVector2,) -> c_float;

// TODO: pub fn GLKVector2Lerp(vector_start: GLKVector2,vector_end: GLKVector2,t: c_float,) -> GLKVector2;

// TODO: pub fn GLKVector2Project(vector_to_project: GLKVector2,projection_vector: GLKVector2,) -> GLKVector2;
