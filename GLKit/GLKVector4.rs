//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT

use crate::*;

// TODO: pub fn GLKVector4Make(x: c_float,y: c_float,z: c_float,w: c_float,) -> GLKVector4;

// TODO: pub fn GLKVector4MakeWithArray(values: ArrayUnknownABI<[c_float; 4]>,) -> GLKVector4;

// TODO: pub fn GLKVector4MakeWithVector3(vector: GLKVector3,w: c_float,) -> GLKVector4;

// TODO: pub fn GLKVector4Negate(vector: GLKVector4,) -> GLKVector4;

// TODO: pub fn GLKVector4Add(vector_left: GLKVector4,vector_right: GLKVector4,) -> GLKVector4;

// TODO: pub fn GLKVector4Subtract(vector_left: GLKVector4,vector_right: GLKVector4,) -> GLKVector4;

// TODO: pub fn GLKVector4Multiply(vector_left: GLKVector4,vector_right: GLKVector4,) -> GLKVector4;

// TODO: pub fn GLKVector4Divide(vector_left: GLKVector4,vector_right: GLKVector4,) -> GLKVector4;

// TODO: pub fn GLKVector4AddScalar(vector: GLKVector4,value: c_float,) -> GLKVector4;

// TODO: pub fn GLKVector4SubtractScalar(vector: GLKVector4,value: c_float,) -> GLKVector4;

// TODO: pub fn GLKVector4MultiplyScalar(vector: GLKVector4,value: c_float,) -> GLKVector4;

// TODO: pub fn GLKVector4DivideScalar(vector: GLKVector4,value: c_float,) -> GLKVector4;

// TODO: pub fn GLKVector4Maximum(vector_left: GLKVector4,vector_right: GLKVector4,) -> GLKVector4;

// TODO: pub fn GLKVector4Minimum(vector_left: GLKVector4,vector_right: GLKVector4,) -> GLKVector4;

// TODO: pub fn GLKVector4AllEqualToVector4(vector_left: GLKVector4,vector_right: GLKVector4,) -> bool;

// TODO: pub fn GLKVector4AllEqualToScalar(vector: GLKVector4,value: c_float,) -> bool;

// TODO: pub fn GLKVector4AllGreaterThanVector4(vector_left: GLKVector4,vector_right: GLKVector4,) -> bool;

// TODO: pub fn GLKVector4AllGreaterThanScalar(vector: GLKVector4,value: c_float,) -> bool;

// TODO: pub fn GLKVector4AllGreaterThanOrEqualToVector4(vector_left: GLKVector4,vector_right: GLKVector4,) -> bool;

// TODO: pub fn GLKVector4AllGreaterThanOrEqualToScalar(vector: GLKVector4,value: c_float,) -> bool;

// TODO: pub fn GLKVector4Normalize(vector: GLKVector4,) -> GLKVector4;

// TODO: pub fn GLKVector4DotProduct(vector_left: GLKVector4,vector_right: GLKVector4,) -> c_float;

// TODO: pub fn GLKVector4Length(vector: GLKVector4,) -> c_float;

// TODO: pub fn GLKVector4Distance(vector_start: GLKVector4,vector_end: GLKVector4,) -> c_float;

// TODO: pub fn GLKVector4Lerp(vector_start: GLKVector4,vector_end: GLKVector4,t: c_float,) -> GLKVector4;

// TODO: pub fn GLKVector4CrossProduct(vector_left: GLKVector4,vector_right: GLKVector4,) -> GLKVector4;

// TODO: pub fn GLKVector4Project(vector_to_project: GLKVector4,projection_vector: GLKVector4,) -> GLKVector4;

// TODO: pub fn GLKVector4Make(x: c_float,y: c_float,z: c_float,w: c_float,) -> GLKVector4;

// TODO: pub fn GLKVector4MakeWithArray(values: ArrayUnknownABI<[c_float; 4]>,) -> GLKVector4;

// TODO: pub fn GLKVector4MakeWithVector3(vector: GLKVector3,w: c_float,) -> GLKVector4;

// TODO: pub fn GLKVector4Negate(vector: GLKVector4,) -> GLKVector4;

// TODO: pub fn GLKVector4Add(vector_left: GLKVector4,vector_right: GLKVector4,) -> GLKVector4;

// TODO: pub fn GLKVector4Subtract(vector_left: GLKVector4,vector_right: GLKVector4,) -> GLKVector4;

// TODO: pub fn GLKVector4Multiply(vector_left: GLKVector4,vector_right: GLKVector4,) -> GLKVector4;

// TODO: pub fn GLKVector4Divide(vector_left: GLKVector4,vector_right: GLKVector4,) -> GLKVector4;

// TODO: pub fn GLKVector4AddScalar(vector: GLKVector4,value: c_float,) -> GLKVector4;

// TODO: pub fn GLKVector4SubtractScalar(vector: GLKVector4,value: c_float,) -> GLKVector4;

// TODO: pub fn GLKVector4MultiplyScalar(vector: GLKVector4,value: c_float,) -> GLKVector4;

// TODO: pub fn GLKVector4DivideScalar(vector: GLKVector4,value: c_float,) -> GLKVector4;

// TODO: pub fn GLKVector4Maximum(vector_left: GLKVector4,vector_right: GLKVector4,) -> GLKVector4;

// TODO: pub fn GLKVector4Minimum(vector_left: GLKVector4,vector_right: GLKVector4,) -> GLKVector4;

// TODO: pub fn GLKVector4AllEqualToVector4(vector_left: GLKVector4,vector_right: GLKVector4,) -> bool;

// TODO: pub fn GLKVector4AllEqualToScalar(vector: GLKVector4,value: c_float,) -> bool;

// TODO: pub fn GLKVector4AllGreaterThanVector4(vector_left: GLKVector4,vector_right: GLKVector4,) -> bool;

// TODO: pub fn GLKVector4AllGreaterThanScalar(vector: GLKVector4,value: c_float,) -> bool;

// TODO: pub fn GLKVector4AllGreaterThanOrEqualToVector4(vector_left: GLKVector4,vector_right: GLKVector4,) -> bool;

// TODO: pub fn GLKVector4AllGreaterThanOrEqualToScalar(vector: GLKVector4,value: c_float,) -> bool;

// TODO: pub fn GLKVector4Normalize(vector: GLKVector4,) -> GLKVector4;

// TODO: pub fn GLKVector4DotProduct(vector_left: GLKVector4,vector_right: GLKVector4,) -> c_float;

// TODO: pub fn GLKVector4Length(vector: GLKVector4,) -> c_float;

// TODO: pub fn GLKVector4Distance(vector_start: GLKVector4,vector_end: GLKVector4,) -> c_float;

// TODO: pub fn GLKVector4Lerp(vector_start: GLKVector4,vector_end: GLKVector4,t: c_float,) -> GLKVector4;

// TODO: pub fn GLKVector4CrossProduct(vector_left: GLKVector4,vector_right: GLKVector4,) -> GLKVector4;

// TODO: pub fn GLKVector4Project(vector_to_project: GLKVector4,projection_vector: GLKVector4,) -> GLKVector4;
