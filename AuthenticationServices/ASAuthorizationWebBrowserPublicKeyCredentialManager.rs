//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use core::ffi::*;
use core::ptr::NonNull;
use objc2::__framework_prelude::*;
use objc2_foundation::*;

use crate::*;

/// [Apple's documentation](https://developer.apple.com/documentation/authenticationservices/asauthorizationwebbrowserpublickeycredentialmanagerauthorizationstate?language=objc)
// NS_ENUM
#[repr(transparent)]
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash, PartialOrd, Ord)]
pub struct ASAuthorizationWebBrowserPublicKeyCredentialManagerAuthorizationState(pub NSInteger);
impl ASAuthorizationWebBrowserPublicKeyCredentialManagerAuthorizationState {
    #[doc(
        alias = "ASAuthorizationWebBrowserPublicKeyCredentialManagerAuthorizationStateAuthorized"
    )]
    pub const Authorized: Self = Self(0);
    #[doc(alias = "ASAuthorizationWebBrowserPublicKeyCredentialManagerAuthorizationStateDenied")]
    pub const Denied: Self = Self(1);
    #[doc(
        alias = "ASAuthorizationWebBrowserPublicKeyCredentialManagerAuthorizationStateNotDetermined"
    )]
    pub const NotDetermined: Self = Self(2);
}

unsafe impl Encode for ASAuthorizationWebBrowserPublicKeyCredentialManagerAuthorizationState {
    const ENCODING: Encoding = NSInteger::ENCODING;
}

unsafe impl RefEncode for ASAuthorizationWebBrowserPublicKeyCredentialManagerAuthorizationState {
    const ENCODING_REF: Encoding = Encoding::Pointer(&Self::ENCODING);
}

extern_class!(
    /// [Apple's documentation](https://developer.apple.com/documentation/authenticationservices/asauthorizationwebbrowserpublickeycredentialmanager?language=objc)
    #[unsafe(super(NSObject))]
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub struct ASAuthorizationWebBrowserPublicKeyCredentialManager;
);

unsafe impl Send for ASAuthorizationWebBrowserPublicKeyCredentialManager {}

unsafe impl Sync for ASAuthorizationWebBrowserPublicKeyCredentialManager {}

extern_conformance!(
    unsafe impl NSObjectProtocol for ASAuthorizationWebBrowserPublicKeyCredentialManager {}
);

impl ASAuthorizationWebBrowserPublicKeyCredentialManager {
    extern_methods!(
        #[unsafe(method(init))]
        #[unsafe(method_family = init)]
        pub unsafe fn init(this: Allocated<Self>) -> Retained<Self>;

        #[cfg(feature = "block2")]
        #[unsafe(method(requestAuthorizationForPublicKeyCredentials:))]
        #[unsafe(method_family = none)]
        pub unsafe fn requestAuthorizationForPublicKeyCredentials(
            &self,
            completion_handler: &block2::DynBlock<
                dyn Fn(ASAuthorizationWebBrowserPublicKeyCredentialManagerAuthorizationState),
            >,
        );

        #[cfg(all(
            feature = "ASAuthorizationWebBrowserPlatformPublicKeyCredential",
            feature = "block2"
        ))]
        #[unsafe(method(platformCredentialsForRelyingParty:completionHandler:))]
        #[unsafe(method_family = none)]
        pub unsafe fn platformCredentialsForRelyingParty_completionHandler(
            &self,
            relying_party: &NSString,
            completion_handler: &block2::DynBlock<
                dyn Fn(NonNull<NSArray<ASAuthorizationWebBrowserPlatformPublicKeyCredential>>),
            >,
        );

        /// This property is not atomic.
        ///
        /// # Safety
        ///
        /// This might not be thread-safe.
        #[unsafe(method(authorizationStateForPlatformCredentials))]
        #[unsafe(method_family = none)]
        pub unsafe fn authorizationStateForPlatformCredentials(
            &self,
        ) -> ASAuthorizationWebBrowserPublicKeyCredentialManagerAuthorizationState;
    );
}

/// Methods declared on superclass `NSObject`.
impl ASAuthorizationWebBrowserPublicKeyCredentialManager {
    extern_methods!(
        #[unsafe(method(new))]
        #[unsafe(method_family = new)]
        pub unsafe fn new() -> Retained<Self>;
    );
}
