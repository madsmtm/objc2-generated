//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use core::ffi::*;
use core::ptr::NonNull;
use objc2::__framework_prelude::*;
#[cfg(target_os = "macos")]
use objc2_app_kit::*;
#[cfg(feature = "objc2-core-foundation")]
use objc2_core_foundation::*;
use objc2_foundation::*;

use crate::*;

/// [Apple's documentation](https://developer.apple.com/documentation/authenticationservices/asauthorizationappleidbuttontype?language=objc)
// NS_ENUM
#[repr(transparent)]
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash, PartialOrd, Ord)]
pub struct ASAuthorizationAppleIDButtonType(pub NSInteger);
impl ASAuthorizationAppleIDButtonType {
    #[doc(alias = "ASAuthorizationAppleIDButtonTypeSignIn")]
    pub const SignIn: Self = Self(0);
    #[doc(alias = "ASAuthorizationAppleIDButtonTypeContinue")]
    pub const Continue: Self = Self(1);
    #[doc(alias = "ASAuthorizationAppleIDButtonTypeSignUp")]
    pub const SignUp: Self = Self(2);
    #[doc(alias = "ASAuthorizationAppleIDButtonTypeDefault")]
    pub const Default: Self = Self(ASAuthorizationAppleIDButtonType::SignIn.0);
}

unsafe impl Encode for ASAuthorizationAppleIDButtonType {
    const ENCODING: Encoding = NSInteger::ENCODING;
}

unsafe impl RefEncode for ASAuthorizationAppleIDButtonType {
    const ENCODING_REF: Encoding = Encoding::Pointer(&Self::ENCODING);
}

/// [Apple's documentation](https://developer.apple.com/documentation/authenticationservices/asauthorizationappleidbuttonstyle?language=objc)
// NS_ENUM
#[repr(transparent)]
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash, PartialOrd, Ord)]
pub struct ASAuthorizationAppleIDButtonStyle(pub NSInteger);
impl ASAuthorizationAppleIDButtonStyle {
    #[doc(alias = "ASAuthorizationAppleIDButtonStyleWhite")]
    pub const White: Self = Self(0);
    #[doc(alias = "ASAuthorizationAppleIDButtonStyleWhiteOutline")]
    pub const WhiteOutline: Self = Self(1);
    #[doc(alias = "ASAuthorizationAppleIDButtonStyleBlack")]
    pub const Black: Self = Self(2);
}

unsafe impl Encode for ASAuthorizationAppleIDButtonStyle {
    const ENCODING: Encoding = NSInteger::ENCODING;
}

unsafe impl RefEncode for ASAuthorizationAppleIDButtonStyle {
    const ENCODING_REF: Encoding = Encoding::Pointer(&Self::ENCODING);
}

#[cfg(target_os = "macos")]
extern_conformance!(
    unsafe impl NSAccessibility for ASAuthorizationAppleIDButton {}
);

#[cfg(target_os = "macos")]
extern_conformance!(
    unsafe impl NSAccessibilityButton for ASAuthorizationAppleIDButton {}
);

#[cfg(target_os = "macos")]
extern_conformance!(
    unsafe impl NSAccessibilityElementProtocol for ASAuthorizationAppleIDButton {}
);

#[cfg(target_os = "macos")]
extern_conformance!(
    unsafe impl NSAnimatablePropertyContainer for ASAuthorizationAppleIDButton {}
);

#[cfg(target_os = "macos")]
extern_conformance!(
    unsafe impl NSAppearanceCustomization for ASAuthorizationAppleIDButton {}
);

#[cfg(target_os = "macos")]
extern_conformance!(
    unsafe impl NSCoding for ASAuthorizationAppleIDButton {}
);

#[cfg(target_os = "macos")]
extern_conformance!(
    unsafe impl NSDraggingDestination for ASAuthorizationAppleIDButton {}
);

#[cfg(target_os = "macos")]
extern_conformance!(
    unsafe impl NSObjectProtocol for ASAuthorizationAppleIDButton {}
);

#[cfg(target_os = "macos")]
extern_conformance!(
    unsafe impl NSUserInterfaceItemIdentification for ASAuthorizationAppleIDButton {}
);

#[cfg(target_os = "macos")]
impl ASAuthorizationAppleIDButton {
    extern_methods!(
        #[unsafe(method(buttonWithType:style:))]
        #[unsafe(method_family = none)]
        pub unsafe fn buttonWithType_style(
            r#type: ASAuthorizationAppleIDButtonType,
            style: ASAuthorizationAppleIDButtonStyle,
            mtm: MainThreadMarker,
        ) -> Retained<Self>;

        #[unsafe(method(initWithAuthorizationButtonType:authorizationButtonStyle:))]
        #[unsafe(method_family = init)]
        pub unsafe fn initWithAuthorizationButtonType_authorizationButtonStyle(
            this: Allocated<Self>,
            r#type: ASAuthorizationAppleIDButtonType,
            style: ASAuthorizationAppleIDButtonStyle,
        ) -> Retained<Self>;

        #[cfg(feature = "objc2-core-foundation")]
        /// Set a custom corner radius to be used by this button.
        #[unsafe(method(cornerRadius))]
        #[unsafe(method_family = none)]
        pub unsafe fn cornerRadius(&self) -> CGFloat;

        #[cfg(feature = "objc2-core-foundation")]
        /// Setter for [`cornerRadius`][Self::cornerRadius].
        #[unsafe(method(setCornerRadius:))]
        #[unsafe(method_family = none)]
        pub unsafe fn setCornerRadius(&self, corner_radius: CGFloat);
    );
}

/// Methods declared on superclass `NSControl`.
#[cfg(target_os = "macos")]
impl ASAuthorizationAppleIDButton {
    extern_methods!(
        #[unsafe(method(initWithFrame:))]
        #[unsafe(method_family = init)]
        pub unsafe fn initWithFrame(this: Allocated<Self>, frame_rect: NSRect) -> Retained<Self>;

        /// # Safety
        ///
        /// `coder` possibly has further requirements.
        #[unsafe(method(initWithCoder:))]
        #[unsafe(method_family = init)]
        pub unsafe fn initWithCoder(
            this: Allocated<Self>,
            coder: &NSCoder,
        ) -> Option<Retained<Self>>;
    );
}

/// Methods declared on superclass `NSResponder`.
#[cfg(target_os = "macos")]
impl ASAuthorizationAppleIDButton {
    extern_methods!(
        #[unsafe(method(init))]
        #[unsafe(method_family = init)]
        pub unsafe fn init(this: Allocated<Self>) -> Retained<Self>;
    );
}

/// Methods declared on superclass `NSObject`.
#[cfg(target_os = "macos")]
impl ASAuthorizationAppleIDButton {
    extern_methods!(
        #[unsafe(method(new))]
        #[unsafe(method_family = new)]
        pub unsafe fn new(mtm: MainThreadMarker) -> Retained<Self>;
    );
}
