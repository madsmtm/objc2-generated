// This file has been automatically generated by `objc2`'s `header-translator`.
// DO NOT EDIT

#![allow(unused_imports)]
#![allow(deprecated)]
#![allow(non_snake_case)]
#![allow(non_camel_case_types)]
#![allow(non_upper_case_globals)]
#![allow(missing_docs)]
#![allow(clippy::too_many_arguments)]
#![allow(clippy::type_complexity)]
#![allow(clippy::upper_case_acronyms)]
#![allow(clippy::identity_op)]
#![allow(clippy::missing_safety_doc)]
#![allow(clippy::doc_lazy_continuation)]
#![allow(rustdoc::broken_intra_doc_links)]
#![allow(rustdoc::bare_urls)]
#![allow(rustdoc::invalid_html_tags)]

#[link(name = "AuthenticationServices", kind = "framework")]
extern "C" {}

#[cfg(feature = "ASAccountAuthenticationModificationController")]
#[path = "ASAccountAuthenticationModificationController.rs"]
mod __ASAccountAuthenticationModificationController;
#[cfg(feature = "ASAccountAuthenticationModificationExtensionContext")]
#[path = "ASAccountAuthenticationModificationExtensionContext.rs"]
mod __ASAccountAuthenticationModificationExtensionContext;
#[cfg(feature = "ASAccountAuthenticationModificationReplacePasswordWithSignInWithAppleRequest")]
#[path = "ASAccountAuthenticationModificationReplacePasswordWithSignInWithAppleRequest.rs"]
mod __ASAccountAuthenticationModificationReplacePasswordWithSignInWithAppleRequest;
#[cfg(feature = "ASAccountAuthenticationModificationRequest")]
#[path = "ASAccountAuthenticationModificationRequest.rs"]
mod __ASAccountAuthenticationModificationRequest;
#[cfg(feature = "ASAccountAuthenticationModificationUpgradePasswordToStrongPasswordRequest")]
#[path = "ASAccountAuthenticationModificationUpgradePasswordToStrongPasswordRequest.rs"]
mod __ASAccountAuthenticationModificationUpgradePasswordToStrongPasswordRequest;
#[cfg(feature = "ASAccountAuthenticationModificationViewController")]
#[path = "ASAccountAuthenticationModificationViewController.rs"]
mod __ASAccountAuthenticationModificationViewController;
#[cfg(feature = "ASAuthorization")]
#[path = "ASAuthorization.rs"]
mod __ASAuthorization;
#[cfg(feature = "ASAuthorizationAppleIDButton")]
#[path = "ASAuthorizationAppleIDButton.rs"]
mod __ASAuthorizationAppleIDButton;
#[cfg(feature = "ASAuthorizationAppleIDCredential")]
#[path = "ASAuthorizationAppleIDCredential.rs"]
mod __ASAuthorizationAppleIDCredential;
#[cfg(feature = "ASAuthorizationAppleIDProvider")]
#[path = "ASAuthorizationAppleIDProvider.rs"]
mod __ASAuthorizationAppleIDProvider;
#[cfg(feature = "ASAuthorizationAppleIDRequest")]
#[path = "ASAuthorizationAppleIDRequest.rs"]
mod __ASAuthorizationAppleIDRequest;
#[cfg(feature = "ASAuthorizationController")]
#[path = "ASAuthorizationController.rs"]
mod __ASAuthorizationController;
#[cfg(feature = "ASAuthorizationCredential")]
#[path = "ASAuthorizationCredential.rs"]
mod __ASAuthorizationCredential;
#[cfg(feature = "ASAuthorizationCustomMethod")]
#[path = "ASAuthorizationCustomMethod.rs"]
mod __ASAuthorizationCustomMethod;
#[cfg(feature = "ASAuthorizationError")]
#[path = "ASAuthorizationError.rs"]
mod __ASAuthorizationError;
#[cfg(feature = "ASAuthorizationOpenIDRequest")]
#[path = "ASAuthorizationOpenIDRequest.rs"]
mod __ASAuthorizationOpenIDRequest;
#[cfg(feature = "ASAuthorizationPasswordProvider")]
#[path = "ASAuthorizationPasswordProvider.rs"]
mod __ASAuthorizationPasswordProvider;
#[cfg(feature = "ASAuthorizationPasswordRequest")]
#[path = "ASAuthorizationPasswordRequest.rs"]
mod __ASAuthorizationPasswordRequest;
#[cfg(feature = "ASAuthorizationPlatformPublicKeyCredentialAssertion")]
#[path = "ASAuthorizationPlatformPublicKeyCredentialAssertion.rs"]
mod __ASAuthorizationPlatformPublicKeyCredentialAssertion;
#[cfg(feature = "ASAuthorizationPlatformPublicKeyCredentialAssertionRequest")]
#[path = "ASAuthorizationPlatformPublicKeyCredentialAssertionRequest.rs"]
mod __ASAuthorizationPlatformPublicKeyCredentialAssertionRequest;
#[cfg(feature = "ASAuthorizationPlatformPublicKeyCredentialDescriptor")]
#[path = "ASAuthorizationPlatformPublicKeyCredentialDescriptor.rs"]
mod __ASAuthorizationPlatformPublicKeyCredentialDescriptor;
#[cfg(feature = "ASAuthorizationPlatformPublicKeyCredentialProvider")]
#[path = "ASAuthorizationPlatformPublicKeyCredentialProvider.rs"]
mod __ASAuthorizationPlatformPublicKeyCredentialProvider;
#[cfg(feature = "ASAuthorizationPlatformPublicKeyCredentialRegistration")]
#[path = "ASAuthorizationPlatformPublicKeyCredentialRegistration.rs"]
mod __ASAuthorizationPlatformPublicKeyCredentialRegistration;
#[cfg(feature = "ASAuthorizationPlatformPublicKeyCredentialRegistrationRequest")]
#[path = "ASAuthorizationPlatformPublicKeyCredentialRegistrationRequest.rs"]
mod __ASAuthorizationPlatformPublicKeyCredentialRegistrationRequest;
#[cfg(feature = "ASAuthorizationProvider")]
#[path = "ASAuthorizationProvider.rs"]
mod __ASAuthorizationProvider;
#[cfg(feature = "ASAuthorizationProviderExtensionAuthorizationRequest")]
#[path = "ASAuthorizationProviderExtensionAuthorizationRequest.rs"]
mod __ASAuthorizationProviderExtensionAuthorizationRequest;
#[cfg(feature = "ASAuthorizationProviderExtensionAuthorizationResult")]
#[path = "ASAuthorizationProviderExtensionAuthorizationResult.rs"]
mod __ASAuthorizationProviderExtensionAuthorizationResult;
#[cfg(feature = "ASAuthorizationProviderExtensionLoginConfiguration")]
#[path = "ASAuthorizationProviderExtensionLoginConfiguration.rs"]
mod __ASAuthorizationProviderExtensionLoginConfiguration;
#[cfg(feature = "ASAuthorizationProviderExtensionLoginManager")]
#[path = "ASAuthorizationProviderExtensionLoginManager.rs"]
mod __ASAuthorizationProviderExtensionLoginManager;
#[cfg(feature = "ASAuthorizationProviderExtensionRegistrationHandler")]
#[path = "ASAuthorizationProviderExtensionRegistrationHandler.rs"]
mod __ASAuthorizationProviderExtensionRegistrationHandler;
#[cfg(feature = "ASAuthorizationProviderExtensionUserLoginConfiguration")]
#[path = "ASAuthorizationProviderExtensionUserLoginConfiguration.rs"]
mod __ASAuthorizationProviderExtensionUserLoginConfiguration;
#[cfg(feature = "ASAuthorizationPublicKeyCredentialAssertion")]
#[path = "ASAuthorizationPublicKeyCredentialAssertion.rs"]
mod __ASAuthorizationPublicKeyCredentialAssertion;
#[cfg(feature = "ASAuthorizationPublicKeyCredentialAssertionRequest")]
#[path = "ASAuthorizationPublicKeyCredentialAssertionRequest.rs"]
mod __ASAuthorizationPublicKeyCredentialAssertionRequest;
#[cfg(feature = "ASAuthorizationPublicKeyCredentialConstants")]
#[path = "ASAuthorizationPublicKeyCredentialConstants.rs"]
mod __ASAuthorizationPublicKeyCredentialConstants;
#[cfg(feature = "ASAuthorizationPublicKeyCredentialDescriptor")]
#[path = "ASAuthorizationPublicKeyCredentialDescriptor.rs"]
mod __ASAuthorizationPublicKeyCredentialDescriptor;
#[cfg(feature = "ASAuthorizationPublicKeyCredentialLargeBlobAssertionInput")]
#[path = "ASAuthorizationPublicKeyCredentialLargeBlobAssertionInput.rs"]
mod __ASAuthorizationPublicKeyCredentialLargeBlobAssertionInput;
#[cfg(feature = "ASAuthorizationPublicKeyCredentialLargeBlobAssertionOutput")]
#[path = "ASAuthorizationPublicKeyCredentialLargeBlobAssertionOutput.rs"]
mod __ASAuthorizationPublicKeyCredentialLargeBlobAssertionOutput;
#[cfg(feature = "ASAuthorizationPublicKeyCredentialLargeBlobRegistrationInput")]
#[path = "ASAuthorizationPublicKeyCredentialLargeBlobRegistrationInput.rs"]
mod __ASAuthorizationPublicKeyCredentialLargeBlobRegistrationInput;
#[cfg(feature = "ASAuthorizationPublicKeyCredentialLargeBlobRegistrationOutput")]
#[path = "ASAuthorizationPublicKeyCredentialLargeBlobRegistrationOutput.rs"]
mod __ASAuthorizationPublicKeyCredentialLargeBlobRegistrationOutput;
#[cfg(feature = "ASAuthorizationPublicKeyCredentialPRFAssertionInput")]
#[path = "ASAuthorizationPublicKeyCredentialPRFAssertionInput.rs"]
mod __ASAuthorizationPublicKeyCredentialPRFAssertionInput;
#[cfg(feature = "ASAuthorizationPublicKeyCredentialPRFAssertionOutput")]
#[path = "ASAuthorizationPublicKeyCredentialPRFAssertionOutput.rs"]
mod __ASAuthorizationPublicKeyCredentialPRFAssertionOutput;
#[cfg(feature = "ASAuthorizationPublicKeyCredentialPRFRegistrationInput")]
#[path = "ASAuthorizationPublicKeyCredentialPRFRegistrationInput.rs"]
mod __ASAuthorizationPublicKeyCredentialPRFRegistrationInput;
#[cfg(feature = "ASAuthorizationPublicKeyCredentialPRFRegistrationOutput")]
#[path = "ASAuthorizationPublicKeyCredentialPRFRegistrationOutput.rs"]
mod __ASAuthorizationPublicKeyCredentialPRFRegistrationOutput;
#[cfg(feature = "ASAuthorizationPublicKeyCredentialParameters")]
#[path = "ASAuthorizationPublicKeyCredentialParameters.rs"]
mod __ASAuthorizationPublicKeyCredentialParameters;
#[cfg(feature = "ASAuthorizationPublicKeyCredentialRegistration")]
#[path = "ASAuthorizationPublicKeyCredentialRegistration.rs"]
mod __ASAuthorizationPublicKeyCredentialRegistration;
#[cfg(feature = "ASAuthorizationPublicKeyCredentialRegistrationRequest")]
#[path = "ASAuthorizationPublicKeyCredentialRegistrationRequest.rs"]
mod __ASAuthorizationPublicKeyCredentialRegistrationRequest;
#[cfg(feature = "ASAuthorizationRequest")]
#[path = "ASAuthorizationRequest.rs"]
mod __ASAuthorizationRequest;
#[cfg(feature = "ASAuthorizationSecurityKeyPublicKeyCredentialAssertion")]
#[path = "ASAuthorizationSecurityKeyPublicKeyCredentialAssertion.rs"]
mod __ASAuthorizationSecurityKeyPublicKeyCredentialAssertion;
#[cfg(feature = "ASAuthorizationSecurityKeyPublicKeyCredentialAssertionRequest")]
#[path = "ASAuthorizationSecurityKeyPublicKeyCredentialAssertionRequest.rs"]
mod __ASAuthorizationSecurityKeyPublicKeyCredentialAssertionRequest;
#[cfg(feature = "ASAuthorizationSecurityKeyPublicKeyCredentialDescriptor")]
#[path = "ASAuthorizationSecurityKeyPublicKeyCredentialDescriptor.rs"]
mod __ASAuthorizationSecurityKeyPublicKeyCredentialDescriptor;
#[cfg(feature = "ASAuthorizationSecurityKeyPublicKeyCredentialProvider")]
#[path = "ASAuthorizationSecurityKeyPublicKeyCredentialProvider.rs"]
mod __ASAuthorizationSecurityKeyPublicKeyCredentialProvider;
#[cfg(feature = "ASAuthorizationSecurityKeyPublicKeyCredentialRegistration")]
#[path = "ASAuthorizationSecurityKeyPublicKeyCredentialRegistration.rs"]
mod __ASAuthorizationSecurityKeyPublicKeyCredentialRegistration;
#[cfg(feature = "ASAuthorizationSecurityKeyPublicKeyCredentialRegistrationRequest")]
#[path = "ASAuthorizationSecurityKeyPublicKeyCredentialRegistrationRequest.rs"]
mod __ASAuthorizationSecurityKeyPublicKeyCredentialRegistrationRequest;
#[cfg(feature = "ASAuthorizationSingleSignOnCredential")]
#[path = "ASAuthorizationSingleSignOnCredential.rs"]
mod __ASAuthorizationSingleSignOnCredential;
#[cfg(feature = "ASAuthorizationSingleSignOnProvider")]
#[path = "ASAuthorizationSingleSignOnProvider.rs"]
mod __ASAuthorizationSingleSignOnProvider;
#[cfg(feature = "ASAuthorizationSingleSignOnRequest")]
#[path = "ASAuthorizationSingleSignOnRequest.rs"]
mod __ASAuthorizationSingleSignOnRequest;
#[cfg(feature = "ASAuthorizationWebBrowserExternallyAuthenticatableRequest")]
#[path = "ASAuthorizationWebBrowserExternallyAuthenticatableRequest.rs"]
mod __ASAuthorizationWebBrowserExternallyAuthenticatableRequest;
#[cfg(feature = "ASAuthorizationWebBrowserPlatformPublicKeyCredential")]
#[path = "ASAuthorizationWebBrowserPlatformPublicKeyCredential.rs"]
mod __ASAuthorizationWebBrowserPlatformPublicKeyCredential;
#[cfg(feature = "ASAuthorizationWebBrowserPlatformPublicKeyCredentialAssertionRequest")]
#[path = "ASAuthorizationWebBrowserPlatformPublicKeyCredentialAssertionRequest.rs"]
mod __ASAuthorizationWebBrowserPlatformPublicKeyCredentialAssertionRequest;
#[cfg(feature = "ASAuthorizationWebBrowserPlatformPublicKeyCredentialProvider")]
#[path = "ASAuthorizationWebBrowserPlatformPublicKeyCredentialProvider.rs"]
mod __ASAuthorizationWebBrowserPlatformPublicKeyCredentialProvider;
#[cfg(feature = "ASAuthorizationWebBrowserPlatformPublicKeyCredentialRegistrationRequest")]
#[path = "ASAuthorizationWebBrowserPlatformPublicKeyCredentialRegistrationRequest.rs"]
mod __ASAuthorizationWebBrowserPlatformPublicKeyCredentialRegistrationRequest;
#[cfg(feature = "ASAuthorizationWebBrowserPublicKeyCredentialManager")]
#[path = "ASAuthorizationWebBrowserPublicKeyCredentialManager.rs"]
mod __ASAuthorizationWebBrowserPublicKeyCredentialManager;
#[cfg(feature = "ASAuthorizationWebBrowserSecurityKeyPublicKeyCredentialAssertionRequest")]
#[path = "ASAuthorizationWebBrowserSecurityKeyPublicKeyCredentialAssertionRequest.rs"]
mod __ASAuthorizationWebBrowserSecurityKeyPublicKeyCredentialAssertionRequest;
#[cfg(feature = "ASAuthorizationWebBrowserSecurityKeyPublicKeyCredentialProvider")]
#[path = "ASAuthorizationWebBrowserSecurityKeyPublicKeyCredentialProvider.rs"]
mod __ASAuthorizationWebBrowserSecurityKeyPublicKeyCredentialProvider;
#[cfg(feature = "ASAuthorizationWebBrowserSecurityKeyPublicKeyCredentialRegistrationRequest")]
#[path = "ASAuthorizationWebBrowserSecurityKeyPublicKeyCredentialRegistrationRequest.rs"]
mod __ASAuthorizationWebBrowserSecurityKeyPublicKeyCredentialRegistrationRequest;
#[cfg(feature = "ASCOSEConstants")]
#[path = "ASCOSEConstants.rs"]
mod __ASCOSEConstants;
#[cfg(feature = "ASCredentialIdentity")]
#[path = "ASCredentialIdentity.rs"]
mod __ASCredentialIdentity;
#[cfg(feature = "ASCredentialIdentityStore")]
#[path = "ASCredentialIdentityStore.rs"]
mod __ASCredentialIdentityStore;
#[cfg(feature = "ASCredentialIdentityStoreState")]
#[path = "ASCredentialIdentityStoreState.rs"]
mod __ASCredentialIdentityStoreState;
#[cfg(feature = "ASCredentialProviderExtensionContext")]
#[path = "ASCredentialProviderExtensionContext.rs"]
mod __ASCredentialProviderExtensionContext;
#[cfg(feature = "ASCredentialProviderViewController")]
#[path = "ASCredentialProviderViewController.rs"]
mod __ASCredentialProviderViewController;
#[cfg(feature = "ASCredentialRequest")]
#[path = "ASCredentialRequest.rs"]
mod __ASCredentialRequest;
#[cfg(feature = "ASCredentialServiceIdentifier")]
#[path = "ASCredentialServiceIdentifier.rs"]
mod __ASCredentialServiceIdentifier;
#[cfg(feature = "ASExtensionErrors")]
#[path = "ASExtensionErrors.rs"]
mod __ASExtensionErrors;
#[cfg(feature = "ASFoundation")]
#[path = "ASFoundation.rs"]
mod __ASFoundation;
#[cfg(feature = "ASOneTimeCodeCredential")]
#[path = "ASOneTimeCodeCredential.rs"]
mod __ASOneTimeCodeCredential;
#[cfg(feature = "ASOneTimeCodeCredentialIdentity")]
#[path = "ASOneTimeCodeCredentialIdentity.rs"]
mod __ASOneTimeCodeCredentialIdentity;
#[cfg(feature = "ASOneTimeCodeCredentialRequest")]
#[path = "ASOneTimeCodeCredentialRequest.rs"]
mod __ASOneTimeCodeCredentialRequest;
#[cfg(feature = "ASPasskeyAssertionCredential")]
#[path = "ASPasskeyAssertionCredential.rs"]
mod __ASPasskeyAssertionCredential;
#[cfg(feature = "ASPasskeyAssertionCredentialExtensionInput")]
#[path = "ASPasskeyAssertionCredentialExtensionInput.rs"]
mod __ASPasskeyAssertionCredentialExtensionInput;
#[cfg(feature = "ASPasskeyAssertionCredentialExtensionOutput")]
#[path = "ASPasskeyAssertionCredentialExtensionOutput.rs"]
mod __ASPasskeyAssertionCredentialExtensionOutput;
#[cfg(feature = "ASPasskeyCredentialIdentity")]
#[path = "ASPasskeyCredentialIdentity.rs"]
mod __ASPasskeyCredentialIdentity;
#[cfg(feature = "ASPasskeyCredentialRequest")]
#[path = "ASPasskeyCredentialRequest.rs"]
mod __ASPasskeyCredentialRequest;
#[cfg(feature = "ASPasskeyCredentialRequestParameters")]
#[path = "ASPasskeyCredentialRequestParameters.rs"]
mod __ASPasskeyCredentialRequestParameters;
#[cfg(feature = "ASPasskeyRegistrationCredential")]
#[path = "ASPasskeyRegistrationCredential.rs"]
mod __ASPasskeyRegistrationCredential;
#[cfg(feature = "ASPasskeyRegistrationCredentialExtensionInput")]
#[path = "ASPasskeyRegistrationCredentialExtensionInput.rs"]
mod __ASPasskeyRegistrationCredentialExtensionInput;
#[cfg(feature = "ASPasskeyRegistrationCredentialExtensionOutput")]
#[path = "ASPasskeyRegistrationCredentialExtensionOutput.rs"]
mod __ASPasskeyRegistrationCredentialExtensionOutput;
#[cfg(feature = "ASPasswordCredential")]
#[path = "ASPasswordCredential.rs"]
mod __ASPasswordCredential;
#[cfg(feature = "ASPasswordCredentialIdentity")]
#[path = "ASPasswordCredentialIdentity.rs"]
mod __ASPasswordCredentialIdentity;
#[cfg(feature = "ASPasswordCredentialRequest")]
#[path = "ASPasswordCredentialRequest.rs"]
mod __ASPasswordCredentialRequest;
#[cfg(feature = "ASPublicKeyCredential")]
#[path = "ASPublicKeyCredential.rs"]
mod __ASPublicKeyCredential;
#[cfg(feature = "ASPublicKeyCredentialClientData")]
#[path = "ASPublicKeyCredentialClientData.rs"]
mod __ASPublicKeyCredentialClientData;
#[cfg(feature = "ASSettingsHelper")]
#[path = "ASSettingsHelper.rs"]
mod __ASSettingsHelper;
#[cfg(feature = "ASWebAuthenticationSession")]
#[path = "ASWebAuthenticationSession.rs"]
mod __ASWebAuthenticationSession;
#[cfg(feature = "ASWebAuthenticationSessionCallback")]
#[path = "ASWebAuthenticationSessionCallback.rs"]
mod __ASWebAuthenticationSessionCallback;
#[cfg(feature = "ASWebAuthenticationSessionRequest")]
#[path = "ASWebAuthenticationSessionRequest.rs"]
mod __ASWebAuthenticationSessionRequest;
#[cfg(feature = "ASWebAuthenticationSessionWebBrowserSessionHandling")]
#[path = "ASWebAuthenticationSessionWebBrowserSessionHandling.rs"]
mod __ASWebAuthenticationSessionWebBrowserSessionHandling;
#[cfg(feature = "ASWebAuthenticationSessionWebBrowserSessionManager")]
#[path = "ASWebAuthenticationSessionWebBrowserSessionManager.rs"]
mod __ASWebAuthenticationSessionWebBrowserSessionManager;

#[cfg(feature = "ASAccountAuthenticationModificationController")]
pub use self::__ASAccountAuthenticationModificationController::ASAccountAuthenticationModificationController;
#[cfg(feature = "ASAccountAuthenticationModificationController")]
pub use self::__ASAccountAuthenticationModificationController::ASAccountAuthenticationModificationControllerDelegate;
#[cfg(feature = "ASAccountAuthenticationModificationController")]
pub use self::__ASAccountAuthenticationModificationController::ASAccountAuthenticationModificationControllerPresentationContextProviding;
#[cfg(feature = "ASAccountAuthenticationModificationExtensionContext")]
pub use self::__ASAccountAuthenticationModificationExtensionContext::ASAccountAuthenticationModificationExtensionContext;
#[cfg(all(
    feature = "ASAccountAuthenticationModificationReplacePasswordWithSignInWithAppleRequest",
    feature = "ASAccountAuthenticationModificationRequest"
))]
pub use self::__ASAccountAuthenticationModificationReplacePasswordWithSignInWithAppleRequest::ASAccountAuthenticationModificationReplacePasswordWithSignInWithAppleRequest;
#[cfg(feature = "ASAccountAuthenticationModificationRequest")]
pub use self::__ASAccountAuthenticationModificationRequest::ASAccountAuthenticationModificationRequest;
#[cfg(all(
    feature = "ASAccountAuthenticationModificationRequest",
    feature = "ASAccountAuthenticationModificationUpgradePasswordToStrongPasswordRequest"
))]
pub use self::__ASAccountAuthenticationModificationUpgradePasswordToStrongPasswordRequest::ASAccountAuthenticationModificationUpgradePasswordToStrongPasswordRequest;
#[cfg(feature = "ASAuthorization")]
pub use self::__ASAuthorization::ASAuthorization;
#[cfg(feature = "ASAuthorization")]
pub use self::__ASAuthorization::ASAuthorizationScope;
#[cfg(feature = "ASAuthorization")]
pub use self::__ASAuthorization::ASAuthorizationScopeEmail;
#[cfg(feature = "ASAuthorization")]
pub use self::__ASAuthorization::ASAuthorizationScopeFullName;
#[cfg(feature = "ASAuthorizationAppleIDButton")]
pub use self::__ASAuthorizationAppleIDButton::ASAuthorizationAppleIDButtonStyle;
#[cfg(feature = "ASAuthorizationAppleIDButton")]
pub use self::__ASAuthorizationAppleIDButton::ASAuthorizationAppleIDButtonType;
#[cfg(feature = "ASAuthorizationAppleIDCredential")]
pub use self::__ASAuthorizationAppleIDCredential::ASAuthorizationAppleIDCredential;
#[cfg(feature = "ASAuthorizationAppleIDCredential")]
pub use self::__ASAuthorizationAppleIDCredential::ASUserAgeRange;
#[cfg(feature = "ASAuthorizationAppleIDCredential")]
pub use self::__ASAuthorizationAppleIDCredential::ASUserDetectionStatus;
#[cfg(feature = "ASAuthorizationAppleIDProvider")]
pub use self::__ASAuthorizationAppleIDProvider::ASAuthorizationAppleIDProvider;
#[cfg(feature = "ASAuthorizationAppleIDProvider")]
pub use self::__ASAuthorizationAppleIDProvider::ASAuthorizationAppleIDProviderCredentialRevokedNotification;
#[cfg(feature = "ASAuthorizationAppleIDProvider")]
pub use self::__ASAuthorizationAppleIDProvider::ASAuthorizationAppleIDProviderCredentialState;
#[cfg(all(
    feature = "ASAuthorizationAppleIDRequest",
    feature = "ASAuthorizationOpenIDRequest",
    feature = "ASAuthorizationRequest"
))]
pub use self::__ASAuthorizationAppleIDRequest::ASAuthorizationAppleIDRequest;
#[cfg(feature = "ASAuthorizationController")]
pub use self::__ASAuthorizationController::ASAuthorizationController;
#[cfg(feature = "ASAuthorizationController")]
pub use self::__ASAuthorizationController::ASAuthorizationControllerDelegate;
#[cfg(feature = "ASAuthorizationController")]
pub use self::__ASAuthorizationController::ASAuthorizationControllerPresentationContextProviding;
#[cfg(feature = "ASAuthorizationController")]
pub use self::__ASAuthorizationController::ASAuthorizationControllerRequestOptions;
#[cfg(feature = "ASAuthorizationCredential")]
pub use self::__ASAuthorizationCredential::ASAuthorizationCredential;
#[cfg(feature = "ASAuthorizationCustomMethod")]
pub use self::__ASAuthorizationCustomMethod::ASAuthorizationCustomMethod;
#[cfg(feature = "ASAuthorizationCustomMethod")]
pub use self::__ASAuthorizationCustomMethod::ASAuthorizationCustomMethodOther;
#[cfg(feature = "ASAuthorizationCustomMethod")]
pub use self::__ASAuthorizationCustomMethod::ASAuthorizationCustomMethodRestorePurchase;
#[cfg(feature = "ASAuthorizationCustomMethod")]
pub use self::__ASAuthorizationCustomMethod::ASAuthorizationCustomMethodVideoSubscriberAccount;
#[cfg(feature = "ASAuthorizationError")]
pub use self::__ASAuthorizationError::ASAuthorizationError;
#[cfg(feature = "ASAuthorizationError")]
pub use self::__ASAuthorizationError::ASAuthorizationErrorDomain;
#[cfg(feature = "ASAuthorizationOpenIDRequest")]
pub use self::__ASAuthorizationOpenIDRequest::ASAuthorizationOpenIDOperation;
#[cfg(all(
    feature = "ASAuthorizationOpenIDRequest",
    feature = "ASAuthorizationRequest"
))]
pub use self::__ASAuthorizationOpenIDRequest::ASAuthorizationOpenIDRequest;
#[cfg(feature = "ASAuthorizationOpenIDRequest")]
pub use self::__ASAuthorizationOpenIDRequest::ASAuthorizationOperationImplicit;
#[cfg(feature = "ASAuthorizationOpenIDRequest")]
pub use self::__ASAuthorizationOpenIDRequest::ASAuthorizationOperationLogin;
#[cfg(feature = "ASAuthorizationOpenIDRequest")]
pub use self::__ASAuthorizationOpenIDRequest::ASAuthorizationOperationLogout;
#[cfg(feature = "ASAuthorizationOpenIDRequest")]
pub use self::__ASAuthorizationOpenIDRequest::ASAuthorizationOperationRefresh;
#[cfg(feature = "ASAuthorizationPasswordProvider")]
pub use self::__ASAuthorizationPasswordProvider::ASAuthorizationPasswordProvider;
#[cfg(all(
    feature = "ASAuthorizationPasswordRequest",
    feature = "ASAuthorizationRequest"
))]
pub use self::__ASAuthorizationPasswordRequest::ASAuthorizationPasswordRequest;
#[cfg(feature = "ASAuthorizationPlatformPublicKeyCredentialAssertion")]
pub use self::__ASAuthorizationPlatformPublicKeyCredentialAssertion::ASAuthorizationPlatformPublicKeyCredentialAssertion;
#[cfg(all(
    feature = "ASAuthorizationPlatformPublicKeyCredentialAssertionRequest",
    feature = "ASAuthorizationRequest"
))]
pub use self::__ASAuthorizationPlatformPublicKeyCredentialAssertionRequest::ASAuthorizationPlatformPublicKeyCredentialAssertionRequest;
#[cfg(feature = "ASAuthorizationPlatformPublicKeyCredentialDescriptor")]
pub use self::__ASAuthorizationPlatformPublicKeyCredentialDescriptor::ASAuthorizationPlatformPublicKeyCredentialDescriptor;
#[cfg(feature = "ASAuthorizationPlatformPublicKeyCredentialProvider")]
pub use self::__ASAuthorizationPlatformPublicKeyCredentialProvider::ASAuthorizationPlatformPublicKeyCredentialProvider;
#[cfg(feature = "ASAuthorizationPlatformPublicKeyCredentialRegistration")]
pub use self::__ASAuthorizationPlatformPublicKeyCredentialRegistration::ASAuthorizationPlatformPublicKeyCredentialRegistration;
#[cfg(all(
    feature = "ASAuthorizationPlatformPublicKeyCredentialRegistrationRequest",
    feature = "ASAuthorizationRequest"
))]
pub use self::__ASAuthorizationPlatformPublicKeyCredentialRegistrationRequest::ASAuthorizationPlatformPublicKeyCredentialRegistrationRequest;
#[cfg(feature = "ASAuthorizationPlatformPublicKeyCredentialRegistrationRequest")]
pub use self::__ASAuthorizationPlatformPublicKeyCredentialRegistrationRequest::ASAuthorizationPlatformPublicKeyCredentialRegistrationRequestStyle;
#[cfg(feature = "ASAuthorizationProvider")]
pub use self::__ASAuthorizationProvider::ASAuthorizationProvider;
#[cfg(feature = "ASAuthorizationProviderExtensionAuthorizationRequest")]
pub use self::__ASAuthorizationProviderExtensionAuthorizationRequest::ASAuthorizationProviderAuthorizationOperation;
#[cfg(feature = "ASAuthorizationProviderExtensionAuthorizationRequest")]
pub use self::__ASAuthorizationProviderExtensionAuthorizationRequest::ASAuthorizationProviderAuthorizationOperationConfigurationRemoved;
#[cfg(feature = "ASAuthorizationProviderExtensionAuthorizationRequest")]
pub use self::__ASAuthorizationProviderExtensionAuthorizationRequest::ASAuthorizationProviderAuthorizationOperationDirectRequest;
#[cfg(feature = "ASAuthorizationProviderExtensionAuthorizationRequest")]
pub use self::__ASAuthorizationProviderExtensionAuthorizationRequest::ASAuthorizationProviderExtensionAuthorizationRequest;
#[cfg(feature = "ASAuthorizationProviderExtensionAuthorizationRequest")]
pub use self::__ASAuthorizationProviderExtensionAuthorizationRequest::ASAuthorizationProviderExtensionAuthorizationRequestHandler;
#[cfg(feature = "ASAuthorizationProviderExtensionAuthorizationResult")]
pub use self::__ASAuthorizationProviderExtensionAuthorizationResult::ASAuthorizationProviderExtensionAuthorizationResult;
#[cfg(feature = "ASAuthorizationProviderExtensionLoginConfiguration")]
pub use self::__ASAuthorizationProviderExtensionLoginConfiguration::ASAuthorizationProviderExtensionEncryptionAlgorithm;
#[cfg(feature = "ASAuthorizationProviderExtensionLoginConfiguration")]
pub use self::__ASAuthorizationProviderExtensionLoginConfiguration::ASAuthorizationProviderExtensionEncryptionAlgorithmECDHE_A256GCM;
#[cfg(feature = "ASAuthorizationProviderExtensionLoginConfiguration")]
pub use self::__ASAuthorizationProviderExtensionLoginConfiguration::ASAuthorizationProviderExtensionEncryptionAlgorithmHPKE_Curve25519_SHA256_ChachaPoly;
#[cfg(feature = "ASAuthorizationProviderExtensionLoginConfiguration")]
pub use self::__ASAuthorizationProviderExtensionLoginConfiguration::ASAuthorizationProviderExtensionEncryptionAlgorithmHPKE_P256_SHA256_AES_GCM_256;
#[cfg(feature = "ASAuthorizationProviderExtensionLoginConfiguration")]
pub use self::__ASAuthorizationProviderExtensionLoginConfiguration::ASAuthorizationProviderExtensionEncryptionAlgorithmHPKE_P384_SHA384_AES_GCM_256;
#[cfg(feature = "ASAuthorizationProviderExtensionLoginConfiguration")]
pub use self::__ASAuthorizationProviderExtensionLoginConfiguration::ASAuthorizationProviderExtensionFederationType;
#[cfg(feature = "ASAuthorizationProviderExtensionLoginConfiguration")]
pub use self::__ASAuthorizationProviderExtensionLoginConfiguration::ASAuthorizationProviderExtensionKerberosMapping;
#[cfg(feature = "ASAuthorizationProviderExtensionLoginConfiguration")]
pub use self::__ASAuthorizationProviderExtensionLoginConfiguration::ASAuthorizationProviderExtensionLoginConfiguration;
#[cfg(feature = "ASAuthorizationProviderExtensionLoginConfiguration")]
pub use self::__ASAuthorizationProviderExtensionLoginConfiguration::ASAuthorizationProviderExtensionSigningAlgorithm;
#[cfg(feature = "ASAuthorizationProviderExtensionLoginConfiguration")]
pub use self::__ASAuthorizationProviderExtensionLoginConfiguration::ASAuthorizationProviderExtensionSigningAlgorithmES256;
#[cfg(feature = "ASAuthorizationProviderExtensionLoginConfiguration")]
pub use self::__ASAuthorizationProviderExtensionLoginConfiguration::ASAuthorizationProviderExtensionSigningAlgorithmES384;
#[cfg(feature = "ASAuthorizationProviderExtensionLoginConfiguration")]
pub use self::__ASAuthorizationProviderExtensionLoginConfiguration::ASAuthorizationProviderExtensionSigningAlgorithmEd25519;
#[cfg(feature = "ASAuthorizationProviderExtensionLoginConfiguration")]
pub use self::__ASAuthorizationProviderExtensionLoginConfiguration::ASAuthorizationProviderExtensionUserSecureEnclaveKeyBiometricPolicy;
#[cfg(feature = "ASAuthorizationProviderExtensionLoginManager")]
pub use self::__ASAuthorizationProviderExtensionLoginManager::ASAuthorizationProviderExtensionKeyType;
#[cfg(feature = "ASAuthorizationProviderExtensionLoginManager")]
pub use self::__ASAuthorizationProviderExtensionLoginManager::ASAuthorizationProviderExtensionLoginManager;
#[cfg(feature = "ASAuthorizationProviderExtensionRegistrationHandler")]
pub use self::__ASAuthorizationProviderExtensionRegistrationHandler::ASAuthorizationProviderExtensionAuthenticationMethod;
#[cfg(feature = "ASAuthorizationProviderExtensionRegistrationHandler")]
pub use self::__ASAuthorizationProviderExtensionRegistrationHandler::ASAuthorizationProviderExtensionPlatformSSOProtocolVersion;
#[cfg(feature = "ASAuthorizationProviderExtensionRegistrationHandler")]
pub use self::__ASAuthorizationProviderExtensionRegistrationHandler::ASAuthorizationProviderExtensionRegistrationHandler;
#[cfg(feature = "ASAuthorizationProviderExtensionRegistrationHandler")]
pub use self::__ASAuthorizationProviderExtensionRegistrationHandler::ASAuthorizationProviderExtensionRegistrationResult;
#[cfg(feature = "ASAuthorizationProviderExtensionRegistrationHandler")]
pub use self::__ASAuthorizationProviderExtensionRegistrationHandler::ASAuthorizationProviderExtensionRequestOptions;
#[cfg(feature = "ASAuthorizationProviderExtensionRegistrationHandler")]
pub use self::__ASAuthorizationProviderExtensionRegistrationHandler::ASAuthorizationProviderExtensionSupportedGrantTypes;
#[cfg(feature = "ASAuthorizationProviderExtensionUserLoginConfiguration")]
pub use self::__ASAuthorizationProviderExtensionUserLoginConfiguration::ASAuthorizationProviderExtensionUserLoginConfiguration;
#[cfg(all(
    feature = "ASAuthorizationCredential",
    feature = "ASAuthorizationPublicKeyCredentialAssertion",
    feature = "ASPublicKeyCredential"
))]
pub use self::__ASAuthorizationPublicKeyCredentialAssertion::ASAuthorizationPublicKeyCredentialAssertion;
#[cfg(feature = "ASAuthorizationPublicKeyCredentialAssertionRequest")]
pub use self::__ASAuthorizationPublicKeyCredentialAssertionRequest::ASAuthorizationPublicKeyCredentialAssertionRequest;
#[cfg(feature = "ASAuthorizationPublicKeyCredentialConstants")]
pub use self::__ASAuthorizationPublicKeyCredentialConstants::ASAuthorizationPublicKeyCredentialAttachment;
#[cfg(feature = "ASAuthorizationPublicKeyCredentialConstants")]
pub use self::__ASAuthorizationPublicKeyCredentialConstants::ASAuthorizationPublicKeyCredentialAttestationKind;
#[cfg(feature = "ASAuthorizationPublicKeyCredentialConstants")]
pub use self::__ASAuthorizationPublicKeyCredentialConstants::ASAuthorizationPublicKeyCredentialAttestationKindDirect;
#[cfg(feature = "ASAuthorizationPublicKeyCredentialConstants")]
pub use self::__ASAuthorizationPublicKeyCredentialConstants::ASAuthorizationPublicKeyCredentialAttestationKindEnterprise;
#[cfg(feature = "ASAuthorizationPublicKeyCredentialConstants")]
pub use self::__ASAuthorizationPublicKeyCredentialConstants::ASAuthorizationPublicKeyCredentialAttestationKindIndirect;
#[cfg(feature = "ASAuthorizationPublicKeyCredentialConstants")]
pub use self::__ASAuthorizationPublicKeyCredentialConstants::ASAuthorizationPublicKeyCredentialAttestationKindNone;
#[cfg(feature = "ASAuthorizationPublicKeyCredentialConstants")]
pub use self::__ASAuthorizationPublicKeyCredentialConstants::ASAuthorizationPublicKeyCredentialResidentKeyPreference;
#[cfg(feature = "ASAuthorizationPublicKeyCredentialConstants")]
pub use self::__ASAuthorizationPublicKeyCredentialConstants::ASAuthorizationPublicKeyCredentialResidentKeyPreferenceDiscouraged;
#[cfg(feature = "ASAuthorizationPublicKeyCredentialConstants")]
pub use self::__ASAuthorizationPublicKeyCredentialConstants::ASAuthorizationPublicKeyCredentialResidentKeyPreferencePreferred;
#[cfg(feature = "ASAuthorizationPublicKeyCredentialConstants")]
pub use self::__ASAuthorizationPublicKeyCredentialConstants::ASAuthorizationPublicKeyCredentialResidentKeyPreferenceRequired;
#[cfg(feature = "ASAuthorizationPublicKeyCredentialConstants")]
pub use self::__ASAuthorizationPublicKeyCredentialConstants::ASAuthorizationPublicKeyCredentialUserVerificationPreference;
#[cfg(feature = "ASAuthorizationPublicKeyCredentialConstants")]
pub use self::__ASAuthorizationPublicKeyCredentialConstants::ASAuthorizationPublicKeyCredentialUserVerificationPreferenceDiscouraged;
#[cfg(feature = "ASAuthorizationPublicKeyCredentialConstants")]
pub use self::__ASAuthorizationPublicKeyCredentialConstants::ASAuthorizationPublicKeyCredentialUserVerificationPreferencePreferred;
#[cfg(feature = "ASAuthorizationPublicKeyCredentialConstants")]
pub use self::__ASAuthorizationPublicKeyCredentialConstants::ASAuthorizationPublicKeyCredentialUserVerificationPreferenceRequired;
#[cfg(feature = "ASAuthorizationPublicKeyCredentialDescriptor")]
pub use self::__ASAuthorizationPublicKeyCredentialDescriptor::ASAuthorizationPublicKeyCredentialDescriptor;
#[cfg(feature = "ASAuthorizationPublicKeyCredentialLargeBlobAssertionInput")]
pub use self::__ASAuthorizationPublicKeyCredentialLargeBlobAssertionInput::ASAuthorizationPublicKeyCredentialLargeBlobAssertionInput;
#[cfg(feature = "ASAuthorizationPublicKeyCredentialLargeBlobAssertionInput")]
pub use self::__ASAuthorizationPublicKeyCredentialLargeBlobAssertionInput::ASAuthorizationPublicKeyCredentialLargeBlobAssertionOperation;
#[cfg(feature = "ASAuthorizationPublicKeyCredentialLargeBlobAssertionOutput")]
pub use self::__ASAuthorizationPublicKeyCredentialLargeBlobAssertionOutput::ASAuthorizationPublicKeyCredentialLargeBlobAssertionOutput;
#[cfg(feature = "ASAuthorizationPublicKeyCredentialLargeBlobRegistrationInput")]
pub use self::__ASAuthorizationPublicKeyCredentialLargeBlobRegistrationInput::ASAuthorizationPublicKeyCredentialLargeBlobRegistrationInput;
#[cfg(feature = "ASAuthorizationPublicKeyCredentialLargeBlobRegistrationInput")]
pub use self::__ASAuthorizationPublicKeyCredentialLargeBlobRegistrationInput::ASAuthorizationPublicKeyCredentialLargeBlobSupportRequirement;
#[cfg(feature = "ASAuthorizationPublicKeyCredentialLargeBlobRegistrationOutput")]
pub use self::__ASAuthorizationPublicKeyCredentialLargeBlobRegistrationOutput::ASAuthorizationPublicKeyCredentialLargeBlobRegistrationOutput;
#[cfg(feature = "ASAuthorizationPublicKeyCredentialPRFAssertionInput")]
pub use self::__ASAuthorizationPublicKeyCredentialPRFAssertionInput::ASAuthorizationPublicKeyCredentialPRFAssertionInput;
#[cfg(feature = "ASAuthorizationPublicKeyCredentialPRFAssertionInput")]
pub use self::__ASAuthorizationPublicKeyCredentialPRFAssertionInput::ASAuthorizationPublicKeyCredentialPRFAssertionInputValues;
#[cfg(feature = "ASAuthorizationPublicKeyCredentialPRFAssertionOutput")]
pub use self::__ASAuthorizationPublicKeyCredentialPRFAssertionOutput::ASAuthorizationPublicKeyCredentialPRFAssertionOutput;
#[cfg(feature = "ASAuthorizationPublicKeyCredentialPRFRegistrationInput")]
pub use self::__ASAuthorizationPublicKeyCredentialPRFRegistrationInput::ASAuthorizationPublicKeyCredentialPRFRegistrationInput;
#[cfg(feature = "ASAuthorizationPublicKeyCredentialPRFRegistrationOutput")]
pub use self::__ASAuthorizationPublicKeyCredentialPRFRegistrationOutput::ASAuthorizationPublicKeyCredentialPRFRegistrationOutput;
#[cfg(feature = "ASAuthorizationPublicKeyCredentialParameters")]
pub use self::__ASAuthorizationPublicKeyCredentialParameters::ASAuthorizationPublicKeyCredentialParameters;
#[cfg(all(
    feature = "ASAuthorizationCredential",
    feature = "ASAuthorizationPublicKeyCredentialRegistration",
    feature = "ASPublicKeyCredential"
))]
pub use self::__ASAuthorizationPublicKeyCredentialRegistration::ASAuthorizationPublicKeyCredentialRegistration;
#[cfg(feature = "ASAuthorizationPublicKeyCredentialRegistrationRequest")]
pub use self::__ASAuthorizationPublicKeyCredentialRegistrationRequest::ASAuthorizationPublicKeyCredentialRegistrationRequest;
#[cfg(feature = "ASAuthorizationRequest")]
pub use self::__ASAuthorizationRequest::ASAuthorizationRequest;
#[cfg(feature = "ASAuthorizationSecurityKeyPublicKeyCredentialAssertion")]
pub use self::__ASAuthorizationSecurityKeyPublicKeyCredentialAssertion::ASAuthorizationSecurityKeyPublicKeyCredentialAssertion;
#[cfg(all(
    feature = "ASAuthorizationRequest",
    feature = "ASAuthorizationSecurityKeyPublicKeyCredentialAssertionRequest"
))]
pub use self::__ASAuthorizationSecurityKeyPublicKeyCredentialAssertionRequest::ASAuthorizationSecurityKeyPublicKeyCredentialAssertionRequest;
#[cfg(feature = "ASAuthorizationSecurityKeyPublicKeyCredentialDescriptor")]
pub use self::__ASAuthorizationSecurityKeyPublicKeyCredentialDescriptor::ASAuthorizationAllSupportedPublicKeyCredentialDescriptorTransports;
#[cfg(feature = "ASAuthorizationSecurityKeyPublicKeyCredentialDescriptor")]
pub use self::__ASAuthorizationSecurityKeyPublicKeyCredentialDescriptor::ASAuthorizationSecurityKeyPublicKeyCredentialDescriptor;
#[cfg(feature = "ASAuthorizationSecurityKeyPublicKeyCredentialDescriptor")]
pub use self::__ASAuthorizationSecurityKeyPublicKeyCredentialDescriptor::ASAuthorizationSecurityKeyPublicKeyCredentialDescriptorTransport;
#[cfg(feature = "ASAuthorizationSecurityKeyPublicKeyCredentialDescriptor")]
pub use self::__ASAuthorizationSecurityKeyPublicKeyCredentialDescriptor::ASAuthorizationSecurityKeyPublicKeyCredentialDescriptorTransportBluetooth;
#[cfg(feature = "ASAuthorizationSecurityKeyPublicKeyCredentialDescriptor")]
pub use self::__ASAuthorizationSecurityKeyPublicKeyCredentialDescriptor::ASAuthorizationSecurityKeyPublicKeyCredentialDescriptorTransportNFC;
#[cfg(feature = "ASAuthorizationSecurityKeyPublicKeyCredentialDescriptor")]
pub use self::__ASAuthorizationSecurityKeyPublicKeyCredentialDescriptor::ASAuthorizationSecurityKeyPublicKeyCredentialDescriptorTransportUSB;
#[cfg(feature = "ASAuthorizationSecurityKeyPublicKeyCredentialProvider")]
pub use self::__ASAuthorizationSecurityKeyPublicKeyCredentialProvider::ASAuthorizationSecurityKeyPublicKeyCredentialProvider;
#[cfg(feature = "ASAuthorizationSecurityKeyPublicKeyCredentialRegistration")]
pub use self::__ASAuthorizationSecurityKeyPublicKeyCredentialRegistration::ASAuthorizationSecurityKeyPublicKeyCredentialRegistration;
#[cfg(all(
    feature = "ASAuthorizationRequest",
    feature = "ASAuthorizationSecurityKeyPublicKeyCredentialRegistrationRequest"
))]
pub use self::__ASAuthorizationSecurityKeyPublicKeyCredentialRegistrationRequest::ASAuthorizationSecurityKeyPublicKeyCredentialRegistrationRequest;
#[cfg(feature = "ASAuthorizationSingleSignOnCredential")]
pub use self::__ASAuthorizationSingleSignOnCredential::ASAuthorizationSingleSignOnCredential;
#[cfg(feature = "ASAuthorizationSingleSignOnProvider")]
pub use self::__ASAuthorizationSingleSignOnProvider::ASAuthorizationSingleSignOnProvider;
#[cfg(all(
    feature = "ASAuthorizationOpenIDRequest",
    feature = "ASAuthorizationRequest",
    feature = "ASAuthorizationSingleSignOnRequest"
))]
pub use self::__ASAuthorizationSingleSignOnRequest::ASAuthorizationSingleSignOnRequest;
#[cfg(feature = "ASAuthorizationWebBrowserExternallyAuthenticatableRequest")]
pub use self::__ASAuthorizationWebBrowserExternallyAuthenticatableRequest::ASAuthorizationWebBrowserExternallyAuthenticatableRequest;
#[cfg(feature = "ASAuthorizationWebBrowserPlatformPublicKeyCredential")]
pub use self::__ASAuthorizationWebBrowserPlatformPublicKeyCredential::ASAuthorizationWebBrowserPlatformPublicKeyCredential;
#[cfg(feature = "ASAuthorizationWebBrowserPlatformPublicKeyCredentialAssertionRequest")]
pub use self::__ASAuthorizationWebBrowserPlatformPublicKeyCredentialAssertionRequest::ASAuthorizationWebBrowserPlatformPublicKeyCredentialAssertionRequest;
#[cfg(feature = "ASAuthorizationWebBrowserPlatformPublicKeyCredentialProvider")]
pub use self::__ASAuthorizationWebBrowserPlatformPublicKeyCredentialProvider::ASAuthorizationWebBrowserPlatformPublicKeyCredentialProvider;
#[cfg(feature = "ASAuthorizationWebBrowserPlatformPublicKeyCredentialRegistrationRequest")]
pub use self::__ASAuthorizationWebBrowserPlatformPublicKeyCredentialRegistrationRequest::ASAuthorizationWebBrowserPlatformPublicKeyCredentialRegistrationRequest;
#[cfg(feature = "ASAuthorizationWebBrowserPublicKeyCredentialManager")]
pub use self::__ASAuthorizationWebBrowserPublicKeyCredentialManager::ASAuthorizationWebBrowserPublicKeyCredentialManager;
#[cfg(feature = "ASAuthorizationWebBrowserPublicKeyCredentialManager")]
pub use self::__ASAuthorizationWebBrowserPublicKeyCredentialManager::ASAuthorizationWebBrowserPublicKeyCredentialManagerAuthorizationState;
#[cfg(feature = "ASAuthorizationWebBrowserSecurityKeyPublicKeyCredentialAssertionRequest")]
pub use self::__ASAuthorizationWebBrowserSecurityKeyPublicKeyCredentialAssertionRequest::ASAuthorizationWebBrowserSecurityKeyPublicKeyCredentialAssertionRequest;
#[cfg(feature = "ASAuthorizationWebBrowserSecurityKeyPublicKeyCredentialProvider")]
pub use self::__ASAuthorizationWebBrowserSecurityKeyPublicKeyCredentialProvider::ASAuthorizationWebBrowserSecurityKeyPublicKeyCredentialProvider;
#[cfg(feature = "ASAuthorizationWebBrowserSecurityKeyPublicKeyCredentialRegistrationRequest")]
pub use self::__ASAuthorizationWebBrowserSecurityKeyPublicKeyCredentialRegistrationRequest::ASAuthorizationWebBrowserSecurityKeyPublicKeyCredentialRegistrationRequest;
#[cfg(feature = "ASCOSEConstants")]
pub use self::__ASCOSEConstants::ASCOSEAlgorithmIdentifier;
#[cfg(feature = "ASCOSEConstants")]
pub use self::__ASCOSEConstants::ASCOSEAlgorithmIdentifierES256;
#[cfg(feature = "ASCOSEConstants")]
pub use self::__ASCOSEConstants::ASCOSEEllipticCurveIdentifier;
#[cfg(feature = "ASCOSEConstants")]
pub use self::__ASCOSEConstants::ASCOSEEllipticCurveIdentifierP256;
#[cfg(feature = "ASCredentialIdentity")]
pub use self::__ASCredentialIdentity::ASCredentialIdentity;
#[cfg(feature = "ASCredentialIdentityStore")]
pub use self::__ASCredentialIdentityStore::ASCredentialIdentityStore;
#[cfg(feature = "ASCredentialIdentityStore")]
pub use self::__ASCredentialIdentityStore::ASCredentialIdentityStoreErrorCode;
#[cfg(feature = "ASCredentialIdentityStore")]
pub use self::__ASCredentialIdentityStore::ASCredentialIdentityStoreErrorDomain;
#[cfg(feature = "ASCredentialIdentityStore")]
pub use self::__ASCredentialIdentityStore::ASCredentialIdentityTypes;
#[cfg(feature = "ASCredentialIdentityStoreState")]
pub use self::__ASCredentialIdentityStoreState::ASCredentialIdentityStoreState;
#[cfg(feature = "ASCredentialProviderExtensionContext")]
pub use self::__ASCredentialProviderExtensionContext::ASCredentialProviderExtensionContext;
#[cfg(feature = "ASCredentialRequest")]
pub use self::__ASCredentialRequest::ASCredentialRequest;
#[cfg(feature = "ASCredentialRequest")]
pub use self::__ASCredentialRequest::ASCredentialRequestType;
#[cfg(feature = "ASCredentialServiceIdentifier")]
pub use self::__ASCredentialServiceIdentifier::ASCredentialServiceIdentifier;
#[cfg(feature = "ASCredentialServiceIdentifier")]
pub use self::__ASCredentialServiceIdentifier::ASCredentialServiceIdentifierType;
#[cfg(feature = "ASExtensionErrors")]
pub use self::__ASExtensionErrors::ASExtensionErrorCode;
#[cfg(feature = "ASExtensionErrors")]
pub use self::__ASExtensionErrors::ASExtensionErrorDomain;
#[cfg(feature = "ASExtensionErrors")]
pub use self::__ASExtensionErrors::ASExtensionLocalizedFailureReasonErrorKey;
#[cfg(feature = "ASOneTimeCodeCredential")]
pub use self::__ASOneTimeCodeCredential::ASOneTimeCodeCredential;
#[cfg(feature = "ASOneTimeCodeCredentialIdentity")]
pub use self::__ASOneTimeCodeCredentialIdentity::ASOneTimeCodeCredentialIdentity;
#[cfg(feature = "ASOneTimeCodeCredentialRequest")]
pub use self::__ASOneTimeCodeCredentialRequest::ASOneTimeCodeCredentialRequest;
#[cfg(feature = "ASPasskeyAssertionCredential")]
pub use self::__ASPasskeyAssertionCredential::ASPasskeyAssertionCredential;
#[cfg(feature = "ASPasskeyAssertionCredentialExtensionInput")]
pub use self::__ASPasskeyAssertionCredentialExtensionInput::ASPasskeyAssertionCredentialExtensionInput;
#[cfg(feature = "ASPasskeyAssertionCredentialExtensionOutput")]
pub use self::__ASPasskeyAssertionCredentialExtensionOutput::ASPasskeyAssertionCredentialExtensionOutput;
#[cfg(feature = "ASPasskeyCredentialIdentity")]
pub use self::__ASPasskeyCredentialIdentity::ASPasskeyCredentialIdentity;
#[cfg(feature = "ASPasskeyCredentialRequest")]
pub use self::__ASPasskeyCredentialRequest::ASPasskeyCredentialRequest;
#[cfg(feature = "ASPasskeyCredentialRequestParameters")]
pub use self::__ASPasskeyCredentialRequestParameters::ASPasskeyCredentialRequestParameters;
#[cfg(feature = "ASPasskeyRegistrationCredential")]
pub use self::__ASPasskeyRegistrationCredential::ASPasskeyRegistrationCredential;
#[cfg(feature = "ASPasskeyRegistrationCredentialExtensionInput")]
pub use self::__ASPasskeyRegistrationCredentialExtensionInput::ASPasskeyRegistrationCredentialExtensionInput;
#[cfg(feature = "ASPasskeyRegistrationCredentialExtensionOutput")]
pub use self::__ASPasskeyRegistrationCredentialExtensionOutput::ASPasskeyRegistrationCredentialExtensionOutput;
#[cfg(feature = "ASPasswordCredential")]
pub use self::__ASPasswordCredential::ASPasswordCredential;
#[cfg(feature = "ASPasswordCredentialIdentity")]
pub use self::__ASPasswordCredentialIdentity::ASPasswordCredentialIdentity;
#[cfg(feature = "ASPasswordCredentialRequest")]
pub use self::__ASPasswordCredentialRequest::ASPasswordCredentialRequest;
#[cfg(all(
    feature = "ASAuthorizationCredential",
    feature = "ASPublicKeyCredential"
))]
pub use self::__ASPublicKeyCredential::ASPublicKeyCredential;
#[cfg(feature = "ASPublicKeyCredentialClientData")]
pub use self::__ASPublicKeyCredentialClientData::ASPublicKeyCredentialClientData;
#[cfg(feature = "ASPublicKeyCredentialClientData")]
pub use self::__ASPublicKeyCredentialClientData::ASPublicKeyCredentialClientDataCrossOriginValue;
#[cfg(feature = "ASSettingsHelper")]
pub use self::__ASSettingsHelper::ASSettingsHelper;
#[cfg(feature = "ASWebAuthenticationSession")]
pub use self::__ASWebAuthenticationSession::ASWebAuthenticationPresentationContextProviding;
#[cfg(feature = "ASWebAuthenticationSession")]
pub use self::__ASWebAuthenticationSession::ASWebAuthenticationSession;
#[cfg(all(feature = "ASWebAuthenticationSession", feature = "block2"))]
pub use self::__ASWebAuthenticationSession::ASWebAuthenticationSessionCompletionHandler;
#[cfg(feature = "ASWebAuthenticationSession")]
pub use self::__ASWebAuthenticationSession::ASWebAuthenticationSessionErrorCode;
#[cfg(feature = "ASWebAuthenticationSession")]
pub use self::__ASWebAuthenticationSession::ASWebAuthenticationSessionErrorDomain;
#[cfg(feature = "ASWebAuthenticationSessionCallback")]
pub use self::__ASWebAuthenticationSessionCallback::ASWebAuthenticationSessionCallback;
#[cfg(feature = "ASWebAuthenticationSessionRequest")]
pub use self::__ASWebAuthenticationSessionRequest::ASWebAuthenticationSessionRequest;
#[cfg(feature = "ASWebAuthenticationSessionRequest")]
pub use self::__ASWebAuthenticationSessionRequest::ASWebAuthenticationSessionRequestDelegate;
#[cfg(feature = "ASWebAuthenticationSessionWebBrowserSessionHandling")]
pub use self::__ASWebAuthenticationSessionWebBrowserSessionHandling::ASWebAuthenticationSessionWebBrowserSessionHandling;
#[cfg(feature = "ASWebAuthenticationSessionWebBrowserSessionManager")]
pub use self::__ASWebAuthenticationSessionWebBrowserSessionManager::ASWebAuthenticationSessionWebBrowserSessionManager;
