//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use core::ffi::*;
use core::ptr::NonNull;
use objc2::__framework_prelude::*;
use objc2_foundation::*;

use crate::*;

extern_class!(
    /// [Apple's documentation](https://developer.apple.com/documentation/coretelephony/ctcallcenter?language=objc)
    #[unsafe(super(NSObject))]
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub struct CTCallCenter;
);

extern_conformance!(
    unsafe impl NSObjectProtocol for CTCallCenter {}
);

impl CTCallCenter {
    extern_methods!(
        #[cfg(feature = "CTCall")]
        #[unsafe(method(currentCalls))]
        #[unsafe(method_family = none)]
        pub unsafe fn currentCalls(&self) -> Option<Retained<NSSet<CTCall>>>;

        #[cfg(all(feature = "CTCall", feature = "block2"))]
        #[unsafe(method(callEventHandler))]
        #[unsafe(method_family = none)]
        pub unsafe fn callEventHandler(&self) -> *mut block2::DynBlock<dyn Fn(NonNull<CTCall>)>;

        #[cfg(all(feature = "CTCall", feature = "block2"))]
        /// Setter for [`callEventHandler`][Self::callEventHandler].
        ///
        /// This is [copied][objc2_foundation::NSCopying::copy] when set.
        #[unsafe(method(setCallEventHandler:))]
        #[unsafe(method_family = none)]
        pub unsafe fn setCallEventHandler(
            &self,
            call_event_handler: Option<&block2::DynBlock<dyn Fn(NonNull<CTCall>)>>,
        );
    );
}

/// Methods declared on superclass `NSObject`.
impl CTCallCenter {
    extern_methods!(
        #[unsafe(method(init))]
        #[unsafe(method_family = init)]
        pub unsafe fn init(this: Allocated<Self>) -> Retained<Self>;

        #[unsafe(method(new))]
        #[unsafe(method_family = new)]
        pub unsafe fn new() -> Retained<Self>;
    );
}
