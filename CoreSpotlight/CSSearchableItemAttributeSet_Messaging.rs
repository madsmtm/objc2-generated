//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use core::ffi::*;
use core::ptr::NonNull;
use objc2::__framework_prelude::*;
use objc2_foundation::*;

use crate::*;

extern "C" {
    /// [Apple's documentation](https://developer.apple.com/documentation/corespotlight/csmailboxinbox?language=objc)
    pub static CSMailboxInbox: &'static NSString;
}

extern "C" {
    /// [Apple's documentation](https://developer.apple.com/documentation/corespotlight/csmailboxdrafts?language=objc)
    pub static CSMailboxDrafts: &'static NSString;
}

extern "C" {
    /// [Apple's documentation](https://developer.apple.com/documentation/corespotlight/csmailboxsent?language=objc)
    pub static CSMailboxSent: &'static NSString;
}

extern "C" {
    /// [Apple's documentation](https://developer.apple.com/documentation/corespotlight/csmailboxjunk?language=objc)
    pub static CSMailboxJunk: &'static NSString;
}

extern "C" {
    /// [Apple's documentation](https://developer.apple.com/documentation/corespotlight/csmailboxtrash?language=objc)
    pub static CSMailboxTrash: &'static NSString;
}

extern "C" {
    /// [Apple's documentation](https://developer.apple.com/documentation/corespotlight/csmailboxarchive?language=objc)
    pub static CSMailboxArchive: &'static NSString;
}

/// CSMessaging.
#[cfg(feature = "CSSearchableItemAttributeSet")]
impl CSSearchableItemAttributeSet {
    extern_methods!(
        #[unsafe(method(accountIdentifier))]
        #[unsafe(method_family = none)]
        pub unsafe fn accountIdentifier(&self) -> Option<Retained<NSString>>;

        /// Setter for [`accountIdentifier`][Self::accountIdentifier].
        ///
        /// This is [copied][objc2_foundation::NSCopying::copy] when set.
        #[unsafe(method(setAccountIdentifier:))]
        #[unsafe(method_family = none)]
        pub unsafe fn setAccountIdentifier(&self, account_identifier: Option<&NSString>);

        #[unsafe(method(accountHandles))]
        #[unsafe(method_family = none)]
        pub unsafe fn accountHandles(&self) -> Option<Retained<NSArray<NSString>>>;

        /// Setter for [`accountHandles`][Self::accountHandles].
        ///
        /// This is [copied][objc2_foundation::NSCopying::copy] when set.
        #[unsafe(method(setAccountHandles:))]
        #[unsafe(method_family = none)]
        pub unsafe fn setAccountHandles(&self, account_handles: Option<&NSArray<NSString>>);

        #[unsafe(method(HTMLContentData))]
        #[unsafe(method_family = none)]
        pub unsafe fn HTMLContentData(&self) -> Option<Retained<NSData>>;

        /// Setter for [`HTMLContentData`][Self::HTMLContentData].
        ///
        /// This is [copied][objc2_foundation::NSCopying::copy] when set.
        #[unsafe(method(setHTMLContentData:))]
        #[unsafe(method_family = none)]
        pub unsafe fn setHTMLContentData(&self, html_content_data: Option<&NSData>);

        #[unsafe(method(textContent))]
        #[unsafe(method_family = none)]
        pub unsafe fn textContent(&self) -> Option<Retained<NSString>>;

        /// Setter for [`textContent`][Self::textContent].
        ///
        /// This is [copied][objc2_foundation::NSCopying::copy] when set.
        #[unsafe(method(setTextContent:))]
        #[unsafe(method_family = none)]
        pub unsafe fn setTextContent(&self, text_content: Option<&NSString>);

        #[cfg(feature = "CSPerson")]
        #[unsafe(method(authors))]
        #[unsafe(method_family = none)]
        pub unsafe fn authors(&self) -> Option<Retained<NSArray<CSPerson>>>;

        #[cfg(feature = "CSPerson")]
        /// Setter for [`authors`][Self::authors].
        ///
        /// This is [copied][objc2_foundation::NSCopying::copy] when set.
        #[unsafe(method(setAuthors:))]
        #[unsafe(method_family = none)]
        pub unsafe fn setAuthors(&self, authors: Option<&NSArray<CSPerson>>);

        #[cfg(feature = "CSPerson")]
        #[unsafe(method(primaryRecipients))]
        #[unsafe(method_family = none)]
        pub unsafe fn primaryRecipients(&self) -> Option<Retained<NSArray<CSPerson>>>;

        #[cfg(feature = "CSPerson")]
        /// Setter for [`primaryRecipients`][Self::primaryRecipients].
        ///
        /// This is [copied][objc2_foundation::NSCopying::copy] when set.
        #[unsafe(method(setPrimaryRecipients:))]
        #[unsafe(method_family = none)]
        pub unsafe fn setPrimaryRecipients(&self, primary_recipients: Option<&NSArray<CSPerson>>);

        #[cfg(feature = "CSPerson")]
        #[unsafe(method(additionalRecipients))]
        #[unsafe(method_family = none)]
        pub unsafe fn additionalRecipients(&self) -> Option<Retained<NSArray<CSPerson>>>;

        #[cfg(feature = "CSPerson")]
        /// Setter for [`additionalRecipients`][Self::additionalRecipients].
        ///
        /// This is [copied][objc2_foundation::NSCopying::copy] when set.
        #[unsafe(method(setAdditionalRecipients:))]
        #[unsafe(method_family = none)]
        pub unsafe fn setAdditionalRecipients(
            &self,
            additional_recipients: Option<&NSArray<CSPerson>>,
        );

        #[cfg(feature = "CSPerson")]
        #[unsafe(method(hiddenAdditionalRecipients))]
        #[unsafe(method_family = none)]
        pub unsafe fn hiddenAdditionalRecipients(&self) -> Option<Retained<NSArray<CSPerson>>>;

        #[cfg(feature = "CSPerson")]
        /// Setter for [`hiddenAdditionalRecipients`][Self::hiddenAdditionalRecipients].
        ///
        /// This is [copied][objc2_foundation::NSCopying::copy] when set.
        #[unsafe(method(setHiddenAdditionalRecipients:))]
        #[unsafe(method_family = none)]
        pub unsafe fn setHiddenAdditionalRecipients(
            &self,
            hidden_additional_recipients: Option<&NSArray<CSPerson>>,
        );

        #[unsafe(method(emailHeaders))]
        #[unsafe(method_family = none)]
        pub unsafe fn emailHeaders(&self) -> Option<Retained<NSDictionary<NSString, NSArray>>>;

        /// Setter for [`emailHeaders`][Self::emailHeaders].
        ///
        /// This is [copied][objc2_foundation::NSCopying::copy] when set.
        #[unsafe(method(setEmailHeaders:))]
        #[unsafe(method_family = none)]
        pub unsafe fn setEmailHeaders(
            &self,
            email_headers: Option<&NSDictionary<NSString, NSArray>>,
        );

        #[unsafe(method(mailboxIdentifiers))]
        #[unsafe(method_family = none)]
        pub unsafe fn mailboxIdentifiers(&self) -> Option<Retained<NSArray<NSString>>>;

        /// Setter for [`mailboxIdentifiers`][Self::mailboxIdentifiers].
        ///
        /// This is [copied][objc2_foundation::NSCopying::copy] when set.
        #[unsafe(method(setMailboxIdentifiers:))]
        #[unsafe(method_family = none)]
        pub unsafe fn setMailboxIdentifiers(&self, mailbox_identifiers: Option<&NSArray<NSString>>);

        #[unsafe(method(authorNames))]
        #[unsafe(method_family = none)]
        pub unsafe fn authorNames(&self) -> Option<Retained<NSArray<NSString>>>;

        /// Setter for [`authorNames`][Self::authorNames].
        ///
        /// This is [copied][objc2_foundation::NSCopying::copy] when set.
        #[unsafe(method(setAuthorNames:))]
        #[unsafe(method_family = none)]
        pub unsafe fn setAuthorNames(&self, author_names: Option<&NSArray<NSString>>);

        #[unsafe(method(recipientNames))]
        #[unsafe(method_family = none)]
        pub unsafe fn recipientNames(&self) -> Option<Retained<NSArray<NSString>>>;

        /// Setter for [`recipientNames`][Self::recipientNames].
        ///
        /// This is [copied][objc2_foundation::NSCopying::copy] when set.
        #[unsafe(method(setRecipientNames:))]
        #[unsafe(method_family = none)]
        pub unsafe fn setRecipientNames(&self, recipient_names: Option<&NSArray<NSString>>);

        #[unsafe(method(authorEmailAddresses))]
        #[unsafe(method_family = none)]
        pub unsafe fn authorEmailAddresses(&self) -> Option<Retained<NSArray<NSString>>>;

        /// Setter for [`authorEmailAddresses`][Self::authorEmailAddresses].
        ///
        /// This is [copied][objc2_foundation::NSCopying::copy] when set.
        #[unsafe(method(setAuthorEmailAddresses:))]
        #[unsafe(method_family = none)]
        pub unsafe fn setAuthorEmailAddresses(
            &self,
            author_email_addresses: Option<&NSArray<NSString>>,
        );

        #[unsafe(method(recipientEmailAddresses))]
        #[unsafe(method_family = none)]
        pub unsafe fn recipientEmailAddresses(&self) -> Option<Retained<NSArray<NSString>>>;

        /// Setter for [`recipientEmailAddresses`][Self::recipientEmailAddresses].
        ///
        /// This is [copied][objc2_foundation::NSCopying::copy] when set.
        #[unsafe(method(setRecipientEmailAddresses:))]
        #[unsafe(method_family = none)]
        pub unsafe fn setRecipientEmailAddresses(
            &self,
            recipient_email_addresses: Option<&NSArray<NSString>>,
        );

        #[unsafe(method(authorAddresses))]
        #[unsafe(method_family = none)]
        pub unsafe fn authorAddresses(&self) -> Option<Retained<NSArray<NSString>>>;

        /// Setter for [`authorAddresses`][Self::authorAddresses].
        ///
        /// This is [copied][objc2_foundation::NSCopying::copy] when set.
        #[unsafe(method(setAuthorAddresses:))]
        #[unsafe(method_family = none)]
        pub unsafe fn setAuthorAddresses(&self, author_addresses: Option<&NSArray<NSString>>);

        #[unsafe(method(recipientAddresses))]
        #[unsafe(method_family = none)]
        pub unsafe fn recipientAddresses(&self) -> Option<Retained<NSArray<NSString>>>;

        /// Setter for [`recipientAddresses`][Self::recipientAddresses].
        ///
        /// This is [copied][objc2_foundation::NSCopying::copy] when set.
        #[unsafe(method(setRecipientAddresses:))]
        #[unsafe(method_family = none)]
        pub unsafe fn setRecipientAddresses(&self, recipient_addresses: Option<&NSArray<NSString>>);

        #[unsafe(method(phoneNumbers))]
        #[unsafe(method_family = none)]
        pub unsafe fn phoneNumbers(&self) -> Option<Retained<NSArray<NSString>>>;

        /// Setter for [`phoneNumbers`][Self::phoneNumbers].
        ///
        /// This is [copied][objc2_foundation::NSCopying::copy] when set.
        #[unsafe(method(setPhoneNumbers:))]
        #[unsafe(method_family = none)]
        pub unsafe fn setPhoneNumbers(&self, phone_numbers: Option<&NSArray<NSString>>);

        #[unsafe(method(emailAddresses))]
        #[unsafe(method_family = none)]
        pub unsafe fn emailAddresses(&self) -> Option<Retained<NSArray<NSString>>>;

        /// Setter for [`emailAddresses`][Self::emailAddresses].
        ///
        /// This is [copied][objc2_foundation::NSCopying::copy] when set.
        #[unsafe(method(setEmailAddresses:))]
        #[unsafe(method_family = none)]
        pub unsafe fn setEmailAddresses(&self, email_addresses: Option<&NSArray<NSString>>);

        #[unsafe(method(instantMessageAddresses))]
        #[unsafe(method_family = none)]
        pub unsafe fn instantMessageAddresses(&self) -> Option<Retained<NSArray<NSString>>>;

        /// Setter for [`instantMessageAddresses`][Self::instantMessageAddresses].
        ///
        /// This is [copied][objc2_foundation::NSCopying::copy] when set.
        #[unsafe(method(setInstantMessageAddresses:))]
        #[unsafe(method_family = none)]
        pub unsafe fn setInstantMessageAddresses(
            &self,
            instant_message_addresses: Option<&NSArray<NSString>>,
        );

        #[unsafe(method(isLikelyJunk))]
        #[unsafe(method_family = none)]
        pub unsafe fn isLikelyJunk(&self) -> Retained<NSNumber>;

        /// Setter for [`isLikelyJunk`][Self::isLikelyJunk].
        #[unsafe(method(setLikelyJunk:))]
        #[unsafe(method_family = none)]
        pub unsafe fn setLikelyJunk(&self, likely_junk: &NSNumber);

        #[unsafe(method(isPriority))]
        #[unsafe(method_family = none)]
        pub unsafe fn isPriority(&self) -> Option<Retained<NSNumber>>;

        #[unsafe(method(textContentSummary))]
        #[unsafe(method_family = none)]
        pub unsafe fn textContentSummary(&self) -> Option<Retained<NSString>>;

        #[unsafe(method(transcribedTextContent))]
        #[unsafe(method_family = none)]
        pub unsafe fn transcribedTextContent(&self) -> Option<Retained<NSString>>;

        /// Setter for [`transcribedTextContent`][Self::transcribedTextContent].
        #[unsafe(method(setTranscribedTextContent:))]
        #[unsafe(method_family = none)]
        pub unsafe fn setTranscribedTextContent(&self, transcribed_text_content: Option<&NSString>);
    );
}
