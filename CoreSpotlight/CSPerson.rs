//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use core::ffi::*;
use core::ptr::NonNull;
use objc2::__framework_prelude::*;
use objc2_foundation::*;

use crate::*;

extern_class!(
    /// [Apple's documentation](https://developer.apple.com/documentation/corespotlight/csperson?language=objc)
    #[unsafe(super(NSObject))]
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub struct CSPerson;
);

extern_conformance!(
    unsafe impl NSCoding for CSPerson {}
);

extern_conformance!(
    unsafe impl NSCopying for CSPerson {}
);

unsafe impl CopyingHelper for CSPerson {
    type Result = Self;
}

extern_conformance!(
    unsafe impl NSObjectProtocol for CSPerson {}
);

extern_conformance!(
    unsafe impl NSSecureCoding for CSPerson {}
);

impl CSPerson {
    extern_methods!(
        #[unsafe(method(initWithDisplayName:handles:handleIdentifier:))]
        #[unsafe(method_family = init)]
        pub unsafe fn initWithDisplayName_handles_handleIdentifier(
            this: Allocated<Self>,
            display_name: Option<&NSString>,
            handles: &NSArray<NSString>,
            handle_identifier: &NSString,
        ) -> Retained<Self>;

        #[unsafe(method(displayName))]
        #[unsafe(method_family = none)]
        pub unsafe fn displayName(&self) -> Option<Retained<NSString>>;

        #[unsafe(method(handles))]
        #[unsafe(method_family = none)]
        pub unsafe fn handles(&self) -> Retained<NSArray<NSString>>;

        #[unsafe(method(handleIdentifier))]
        #[unsafe(method_family = none)]
        pub unsafe fn handleIdentifier(&self) -> Retained<NSString>;

        #[unsafe(method(contactIdentifier))]
        #[unsafe(method_family = none)]
        pub unsafe fn contactIdentifier(&self) -> Option<Retained<NSString>>;

        /// Setter for [`contactIdentifier`][Self::contactIdentifier].
        ///
        /// This is [copied][objc2_foundation::NSCopying::copy] when set.
        #[unsafe(method(setContactIdentifier:))]
        #[unsafe(method_family = none)]
        pub unsafe fn setContactIdentifier(&self, contact_identifier: Option<&NSString>);
    );
}

/// Methods declared on superclass `NSObject`.
impl CSPerson {
    extern_methods!(
        #[unsafe(method(init))]
        #[unsafe(method_family = init)]
        pub unsafe fn init(this: Allocated<Self>) -> Retained<Self>;

        #[unsafe(method(new))]
        #[unsafe(method_family = new)]
        pub unsafe fn new() -> Retained<Self>;
    );
}
