//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use core::ffi::*;
use objc2::__framework_prelude::*;
use objc2_foundation::*;

use crate::*;

/// CSPlaces.
#[cfg(feature = "CSSearchableItemAttributeSet")]
impl CSSearchableItemAttributeSet {
    extern_methods!(
        #[unsafe(method(headline))]
        #[unsafe(method_family = none)]
        pub unsafe fn headline(&self) -> Option<Retained<NSString>>;

        /// Setter for [`headline`][Self::headline].
        ///
        /// This is [copied][objc2_foundation::NSCopying::copy] when set.
        #[unsafe(method(setHeadline:))]
        #[unsafe(method_family = none)]
        pub unsafe fn setHeadline(&self, headline: Option<&NSString>);

        #[unsafe(method(instructions))]
        #[unsafe(method_family = none)]
        pub unsafe fn instructions(&self) -> Option<Retained<NSString>>;

        /// Setter for [`instructions`][Self::instructions].
        ///
        /// This is [copied][objc2_foundation::NSCopying::copy] when set.
        #[unsafe(method(setInstructions:))]
        #[unsafe(method_family = none)]
        pub unsafe fn setInstructions(&self, instructions: Option<&NSString>);

        #[unsafe(method(thoroughfare))]
        #[unsafe(method_family = none)]
        pub unsafe fn thoroughfare(&self) -> Option<Retained<NSString>>;

        /// Setter for [`thoroughfare`][Self::thoroughfare].
        ///
        /// This is [copied][objc2_foundation::NSCopying::copy] when set.
        #[unsafe(method(setThoroughfare:))]
        #[unsafe(method_family = none)]
        pub unsafe fn setThoroughfare(&self, thoroughfare: Option<&NSString>);

        #[unsafe(method(subThoroughfare))]
        #[unsafe(method_family = none)]
        pub unsafe fn subThoroughfare(&self) -> Option<Retained<NSString>>;

        /// Setter for [`subThoroughfare`][Self::subThoroughfare].
        ///
        /// This is [copied][objc2_foundation::NSCopying::copy] when set.
        #[unsafe(method(setSubThoroughfare:))]
        #[unsafe(method_family = none)]
        pub unsafe fn setSubThoroughfare(&self, sub_thoroughfare: Option<&NSString>);

        #[unsafe(method(postalCode))]
        #[unsafe(method_family = none)]
        pub unsafe fn postalCode(&self) -> Option<Retained<NSString>>;

        /// Setter for [`postalCode`][Self::postalCode].
        ///
        /// This is [copied][objc2_foundation::NSCopying::copy] when set.
        #[unsafe(method(setPostalCode:))]
        #[unsafe(method_family = none)]
        pub unsafe fn setPostalCode(&self, postal_code: Option<&NSString>);

        #[unsafe(method(city))]
        #[unsafe(method_family = none)]
        pub unsafe fn city(&self) -> Option<Retained<NSString>>;

        /// Setter for [`city`][Self::city].
        ///
        /// This is [copied][objc2_foundation::NSCopying::copy] when set.
        #[unsafe(method(setCity:))]
        #[unsafe(method_family = none)]
        pub unsafe fn setCity(&self, city: Option<&NSString>);

        #[unsafe(method(stateOrProvince))]
        #[unsafe(method_family = none)]
        pub unsafe fn stateOrProvince(&self) -> Option<Retained<NSString>>;

        /// Setter for [`stateOrProvince`][Self::stateOrProvince].
        ///
        /// This is [copied][objc2_foundation::NSCopying::copy] when set.
        #[unsafe(method(setStateOrProvince:))]
        #[unsafe(method_family = none)]
        pub unsafe fn setStateOrProvince(&self, state_or_province: Option<&NSString>);

        #[unsafe(method(country))]
        #[unsafe(method_family = none)]
        pub unsafe fn country(&self) -> Option<Retained<NSString>>;

        /// Setter for [`country`][Self::country].
        ///
        /// This is [copied][objc2_foundation::NSCopying::copy] when set.
        #[unsafe(method(setCountry:))]
        #[unsafe(method_family = none)]
        pub unsafe fn setCountry(&self, country: Option<&NSString>);

        #[unsafe(method(fullyFormattedAddress))]
        #[unsafe(method_family = none)]
        pub unsafe fn fullyFormattedAddress(&self) -> Option<Retained<NSString>>;

        /// Setter for [`fullyFormattedAddress`][Self::fullyFormattedAddress].
        ///
        /// This is [copied][objc2_foundation::NSCopying::copy] when set.
        #[unsafe(method(setFullyFormattedAddress:))]
        #[unsafe(method_family = none)]
        pub unsafe fn setFullyFormattedAddress(&self, fully_formatted_address: Option<&NSString>);

        #[unsafe(method(altitude))]
        #[unsafe(method_family = none)]
        pub unsafe fn altitude(&self) -> Option<Retained<NSNumber>>;

        /// Setter for [`altitude`][Self::altitude].
        #[unsafe(method(setAltitude:))]
        #[unsafe(method_family = none)]
        pub unsafe fn setAltitude(&self, altitude: Option<&NSNumber>);

        #[unsafe(method(latitude))]
        #[unsafe(method_family = none)]
        pub unsafe fn latitude(&self) -> Option<Retained<NSNumber>>;

        /// Setter for [`latitude`][Self::latitude].
        #[unsafe(method(setLatitude:))]
        #[unsafe(method_family = none)]
        pub unsafe fn setLatitude(&self, latitude: Option<&NSNumber>);

        #[unsafe(method(longitude))]
        #[unsafe(method_family = none)]
        pub unsafe fn longitude(&self) -> Option<Retained<NSNumber>>;

        /// Setter for [`longitude`][Self::longitude].
        #[unsafe(method(setLongitude:))]
        #[unsafe(method_family = none)]
        pub unsafe fn setLongitude(&self, longitude: Option<&NSNumber>);

        #[unsafe(method(speed))]
        #[unsafe(method_family = none)]
        pub unsafe fn speed(&self) -> Option<Retained<NSNumber>>;

        /// Setter for [`speed`][Self::speed].
        #[unsafe(method(setSpeed:))]
        #[unsafe(method_family = none)]
        pub unsafe fn setSpeed(&self, speed: Option<&NSNumber>);

        #[unsafe(method(timestamp))]
        #[unsafe(method_family = none)]
        pub unsafe fn timestamp(&self) -> Option<Retained<NSDate>>;

        /// Setter for [`timestamp`][Self::timestamp].
        #[unsafe(method(setTimestamp:))]
        #[unsafe(method_family = none)]
        pub unsafe fn setTimestamp(&self, timestamp: Option<&NSDate>);

        #[unsafe(method(imageDirection))]
        #[unsafe(method_family = none)]
        pub unsafe fn imageDirection(&self) -> Option<Retained<NSNumber>>;

        /// Setter for [`imageDirection`][Self::imageDirection].
        #[unsafe(method(setImageDirection:))]
        #[unsafe(method_family = none)]
        pub unsafe fn setImageDirection(&self, image_direction: Option<&NSNumber>);

        #[unsafe(method(namedLocation))]
        #[unsafe(method_family = none)]
        pub unsafe fn namedLocation(&self) -> Option<Retained<NSString>>;

        /// Setter for [`namedLocation`][Self::namedLocation].
        ///
        /// This is [copied][objc2_foundation::NSCopying::copy] when set.
        #[unsafe(method(setNamedLocation:))]
        #[unsafe(method_family = none)]
        pub unsafe fn setNamedLocation(&self, named_location: Option<&NSString>);

        #[unsafe(method(GPSTrack))]
        #[unsafe(method_family = none)]
        pub unsafe fn GPSTrack(&self) -> Option<Retained<NSNumber>>;

        /// Setter for [`GPSTrack`][Self::GPSTrack].
        #[unsafe(method(setGPSTrack:))]
        #[unsafe(method_family = none)]
        pub unsafe fn setGPSTrack(&self, gps_track: Option<&NSNumber>);

        #[unsafe(method(GPSStatus))]
        #[unsafe(method_family = none)]
        pub unsafe fn GPSStatus(&self) -> Option<Retained<NSString>>;

        /// Setter for [`GPSStatus`][Self::GPSStatus].
        ///
        /// This is [copied][objc2_foundation::NSCopying::copy] when set.
        #[unsafe(method(setGPSStatus:))]
        #[unsafe(method_family = none)]
        pub unsafe fn setGPSStatus(&self, gps_status: Option<&NSString>);

        #[unsafe(method(GPSMeasureMode))]
        #[unsafe(method_family = none)]
        pub unsafe fn GPSMeasureMode(&self) -> Option<Retained<NSString>>;

        /// Setter for [`GPSMeasureMode`][Self::GPSMeasureMode].
        ///
        /// This is [copied][objc2_foundation::NSCopying::copy] when set.
        #[unsafe(method(setGPSMeasureMode:))]
        #[unsafe(method_family = none)]
        pub unsafe fn setGPSMeasureMode(&self, gps_measure_mode: Option<&NSString>);

        #[unsafe(method(GPSDOP))]
        #[unsafe(method_family = none)]
        pub unsafe fn GPSDOP(&self) -> Option<Retained<NSNumber>>;

        /// Setter for [`GPSDOP`][Self::GPSDOP].
        #[unsafe(method(setGPSDOP:))]
        #[unsafe(method_family = none)]
        pub unsafe fn setGPSDOP(&self, gpsdop: Option<&NSNumber>);

        #[unsafe(method(GPSMapDatum))]
        #[unsafe(method_family = none)]
        pub unsafe fn GPSMapDatum(&self) -> Option<Retained<NSString>>;

        /// Setter for [`GPSMapDatum`][Self::GPSMapDatum].
        ///
        /// This is [copied][objc2_foundation::NSCopying::copy] when set.
        #[unsafe(method(setGPSMapDatum:))]
        #[unsafe(method_family = none)]
        pub unsafe fn setGPSMapDatum(&self, gps_map_datum: Option<&NSString>);

        #[unsafe(method(GPSDestLatitude))]
        #[unsafe(method_family = none)]
        pub unsafe fn GPSDestLatitude(&self) -> Option<Retained<NSNumber>>;

        /// Setter for [`GPSDestLatitude`][Self::GPSDestLatitude].
        #[unsafe(method(setGPSDestLatitude:))]
        #[unsafe(method_family = none)]
        pub unsafe fn setGPSDestLatitude(&self, gps_dest_latitude: Option<&NSNumber>);

        #[unsafe(method(GPSDestLongitude))]
        #[unsafe(method_family = none)]
        pub unsafe fn GPSDestLongitude(&self) -> Option<Retained<NSNumber>>;

        /// Setter for [`GPSDestLongitude`][Self::GPSDestLongitude].
        #[unsafe(method(setGPSDestLongitude:))]
        #[unsafe(method_family = none)]
        pub unsafe fn setGPSDestLongitude(&self, gps_dest_longitude: Option<&NSNumber>);

        #[unsafe(method(GPSDestBearing))]
        #[unsafe(method_family = none)]
        pub unsafe fn GPSDestBearing(&self) -> Option<Retained<NSNumber>>;

        /// Setter for [`GPSDestBearing`][Self::GPSDestBearing].
        #[unsafe(method(setGPSDestBearing:))]
        #[unsafe(method_family = none)]
        pub unsafe fn setGPSDestBearing(&self, gps_dest_bearing: Option<&NSNumber>);

        #[unsafe(method(GPSDestDistance))]
        #[unsafe(method_family = none)]
        pub unsafe fn GPSDestDistance(&self) -> Option<Retained<NSNumber>>;

        /// Setter for [`GPSDestDistance`][Self::GPSDestDistance].
        #[unsafe(method(setGPSDestDistance:))]
        #[unsafe(method_family = none)]
        pub unsafe fn setGPSDestDistance(&self, gps_dest_distance: Option<&NSNumber>);

        #[unsafe(method(GPSProcessingMethod))]
        #[unsafe(method_family = none)]
        pub unsafe fn GPSProcessingMethod(&self) -> Option<Retained<NSString>>;

        /// Setter for [`GPSProcessingMethod`][Self::GPSProcessingMethod].
        ///
        /// This is [copied][objc2_foundation::NSCopying::copy] when set.
        #[unsafe(method(setGPSProcessingMethod:))]
        #[unsafe(method_family = none)]
        pub unsafe fn setGPSProcessingMethod(&self, gps_processing_method: Option<&NSString>);

        #[unsafe(method(GPSAreaInformation))]
        #[unsafe(method_family = none)]
        pub unsafe fn GPSAreaInformation(&self) -> Option<Retained<NSString>>;

        /// Setter for [`GPSAreaInformation`][Self::GPSAreaInformation].
        ///
        /// This is [copied][objc2_foundation::NSCopying::copy] when set.
        #[unsafe(method(setGPSAreaInformation:))]
        #[unsafe(method_family = none)]
        pub unsafe fn setGPSAreaInformation(&self, gps_area_information: Option<&NSString>);

        #[unsafe(method(GPSDateStamp))]
        #[unsafe(method_family = none)]
        pub unsafe fn GPSDateStamp(&self) -> Option<Retained<NSDate>>;

        /// Setter for [`GPSDateStamp`][Self::GPSDateStamp].
        #[unsafe(method(setGPSDateStamp:))]
        #[unsafe(method_family = none)]
        pub unsafe fn setGPSDateStamp(&self, gps_date_stamp: Option<&NSDate>);

        #[unsafe(method(GPSDifferental))]
        #[unsafe(method_family = none)]
        pub unsafe fn GPSDifferental(&self) -> Option<Retained<NSNumber>>;

        /// Setter for [`GPSDifferental`][Self::GPSDifferental].
        #[unsafe(method(setGPSDifferental:))]
        #[unsafe(method_family = none)]
        pub unsafe fn setGPSDifferental(&self, gps_differental: Option<&NSNumber>);
    );
}
