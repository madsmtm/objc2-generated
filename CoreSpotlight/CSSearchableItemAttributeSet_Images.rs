//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use core::ffi::*;
use objc2::__framework_prelude::*;
use objc2_foundation::*;

use crate::*;

/// CSImages.
#[cfg(feature = "CSSearchableItemAttributeSet")]
impl CSSearchableItemAttributeSet {
    extern_methods!(
        #[unsafe(method(pixelHeight))]
        #[unsafe(method_family = none)]
        pub unsafe fn pixelHeight(&self) -> Option<Retained<NSNumber>>;

        /// Setter for [`pixelHeight`][Self::pixelHeight].
        #[unsafe(method(setPixelHeight:))]
        #[unsafe(method_family = none)]
        pub unsafe fn setPixelHeight(&self, pixel_height: Option<&NSNumber>);

        #[unsafe(method(pixelWidth))]
        #[unsafe(method_family = none)]
        pub unsafe fn pixelWidth(&self) -> Option<Retained<NSNumber>>;

        /// Setter for [`pixelWidth`][Self::pixelWidth].
        #[unsafe(method(setPixelWidth:))]
        #[unsafe(method_family = none)]
        pub unsafe fn setPixelWidth(&self, pixel_width: Option<&NSNumber>);

        #[unsafe(method(pixelCount))]
        #[unsafe(method_family = none)]
        pub unsafe fn pixelCount(&self) -> Option<Retained<NSNumber>>;

        /// Setter for [`pixelCount`][Self::pixelCount].
        #[unsafe(method(setPixelCount:))]
        #[unsafe(method_family = none)]
        pub unsafe fn setPixelCount(&self, pixel_count: Option<&NSNumber>);

        #[unsafe(method(colorSpace))]
        #[unsafe(method_family = none)]
        pub unsafe fn colorSpace(&self) -> Option<Retained<NSString>>;

        /// Setter for [`colorSpace`][Self::colorSpace].
        ///
        /// This is [copied][objc2_foundation::NSCopying::copy] when set.
        #[unsafe(method(setColorSpace:))]
        #[unsafe(method_family = none)]
        pub unsafe fn setColorSpace(&self, color_space: Option<&NSString>);

        #[unsafe(method(bitsPerSample))]
        #[unsafe(method_family = none)]
        pub unsafe fn bitsPerSample(&self) -> Option<Retained<NSNumber>>;

        /// Setter for [`bitsPerSample`][Self::bitsPerSample].
        #[unsafe(method(setBitsPerSample:))]
        #[unsafe(method_family = none)]
        pub unsafe fn setBitsPerSample(&self, bits_per_sample: Option<&NSNumber>);

        #[unsafe(method(isFlashOn))]
        #[unsafe(method_family = none)]
        pub unsafe fn isFlashOn(&self) -> Option<Retained<NSNumber>>;

        /// Setter for [`isFlashOn`][Self::isFlashOn].
        #[unsafe(method(setFlashOn:))]
        #[unsafe(method_family = none)]
        pub unsafe fn setFlashOn(&self, flash_on: Option<&NSNumber>);

        #[unsafe(method(focalLength))]
        #[unsafe(method_family = none)]
        pub unsafe fn focalLength(&self) -> Option<Retained<NSNumber>>;

        /// Setter for [`focalLength`][Self::focalLength].
        #[unsafe(method(setFocalLength:))]
        #[unsafe(method_family = none)]
        pub unsafe fn setFocalLength(&self, focal_length: Option<&NSNumber>);

        #[unsafe(method(isFocalLength35mm))]
        #[unsafe(method_family = none)]
        pub unsafe fn isFocalLength35mm(&self) -> Option<Retained<NSNumber>>;

        /// Setter for [`isFocalLength35mm`][Self::isFocalLength35mm].
        #[unsafe(method(setFocalLength35mm:))]
        #[unsafe(method_family = none)]
        pub unsafe fn setFocalLength35mm(&self, focal_length35mm: Option<&NSNumber>);

        #[unsafe(method(acquisitionMake))]
        #[unsafe(method_family = none)]
        pub unsafe fn acquisitionMake(&self) -> Option<Retained<NSString>>;

        /// Setter for [`acquisitionMake`][Self::acquisitionMake].
        ///
        /// This is [copied][objc2_foundation::NSCopying::copy] when set.
        #[unsafe(method(setAcquisitionMake:))]
        #[unsafe(method_family = none)]
        pub unsafe fn setAcquisitionMake(&self, acquisition_make: Option<&NSString>);

        #[unsafe(method(acquisitionModel))]
        #[unsafe(method_family = none)]
        pub unsafe fn acquisitionModel(&self) -> Option<Retained<NSString>>;

        /// Setter for [`acquisitionModel`][Self::acquisitionModel].
        ///
        /// This is [copied][objc2_foundation::NSCopying::copy] when set.
        #[unsafe(method(setAcquisitionModel:))]
        #[unsafe(method_family = none)]
        pub unsafe fn setAcquisitionModel(&self, acquisition_model: Option<&NSString>);

        #[unsafe(method(cameraOwner))]
        #[unsafe(method_family = none)]
        pub unsafe fn cameraOwner(&self) -> Option<Retained<NSString>>;

        /// Setter for [`cameraOwner`][Self::cameraOwner].
        ///
        /// This is [copied][objc2_foundation::NSCopying::copy] when set.
        #[unsafe(method(setCameraOwner:))]
        #[unsafe(method_family = none)]
        pub unsafe fn setCameraOwner(&self, camera_owner: Option<&NSString>);

        #[unsafe(method(lensModel))]
        #[unsafe(method_family = none)]
        pub unsafe fn lensModel(&self) -> Option<Retained<NSString>>;

        /// Setter for [`lensModel`][Self::lensModel].
        ///
        /// This is [copied][objc2_foundation::NSCopying::copy] when set.
        #[unsafe(method(setLensModel:))]
        #[unsafe(method_family = none)]
        pub unsafe fn setLensModel(&self, lens_model: Option<&NSString>);

        #[unsafe(method(ISOSpeed))]
        #[unsafe(method_family = none)]
        pub unsafe fn ISOSpeed(&self) -> Option<Retained<NSNumber>>;

        /// Setter for [`ISOSpeed`][Self::ISOSpeed].
        #[unsafe(method(setISOSpeed:))]
        #[unsafe(method_family = none)]
        pub unsafe fn setISOSpeed(&self, iso_speed: Option<&NSNumber>);

        #[unsafe(method(orientation))]
        #[unsafe(method_family = none)]
        pub unsafe fn orientation(&self) -> Option<Retained<NSNumber>>;

        /// Setter for [`orientation`][Self::orientation].
        #[unsafe(method(setOrientation:))]
        #[unsafe(method_family = none)]
        pub unsafe fn setOrientation(&self, orientation: Option<&NSNumber>);

        #[unsafe(method(layerNames))]
        #[unsafe(method_family = none)]
        pub unsafe fn layerNames(&self) -> Option<Retained<NSArray<NSString>>>;

        /// Setter for [`layerNames`][Self::layerNames].
        ///
        /// This is [copied][objc2_foundation::NSCopying::copy] when set.
        #[unsafe(method(setLayerNames:))]
        #[unsafe(method_family = none)]
        pub unsafe fn setLayerNames(&self, layer_names: Option<&NSArray<NSString>>);

        #[unsafe(method(whiteBalance))]
        #[unsafe(method_family = none)]
        pub unsafe fn whiteBalance(&self) -> Option<Retained<NSNumber>>;

        /// Setter for [`whiteBalance`][Self::whiteBalance].
        #[unsafe(method(setWhiteBalance:))]
        #[unsafe(method_family = none)]
        pub unsafe fn setWhiteBalance(&self, white_balance: Option<&NSNumber>);

        #[unsafe(method(aperture))]
        #[unsafe(method_family = none)]
        pub unsafe fn aperture(&self) -> Option<Retained<NSNumber>>;

        /// Setter for [`aperture`][Self::aperture].
        #[unsafe(method(setAperture:))]
        #[unsafe(method_family = none)]
        pub unsafe fn setAperture(&self, aperture: Option<&NSNumber>);

        #[unsafe(method(profileName))]
        #[unsafe(method_family = none)]
        pub unsafe fn profileName(&self) -> Option<Retained<NSString>>;

        /// Setter for [`profileName`][Self::profileName].
        ///
        /// This is [copied][objc2_foundation::NSCopying::copy] when set.
        #[unsafe(method(setProfileName:))]
        #[unsafe(method_family = none)]
        pub unsafe fn setProfileName(&self, profile_name: Option<&NSString>);

        #[unsafe(method(resolutionWidthDPI))]
        #[unsafe(method_family = none)]
        pub unsafe fn resolutionWidthDPI(&self) -> Option<Retained<NSNumber>>;

        /// Setter for [`resolutionWidthDPI`][Self::resolutionWidthDPI].
        #[unsafe(method(setResolutionWidthDPI:))]
        #[unsafe(method_family = none)]
        pub unsafe fn setResolutionWidthDPI(&self, resolution_width_dpi: Option<&NSNumber>);

        #[unsafe(method(resolutionHeightDPI))]
        #[unsafe(method_family = none)]
        pub unsafe fn resolutionHeightDPI(&self) -> Option<Retained<NSNumber>>;

        /// Setter for [`resolutionHeightDPI`][Self::resolutionHeightDPI].
        #[unsafe(method(setResolutionHeightDPI:))]
        #[unsafe(method_family = none)]
        pub unsafe fn setResolutionHeightDPI(&self, resolution_height_dpi: Option<&NSNumber>);

        #[unsafe(method(exposureMode))]
        #[unsafe(method_family = none)]
        pub unsafe fn exposureMode(&self) -> Option<Retained<NSNumber>>;

        /// Setter for [`exposureMode`][Self::exposureMode].
        #[unsafe(method(setExposureMode:))]
        #[unsafe(method_family = none)]
        pub unsafe fn setExposureMode(&self, exposure_mode: Option<&NSNumber>);

        #[unsafe(method(exposureTime))]
        #[unsafe(method_family = none)]
        pub unsafe fn exposureTime(&self) -> Option<Retained<NSNumber>>;

        /// Setter for [`exposureTime`][Self::exposureTime].
        #[unsafe(method(setExposureTime:))]
        #[unsafe(method_family = none)]
        pub unsafe fn setExposureTime(&self, exposure_time: Option<&NSNumber>);

        #[unsafe(method(EXIFVersion))]
        #[unsafe(method_family = none)]
        pub unsafe fn EXIFVersion(&self) -> Option<Retained<NSString>>;

        /// Setter for [`EXIFVersion`][Self::EXIFVersion].
        ///
        /// This is [copied][objc2_foundation::NSCopying::copy] when set.
        #[unsafe(method(setEXIFVersion:))]
        #[unsafe(method_family = none)]
        pub unsafe fn setEXIFVersion(&self, exif_version: Option<&NSString>);

        #[unsafe(method(EXIFGPSVersion))]
        #[unsafe(method_family = none)]
        pub unsafe fn EXIFGPSVersion(&self) -> Option<Retained<NSString>>;

        /// Setter for [`EXIFGPSVersion`][Self::EXIFGPSVersion].
        ///
        /// This is [copied][objc2_foundation::NSCopying::copy] when set.
        #[unsafe(method(setEXIFGPSVersion:))]
        #[unsafe(method_family = none)]
        pub unsafe fn setEXIFGPSVersion(&self, exifgps_version: Option<&NSString>);

        #[unsafe(method(hasAlphaChannel))]
        #[unsafe(method_family = none)]
        pub unsafe fn hasAlphaChannel(&self) -> Option<Retained<NSNumber>>;

        /// Setter for [`hasAlphaChannel`][Self::hasAlphaChannel].
        #[unsafe(method(setHasAlphaChannel:))]
        #[unsafe(method_family = none)]
        pub unsafe fn setHasAlphaChannel(&self, has_alpha_channel: Option<&NSNumber>);

        #[unsafe(method(isRedEyeOn))]
        #[unsafe(method_family = none)]
        pub unsafe fn isRedEyeOn(&self) -> Option<Retained<NSNumber>>;

        /// Setter for [`isRedEyeOn`][Self::isRedEyeOn].
        #[unsafe(method(setRedEyeOn:))]
        #[unsafe(method_family = none)]
        pub unsafe fn setRedEyeOn(&self, red_eye_on: Option<&NSNumber>);

        #[unsafe(method(meteringMode))]
        #[unsafe(method_family = none)]
        pub unsafe fn meteringMode(&self) -> Option<Retained<NSString>>;

        /// Setter for [`meteringMode`][Self::meteringMode].
        ///
        /// This is [copied][objc2_foundation::NSCopying::copy] when set.
        #[unsafe(method(setMeteringMode:))]
        #[unsafe(method_family = none)]
        pub unsafe fn setMeteringMode(&self, metering_mode: Option<&NSString>);

        #[unsafe(method(maxAperture))]
        #[unsafe(method_family = none)]
        pub unsafe fn maxAperture(&self) -> Option<Retained<NSNumber>>;

        /// Setter for [`maxAperture`][Self::maxAperture].
        #[unsafe(method(setMaxAperture:))]
        #[unsafe(method_family = none)]
        pub unsafe fn setMaxAperture(&self, max_aperture: Option<&NSNumber>);

        #[unsafe(method(fNumber))]
        #[unsafe(method_family = none)]
        pub unsafe fn fNumber(&self) -> Option<Retained<NSNumber>>;

        /// Setter for [`fNumber`][Self::fNumber].
        #[unsafe(method(setFNumber:))]
        #[unsafe(method_family = none)]
        pub unsafe fn setFNumber(&self, f_number: Option<&NSNumber>);

        #[unsafe(method(exposureProgram))]
        #[unsafe(method_family = none)]
        pub unsafe fn exposureProgram(&self) -> Option<Retained<NSString>>;

        /// Setter for [`exposureProgram`][Self::exposureProgram].
        ///
        /// This is [copied][objc2_foundation::NSCopying::copy] when set.
        #[unsafe(method(setExposureProgram:))]
        #[unsafe(method_family = none)]
        pub unsafe fn setExposureProgram(&self, exposure_program: Option<&NSString>);

        #[unsafe(method(exposureTimeString))]
        #[unsafe(method_family = none)]
        pub unsafe fn exposureTimeString(&self) -> Option<Retained<NSString>>;

        /// Setter for [`exposureTimeString`][Self::exposureTimeString].
        ///
        /// This is [copied][objc2_foundation::NSCopying::copy] when set.
        #[unsafe(method(setExposureTimeString:))]
        #[unsafe(method_family = none)]
        pub unsafe fn setExposureTimeString(&self, exposure_time_string: Option<&NSString>);
    );
}
