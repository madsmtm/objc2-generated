//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use core::ffi::*;
use core::ptr::NonNull;
use objc2::__framework_prelude::*;
use objc2_foundation::*;

use crate::*;

/// CSDocuments.
#[cfg(feature = "CSSearchableItemAttributeSet")]
impl CSSearchableItemAttributeSet {
    extern_methods!(
        #[unsafe(method(moveFrom:))]
        #[unsafe(method_family = none)]
        pub unsafe fn moveFrom(&self, source_attribute_set: &CSSearchableItemAttributeSet);

        /// Subject of the this item.
        #[unsafe(method(subject))]
        #[unsafe(method_family = none)]
        pub unsafe fn subject(&self) -> Option<Retained<NSString>>;

        /// Setter for [`subject`][Self::subject].
        ///
        /// This is [copied][objc2_foundation::NSCopying::copy] when set.
        #[unsafe(method(setSubject:))]
        #[unsafe(method_family = none)]
        pub unsafe fn setSubject(&self, subject: Option<&NSString>);

        #[unsafe(method(theme))]
        #[unsafe(method_family = none)]
        pub unsafe fn theme(&self) -> Option<Retained<NSString>>;

        /// Setter for [`theme`][Self::theme].
        ///
        /// This is [copied][objc2_foundation::NSCopying::copy] when set.
        #[unsafe(method(setTheme:))]
        #[unsafe(method_family = none)]
        pub unsafe fn setTheme(&self, theme: Option<&NSString>);

        #[unsafe(method(contentDescription))]
        #[unsafe(method_family = none)]
        pub unsafe fn contentDescription(&self) -> Option<Retained<NSString>>;

        /// Setter for [`contentDescription`][Self::contentDescription].
        ///
        /// This is [copied][objc2_foundation::NSCopying::copy] when set.
        #[unsafe(method(setContentDescription:))]
        #[unsafe(method_family = none)]
        pub unsafe fn setContentDescription(&self, content_description: Option<&NSString>);

        #[unsafe(method(identifier))]
        #[unsafe(method_family = none)]
        pub unsafe fn identifier(&self) -> Option<Retained<NSString>>;

        /// Setter for [`identifier`][Self::identifier].
        ///
        /// This is [copied][objc2_foundation::NSCopying::copy] when set.
        #[unsafe(method(setIdentifier:))]
        #[unsafe(method_family = none)]
        pub unsafe fn setIdentifier(&self, identifier: Option<&NSString>);

        #[unsafe(method(audiences))]
        #[unsafe(method_family = none)]
        pub unsafe fn audiences(&self) -> Option<Retained<NSArray<NSString>>>;

        /// Setter for [`audiences`][Self::audiences].
        ///
        /// This is [copied][objc2_foundation::NSCopying::copy] when set.
        #[unsafe(method(setAudiences:))]
        #[unsafe(method_family = none)]
        pub unsafe fn setAudiences(&self, audiences: Option<&NSArray<NSString>>);

        #[unsafe(method(fileSize))]
        #[unsafe(method_family = none)]
        pub unsafe fn fileSize(&self) -> Option<Retained<NSNumber>>;

        /// Setter for [`fileSize`][Self::fileSize].
        #[unsafe(method(setFileSize:))]
        #[unsafe(method_family = none)]
        pub unsafe fn setFileSize(&self, file_size: Option<&NSNumber>);

        #[unsafe(method(pageCount))]
        #[unsafe(method_family = none)]
        pub unsafe fn pageCount(&self) -> Option<Retained<NSNumber>>;

        /// Setter for [`pageCount`][Self::pageCount].
        #[unsafe(method(setPageCount:))]
        #[unsafe(method_family = none)]
        pub unsafe fn setPageCount(&self, page_count: Option<&NSNumber>);

        #[unsafe(method(pageWidth))]
        #[unsafe(method_family = none)]
        pub unsafe fn pageWidth(&self) -> Option<Retained<NSNumber>>;

        /// Setter for [`pageWidth`][Self::pageWidth].
        #[unsafe(method(setPageWidth:))]
        #[unsafe(method_family = none)]
        pub unsafe fn setPageWidth(&self, page_width: Option<&NSNumber>);

        #[unsafe(method(pageHeight))]
        #[unsafe(method_family = none)]
        pub unsafe fn pageHeight(&self) -> Option<Retained<NSNumber>>;

        /// Setter for [`pageHeight`][Self::pageHeight].
        #[unsafe(method(setPageHeight:))]
        #[unsafe(method_family = none)]
        pub unsafe fn setPageHeight(&self, page_height: Option<&NSNumber>);

        #[unsafe(method(securityMethod))]
        #[unsafe(method_family = none)]
        pub unsafe fn securityMethod(&self) -> Option<Retained<NSString>>;

        /// Setter for [`securityMethod`][Self::securityMethod].
        #[unsafe(method(setSecurityMethod:))]
        #[unsafe(method_family = none)]
        pub unsafe fn setSecurityMethod(&self, security_method: Option<&NSString>);

        #[unsafe(method(creator))]
        #[unsafe(method_family = none)]
        pub unsafe fn creator(&self) -> Option<Retained<NSString>>;

        /// Setter for [`creator`][Self::creator].
        ///
        /// This is [copied][objc2_foundation::NSCopying::copy] when set.
        #[unsafe(method(setCreator:))]
        #[unsafe(method_family = none)]
        pub unsafe fn setCreator(&self, creator: Option<&NSString>);

        #[unsafe(method(encodingApplications))]
        #[unsafe(method_family = none)]
        pub unsafe fn encodingApplications(&self) -> Option<Retained<NSArray<NSString>>>;

        /// Setter for [`encodingApplications`][Self::encodingApplications].
        ///
        /// This is [copied][objc2_foundation::NSCopying::copy] when set.
        #[unsafe(method(setEncodingApplications:))]
        #[unsafe(method_family = none)]
        pub unsafe fn setEncodingApplications(
            &self,
            encoding_applications: Option<&NSArray<NSString>>,
        );

        #[unsafe(method(kind))]
        #[unsafe(method_family = none)]
        pub unsafe fn kind(&self) -> Option<Retained<NSString>>;

        /// Setter for [`kind`][Self::kind].
        ///
        /// This is [copied][objc2_foundation::NSCopying::copy] when set.
        #[unsafe(method(setKind:))]
        #[unsafe(method_family = none)]
        pub unsafe fn setKind(&self, kind: Option<&NSString>);

        #[unsafe(method(fontNames))]
        #[unsafe(method_family = none)]
        pub unsafe fn fontNames(&self) -> Option<Retained<NSArray<NSString>>>;

        /// Setter for [`fontNames`][Self::fontNames].
        ///
        /// This is [copied][objc2_foundation::NSCopying::copy] when set.
        #[unsafe(method(setFontNames:))]
        #[unsafe(method_family = none)]
        pub unsafe fn setFontNames(&self, font_names: Option<&NSArray<NSString>>);
    );
}
