//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use core::ffi::*;
use core::ptr::NonNull;
use objc2::__framework_prelude::*;
#[cfg(feature = "objc2-core-foundation")]
use objc2_core_foundation::*;
use objc2_foundation::*;
#[cfg(feature = "objc2-quartz-core")]
use objc2_quartz_core::*;
use objc2_ui_kit::*;

use crate::*;

extern_class!(
    /// TVPosterView is a lockup view specializing in presenting an image and optional title and subtitle labels.
    ///
    /// The framework provides system default appearance and behavior, including the optimal .focusSizeIncrease, which is calculated based on the .image. Overriding .focusSizeIncrease has no visible effect.
    ///
    /// See also [Apple's documentation](https://developer.apple.com/documentation/tvuikit/tvposterview?language=objc)
    #[unsafe(super(TVLockupView, UIControl, UIView, UIResponder, NSObject))]
    #[derive(Debug, PartialEq, Eq, Hash)]
    #[cfg(feature = "TVLockupView")]
    pub struct TVPosterView;
);

#[cfg(all(feature = "TVLockupView", feature = "objc2-quartz-core"))]
extern_conformance!(
    unsafe impl CALayerDelegate for TVPosterView {}
);

#[cfg(feature = "TVLockupView")]
extern_conformance!(
    unsafe impl NSCoding for TVPosterView {}
);

#[cfg(feature = "TVLockupView")]
extern_conformance!(
    unsafe impl NSObjectProtocol for TVPosterView {}
);

#[cfg(feature = "TVLockupView")]
extern_conformance!(
    unsafe impl UIAppearance for TVPosterView {}
);

#[cfg(feature = "TVLockupView")]
extern_conformance!(
    unsafe impl UIAppearanceContainer for TVPosterView {}
);

#[cfg(feature = "TVLockupView")]
extern_conformance!(
    unsafe impl UICoordinateSpace for TVPosterView {}
);

#[cfg(feature = "TVLockupView")]
extern_conformance!(
    unsafe impl UIDynamicItem for TVPosterView {}
);

#[cfg(feature = "TVLockupView")]
extern_conformance!(
    unsafe impl UIFocusEnvironment for TVPosterView {}
);

#[cfg(feature = "TVLockupView")]
extern_conformance!(
    unsafe impl UIFocusItem for TVPosterView {}
);

#[cfg(feature = "TVLockupView")]
extern_conformance!(
    unsafe impl UIFocusItemContainer for TVPosterView {}
);

#[cfg(feature = "TVLockupView")]
extern_conformance!(
    unsafe impl UIResponderStandardEditActions for TVPosterView {}
);

#[cfg(feature = "TVLockupView")]
extern_conformance!(
    unsafe impl UITraitEnvironment for TVPosterView {}
);

#[cfg(feature = "TVLockupView")]
impl TVPosterView {
    extern_methods!(
        /// A convenience initializer.
        ///
        /// Parameter `image`: The image to become the main content.
        #[unsafe(method(initWithImage:))]
        #[unsafe(method_family = init)]
        pub unsafe fn initWithImage(
            this: Allocated<Self>,
            image: Option<&UIImage>,
        ) -> Retained<Self>;

        /// The image.
        ///
        /// When no frame or contentSize is explicitly set on the poster view, its size will be determined by the natural size of this image.
        #[unsafe(method(image))]
        #[unsafe(method_family = none)]
        pub unsafe fn image(&self) -> Option<Retained<UIImage>>;

        /// Setter for [`image`][Self::image].
        #[unsafe(method(setImage:))]
        #[unsafe(method_family = none)]
        pub unsafe fn setImage(&self, image: Option<&UIImage>);

        /// The image view.
        ///
        /// Avoid setting an image directly on the image view. Instead, always use the .image property of the poster view.
        #[unsafe(method(imageView))]
        #[unsafe(method_family = none)]
        pub unsafe fn imageView(&self) -> Retained<UIImageView>;

        /// The optional title.
        #[unsafe(method(title))]
        #[unsafe(method_family = none)]
        pub unsafe fn title(&self) -> Option<Retained<NSString>>;

        /// Setter for [`title`][Self::title].
        #[unsafe(method(setTitle:))]
        #[unsafe(method_family = none)]
        pub unsafe fn setTitle(&self, title: Option<&NSString>);

        /// The optional subtitle.
        #[unsafe(method(subtitle))]
        #[unsafe(method_family = none)]
        pub unsafe fn subtitle(&self) -> Option<Retained<NSString>>;

        /// Setter for [`subtitle`][Self::subtitle].
        #[unsafe(method(setSubtitle:))]
        #[unsafe(method_family = none)]
        pub unsafe fn setSubtitle(&self, subtitle: Option<&NSString>);
    );
}

/// Methods declared on superclass `UIControl`.
#[cfg(feature = "TVLockupView")]
impl TVPosterView {
    extern_methods!(
        #[cfg(feature = "objc2-core-foundation")]
        #[unsafe(method(initWithFrame:))]
        #[unsafe(method_family = init)]
        pub unsafe fn initWithFrame(this: Allocated<Self>, frame: CGRect) -> Retained<Self>;

        #[unsafe(method(initWithCoder:))]
        #[unsafe(method_family = init)]
        pub unsafe fn initWithCoder(
            this: Allocated<Self>,
            coder: &NSCoder,
        ) -> Option<Retained<Self>>;

        #[cfg(feature = "objc2-core-foundation")]
        /// Initializes the control and adds primaryAction for the UIControlEventPrimaryActionTriggered control event. Subclasses of UIControl may alter or add behaviors around the usage of primaryAction, see subclass documentation of this initializer for additional information.
        #[unsafe(method(initWithFrame:primaryAction:))]
        #[unsafe(method_family = init)]
        pub unsafe fn initWithFrame_primaryAction(
            this: Allocated<Self>,
            frame: CGRect,
            primary_action: Option<&UIAction>,
        ) -> Retained<Self>;
    );
}

/// Methods declared on superclass `UIView`.
#[cfg(feature = "TVLockupView")]
impl TVPosterView {
    extern_methods!(
        #[unsafe(method(init))]
        #[unsafe(method_family = init)]
        pub unsafe fn init(this: Allocated<Self>) -> Retained<Self>;
    );
}

/// Methods declared on superclass `NSObject`.
#[cfg(feature = "TVLockupView")]
impl TVPosterView {
    extern_methods!(
        #[unsafe(method(new))]
        #[unsafe(method_family = new)]
        pub unsafe fn new(mtm: MainThreadMarker) -> Retained<Self>;
    );
}
