//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use core::ffi::*;
use core::ptr::NonNull;
use objc2::__framework_prelude::*;
#[cfg(feature = "objc2-core-foundation")]
use objc2_core_foundation::*;
use objc2_foundation::*;
#[cfg(feature = "objc2-quartz-core")]
use objc2_quartz_core::*;
use objc2_ui_kit::*;

use crate::*;

extern_class!(
    /// A header or footer view to be used in TVLockupView.
    ///
    /// See also [Apple's documentation](https://developer.apple.com/documentation/tvuikit/tvlockupheaderfooterview?language=objc)
    #[unsafe(super(UIView, UIResponder, NSObject))]
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub struct TVLockupHeaderFooterView;
);

#[cfg(feature = "objc2-quartz-core")]
extern_conformance!(
    unsafe impl CALayerDelegate for TVLockupHeaderFooterView {}
);

extern_conformance!(
    unsafe impl NSCoding for TVLockupHeaderFooterView {}
);

extern_conformance!(
    unsafe impl NSObjectProtocol for TVLockupHeaderFooterView {}
);

#[cfg(feature = "TVLockupView")]
extern_conformance!(
    unsafe impl TVLockupViewComponent for TVLockupHeaderFooterView {}
);

extern_conformance!(
    unsafe impl UIAppearance for TVLockupHeaderFooterView {}
);

extern_conformance!(
    unsafe impl UIAppearanceContainer for TVLockupHeaderFooterView {}
);

extern_conformance!(
    unsafe impl UICoordinateSpace for TVLockupHeaderFooterView {}
);

extern_conformance!(
    unsafe impl UIDynamicItem for TVLockupHeaderFooterView {}
);

extern_conformance!(
    unsafe impl UIFocusEnvironment for TVLockupHeaderFooterView {}
);

extern_conformance!(
    unsafe impl UIFocusItem for TVLockupHeaderFooterView {}
);

extern_conformance!(
    unsafe impl UIFocusItemContainer for TVLockupHeaderFooterView {}
);

extern_conformance!(
    unsafe impl UIResponderStandardEditActions for TVLockupHeaderFooterView {}
);

extern_conformance!(
    unsafe impl UITraitEnvironment for TVLockupHeaderFooterView {}
);

impl TVLockupHeaderFooterView {
    extern_methods!(
        #[unsafe(method(titleLabel))]
        #[unsafe(method_family = none)]
        pub unsafe fn titleLabel(&self) -> Option<Retained<UILabel>>;

        #[unsafe(method(subtitleLabel))]
        #[unsafe(method_family = none)]
        pub unsafe fn subtitleLabel(&self) -> Option<Retained<UILabel>>;

        /// Determines whether headerFooterView should be hidden when its ancestor is not in focus
        ///
        /// It will always be shown when in focus regardless of this setting.
        #[unsafe(method(showsOnlyWhenAncestorFocused))]
        #[unsafe(method_family = none)]
        pub unsafe fn showsOnlyWhenAncestorFocused(&self) -> bool;

        /// Setter for [`showsOnlyWhenAncestorFocused`][Self::showsOnlyWhenAncestorFocused].
        #[unsafe(method(setShowsOnlyWhenAncestorFocused:))]
        #[unsafe(method_family = none)]
        pub unsafe fn setShowsOnlyWhenAncestorFocused(
            &self,
            shows_only_when_ancestor_focused: bool,
        );
    );
}

/// Methods declared on superclass `UIView`.
impl TVLockupHeaderFooterView {
    extern_methods!(
        #[cfg(feature = "objc2-core-foundation")]
        #[unsafe(method(initWithFrame:))]
        #[unsafe(method_family = init)]
        pub unsafe fn initWithFrame(this: Allocated<Self>, frame: CGRect) -> Retained<Self>;

        #[unsafe(method(initWithCoder:))]
        #[unsafe(method_family = init)]
        pub unsafe fn initWithCoder(
            this: Allocated<Self>,
            coder: &NSCoder,
        ) -> Option<Retained<Self>>;

        #[unsafe(method(init))]
        #[unsafe(method_family = init)]
        pub unsafe fn init(this: Allocated<Self>) -> Retained<Self>;
    );
}

/// Methods declared on superclass `NSObject`.
impl TVLockupHeaderFooterView {
    extern_methods!(
        #[unsafe(method(new))]
        #[unsafe(method_family = new)]
        pub unsafe fn new(mtm: MainThreadMarker) -> Retained<Self>;
    );
}
