//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use core::ffi::*;
use core::ptr::NonNull;
use objc2::__framework_prelude::*;
#[cfg(feature = "objc2-core-foundation")]
use objc2_core_foundation::*;
use objc2_foundation::*;
#[cfg(feature = "objc2-quartz-core")]
use objc2_quartz_core::*;
use objc2_ui_kit::*;

use crate::*;

extern_class!(
    /// TVMonogramView is a lockup view specializing in presenting monograms.
    ///
    /// The system provides a generic silhouette placeholder image. If personNameComponents is set, the system composes an appropriate 'monogram' image with the initials. When an 'image' is set, the system uses it instead. When no frame or contentSize is explicitly set, the system uses a default size.
    ///
    /// See also [Apple's documentation](https://developer.apple.com/documentation/tvuikit/tvmonogramview?language=objc)
    #[unsafe(super(TVLockupView, UIControl, UIView, UIResponder, NSObject))]
    #[derive(Debug, PartialEq, Eq, Hash)]
    #[cfg(feature = "TVLockupView")]
    #[deprecated]
    pub struct TVMonogramView;
);

#[cfg(all(feature = "TVLockupView", feature = "objc2-quartz-core"))]
extern_conformance!(
    unsafe impl CALayerDelegate for TVMonogramView {}
);

#[cfg(feature = "TVLockupView")]
extern_conformance!(
    unsafe impl NSCoding for TVMonogramView {}
);

#[cfg(feature = "TVLockupView")]
extern_conformance!(
    unsafe impl NSObjectProtocol for TVMonogramView {}
);

#[cfg(feature = "TVLockupView")]
extern_conformance!(
    unsafe impl UIAppearance for TVMonogramView {}
);

#[cfg(feature = "TVLockupView")]
extern_conformance!(
    unsafe impl UIAppearanceContainer for TVMonogramView {}
);

#[cfg(feature = "TVLockupView")]
extern_conformance!(
    unsafe impl UICoordinateSpace for TVMonogramView {}
);

#[cfg(feature = "TVLockupView")]
extern_conformance!(
    unsafe impl UIDynamicItem for TVMonogramView {}
);

#[cfg(feature = "TVLockupView")]
extern_conformance!(
    unsafe impl UIFocusEnvironment for TVMonogramView {}
);

#[cfg(feature = "TVLockupView")]
extern_conformance!(
    unsafe impl UIFocusItem for TVMonogramView {}
);

#[cfg(feature = "TVLockupView")]
extern_conformance!(
    unsafe impl UIFocusItemContainer for TVMonogramView {}
);

#[cfg(feature = "TVLockupView")]
extern_conformance!(
    unsafe impl UIResponderStandardEditActions for TVMonogramView {}
);

#[cfg(feature = "TVLockupView")]
extern_conformance!(
    unsafe impl UITraitEnvironment for TVMonogramView {}
);

#[cfg(feature = "TVLockupView")]
impl TVMonogramView {
    extern_methods!(
        /// The name to be monogrammed
        #[deprecated]
        #[unsafe(method(personNameComponents))]
        #[unsafe(method_family = none)]
        pub unsafe fn personNameComponents(&self) -> Option<Retained<NSPersonNameComponents>>;

        /// Setter for [`personNameComponents`][Self::personNameComponents].
        #[deprecated]
        #[unsafe(method(setPersonNameComponents:))]
        #[unsafe(method_family = none)]
        pub unsafe fn setPersonNameComponents(
            &self,
            person_name_components: Option<&NSPersonNameComponents>,
        );

        /// An optional image
        ///
        /// If provided, the system uses this image instead of the generated monogram image
        #[deprecated]
        #[unsafe(method(image))]
        #[unsafe(method_family = none)]
        pub unsafe fn image(&self) -> Option<Retained<UIImage>>;

        /// Setter for [`image`][Self::image].
        #[deprecated]
        #[unsafe(method(setImage:))]
        #[unsafe(method_family = none)]
        pub unsafe fn setImage(&self, image: Option<&UIImage>);

        /// An optional title.
        #[deprecated]
        #[unsafe(method(title))]
        #[unsafe(method_family = none)]
        pub unsafe fn title(&self) -> Option<Retained<NSString>>;

        /// Setter for [`title`][Self::title].
        #[deprecated]
        #[unsafe(method(setTitle:))]
        #[unsafe(method_family = none)]
        pub unsafe fn setTitle(&self, title: Option<&NSString>);

        /// An optional subtitle.
        #[deprecated]
        #[unsafe(method(subtitle))]
        #[unsafe(method_family = none)]
        pub unsafe fn subtitle(&self) -> Option<Retained<NSString>>;

        /// Setter for [`subtitle`][Self::subtitle].
        #[deprecated]
        #[unsafe(method(setSubtitle:))]
        #[unsafe(method_family = none)]
        pub unsafe fn setSubtitle(&self, subtitle: Option<&NSString>);
    );
}

/// Methods declared on superclass `UIControl`.
#[cfg(feature = "TVLockupView")]
impl TVMonogramView {
    extern_methods!(
        #[cfg(feature = "objc2-core-foundation")]
        #[unsafe(method(initWithFrame:))]
        #[unsafe(method_family = init)]
        pub unsafe fn initWithFrame(this: Allocated<Self>, frame: CGRect) -> Retained<Self>;

        #[unsafe(method(initWithCoder:))]
        #[unsafe(method_family = init)]
        pub unsafe fn initWithCoder(
            this: Allocated<Self>,
            coder: &NSCoder,
        ) -> Option<Retained<Self>>;

        #[cfg(feature = "objc2-core-foundation")]
        /// Initializes the control and adds primaryAction for the UIControlEventPrimaryActionTriggered control event. Subclasses of UIControl may alter or add behaviors around the usage of primaryAction, see subclass documentation of this initializer for additional information.
        #[unsafe(method(initWithFrame:primaryAction:))]
        #[unsafe(method_family = init)]
        pub unsafe fn initWithFrame_primaryAction(
            this: Allocated<Self>,
            frame: CGRect,
            primary_action: Option<&UIAction>,
        ) -> Retained<Self>;
    );
}

/// Methods declared on superclass `UIView`.
#[cfg(feature = "TVLockupView")]
impl TVMonogramView {
    extern_methods!(
        #[unsafe(method(init))]
        #[unsafe(method_family = init)]
        pub unsafe fn init(this: Allocated<Self>) -> Retained<Self>;
    );
}

/// Methods declared on superclass `NSObject`.
#[cfg(feature = "TVLockupView")]
impl TVMonogramView {
    extern_methods!(
        #[unsafe(method(new))]
        #[unsafe(method_family = new)]
        pub unsafe fn new(mtm: MainThreadMarker) -> Retained<Self>;
    );
}
