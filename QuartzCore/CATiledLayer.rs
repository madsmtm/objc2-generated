//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use core::ffi::*;
use core::ptr::NonNull;
use objc2::__framework_prelude::*;
#[cfg(feature = "objc2-core-foundation")]
use objc2_core_foundation::*;
use objc2_foundation::*;

use crate::*;

extern_class!(
    /// [Apple's documentation](https://developer.apple.com/documentation/quartzcore/catiledlayer?language=objc)
    #[unsafe(super(CALayer, NSObject))]
    #[derive(Debug, PartialEq, Eq, Hash)]
    #[cfg(feature = "CALayer")]
    pub struct CATiledLayer;
);

#[cfg(all(feature = "CALayer", feature = "CAMediaTiming"))]
extern_conformance!(
    unsafe impl CAMediaTiming for CATiledLayer {}
);

#[cfg(feature = "CALayer")]
extern_conformance!(
    unsafe impl NSCoding for CATiledLayer {}
);

#[cfg(feature = "CALayer")]
extern_conformance!(
    unsafe impl NSObjectProtocol for CATiledLayer {}
);

#[cfg(feature = "CALayer")]
extern_conformance!(
    unsafe impl NSSecureCoding for CATiledLayer {}
);

#[cfg(feature = "CALayer")]
impl CATiledLayer {
    extern_methods!(
        #[cfg(feature = "objc2-core-foundation")]
        #[unsafe(method(fadeDuration))]
        #[unsafe(method_family = none)]
        pub fn fade_duration() -> CFTimeInterval;

        #[unsafe(method(levelsOfDetail))]
        #[unsafe(method_family = none)]
        pub fn levels_of_detail(&self) -> usize;

        /// Setter for [`levelsOfDetail`][Self::levelsOfDetail].
        #[unsafe(method(setLevelsOfDetail:))]
        #[unsafe(method_family = none)]
        pub fn set_levels_of_detail(&self, levels_of_detail: usize);

        #[unsafe(method(levelsOfDetailBias))]
        #[unsafe(method_family = none)]
        pub fn levels_of_detail_bias(&self) -> usize;

        /// Setter for [`levelsOfDetailBias`][Self::levelsOfDetailBias].
        #[unsafe(method(setLevelsOfDetailBias:))]
        #[unsafe(method_family = none)]
        pub fn set_levels_of_detail_bias(&self, levels_of_detail_bias: usize);

        #[cfg(feature = "objc2-core-foundation")]
        #[unsafe(method(tileSize))]
        #[unsafe(method_family = none)]
        pub fn tile_size(&self) -> CGSize;

        #[cfg(feature = "objc2-core-foundation")]
        /// Setter for [`tileSize`][Self::tileSize].
        #[unsafe(method(setTileSize:))]
        #[unsafe(method_family = none)]
        pub fn set_tile_size(&self, tile_size: CGSize);
    );
}

/// Methods declared on superclass `CALayer`.
#[cfg(feature = "CALayer")]
impl CATiledLayer {
    extern_methods!(
        /// Layer creation and initialization. *
        #[unsafe(method(layer))]
        #[unsafe(method_family = none)]
        pub fn layer() -> Retained<Self>;

        #[unsafe(method(init))]
        #[unsafe(method_family = init)]
        pub fn init(this: Allocated<Self>) -> Retained<Self>;

        /// # Safety
        ///
        /// `layer` should be of the correct type.
        #[unsafe(method(initWithLayer:))]
        #[unsafe(method_family = init)]
        pub unsafe fn init_with_layer(this: Allocated<Self>, layer: &AnyObject) -> Retained<Self>;
    );
}

/// Methods declared on superclass `NSObject`.
#[cfg(feature = "CALayer")]
impl CATiledLayer {
    extern_methods!(
        #[unsafe(method(new))]
        #[unsafe(method_family = new)]
        pub fn new() -> Retained<Self>;
    );
}

#[cfg(feature = "CALayer")]
impl DefaultRetained for CATiledLayer {
    #[inline]
    fn default_retained() -> Retained<Self> {
        Self::new()
    }
}
