//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use core::ptr::NonNull;
#[cfg(feature = "objc2")]
use objc2::__framework_prelude::*;
#[cfg(feature = "objc2-foundation")]
use objc2_foundation::*;

use crate::*;

#[cfg(feature = "objc2")]
extern_protocol!(
    /// VTFrameProcessorParameters is the base protocol for input and output processing parameters for a VTFrameProcessor processing implementation..  An instance of a class corresponding to this protocol is passed to processFrameWithParameters calls, and in async versions of those APIs, the same instance is returned in the completion.
    ///
    /// See also [Apple's documentation](https://developer.apple.com/documentation/videotoolbox/vtframeprocessorparameters?language=objc)
    #[cfg(feature = "objc2")]
    pub unsafe trait VTFrameProcessorParameters: NSObjectProtocol {
        #[cfg(feature = "VTFrameProcessorFrame")]
        /// VTFrameProcessorFrame that contains the current source frame to be used for all processing features. Must be non-null
        #[unsafe(method(sourceFrame))]
        #[unsafe(method_family = none)]
        unsafe fn sourceFrame(&self) -> Retained<VTFrameProcessorFrame>;

        #[cfg(feature = "VTFrameProcessorFrame")]
        /// VTFrameProcessorFrame that contains the destination frame for processors which output a single processed frame.
        #[optional]
        #[unsafe(method(destinationFrame))]
        #[unsafe(method_family = none)]
        unsafe fn destinationFrame(&self) -> Retained<VTFrameProcessorFrame>;

        #[cfg(all(feature = "VTFrameProcessorFrame", feature = "objc2-foundation"))]
        /// NSArray of VTFrameProcessorFrame that contains the destination frames for processors which may output more than one processed frame.
        #[optional]
        #[unsafe(method(destinationFrames))]
        #[unsafe(method_family = none)]
        unsafe fn destinationFrames(&self) -> Retained<NSArray<VTFrameProcessorFrame>>;
    }
);
