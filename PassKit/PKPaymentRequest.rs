//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use core::ffi::*;
use core::ptr::NonNull;
use objc2::__framework_prelude::*;
use objc2_foundation::*;

use crate::*;

/// [Apple's documentation](https://developer.apple.com/documentation/passkit/pkmerchantcapability?language=objc)
// NS_OPTIONS
#[repr(transparent)]
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash, PartialOrd, Ord)]
pub struct PKMerchantCapability(pub NSUInteger);
bitflags::bitflags! {
    impl PKMerchantCapability: NSUInteger {
        #[doc(alias = "PKMerchantCapability3DS")]
        const Capability3DS = 1<<0;
        #[doc(alias = "PKMerchantCapabilityEMV")]
        const CapabilityEMV = 1<<1;
        #[doc(alias = "PKMerchantCapabilityCredit")]
        const CapabilityCredit = 1<<2;
        #[doc(alias = "PKMerchantCapabilityDebit")]
        const CapabilityDebit = 1<<3;
        #[doc(alias = "PKMerchantCapabilityInstantFundsOut")]
        const CapabilityInstantFundsOut = 1<<7;
    }
}

unsafe impl Encode for PKMerchantCapability {
    const ENCODING: Encoding = NSUInteger::ENCODING;
}

unsafe impl RefEncode for PKMerchantCapability {
    const ENCODING_REF: Encoding = Encoding::Pointer(&Self::ENCODING);
}

/// [Apple's documentation](https://developer.apple.com/documentation/passkit/pkmerchantcategorycode?language=objc)
// NS_TYPED_EXTENSIBLE_ENUM
pub type PKMerchantCategoryCode = i16;

extern "C" {
    /// [Apple's documentation](https://developer.apple.com/documentation/passkit/pkmerchantcategorycodenone?language=objc)
    pub static PKMerchantCategoryCodeNone: PKMerchantCategoryCode;
}

/// [Apple's documentation](https://developer.apple.com/documentation/passkit/pkaddressfield?language=objc)
// NS_OPTIONS
#[deprecated = "Use PKContactField and -requiredShippingContactFields / -requiredBillingContactFields"]
#[repr(transparent)]
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash, PartialOrd, Ord)]
pub struct PKAddressField(pub NSUInteger);
bitflags::bitflags! {
    impl PKAddressField: NSUInteger {
        #[doc(alias = "PKAddressFieldNone")]
#[deprecated = "Use PKContactField and -requiredShippingContactFields / -requiredBillingContactFields"]
        const None = 0;
        #[doc(alias = "PKAddressFieldPostalAddress")]
#[deprecated = "Use PKContactField and -requiredShippingContactFields / -requiredBillingContactFields"]
        const PostalAddress = 1<<0;
        #[doc(alias = "PKAddressFieldPhone")]
#[deprecated = "Use PKContactField and -requiredShippingContactFields / -requiredBillingContactFields"]
        const Phone = 1<<1;
        #[doc(alias = "PKAddressFieldEmail")]
#[deprecated = "Use PKContactField and -requiredShippingContactFields / -requiredBillingContactFields"]
        const Email = 1<<2;
        #[doc(alias = "PKAddressFieldName")]
        const Name = 1<<3;
        #[doc(alias = "PKAddressFieldAll")]
#[deprecated = "Use PKContactField and -requiredShippingContactFields / -requiredBillingContactFields"]
        const All = PKAddressField::PostalAddress.0|PKAddressField::Phone.0|PKAddressField::Email.0|PKAddressField::Name.0;
    }
}

unsafe impl Encode for PKAddressField {
    const ENCODING: Encoding = NSUInteger::ENCODING;
}

unsafe impl RefEncode for PKAddressField {
    const ENCODING_REF: Encoding = Encoding::Pointer(&Self::ENCODING);
}

/// [Apple's documentation](https://developer.apple.com/documentation/passkit/pkshippingtype?language=objc)
// NS_ENUM
#[repr(transparent)]
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash, PartialOrd, Ord)]
pub struct PKShippingType(pub NSUInteger);
impl PKShippingType {
    #[doc(alias = "PKShippingTypeShipping")]
    pub const Shipping: Self = Self(0);
    #[doc(alias = "PKShippingTypeDelivery")]
    pub const Delivery: Self = Self(1);
    #[doc(alias = "PKShippingTypeStorePickup")]
    pub const StorePickup: Self = Self(2);
    #[doc(alias = "PKShippingTypeServicePickup")]
    pub const ServicePickup: Self = Self(3);
}

unsafe impl Encode for PKShippingType {
    const ENCODING: Encoding = NSUInteger::ENCODING;
}

unsafe impl RefEncode for PKShippingType {
    const ENCODING_REF: Encoding = Encoding::Pointer(&Self::ENCODING);
}

/// [Apple's documentation](https://developer.apple.com/documentation/passkit/pkshippingcontacteditingmode?language=objc)
// NS_ENUM
#[repr(transparent)]
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash, PartialOrd, Ord)]
pub struct PKShippingContactEditingMode(pub NSUInteger);
impl PKShippingContactEditingMode {
    #[doc(alias = "PKShippingContactEditingModeAvailable")]
    pub const Available: Self = Self(1);
    #[doc(alias = "PKShippingContactEditingModeStorePickup")]
    pub const StorePickup: Self = Self(2);
    #[doc(alias = "PKShippingContactEditingModeEnabled")]
    pub const Enabled: Self = Self(PKShippingContactEditingMode::Available.0);
}

unsafe impl Encode for PKShippingContactEditingMode {
    const ENCODING: Encoding = NSUInteger::ENCODING;
}

unsafe impl RefEncode for PKShippingContactEditingMode {
    const ENCODING_REF: Encoding = Encoding::Pointer(&Self::ENCODING);
}

/// [Apple's documentation](https://developer.apple.com/documentation/passkit/pkapplepaylateravailability?language=objc)
// NS_ENUM
#[repr(transparent)]
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash, PartialOrd, Ord)]
pub struct PKApplePayLaterAvailability(pub NSInteger);
impl PKApplePayLaterAvailability {
    #[doc(alias = "PKApplePayLaterAvailable")]
    pub const Available: Self = Self(0);
    /// Default state where Apple Pay Later is available
    #[doc(alias = "PKApplePayLaterUnavailableItemIneligible")]
    pub const UnavailableItemIneligible: Self = Self(1);
    /// One or more ineligible items are in the basket, such as items with long fulfillment or prohibited MCCs
    #[doc(alias = "PKApplePayLaterUnavailableRecurringTransaction")]
    pub const UnavailableRecurringTransaction: Self = Self(2);
}

unsafe impl Encode for PKApplePayLaterAvailability {
    const ENCODING: Encoding = NSInteger::ENCODING;
}

unsafe impl RefEncode for PKApplePayLaterAvailability {
    const ENCODING_REF: Encoding = Encoding::Pointer(&Self::ENCODING);
}

extern_class!(
    /// [Apple's documentation](https://developer.apple.com/documentation/passkit/pkpaymentrequest?language=objc)
    #[unsafe(super(NSObject))]
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub struct PKPaymentRequest;
);

extern_conformance!(
    unsafe impl NSObjectProtocol for PKPaymentRequest {}
);

impl PKPaymentRequest {
    extern_methods!(
        #[cfg(feature = "PKConstants")]
        #[unsafe(method(availableNetworks))]
        #[unsafe(method_family = none)]
        pub unsafe fn availableNetworks() -> Retained<NSArray<PKPaymentNetwork>>;

        #[cfg(feature = "PKConstants")]
        #[unsafe(method(paymentContactInvalidErrorWithContactField:localizedDescription:))]
        #[unsafe(method_family = none)]
        pub unsafe fn paymentContactInvalidErrorWithContactField_localizedDescription(
            field: &PKContactField,
            localized_description: Option<&NSString>,
        ) -> Retained<NSError>;

        #[unsafe(method(paymentShippingAddressInvalidErrorWithKey:localizedDescription:))]
        #[unsafe(method_family = none)]
        pub unsafe fn paymentShippingAddressInvalidErrorWithKey_localizedDescription(
            postal_address_key: &NSString,
            localized_description: Option<&NSString>,
        ) -> Retained<NSError>;

        #[unsafe(method(paymentBillingAddressInvalidErrorWithKey:localizedDescription:))]
        #[unsafe(method_family = none)]
        pub unsafe fn paymentBillingAddressInvalidErrorWithKey_localizedDescription(
            postal_address_key: &NSString,
            localized_description: Option<&NSString>,
        ) -> Retained<NSError>;

        #[unsafe(method(paymentShippingAddressUnserviceableErrorWithLocalizedDescription:))]
        #[unsafe(method_family = none)]
        pub unsafe fn paymentShippingAddressUnserviceableErrorWithLocalizedDescription(
            localized_description: Option<&NSString>,
        ) -> Retained<NSError>;

        #[unsafe(method(paymentCouponCodeInvalidErrorWithLocalizedDescription:))]
        #[unsafe(method_family = none)]
        pub unsafe fn paymentCouponCodeInvalidErrorWithLocalizedDescription(
            localized_description: Option<&NSString>,
        ) -> Retained<NSError>;

        #[unsafe(method(paymentCouponCodeExpiredErrorWithLocalizedDescription:))]
        #[unsafe(method_family = none)]
        pub unsafe fn paymentCouponCodeExpiredErrorWithLocalizedDescription(
            localized_description: Option<&NSString>,
        ) -> Retained<NSError>;

        #[unsafe(method(merchantIdentifier))]
        #[unsafe(method_family = none)]
        pub unsafe fn merchantIdentifier(&self) -> Retained<NSString>;

        /// Setter for [`merchantIdentifier`][Self::merchantIdentifier].
        #[unsafe(method(setMerchantIdentifier:))]
        #[unsafe(method_family = none)]
        pub unsafe fn setMerchantIdentifier(&self, merchant_identifier: &NSString);

        #[unsafe(method(attributionIdentifier))]
        #[unsafe(method_family = none)]
        pub unsafe fn attributionIdentifier(&self) -> Option<Retained<NSString>>;

        /// Setter for [`attributionIdentifier`][Self::attributionIdentifier].
        #[unsafe(method(setAttributionIdentifier:))]
        #[unsafe(method_family = none)]
        pub unsafe fn setAttributionIdentifier(&self, attribution_identifier: Option<&NSString>);

        #[unsafe(method(countryCode))]
        #[unsafe(method_family = none)]
        pub unsafe fn countryCode(&self) -> Retained<NSString>;

        /// Setter for [`countryCode`][Self::countryCode].
        #[unsafe(method(setCountryCode:))]
        #[unsafe(method_family = none)]
        pub unsafe fn setCountryCode(&self, country_code: &NSString);

        #[cfg(feature = "PKConstants")]
        #[unsafe(method(supportedNetworks))]
        #[unsafe(method_family = none)]
        pub unsafe fn supportedNetworks(&self) -> Retained<NSArray<PKPaymentNetwork>>;

        #[cfg(feature = "PKConstants")]
        /// Setter for [`supportedNetworks`][Self::supportedNetworks].
        #[unsafe(method(setSupportedNetworks:))]
        #[unsafe(method_family = none)]
        pub unsafe fn setSupportedNetworks(&self, supported_networks: &NSArray<PKPaymentNetwork>);

        #[unsafe(method(merchantCapabilities))]
        #[unsafe(method_family = none)]
        pub unsafe fn merchantCapabilities(&self) -> PKMerchantCapability;

        /// Setter for [`merchantCapabilities`][Self::merchantCapabilities].
        #[unsafe(method(setMerchantCapabilities:))]
        #[unsafe(method_family = none)]
        pub unsafe fn setMerchantCapabilities(&self, merchant_capabilities: PKMerchantCapability);

        #[unsafe(method(supportsCouponCode))]
        #[unsafe(method_family = none)]
        pub unsafe fn supportsCouponCode(&self) -> bool;

        /// Setter for [`supportsCouponCode`][Self::supportsCouponCode].
        #[unsafe(method(setSupportsCouponCode:))]
        #[unsafe(method_family = none)]
        pub unsafe fn setSupportsCouponCode(&self, supports_coupon_code: bool);

        #[unsafe(method(couponCode))]
        #[unsafe(method_family = none)]
        pub unsafe fn couponCode(&self) -> Option<Retained<NSString>>;

        /// Setter for [`couponCode`][Self::couponCode].
        #[unsafe(method(setCouponCode:))]
        #[unsafe(method_family = none)]
        pub unsafe fn setCouponCode(&self, coupon_code: Option<&NSString>);

        #[unsafe(method(merchantCategoryCode))]
        #[unsafe(method_family = none)]
        pub unsafe fn merchantCategoryCode(&self) -> PKMerchantCategoryCode;

        /// Setter for [`merchantCategoryCode`][Self::merchantCategoryCode].
        #[unsafe(method(setMerchantCategoryCode:))]
        #[unsafe(method_family = none)]
        pub unsafe fn setMerchantCategoryCode(
            &self,
            merchant_category_code: PKMerchantCategoryCode,
        );

        #[cfg(feature = "PKPaymentSummaryItem")]
        #[unsafe(method(paymentSummaryItems))]
        #[unsafe(method_family = none)]
        pub unsafe fn paymentSummaryItems(&self) -> Retained<NSArray<PKPaymentSummaryItem>>;

        #[cfg(feature = "PKPaymentSummaryItem")]
        /// Setter for [`paymentSummaryItems`][Self::paymentSummaryItems].
        #[unsafe(method(setPaymentSummaryItems:))]
        #[unsafe(method_family = none)]
        pub unsafe fn setPaymentSummaryItems(
            &self,
            payment_summary_items: &NSArray<PKPaymentSummaryItem>,
        );

        #[unsafe(method(currencyCode))]
        #[unsafe(method_family = none)]
        pub unsafe fn currencyCode(&self) -> Retained<NSString>;

        /// Setter for [`currencyCode`][Self::currencyCode].
        #[unsafe(method(setCurrencyCode:))]
        #[unsafe(method_family = none)]
        pub unsafe fn setCurrencyCode(&self, currency_code: &NSString);

        #[cfg(feature = "PKConstants")]
        #[unsafe(method(requiredBillingContactFields))]
        #[unsafe(method_family = none)]
        pub unsafe fn requiredBillingContactFields(&self) -> Retained<NSSet<PKContactField>>;

        #[cfg(feature = "PKConstants")]
        /// Setter for [`requiredBillingContactFields`][Self::requiredBillingContactFields].
        #[unsafe(method(setRequiredBillingContactFields:))]
        #[unsafe(method_family = none)]
        pub unsafe fn setRequiredBillingContactFields(
            &self,
            required_billing_contact_fields: &NSSet<PKContactField>,
        );

        #[deprecated]
        #[unsafe(method(requiredBillingAddressFields))]
        #[unsafe(method_family = none)]
        pub unsafe fn requiredBillingAddressFields(&self) -> PKAddressField;

        /// Setter for [`requiredBillingAddressFields`][Self::requiredBillingAddressFields].
        #[deprecated]
        #[unsafe(method(setRequiredBillingAddressFields:))]
        #[unsafe(method_family = none)]
        pub unsafe fn setRequiredBillingAddressFields(
            &self,
            required_billing_address_fields: PKAddressField,
        );

        #[cfg(feature = "PKContact")]
        #[unsafe(method(billingContact))]
        #[unsafe(method_family = none)]
        pub unsafe fn billingContact(&self) -> Option<Retained<PKContact>>;

        #[cfg(feature = "PKContact")]
        /// Setter for [`billingContact`][Self::billingContact].
        #[unsafe(method(setBillingContact:))]
        #[unsafe(method_family = none)]
        pub unsafe fn setBillingContact(&self, billing_contact: Option<&PKContact>);

        #[cfg(feature = "PKConstants")]
        #[unsafe(method(requiredShippingContactFields))]
        #[unsafe(method_family = none)]
        pub unsafe fn requiredShippingContactFields(&self) -> Retained<NSSet<PKContactField>>;

        #[cfg(feature = "PKConstants")]
        /// Setter for [`requiredShippingContactFields`][Self::requiredShippingContactFields].
        #[unsafe(method(setRequiredShippingContactFields:))]
        #[unsafe(method_family = none)]
        pub unsafe fn setRequiredShippingContactFields(
            &self,
            required_shipping_contact_fields: &NSSet<PKContactField>,
        );

        #[deprecated]
        #[unsafe(method(requiredShippingAddressFields))]
        #[unsafe(method_family = none)]
        pub unsafe fn requiredShippingAddressFields(&self) -> PKAddressField;

        /// Setter for [`requiredShippingAddressFields`][Self::requiredShippingAddressFields].
        #[deprecated]
        #[unsafe(method(setRequiredShippingAddressFields:))]
        #[unsafe(method_family = none)]
        pub unsafe fn setRequiredShippingAddressFields(
            &self,
            required_shipping_address_fields: PKAddressField,
        );

        #[cfg(feature = "PKContact")]
        #[unsafe(method(shippingContact))]
        #[unsafe(method_family = none)]
        pub unsafe fn shippingContact(&self) -> Option<Retained<PKContact>>;

        #[cfg(feature = "PKContact")]
        /// Setter for [`shippingContact`][Self::shippingContact].
        #[unsafe(method(setShippingContact:))]
        #[unsafe(method_family = none)]
        pub unsafe fn setShippingContact(&self, shipping_contact: Option<&PKContact>);

        #[cfg(all(feature = "PKPaymentSummaryItem", feature = "PKShippingMethod"))]
        #[unsafe(method(shippingMethods))]
        #[unsafe(method_family = none)]
        pub unsafe fn shippingMethods(&self) -> Option<Retained<NSArray<PKShippingMethod>>>;

        #[cfg(all(feature = "PKPaymentSummaryItem", feature = "PKShippingMethod"))]
        /// Setter for [`shippingMethods`][Self::shippingMethods].
        #[unsafe(method(setShippingMethods:))]
        #[unsafe(method_family = none)]
        pub unsafe fn setShippingMethods(
            &self,
            shipping_methods: Option<&NSArray<PKShippingMethod>>,
        );

        #[unsafe(method(shippingType))]
        #[unsafe(method_family = none)]
        pub unsafe fn shippingType(&self) -> PKShippingType;

        /// Setter for [`shippingType`][Self::shippingType].
        #[unsafe(method(setShippingType:))]
        #[unsafe(method_family = none)]
        pub unsafe fn setShippingType(&self, shipping_type: PKShippingType);

        #[unsafe(method(shippingContactEditingMode))]
        #[unsafe(method_family = none)]
        pub unsafe fn shippingContactEditingMode(&self) -> PKShippingContactEditingMode;

        /// Setter for [`shippingContactEditingMode`][Self::shippingContactEditingMode].
        #[unsafe(method(setShippingContactEditingMode:))]
        #[unsafe(method_family = none)]
        pub unsafe fn setShippingContactEditingMode(
            &self,
            shipping_contact_editing_mode: PKShippingContactEditingMode,
        );

        #[unsafe(method(applicationData))]
        #[unsafe(method_family = none)]
        pub unsafe fn applicationData(&self) -> Option<Retained<NSData>>;

        /// Setter for [`applicationData`][Self::applicationData].
        #[unsafe(method(setApplicationData:))]
        #[unsafe(method_family = none)]
        pub unsafe fn setApplicationData(&self, application_data: Option<&NSData>);

        #[unsafe(method(supportedCountries))]
        #[unsafe(method_family = none)]
        pub unsafe fn supportedCountries(&self) -> Option<Retained<NSSet<NSString>>>;

        /// Setter for [`supportedCountries`][Self::supportedCountries].
        #[unsafe(method(setSupportedCountries:))]
        #[unsafe(method_family = none)]
        pub unsafe fn setSupportedCountries(&self, supported_countries: Option<&NSSet<NSString>>);

        #[cfg(feature = "PKPaymentTokenContext")]
        #[unsafe(method(multiTokenContexts))]
        #[unsafe(method_family = none)]
        pub unsafe fn multiTokenContexts(&self) -> Retained<NSArray<PKPaymentTokenContext>>;

        #[cfg(feature = "PKPaymentTokenContext")]
        /// Setter for [`multiTokenContexts`][Self::multiTokenContexts].
        #[unsafe(method(setMultiTokenContexts:))]
        #[unsafe(method_family = none)]
        pub unsafe fn setMultiTokenContexts(
            &self,
            multi_token_contexts: &NSArray<PKPaymentTokenContext>,
        );

        #[cfg(feature = "PKRecurringPaymentRequest")]
        #[unsafe(method(recurringPaymentRequest))]
        #[unsafe(method_family = none)]
        pub unsafe fn recurringPaymentRequest(&self)
            -> Option<Retained<PKRecurringPaymentRequest>>;

        #[cfg(feature = "PKRecurringPaymentRequest")]
        /// Setter for [`recurringPaymentRequest`][Self::recurringPaymentRequest].
        #[unsafe(method(setRecurringPaymentRequest:))]
        #[unsafe(method_family = none)]
        pub unsafe fn setRecurringPaymentRequest(
            &self,
            recurring_payment_request: Option<&PKRecurringPaymentRequest>,
        );

        #[cfg(feature = "PKAutomaticReloadPaymentRequest")]
        #[unsafe(method(automaticReloadPaymentRequest))]
        #[unsafe(method_family = none)]
        pub unsafe fn automaticReloadPaymentRequest(
            &self,
        ) -> Option<Retained<PKAutomaticReloadPaymentRequest>>;

        #[cfg(feature = "PKAutomaticReloadPaymentRequest")]
        /// Setter for [`automaticReloadPaymentRequest`][Self::automaticReloadPaymentRequest].
        #[unsafe(method(setAutomaticReloadPaymentRequest:))]
        #[unsafe(method_family = none)]
        pub unsafe fn setAutomaticReloadPaymentRequest(
            &self,
            automatic_reload_payment_request: Option<&PKAutomaticReloadPaymentRequest>,
        );

        #[cfg(feature = "PKDeferredPaymentRequest")]
        #[unsafe(method(deferredPaymentRequest))]
        #[unsafe(method_family = none)]
        pub unsafe fn deferredPaymentRequest(&self) -> Option<Retained<PKDeferredPaymentRequest>>;

        #[cfg(feature = "PKDeferredPaymentRequest")]
        /// Setter for [`deferredPaymentRequest`][Self::deferredPaymentRequest].
        #[unsafe(method(setDeferredPaymentRequest:))]
        #[unsafe(method_family = none)]
        pub unsafe fn setDeferredPaymentRequest(
            &self,
            deferred_payment_request: Option<&PKDeferredPaymentRequest>,
        );

        #[unsafe(method(applePayLaterAvailability))]
        #[unsafe(method_family = none)]
        pub unsafe fn applePayLaterAvailability(&self) -> PKApplePayLaterAvailability;

        /// Setter for [`applePayLaterAvailability`][Self::applePayLaterAvailability].
        #[unsafe(method(setApplePayLaterAvailability:))]
        #[unsafe(method_family = none)]
        pub unsafe fn setApplePayLaterAvailability(
            &self,
            apple_pay_later_availability: PKApplePayLaterAvailability,
        );
    );
}

/// Methods declared on superclass `NSObject`.
impl PKPaymentRequest {
    extern_methods!(
        #[unsafe(method(init))]
        #[unsafe(method_family = init)]
        pub unsafe fn init(this: Allocated<Self>) -> Retained<Self>;

        #[unsafe(method(new))]
        #[unsafe(method_family = new)]
        pub unsafe fn new() -> Retained<Self>;
    );
}
