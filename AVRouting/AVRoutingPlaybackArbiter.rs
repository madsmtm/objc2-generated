//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use core::ffi::*;
use core::ptr::NonNull;
use objc2::__framework_prelude::*;

use crate::*;

extern_class!(
    /// An object that manages playback routing preferences.
    ///
    /// This object manages instances of ``AVRoutingPlaybackParticipant`` for arbitration of media playback routing priorities and preferences on restricted playback interfaces. The playback routing arbiter is responsible for collecting and applying preferences, such as priorities in non-mixable audio routes and external playback states where the number of allowed players is limited.
    ///
    /// See also [Apple's documentation](https://developer.apple.com/documentation/avrouting/avroutingplaybackarbiter?language=objc)
    #[unsafe(super(NSObject))]
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub struct AVRoutingPlaybackArbiter;
);

extern_conformance!(
    unsafe impl NSObjectProtocol for AVRoutingPlaybackArbiter {}
);

impl AVRoutingPlaybackArbiter {
    extern_methods!(
        /// Returns the singleton playback arbiter instance.
        #[unsafe(method(sharedRoutingPlaybackArbiter))]
        #[unsafe(method_family = none)]
        pub unsafe fn sharedRoutingPlaybackArbiter() -> Retained<AVRoutingPlaybackArbiter>;

        /// The participant that has priority to play audio when it's not possible to play multiple audio sources concurrently.
        ///
        /// This participant takes precedence over all other participants to play audio in non-mixable audio routes when concurrent audio playback isn't possible, and only a single participant can play audio. The system unmutes this participant's audio, and mutes the audio of all other participants.
        ///
        /// By default, this value is `nil`. When the current preferred participant finishes, the system sets this value to `nil`. If this value is `nil`, the arbiter doesn't impose any priority on the participants, and the participant that's unmuted is based on the existing selection mechanism.
        #[unsafe(method(preferredParticipantForNonMixableAudioRoutes))]
        #[unsafe(method_family = none)]
        pub unsafe fn preferredParticipantForNonMixableAudioRoutes(
            &self,
        ) -> Option<Retained<ProtocolObject<dyn AVRoutingPlaybackParticipant>>>;

        /// This is a [weak property][objc2::topics::weak_property].
        /// Setter for [`preferredParticipantForNonMixableAudioRoutes`][Self::preferredParticipantForNonMixableAudioRoutes].
        #[unsafe(method(setPreferredParticipantForNonMixableAudioRoutes:))]
        #[unsafe(method_family = none)]
        pub unsafe fn setPreferredParticipantForNonMixableAudioRoutes(
            &self,
            preferred_participant_for_non_mixable_audio_routes: Option<
                &ProtocolObject<dyn AVRoutingPlaybackParticipant>,
            >,
        );

        /// The participant that has priority to play on external playback interfaces.
        ///
        /// This participant takes precedence over all others to play on external playback interfaces (specifically for AirPlay video and Apple Lightning Digital AV Adapters).
        ///
        /// By default, this value is `nil`. When the value is `nil`, the arbiter doesn't impose any priority on the participants, and the participant that is selected to playback externally falls back to the existing selection mechanism.
        #[unsafe(method(preferredParticipantForExternalPlayback))]
        #[unsafe(method_family = none)]
        pub unsafe fn preferredParticipantForExternalPlayback(
            &self,
        ) -> Option<Retained<ProtocolObject<dyn AVRoutingPlaybackParticipant>>>;

        /// This is a [weak property][objc2::topics::weak_property].
        /// Setter for [`preferredParticipantForExternalPlayback`][Self::preferredParticipantForExternalPlayback].
        #[unsafe(method(setPreferredParticipantForExternalPlayback:))]
        #[unsafe(method_family = none)]
        pub unsafe fn setPreferredParticipantForExternalPlayback(
            &self,
            preferred_participant_for_external_playback: Option<
                &ProtocolObject<dyn AVRoutingPlaybackParticipant>,
            >,
        );

        #[unsafe(method(init))]
        #[unsafe(method_family = init)]
        pub unsafe fn init(this: Allocated<Self>) -> Retained<Self>;

        #[unsafe(method(new))]
        #[unsafe(method_family = new)]
        pub unsafe fn new() -> Retained<Self>;
    );
}

extern_protocol!(
    /// A protocol for objects that participate in playback routing arbitration.
    ///
    /// Classes conform to this protocol if they participate in media playback routing arbitration for managing preferences such as priority on restricted playback routes.
    ///
    /// See also [Apple's documentation](https://developer.apple.com/documentation/avrouting/avroutingplaybackparticipant?language=objc)
    pub unsafe trait AVRoutingPlaybackParticipant {}
);
