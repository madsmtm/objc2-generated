//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use core::ffi::*;
use core::ptr::NonNull;
use objc2::__framework_prelude::*;
#[cfg(feature = "objc2-core-graphics")]
use objc2_core_graphics::*;
use objc2_foundation::*;

use crate::*;

/// CIImageProvider.
#[cfg(feature = "CIImage")]
impl CIImage {
    extern_methods!(
        #[cfg(feature = "objc2-core-graphics")]
        /// # Safety
        ///
        /// - `p` should be of the correct type.
        /// - `options` generic should be of the correct type.
        #[unsafe(method(imageWithImageProvider:size::format:colorSpace:options:))]
        #[unsafe(method_family = none)]
        pub unsafe fn imageWithImageProvider_size__format_colorSpace_options(
            p: &AnyObject,
            width: usize,
            height: usize,
            f: CIFormat,
            cs: Option<&CGColorSpace>,
            options: Option<&NSDictionary<CIImageOption, AnyObject>>,
        ) -> Retained<CIImage>;

        #[cfg(feature = "objc2-core-graphics")]
        /// # Safety
        ///
        /// - `p` should be of the correct type.
        /// - `options` generic should be of the correct type.
        #[unsafe(method(initWithImageProvider:size::format:colorSpace:options:))]
        #[unsafe(method_family = init)]
        pub unsafe fn initWithImageProvider_size__format_colorSpace_options(
            this: Allocated<Self>,
            p: &AnyObject,
            width: usize,
            height: usize,
            f: CIFormat,
            cs: Option<&CGColorSpace>,
            options: Option<&NSDictionary<CIImageOption, AnyObject>>,
        ) -> Retained<Self>;
    );
}

mod private_NSObjectCIImageProvider {
    pub trait Sealed {}
}

/// Category "CIImageProvider" on [`NSObject`].
///
/// Informal protocol used to lazily supply image data.
#[doc(alias = "CIImageProvider")]
pub unsafe trait NSObjectCIImageProvider:
    ClassType + Sized + private_NSObjectCIImageProvider::Sealed
{
    extern_methods!(
        /// # Safety
        ///
        /// - `data` must be a valid pointer.
        /// - `info` should be of the correct type.
        #[unsafe(method(provideImageData:bytesPerRow:origin::size::userInfo:))]
        #[unsafe(method_family = none)]
        unsafe fn provideImageData_bytesPerRow_origin__size__userInfo(
            &self,
            data: NonNull<c_void>,
            rowbytes: usize,
            x: usize,
            y: usize,
            width: usize,
            height: usize,
            info: Option<&AnyObject>,
        );
    );
}

impl private_NSObjectCIImageProvider::Sealed for NSObject {}
unsafe impl NSObjectCIImageProvider for NSObject {}

extern "C" {
    /// [Apple's documentation](https://developer.apple.com/documentation/coreimage/kciimageprovidertilesize?language=objc)
    #[cfg(feature = "CIImage")]
    pub static kCIImageProviderTileSize: &'static CIImageOption;
}

extern "C" {
    /// [Apple's documentation](https://developer.apple.com/documentation/coreimage/kciimageprovideruserinfo?language=objc)
    #[cfg(feature = "CIImage")]
    pub static kCIImageProviderUserInfo: &'static CIImageOption;
}
