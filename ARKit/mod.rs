// This file has been automatically generated by `objc2`'s `header-translator`.
// DO NOT EDIT

#![allow(unused_imports)]
#![allow(deprecated)]
#![allow(non_snake_case)]
#![allow(non_camel_case_types)]
#![allow(non_upper_case_globals)]
#![allow(missing_docs)]
#![allow(clippy::too_many_arguments)]
#![allow(clippy::type_complexity)]
#![allow(clippy::upper_case_acronyms)]
#![allow(clippy::identity_op)]
#![allow(clippy::missing_safety_doc)]
#![allow(clippy::doc_lazy_continuation)]
#![allow(rustdoc::broken_intra_doc_links)]
#![allow(rustdoc::bare_urls)]
#![allow(rustdoc::unportable_markdown)]
#![allow(rustdoc::invalid_html_tags)]

#[link(name = "ARKit", kind = "framework")]
extern "C" {}

#[cfg(feature = "ARAnchor")]
#[path = "ARAnchor.rs"]
mod __ARAnchor;
#[cfg(feature = "ARAppClipCodeAnchor")]
#[path = "ARAppClipCodeAnchor.rs"]
mod __ARAppClipCodeAnchor;
#[cfg(feature = "ARBody2D")]
#[path = "ARBody2D.rs"]
mod __ARBody2D;
#[cfg(feature = "ARBodyAnchor")]
#[path = "ARBodyAnchor.rs"]
mod __ARBodyAnchor;
#[cfg(feature = "ARCamera")]
#[path = "ARCamera.rs"]
mod __ARCamera;
#[cfg(feature = "ARCoachingOverlayView")]
#[path = "ARCoachingOverlayView.rs"]
mod __ARCoachingOverlayView;
#[cfg(feature = "ARCollaborationData")]
#[path = "ARCollaborationData.rs"]
mod __ARCollaborationData;
#[cfg(feature = "ARConfiguration")]
#[path = "ARConfiguration.rs"]
mod __ARConfiguration;
#[cfg(feature = "ARDepthData")]
#[path = "ARDepthData.rs"]
mod __ARDepthData;
#[cfg(feature = "AREnvironmentProbeAnchor")]
#[path = "AREnvironmentProbeAnchor.rs"]
mod __AREnvironmentProbeAnchor;
#[cfg(feature = "ARError")]
#[path = "ARError.rs"]
mod __ARError;
#[cfg(feature = "ARFaceAnchor")]
#[path = "ARFaceAnchor.rs"]
mod __ARFaceAnchor;
#[cfg(feature = "ARFaceGeometry")]
#[path = "ARFaceGeometry.rs"]
mod __ARFaceGeometry;
#[cfg(feature = "ARFrame")]
#[path = "ARFrame.rs"]
mod __ARFrame;
#[cfg(feature = "ARGeoAnchor")]
#[path = "ARGeoAnchor.rs"]
mod __ARGeoAnchor;
#[cfg(feature = "ARGeoTrackingTypes")]
#[path = "ARGeoTrackingTypes.rs"]
mod __ARGeoTrackingTypes;
#[cfg(feature = "ARHitTestResult")]
#[path = "ARHitTestResult.rs"]
mod __ARHitTestResult;
#[cfg(feature = "ARImageAnchor")]
#[path = "ARImageAnchor.rs"]
mod __ARImageAnchor;
#[cfg(feature = "ARKitCore")]
#[path = "ARKitCore.rs"]
mod __ARKitCore;
#[cfg(feature = "ARKitFoundation")]
#[path = "ARKitFoundation.rs"]
mod __ARKitFoundation;
#[cfg(feature = "ARKitUI")]
#[path = "ARKitUI.rs"]
mod __ARKitUI;
#[cfg(feature = "ARLightEstimate")]
#[path = "ARLightEstimate.rs"]
mod __ARLightEstimate;
#[cfg(feature = "ARMatteGenerator")]
#[path = "ARMatteGenerator.rs"]
mod __ARMatteGenerator;
#[cfg(feature = "ARMeshAnchor")]
#[path = "ARMeshAnchor.rs"]
mod __ARMeshAnchor;
#[cfg(feature = "ARMeshGeometry")]
#[path = "ARMeshGeometry.rs"]
mod __ARMeshGeometry;
#[cfg(feature = "ARObjectAnchor")]
#[path = "ARObjectAnchor.rs"]
mod __ARObjectAnchor;
#[cfg(feature = "ARParticipantAnchor")]
#[path = "ARParticipantAnchor.rs"]
mod __ARParticipantAnchor;
#[cfg(feature = "ARPlaneAnchor")]
#[path = "ARPlaneAnchor.rs"]
mod __ARPlaneAnchor;
#[cfg(feature = "ARPlaneDetectionTypes")]
#[path = "ARPlaneDetectionTypes.rs"]
mod __ARPlaneDetectionTypes;
#[cfg(feature = "ARPlaneGeometry")]
#[path = "ARPlaneGeometry.rs"]
mod __ARPlaneGeometry;
#[cfg(feature = "ARPointCloud")]
#[path = "ARPointCloud.rs"]
mod __ARPointCloud;
#[cfg(feature = "ARRaycastQuery")]
#[path = "ARRaycastQuery.rs"]
mod __ARRaycastQuery;
#[cfg(feature = "ARRaycastResult")]
#[path = "ARRaycastResult.rs"]
mod __ARRaycastResult;
#[cfg(feature = "ARReferenceImage")]
#[path = "ARReferenceImage.rs"]
mod __ARReferenceImage;
#[cfg(feature = "ARReferenceObject")]
#[path = "ARReferenceObject.rs"]
mod __ARReferenceObject;
#[cfg(feature = "ARSCNFaceGeometry")]
#[path = "ARSCNFaceGeometry.rs"]
mod __ARSCNFaceGeometry;
#[cfg(feature = "ARSCNPlaneGeometry")]
#[path = "ARSCNPlaneGeometry.rs"]
mod __ARSCNPlaneGeometry;
#[cfg(feature = "ARSCNView")]
#[path = "ARSCNView.rs"]
mod __ARSCNView;
#[cfg(feature = "ARSKView")]
#[path = "ARSKView.rs"]
mod __ARSKView;
#[cfg(feature = "ARSession")]
#[path = "ARSession.rs"]
mod __ARSession;
#[cfg(feature = "ARSkeleton")]
#[path = "ARSkeleton.rs"]
mod __ARSkeleton;
#[cfg(feature = "ARSkeletonDefinition")]
#[path = "ARSkeletonDefinition.rs"]
mod __ARSkeletonDefinition;
#[cfg(feature = "ARTrackedRaycast")]
#[path = "ARTrackedRaycast.rs"]
mod __ARTrackedRaycast;
#[cfg(feature = "ARTrackingStatusTypes")]
#[path = "ARTrackingStatusTypes.rs"]
mod __ARTrackingStatusTypes;
#[cfg(feature = "ARVideoFormat")]
#[path = "ARVideoFormat.rs"]
mod __ARVideoFormat;
#[cfg(feature = "ARWorldMap")]
#[path = "ARWorldMap.rs"]
mod __ARWorldMap;

#[cfg(all(feature = "ARAnchor", feature = "objc2"))]
pub use self::__ARAnchor::ARAnchor;
#[cfg(all(feature = "ARAnchor", feature = "objc2", feature = "objc2-foundation"))]
pub use self::__ARAnchor::ARAnchorCopying;
#[cfg(all(feature = "ARAnchor", feature = "objc2"))]
pub use self::__ARAnchor::ARTrackable;
#[cfg(all(
    feature = "ARAnchor",
    feature = "ARAppClipCodeAnchor",
    feature = "objc2"
))]
pub use self::__ARAppClipCodeAnchor::ARAppClipCodeAnchor;
#[cfg(all(feature = "ARAppClipCodeAnchor", feature = "objc2"))]
pub use self::__ARAppClipCodeAnchor::ARAppClipCodeURLDecodingState;
#[cfg(all(feature = "ARBody2D", feature = "objc2"))]
pub use self::__ARBody2D::ARBody2D;
#[cfg(all(feature = "ARAnchor", feature = "ARBodyAnchor", feature = "objc2"))]
pub use self::__ARBodyAnchor::ARBodyAnchor;
#[cfg(all(feature = "ARCamera", feature = "objc2"))]
pub use self::__ARCamera::ARCamera;
#[cfg(all(feature = "ARCoachingOverlayView", feature = "objc2"))]
pub use self::__ARCoachingOverlayView::ARCoachingGoal;
#[cfg(all(
    feature = "ARCoachingOverlayView",
    feature = "objc2",
    feature = "objc2-ui-kit"
))]
pub use self::__ARCoachingOverlayView::ARCoachingOverlayView;
#[cfg(all(feature = "ARCoachingOverlayView", feature = "objc2"))]
pub use self::__ARCoachingOverlayView::ARCoachingOverlayViewDelegate;
#[cfg(all(feature = "ARCollaborationData", feature = "objc2"))]
pub use self::__ARCollaborationData::ARCollaborationData;
#[cfg(all(feature = "ARCollaborationData", feature = "objc2"))]
pub use self::__ARCollaborationData::ARCollaborationDataPriority;
#[cfg(all(feature = "ARConfiguration", feature = "objc2"))]
pub use self::__ARConfiguration::ARBodyTrackingConfiguration;
#[cfg(all(feature = "ARConfiguration", feature = "objc2"))]
pub use self::__ARConfiguration::ARConfiguration;
#[cfg(all(feature = "ARConfiguration", feature = "objc2"))]
pub use self::__ARConfiguration::AREnvironmentTexturing;
#[cfg(all(feature = "ARConfiguration", feature = "objc2"))]
pub use self::__ARConfiguration::ARFaceTrackingConfiguration;
#[cfg(all(feature = "ARConfiguration", feature = "objc2"))]
pub use self::__ARConfiguration::ARFrameSemantics;
#[cfg(all(feature = "ARConfiguration", feature = "objc2"))]
pub use self::__ARConfiguration::ARGeoTrackingConfiguration;
#[cfg(all(feature = "ARConfiguration", feature = "objc2"))]
pub use self::__ARConfiguration::ARImageTrackingConfiguration;
#[cfg(all(feature = "ARConfiguration", feature = "objc2"))]
pub use self::__ARConfiguration::ARObjectScanningConfiguration;
#[cfg(all(feature = "ARConfiguration", feature = "objc2"))]
pub use self::__ARConfiguration::AROrientationTrackingConfiguration;
#[cfg(all(feature = "ARConfiguration", feature = "objc2"))]
pub use self::__ARConfiguration::ARPositionalTrackingConfiguration;
#[cfg(all(feature = "ARConfiguration", feature = "objc2"))]
pub use self::__ARConfiguration::ARSceneReconstruction;
#[cfg(all(feature = "ARConfiguration", feature = "objc2"))]
pub use self::__ARConfiguration::ARWorldAlignment;
#[cfg(all(feature = "ARConfiguration", feature = "objc2"))]
pub use self::__ARConfiguration::ARWorldTrackingConfiguration;
#[cfg(all(feature = "ARDepthData", feature = "objc2"))]
pub use self::__ARDepthData::ARConfidenceLevel;
#[cfg(all(feature = "ARDepthData", feature = "objc2"))]
pub use self::__ARDepthData::ARDepthData;
#[cfg(all(
    feature = "ARAnchor",
    feature = "AREnvironmentProbeAnchor",
    feature = "objc2"
))]
pub use self::__AREnvironmentProbeAnchor::AREnvironmentProbeAnchor;
#[cfg(all(feature = "ARError", feature = "objc2"))]
pub use self::__ARError::ARErrorCode;
#[cfg(all(feature = "ARError", feature = "objc2-foundation"))]
pub use self::__ARError::ARErrorDomain;
#[cfg(all(feature = "ARFaceAnchor", feature = "objc2-foundation"))]
pub use self::__ARFaceAnchor::ARBlendShapeLocation;
#[cfg(all(feature = "ARFaceAnchor", feature = "objc2-foundation"))]
pub use self::__ARFaceAnchor::ARBlendShapeLocationBrowDownLeft;
#[cfg(all(feature = "ARFaceAnchor", feature = "objc2-foundation"))]
pub use self::__ARFaceAnchor::ARBlendShapeLocationBrowDownRight;
#[cfg(all(feature = "ARFaceAnchor", feature = "objc2-foundation"))]
pub use self::__ARFaceAnchor::ARBlendShapeLocationBrowInnerUp;
#[cfg(all(feature = "ARFaceAnchor", feature = "objc2-foundation"))]
pub use self::__ARFaceAnchor::ARBlendShapeLocationBrowOuterUpLeft;
#[cfg(all(feature = "ARFaceAnchor", feature = "objc2-foundation"))]
pub use self::__ARFaceAnchor::ARBlendShapeLocationBrowOuterUpRight;
#[cfg(all(feature = "ARFaceAnchor", feature = "objc2-foundation"))]
pub use self::__ARFaceAnchor::ARBlendShapeLocationCheekPuff;
#[cfg(all(feature = "ARFaceAnchor", feature = "objc2-foundation"))]
pub use self::__ARFaceAnchor::ARBlendShapeLocationCheekSquintLeft;
#[cfg(all(feature = "ARFaceAnchor", feature = "objc2-foundation"))]
pub use self::__ARFaceAnchor::ARBlendShapeLocationCheekSquintRight;
#[cfg(all(feature = "ARFaceAnchor", feature = "objc2-foundation"))]
pub use self::__ARFaceAnchor::ARBlendShapeLocationEyeBlinkLeft;
#[cfg(all(feature = "ARFaceAnchor", feature = "objc2-foundation"))]
pub use self::__ARFaceAnchor::ARBlendShapeLocationEyeBlinkRight;
#[cfg(all(feature = "ARFaceAnchor", feature = "objc2-foundation"))]
pub use self::__ARFaceAnchor::ARBlendShapeLocationEyeLookDownLeft;
#[cfg(all(feature = "ARFaceAnchor", feature = "objc2-foundation"))]
pub use self::__ARFaceAnchor::ARBlendShapeLocationEyeLookDownRight;
#[cfg(all(feature = "ARFaceAnchor", feature = "objc2-foundation"))]
pub use self::__ARFaceAnchor::ARBlendShapeLocationEyeLookInLeft;
#[cfg(all(feature = "ARFaceAnchor", feature = "objc2-foundation"))]
pub use self::__ARFaceAnchor::ARBlendShapeLocationEyeLookInRight;
#[cfg(all(feature = "ARFaceAnchor", feature = "objc2-foundation"))]
pub use self::__ARFaceAnchor::ARBlendShapeLocationEyeLookOutLeft;
#[cfg(all(feature = "ARFaceAnchor", feature = "objc2-foundation"))]
pub use self::__ARFaceAnchor::ARBlendShapeLocationEyeLookOutRight;
#[cfg(all(feature = "ARFaceAnchor", feature = "objc2-foundation"))]
pub use self::__ARFaceAnchor::ARBlendShapeLocationEyeLookUpLeft;
#[cfg(all(feature = "ARFaceAnchor", feature = "objc2-foundation"))]
pub use self::__ARFaceAnchor::ARBlendShapeLocationEyeLookUpRight;
#[cfg(all(feature = "ARFaceAnchor", feature = "objc2-foundation"))]
pub use self::__ARFaceAnchor::ARBlendShapeLocationEyeSquintLeft;
#[cfg(all(feature = "ARFaceAnchor", feature = "objc2-foundation"))]
pub use self::__ARFaceAnchor::ARBlendShapeLocationEyeSquintRight;
#[cfg(all(feature = "ARFaceAnchor", feature = "objc2-foundation"))]
pub use self::__ARFaceAnchor::ARBlendShapeLocationEyeWideLeft;
#[cfg(all(feature = "ARFaceAnchor", feature = "objc2-foundation"))]
pub use self::__ARFaceAnchor::ARBlendShapeLocationEyeWideRight;
#[cfg(all(feature = "ARFaceAnchor", feature = "objc2-foundation"))]
pub use self::__ARFaceAnchor::ARBlendShapeLocationJawForward;
#[cfg(all(feature = "ARFaceAnchor", feature = "objc2-foundation"))]
pub use self::__ARFaceAnchor::ARBlendShapeLocationJawLeft;
#[cfg(all(feature = "ARFaceAnchor", feature = "objc2-foundation"))]
pub use self::__ARFaceAnchor::ARBlendShapeLocationJawOpen;
#[cfg(all(feature = "ARFaceAnchor", feature = "objc2-foundation"))]
pub use self::__ARFaceAnchor::ARBlendShapeLocationJawRight;
#[cfg(all(feature = "ARFaceAnchor", feature = "objc2-foundation"))]
pub use self::__ARFaceAnchor::ARBlendShapeLocationMouthClose;
#[cfg(all(feature = "ARFaceAnchor", feature = "objc2-foundation"))]
pub use self::__ARFaceAnchor::ARBlendShapeLocationMouthDimpleLeft;
#[cfg(all(feature = "ARFaceAnchor", feature = "objc2-foundation"))]
pub use self::__ARFaceAnchor::ARBlendShapeLocationMouthDimpleRight;
#[cfg(all(feature = "ARFaceAnchor", feature = "objc2-foundation"))]
pub use self::__ARFaceAnchor::ARBlendShapeLocationMouthFrownLeft;
#[cfg(all(feature = "ARFaceAnchor", feature = "objc2-foundation"))]
pub use self::__ARFaceAnchor::ARBlendShapeLocationMouthFrownRight;
#[cfg(all(feature = "ARFaceAnchor", feature = "objc2-foundation"))]
pub use self::__ARFaceAnchor::ARBlendShapeLocationMouthFunnel;
#[cfg(all(feature = "ARFaceAnchor", feature = "objc2-foundation"))]
pub use self::__ARFaceAnchor::ARBlendShapeLocationMouthLeft;
#[cfg(all(feature = "ARFaceAnchor", feature = "objc2-foundation"))]
pub use self::__ARFaceAnchor::ARBlendShapeLocationMouthLowerDownLeft;
#[cfg(all(feature = "ARFaceAnchor", feature = "objc2-foundation"))]
pub use self::__ARFaceAnchor::ARBlendShapeLocationMouthLowerDownRight;
#[cfg(all(feature = "ARFaceAnchor", feature = "objc2-foundation"))]
pub use self::__ARFaceAnchor::ARBlendShapeLocationMouthPressLeft;
#[cfg(all(feature = "ARFaceAnchor", feature = "objc2-foundation"))]
pub use self::__ARFaceAnchor::ARBlendShapeLocationMouthPressRight;
#[cfg(all(feature = "ARFaceAnchor", feature = "objc2-foundation"))]
pub use self::__ARFaceAnchor::ARBlendShapeLocationMouthPucker;
#[cfg(all(feature = "ARFaceAnchor", feature = "objc2-foundation"))]
pub use self::__ARFaceAnchor::ARBlendShapeLocationMouthRight;
#[cfg(all(feature = "ARFaceAnchor", feature = "objc2-foundation"))]
pub use self::__ARFaceAnchor::ARBlendShapeLocationMouthRollLower;
#[cfg(all(feature = "ARFaceAnchor", feature = "objc2-foundation"))]
pub use self::__ARFaceAnchor::ARBlendShapeLocationMouthRollUpper;
#[cfg(all(feature = "ARFaceAnchor", feature = "objc2-foundation"))]
pub use self::__ARFaceAnchor::ARBlendShapeLocationMouthShrugLower;
#[cfg(all(feature = "ARFaceAnchor", feature = "objc2-foundation"))]
pub use self::__ARFaceAnchor::ARBlendShapeLocationMouthShrugUpper;
#[cfg(all(feature = "ARFaceAnchor", feature = "objc2-foundation"))]
pub use self::__ARFaceAnchor::ARBlendShapeLocationMouthSmileLeft;
#[cfg(all(feature = "ARFaceAnchor", feature = "objc2-foundation"))]
pub use self::__ARFaceAnchor::ARBlendShapeLocationMouthSmileRight;
#[cfg(all(feature = "ARFaceAnchor", feature = "objc2-foundation"))]
pub use self::__ARFaceAnchor::ARBlendShapeLocationMouthStretchLeft;
#[cfg(all(feature = "ARFaceAnchor", feature = "objc2-foundation"))]
pub use self::__ARFaceAnchor::ARBlendShapeLocationMouthStretchRight;
#[cfg(all(feature = "ARFaceAnchor", feature = "objc2-foundation"))]
pub use self::__ARFaceAnchor::ARBlendShapeLocationMouthUpperUpLeft;
#[cfg(all(feature = "ARFaceAnchor", feature = "objc2-foundation"))]
pub use self::__ARFaceAnchor::ARBlendShapeLocationMouthUpperUpRight;
#[cfg(all(feature = "ARFaceAnchor", feature = "objc2-foundation"))]
pub use self::__ARFaceAnchor::ARBlendShapeLocationNoseSneerLeft;
#[cfg(all(feature = "ARFaceAnchor", feature = "objc2-foundation"))]
pub use self::__ARFaceAnchor::ARBlendShapeLocationNoseSneerRight;
#[cfg(all(feature = "ARFaceAnchor", feature = "objc2-foundation"))]
pub use self::__ARFaceAnchor::ARBlendShapeLocationTongueOut;
#[cfg(all(feature = "ARAnchor", feature = "ARFaceAnchor", feature = "objc2"))]
pub use self::__ARFaceAnchor::ARFaceAnchor;
#[cfg(all(feature = "ARFaceGeometry", feature = "objc2"))]
pub use self::__ARFaceGeometry::ARFaceGeometry;
#[cfg(all(feature = "ARFrame", feature = "objc2"))]
pub use self::__ARFrame::ARFrame;
#[cfg(feature = "ARFrame")]
pub use self::__ARFrame::ARSegmentationClass;
#[cfg(all(feature = "ARFrame", feature = "objc2"))]
pub use self::__ARFrame::ARWorldMappingStatus;
#[cfg(all(feature = "ARAnchor", feature = "ARGeoAnchor", feature = "objc2"))]
pub use self::__ARGeoAnchor::ARGeoAnchor;
#[cfg(all(feature = "ARGeoTrackingTypes", feature = "objc2"))]
pub use self::__ARGeoTrackingTypes::ARAltitudeSource;
#[cfg(all(feature = "ARGeoTrackingTypes", feature = "objc2"))]
pub use self::__ARGeoTrackingTypes::ARGeoTrackingAccuracy;
#[cfg(all(feature = "ARGeoTrackingTypes", feature = "objc2"))]
pub use self::__ARGeoTrackingTypes::ARGeoTrackingState;
#[cfg(all(feature = "ARGeoTrackingTypes", feature = "objc2"))]
pub use self::__ARGeoTrackingTypes::ARGeoTrackingStateReason;
#[cfg(all(feature = "ARGeoTrackingTypes", feature = "objc2"))]
pub use self::__ARGeoTrackingTypes::ARGeoTrackingStatus;
#[cfg(all(feature = "ARHitTestResult", feature = "objc2"))]
pub use self::__ARHitTestResult::ARHitTestResult;
#[cfg(all(feature = "ARHitTestResult", feature = "objc2"))]
pub use self::__ARHitTestResult::ARHitTestResultType;
#[cfg(all(feature = "ARAnchor", feature = "ARImageAnchor", feature = "objc2"))]
pub use self::__ARImageAnchor::ARImageAnchor;
#[cfg(all(feature = "ARLightEstimate", feature = "objc2"))]
pub use self::__ARLightEstimate::ARDirectionalLightEstimate;
#[cfg(all(feature = "ARLightEstimate", feature = "objc2"))]
pub use self::__ARLightEstimate::ARLightEstimate;
#[cfg(all(feature = "ARMatteGenerator", feature = "objc2"))]
pub use self::__ARMatteGenerator::ARMatteGenerator;
#[cfg(all(feature = "ARMatteGenerator", feature = "objc2"))]
pub use self::__ARMatteGenerator::ARMatteResolution;
#[cfg(all(feature = "ARAnchor", feature = "ARMeshAnchor", feature = "objc2"))]
pub use self::__ARMeshAnchor::ARMeshAnchor;
#[cfg(all(feature = "ARMeshGeometry", feature = "objc2"))]
pub use self::__ARMeshGeometry::ARGeometryElement;
#[cfg(all(feature = "ARMeshGeometry", feature = "objc2"))]
pub use self::__ARMeshGeometry::ARGeometryPrimitiveType;
#[cfg(all(feature = "ARMeshGeometry", feature = "objc2"))]
pub use self::__ARMeshGeometry::ARGeometrySource;
#[cfg(all(feature = "ARMeshGeometry", feature = "objc2"))]
pub use self::__ARMeshGeometry::ARMeshClassification;
#[cfg(all(feature = "ARMeshGeometry", feature = "objc2"))]
pub use self::__ARMeshGeometry::ARMeshGeometry;
#[cfg(all(feature = "ARAnchor", feature = "ARObjectAnchor", feature = "objc2"))]
pub use self::__ARObjectAnchor::ARObjectAnchor;
#[cfg(all(
    feature = "ARAnchor",
    feature = "ARParticipantAnchor",
    feature = "objc2"
))]
pub use self::__ARParticipantAnchor::ARParticipantAnchor;
#[cfg(all(feature = "ARAnchor", feature = "ARPlaneAnchor", feature = "objc2"))]
pub use self::__ARPlaneAnchor::ARPlaneAnchor;
#[cfg(all(feature = "ARPlaneAnchor", feature = "objc2"))]
pub use self::__ARPlaneAnchor::ARPlaneAnchorAlignment;
#[cfg(all(feature = "ARPlaneAnchor", feature = "objc2"))]
pub use self::__ARPlaneAnchor::ARPlaneClassification;
#[cfg(all(feature = "ARPlaneAnchor", feature = "objc2"))]
pub use self::__ARPlaneAnchor::ARPlaneClassificationStatus;
#[cfg(all(feature = "ARPlaneAnchor", feature = "objc2"))]
pub use self::__ARPlaneAnchor::ARPlaneExtent;
#[cfg(all(feature = "ARPlaneDetectionTypes", feature = "objc2"))]
pub use self::__ARPlaneDetectionTypes::ARPlaneDetection;
#[cfg(all(feature = "ARPlaneGeometry", feature = "objc2"))]
pub use self::__ARPlaneGeometry::ARPlaneGeometry;
#[cfg(all(feature = "ARPointCloud", feature = "objc2"))]
pub use self::__ARPointCloud::ARPointCloud;
#[cfg(all(feature = "ARRaycastQuery", feature = "objc2"))]
pub use self::__ARRaycastQuery::ARRaycastQuery;
#[cfg(all(feature = "ARRaycastQuery", feature = "objc2"))]
pub use self::__ARRaycastQuery::ARRaycastTarget;
#[cfg(all(feature = "ARRaycastQuery", feature = "objc2"))]
pub use self::__ARRaycastQuery::ARRaycastTargetAlignment;
#[cfg(all(feature = "ARRaycastResult", feature = "objc2"))]
pub use self::__ARRaycastResult::ARRaycastResult;
#[cfg(all(feature = "ARReferenceImage", feature = "objc2"))]
pub use self::__ARReferenceImage::ARReferenceImage;
#[cfg(all(feature = "ARReferenceObject", feature = "objc2"))]
pub use self::__ARReferenceObject::ARReferenceObject;
#[cfg(all(feature = "ARReferenceObject", feature = "objc2-foundation"))]
pub use self::__ARReferenceObject::ARReferenceObjectArchiveExtension;
#[cfg(all(
    feature = "ARSCNFaceGeometry",
    feature = "objc2",
    feature = "objc2-scene-kit"
))]
pub use self::__ARSCNFaceGeometry::ARSCNFaceGeometry;
#[cfg(all(
    feature = "ARSCNPlaneGeometry",
    feature = "objc2",
    feature = "objc2-scene-kit"
))]
pub use self::__ARSCNPlaneGeometry::ARSCNPlaneGeometry;
#[cfg(all(feature = "ARSCNView", feature = "objc2-scene-kit"))]
pub use self::__ARSCNView::ARSCNDebugOptionShowFeaturePoints;
#[cfg(all(feature = "ARSCNView", feature = "objc2-scene-kit"))]
pub use self::__ARSCNView::ARSCNDebugOptionShowWorldOrigin;
#[cfg(all(feature = "ARSCNView", feature = "objc2-scene-kit"))]
pub use self::__ARSCNView::ARSCNDebugOptions;
#[cfg(all(
    feature = "ARSCNView",
    feature = "ARSession",
    feature = "objc2",
    feature = "objc2-scene-kit"
))]
pub use self::__ARSCNView::ARSCNViewDelegate;
#[cfg(all(
    feature = "ARSKView",
    feature = "ARSession",
    feature = "objc2",
    feature = "objc2-sprite-kit"
))]
pub use self::__ARSKView::ARSKViewDelegate;
#[cfg(all(feature = "ARSession", feature = "objc2"))]
pub use self::__ARSession::ARSession;
#[cfg(all(feature = "ARSession", feature = "objc2"))]
pub use self::__ARSession::ARSessionDelegate;
#[cfg(all(feature = "ARSession", feature = "objc2"))]
pub use self::__ARSession::ARSessionObserver;
#[cfg(all(feature = "ARSession", feature = "objc2"))]
pub use self::__ARSession::ARSessionProviding;
#[cfg(all(feature = "ARSession", feature = "objc2"))]
pub use self::__ARSession::ARSessionRunOptions;
#[cfg(all(feature = "ARSkeleton", feature = "objc2"))]
pub use self::__ARSkeleton::ARSkeleton;
#[cfg(all(feature = "ARSkeleton", feature = "objc2"))]
pub use self::__ARSkeleton::ARSkeleton2D;
#[cfg(all(feature = "ARSkeleton", feature = "objc2"))]
pub use self::__ARSkeleton::ARSkeleton3D;
#[cfg(all(
    feature = "ARSkeleton",
    feature = "ARSkeletonDefinition",
    feature = "objc2",
    feature = "objc2-foundation",
    feature = "objc2-vision"
))]
pub use self::__ARSkeleton::ARSkeletonJointNameForRecognizedPointKey;
#[cfg(all(feature = "ARSkeletonDefinition", feature = "objc2"))]
pub use self::__ARSkeletonDefinition::ARSkeletonDefinition;
#[cfg(all(feature = "ARSkeletonDefinition", feature = "objc2-foundation"))]
pub use self::__ARSkeletonDefinition::ARSkeletonJointName;
#[cfg(all(feature = "ARSkeletonDefinition", feature = "objc2-foundation"))]
pub use self::__ARSkeletonDefinition::ARSkeletonJointNameHead;
#[cfg(all(feature = "ARSkeletonDefinition", feature = "objc2-foundation"))]
pub use self::__ARSkeletonDefinition::ARSkeletonJointNameLeftFoot;
#[cfg(all(feature = "ARSkeletonDefinition", feature = "objc2-foundation"))]
pub use self::__ARSkeletonDefinition::ARSkeletonJointNameLeftHand;
#[cfg(all(feature = "ARSkeletonDefinition", feature = "objc2-foundation"))]
pub use self::__ARSkeletonDefinition::ARSkeletonJointNameLeftShoulder;
#[cfg(all(feature = "ARSkeletonDefinition", feature = "objc2-foundation"))]
pub use self::__ARSkeletonDefinition::ARSkeletonJointNameRightFoot;
#[cfg(all(feature = "ARSkeletonDefinition", feature = "objc2-foundation"))]
pub use self::__ARSkeletonDefinition::ARSkeletonJointNameRightHand;
#[cfg(all(feature = "ARSkeletonDefinition", feature = "objc2-foundation"))]
pub use self::__ARSkeletonDefinition::ARSkeletonJointNameRightShoulder;
#[cfg(all(feature = "ARSkeletonDefinition", feature = "objc2-foundation"))]
pub use self::__ARSkeletonDefinition::ARSkeletonJointNameRoot;
#[cfg(all(feature = "ARTrackedRaycast", feature = "objc2"))]
pub use self::__ARTrackedRaycast::ARTrackedRaycast;
#[cfg(all(feature = "ARTrackingStatusTypes", feature = "objc2"))]
pub use self::__ARTrackingStatusTypes::ARTrackingState;
#[cfg(all(feature = "ARTrackingStatusTypes", feature = "objc2"))]
pub use self::__ARTrackingStatusTypes::ARTrackingStateReason;
#[cfg(all(feature = "ARVideoFormat", feature = "objc2"))]
pub use self::__ARVideoFormat::ARVideoFormat;
#[cfg(all(feature = "ARWorldMap", feature = "objc2"))]
pub use self::__ARWorldMap::ARWorldMap;
