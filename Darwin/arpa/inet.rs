//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
#[cfg(feature = "__builtin__")]
use __builtin__::*;
use core::ffi::*;

use crate::ffi::*;

extern "C-unwind" {
    pub fn inet_addr(param1: *const c_char) -> in_addr_t;
}

extern "C-unwind" {
    pub fn inet_ntoa(param1: in_addr) -> *mut c_char;
}

extern "C-unwind" {
    pub fn inet_ntop(
        param1: c_int,
        param1: *const c_void,
        param1: *mut c_char,
        param1: socklen_t,
    ) -> *const c_char;
}

extern "C-unwind" {
    pub fn inet_pton(param1: c_int, param1: *const c_char, param1: *mut c_void) -> c_int;
}

extern "C-unwind" {
    pub fn ascii2addr(param1: c_int, param1: *const c_char, param1: *mut c_void) -> c_int;
}

extern "C-unwind" {
    pub fn addr2ascii(
        param1: c_int,
        param1: *const c_void,
        param1: c_int,
        param1: *mut c_char,
    ) -> *mut c_char;
}

extern "C-unwind" {
    pub fn inet_aton(param1: *const c_char, param1: *mut in_addr) -> c_int;
}

extern "C-unwind" {
    pub fn inet_lnaof(param1: in_addr) -> in_addr_t;
}

extern "C-unwind" {
    pub fn inet_makeaddr(param1: in_addr_t, param1: in_addr_t) -> in_addr;
}

extern "C-unwind" {
    pub fn inet_netof(param1: in_addr) -> in_addr_t;
}

extern "C-unwind" {
    pub fn inet_network(param1: *const c_char) -> in_addr_t;
}

extern "C-unwind" {
    pub fn inet_net_ntop(
        param1: c_int,
        param1: *const c_void,
        param1: c_int,
        param1: *mut c_char,
        param1: __darwin_size_t,
    ) -> *mut c_char;
}

extern "C-unwind" {
    pub fn inet_net_pton(
        param1: c_int,
        param1: *const c_char,
        param1: *mut c_void,
        param1: __darwin_size_t,
    ) -> c_int;
}

extern "C-unwind" {
    pub fn inet_neta(
        param1: in_addr_t,
        param1: *mut c_char,
        param1: __darwin_size_t,
    ) -> *mut c_char;
}

extern "C-unwind" {
    pub fn inet_nsap_addr(param1: *const c_char, param1: *mut c_uchar, param1: c_int) -> c_uint;
}

extern "C-unwind" {
    pub fn inet_nsap_ntoa(
        param1: c_int,
        param1: *const c_uchar,
        param1: *mut c_char,
    ) -> *mut c_char;
}
