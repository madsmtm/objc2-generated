//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use core::ffi::*;
#[cfg(feature = "objc2")]
use objc2::__framework_prelude::*;

use crate::ffi::*;

/// [Apple's documentation](https://developer.apple.com/documentation/darwin/inp_gen_t?language=objc)
pub type inp_gen_t = libc::u_quad_t;

/// [Apple's documentation](https://developer.apple.com/documentation/darwin/in_addr_4in6?language=objc)
#[repr(C)]
#[derive(Clone, Copy, Debug, PartialEq)]
pub struct in_addr_4in6 {
    pub ia46_pad32: [u32; 3],
    pub ia46_addr4: libc::in_addr,
}

unsafe impl Encode for in_addr_4in6 {
    const ENCODING: Encoding = Encoding::Struct(
        "in_addr_4in6",
        &[<[u32; 3]>::ENCODING, <libc::in_addr>::ENCODING],
    );
}

unsafe impl RefEncode for in_addr_4in6 {
    const ENCODING_REF: Encoding = Encoding::Pointer(&Self::ENCODING);
}

/// [Apple's documentation](https://developer.apple.com/documentation/darwin/_inpcb_list_entry?language=objc)
#[repr(C)]
#[derive(Clone, Copy, Debug, PartialEq)]
pub struct _inpcb_list_entry {
    pub le_next: u32,
    pub le_prev: u32,
}

unsafe impl Encode for _inpcb_list_entry {
    const ENCODING: Encoding =
        Encoding::Struct("_inpcb_list_entry", &[<u32>::ENCODING, <u32>::ENCODING]);
}

unsafe impl RefEncode for _inpcb_list_entry {
    const ENCODING_REF: Encoding = Encoding::Pointer(&Self::ENCODING);
}

/// [Apple's documentation](https://developer.apple.com/documentation/darwin/inpcb_inp_dependfaddr?language=objc)
#[repr(C)]
#[derive(Clone, Copy)]
pub union inpcb_inp_dependfaddr {
    pub inp46_foreign: libc::in_addr_4in6,
    pub inp6_foreign: in6_addr,
}

unsafe impl Encode for inpcb_inp_dependfaddr {
    const ENCODING: Encoding =
        Encoding::Union("?", &[<libc::in_addr_4in6>::ENCODING, <in6_addr>::ENCODING]);
}

unsafe impl RefEncode for inpcb_inp_dependfaddr {
    const ENCODING_REF: Encoding = Encoding::Pointer(&Self::ENCODING);
}

/// [Apple's documentation](https://developer.apple.com/documentation/darwin/inpcb_inp_dependladdr?language=objc)
#[repr(C)]
#[derive(Clone, Copy)]
pub union inpcb_inp_dependladdr {
    pub inp46_local: libc::in_addr_4in6,
    pub inp6_local: in6_addr,
}

unsafe impl Encode for inpcb_inp_dependladdr {
    const ENCODING: Encoding =
        Encoding::Union("?", &[<libc::in_addr_4in6>::ENCODING, <in6_addr>::ENCODING]);
}

unsafe impl RefEncode for inpcb_inp_dependladdr {
    const ENCODING_REF: Encoding = Encoding::Pointer(&Self::ENCODING);
}

/// [Apple's documentation](https://developer.apple.com/documentation/darwin/inpcb_inp_dependroute?language=objc)
#[repr(C)]
#[derive(Clone, Copy)]
pub union inpcb_inp_dependroute {
    pub inp4_route: [c_uchar; 20],
    pub inp6_route: [c_uchar; 32],
}

unsafe impl Encode for inpcb_inp_dependroute {
    const ENCODING: Encoding =
        Encoding::Union("?", &[<[c_uchar; 20]>::ENCODING, <[c_uchar; 32]>::ENCODING]);
}

unsafe impl RefEncode for inpcb_inp_dependroute {
    const ENCODING_REF: Encoding = Encoding::Pointer(&Self::ENCODING);
}

/// [Apple's documentation](https://developer.apple.com/documentation/darwin/inpcb_inp_depend4?language=objc)
#[repr(C)]
#[derive(Clone, Copy, Debug, PartialEq)]
pub struct inpcb_inp_depend4 {
    pub inp4_ip_tos: c_uchar,
    pub inp4_options: u32,
    pub inp4_moptions: u32,
}

unsafe impl Encode for inpcb_inp_depend4 {
    const ENCODING: Encoding = Encoding::Struct(
        "?",
        &[<c_uchar>::ENCODING, <u32>::ENCODING, <u32>::ENCODING],
    );
}

unsafe impl RefEncode for inpcb_inp_depend4 {
    const ENCODING_REF: Encoding = Encoding::Pointer(&Self::ENCODING);
}

/// [Apple's documentation](https://developer.apple.com/documentation/darwin/inpcb_inp_depend6?language=objc)
#[repr(C)]
#[derive(Clone, Copy, Debug, PartialEq)]
pub struct inpcb_inp_depend6 {
    pub inp6_options: u32,
    pub inp6_hlim: u8,
    pub unused_uint8_1: u8,
    pub unused_uint16_1: libc::ushort,
    pub inp6_outputopts: u32,
    pub inp6_moptions: u32,
    pub inp6_icmp6filt: u32,
    pub inp6_cksum: c_int,
    pub inp6_ifindex: c_ushort,
    pub inp6_hops: c_short,
}

unsafe impl Encode for inpcb_inp_depend6 {
    const ENCODING: Encoding = Encoding::Struct(
        "?",
        &[
            <u32>::ENCODING,
            <u8>::ENCODING,
            <u8>::ENCODING,
            <libc::ushort>::ENCODING,
            <u32>::ENCODING,
            <u32>::ENCODING,
            <u32>::ENCODING,
            <c_int>::ENCODING,
            <c_ushort>::ENCODING,
            <c_short>::ENCODING,
        ],
    );
}

unsafe impl RefEncode for inpcb_inp_depend6 {
    const ENCODING_REF: Encoding = Encoding::Pointer(&Self::ENCODING);
}

/// [Apple's documentation](https://developer.apple.com/documentation/darwin/inpcb?language=objc)
#[repr(C)]
#[derive(Clone, Copy)]
pub struct inpcb {
    pub inp_hash: libc::_inpcb_list_entry,
    pub reserved1: libc::in_addr,
    pub reserved2: libc::in_addr,
    pub inp_fport: c_ushort,
    pub inp_lport: c_ushort,
    pub inp_list: libc::_inpcb_list_entry,
    pub inp_ppcb: u32,
    pub inp_pcbinfo: u32,
    pub inp_socket: u32,
    pub nat_owner: c_uchar,
    pub nat_cookie: u32,
    pub inp_portlist: libc::_inpcb_list_entry,
    pub inp_phd: u32,
    pub inp_gencnt: libc::inp_gen_t,
    pub inp_flags: c_int,
    pub inp_flow: u32,
    pub inp_vflag: c_uchar,
    pub inp_ip_ttl: c_uchar,
    pub inp_ip_p: c_uchar,
    pub inp_dependfaddr: libc::inpcb_inp_dependfaddr,
    pub inp_dependladdr: libc::inpcb_inp_dependladdr,
    pub inp_dependroute: libc::inpcb_inp_dependroute,
    pub inp_depend4: libc::inpcb_inp_depend4,
    pub inp_depend6: libc::inpcb_inp_depend6,
    pub hash_element: c_int,
    pub inp_saved_ppcb: u32,
    pub inp_sp: u32,
    pub reserved: [u32; 3],
}

unsafe impl Encode for inpcb {
    const ENCODING: Encoding = Encoding::Struct(
        "inpcb",
        &[
            <libc::_inpcb_list_entry>::ENCODING,
            <libc::in_addr>::ENCODING,
            <libc::in_addr>::ENCODING,
            <c_ushort>::ENCODING,
            <c_ushort>::ENCODING,
            <libc::_inpcb_list_entry>::ENCODING,
            <u32>::ENCODING,
            <u32>::ENCODING,
            <u32>::ENCODING,
            <c_uchar>::ENCODING,
            <u32>::ENCODING,
            <libc::_inpcb_list_entry>::ENCODING,
            <u32>::ENCODING,
            <libc::inp_gen_t>::ENCODING,
            <c_int>::ENCODING,
            <u32>::ENCODING,
            <c_uchar>::ENCODING,
            <c_uchar>::ENCODING,
            <c_uchar>::ENCODING,
            <libc::inpcb_inp_dependfaddr>::ENCODING,
            <libc::inpcb_inp_dependladdr>::ENCODING,
            <libc::inpcb_inp_dependroute>::ENCODING,
            <libc::inpcb_inp_depend4>::ENCODING,
            <libc::inpcb_inp_depend6>::ENCODING,
            <c_int>::ENCODING,
            <u32>::ENCODING,
            <u32>::ENCODING,
            <[u32; 3]>::ENCODING,
        ],
    );
}

unsafe impl RefEncode for inpcb {
    const ENCODING_REF: Encoding = Encoding::Pointer(&Self::ENCODING);
}

/// [Apple's documentation](https://developer.apple.com/documentation/darwin/xinpcb?language=objc)
#[repr(C)]
#[derive(Clone, Copy)]
pub struct xinpcb {
    pub xi_len: u32,
    pub xi_inp: libc::inpcb,
    pub xi_socket: libc::xsocket,
    pub xi_alignment_hack: libc::u_quad_t,
}

unsafe impl Encode for xinpcb {
    const ENCODING: Encoding = Encoding::Struct(
        "xinpcb",
        &[
            <u32>::ENCODING,
            <libc::inpcb>::ENCODING,
            <libc::xsocket>::ENCODING,
            <libc::u_quad_t>::ENCODING,
        ],
    );
}

unsafe impl RefEncode for xinpcb {
    const ENCODING_REF: Encoding = Encoding::Pointer(&Self::ENCODING);
}

/// [Apple's documentation](https://developer.apple.com/documentation/darwin/inpcb64_list_entry?language=objc)
#[repr(C)]
#[derive(Clone, Copy, Debug, PartialEq)]
pub struct inpcb64_list_entry {
    pub le_next: u64,
    pub le_prev: u64,
}

unsafe impl Encode for inpcb64_list_entry {
    const ENCODING: Encoding =
        Encoding::Struct("inpcb64_list_entry", &[<u64>::ENCODING, <u64>::ENCODING]);
}

unsafe impl RefEncode for inpcb64_list_entry {
    const ENCODING_REF: Encoding = Encoding::Pointer(&Self::ENCODING);
}

/// [Apple's documentation](https://developer.apple.com/documentation/darwin/xinpcb64_inp_dependfaddr?language=objc)
#[repr(C)]
#[derive(Clone, Copy)]
pub union xinpcb64_inp_dependfaddr {
    pub inp46_foreign: libc::in_addr_4in6,
    pub inp6_foreign: in6_addr,
}

unsafe impl Encode for xinpcb64_inp_dependfaddr {
    const ENCODING: Encoding =
        Encoding::Union("?", &[<libc::in_addr_4in6>::ENCODING, <in6_addr>::ENCODING]);
}

unsafe impl RefEncode for xinpcb64_inp_dependfaddr {
    const ENCODING_REF: Encoding = Encoding::Pointer(&Self::ENCODING);
}

/// [Apple's documentation](https://developer.apple.com/documentation/darwin/xinpcb64_inp_dependladdr?language=objc)
#[repr(C)]
#[derive(Clone, Copy)]
pub union xinpcb64_inp_dependladdr {
    pub inp46_local: libc::in_addr_4in6,
    pub inp6_local: in6_addr,
}

unsafe impl Encode for xinpcb64_inp_dependladdr {
    const ENCODING: Encoding =
        Encoding::Union("?", &[<libc::in_addr_4in6>::ENCODING, <in6_addr>::ENCODING]);
}

unsafe impl RefEncode for xinpcb64_inp_dependladdr {
    const ENCODING_REF: Encoding = Encoding::Pointer(&Self::ENCODING);
}

/// [Apple's documentation](https://developer.apple.com/documentation/darwin/xinpcb64_inp_depend4?language=objc)
#[repr(C)]
#[derive(Clone, Copy, Debug, PartialEq)]
pub struct xinpcb64_inp_depend4 {
    pub inp4_ip_tos: c_uchar,
}

unsafe impl Encode for xinpcb64_inp_depend4 {
    const ENCODING: Encoding = Encoding::Struct("?", &[<c_uchar>::ENCODING]);
}

unsafe impl RefEncode for xinpcb64_inp_depend4 {
    const ENCODING_REF: Encoding = Encoding::Pointer(&Self::ENCODING);
}

/// [Apple's documentation](https://developer.apple.com/documentation/darwin/xinpcb64_inp_depend6?language=objc)
#[repr(C)]
#[derive(Clone, Copy, Debug, PartialEq)]
pub struct xinpcb64_inp_depend6 {
    pub inp6_hlim: u8,
    pub inp6_cksum: c_int,
    pub inp6_ifindex: c_ushort,
    pub inp6_hops: c_short,
}

unsafe impl Encode for xinpcb64_inp_depend6 {
    const ENCODING: Encoding = Encoding::Struct(
        "?",
        &[
            <u8>::ENCODING,
            <c_int>::ENCODING,
            <c_ushort>::ENCODING,
            <c_short>::ENCODING,
        ],
    );
}

unsafe impl RefEncode for xinpcb64_inp_depend6 {
    const ENCODING_REF: Encoding = Encoding::Pointer(&Self::ENCODING);
}

/// [Apple's documentation](https://developer.apple.com/documentation/darwin/xinpcb64?language=objc)
#[repr(C)]
#[derive(Clone, Copy)]
pub struct xinpcb64 {
    pub xi_len: u64,
    pub xi_inpp: u64,
    pub inp_fport: c_ushort,
    pub inp_lport: c_ushort,
    pub inp_list: libc::inpcb64_list_entry,
    pub inp_ppcb: u64,
    pub inp_pcbinfo: u64,
    pub inp_portlist: libc::inpcb64_list_entry,
    pub inp_phd: u64,
    pub inp_gencnt: libc::inp_gen_t,
    pub inp_flags: c_int,
    pub inp_flow: u32,
    pub inp_vflag: c_uchar,
    pub inp_ip_ttl: c_uchar,
    pub inp_ip_p: c_uchar,
    pub inp_dependfaddr: libc::xinpcb64_inp_dependfaddr,
    pub inp_dependladdr: libc::xinpcb64_inp_dependladdr,
    pub inp_depend4: libc::xinpcb64_inp_depend4,
    pub inp_depend6: libc::xinpcb64_inp_depend6,
    pub xi_socket: libc::xsocket64,
    pub xi_alignment_hack: libc::u_quad_t,
}

unsafe impl Encode for xinpcb64 {
    const ENCODING: Encoding = Encoding::Struct(
        "xinpcb64",
        &[
            <u64>::ENCODING,
            <u64>::ENCODING,
            <c_ushort>::ENCODING,
            <c_ushort>::ENCODING,
            <libc::inpcb64_list_entry>::ENCODING,
            <u64>::ENCODING,
            <u64>::ENCODING,
            <libc::inpcb64_list_entry>::ENCODING,
            <u64>::ENCODING,
            <libc::inp_gen_t>::ENCODING,
            <c_int>::ENCODING,
            <u32>::ENCODING,
            <c_uchar>::ENCODING,
            <c_uchar>::ENCODING,
            <c_uchar>::ENCODING,
            <libc::xinpcb64_inp_dependfaddr>::ENCODING,
            <libc::xinpcb64_inp_dependladdr>::ENCODING,
            <libc::xinpcb64_inp_depend4>::ENCODING,
            <libc::xinpcb64_inp_depend6>::ENCODING,
            <libc::xsocket64>::ENCODING,
            <libc::u_quad_t>::ENCODING,
        ],
    );
}

unsafe impl RefEncode for xinpcb64 {
    const ENCODING_REF: Encoding = Encoding::Pointer(&Self::ENCODING);
}

/// [Apple's documentation](https://developer.apple.com/documentation/darwin/xinpgen?language=objc)
#[repr(C)]
#[derive(Clone, Copy, Debug, PartialEq)]
pub struct xinpgen {
    pub xig_len: u32,
    pub xig_count: c_uint,
    pub xig_gen: libc::inp_gen_t,
    pub xig_sogen: libc::so_gen_t,
}

unsafe impl Encode for xinpgen {
    const ENCODING: Encoding = Encoding::Struct(
        "xinpgen",
        &[
            <u32>::ENCODING,
            <c_uint>::ENCODING,
            <libc::inp_gen_t>::ENCODING,
            <libc::so_gen_t>::ENCODING,
        ],
    );
}

unsafe impl RefEncode for xinpgen {
    const ENCODING_REF: Encoding = Encoding::Pointer(&Self::ENCODING);
}
