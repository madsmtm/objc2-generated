//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use core::ffi::*;
#[cfg(feature = "objc2")]
use objc2::__framework_prelude::*;

use crate::ffi::*;

/// [Apple's documentation](https://developer.apple.com/documentation/darwin/in_aliasreq?language=objc)
#[repr(C)]
#[derive(Clone, Copy, Debug, PartialEq)]
pub struct in_aliasreq {
    pub ifra_name: [c_char; 16],
    pub ifra_addr: libc::sockaddr_in,
    pub ifra_broadaddr: libc::sockaddr_in,
    pub ifra_mask: libc::sockaddr_in,
}

unsafe impl Encode for in_aliasreq {
    const ENCODING: Encoding = Encoding::Struct(
        "in_aliasreq",
        &[
            <[c_char; 16]>::ENCODING,
            <libc::sockaddr_in>::ENCODING,
            <libc::sockaddr_in>::ENCODING,
            <libc::sockaddr_in>::ENCODING,
        ],
    );
}

unsafe impl RefEncode for in_aliasreq {
    const ENCODING_REF: Encoding = Encoding::Pointer(&Self::ENCODING);
}

/// [Apple's documentation](https://developer.apple.com/documentation/darwin/kev_in_data?language=objc)
#[repr(C)]
#[derive(Clone, Copy, Debug, PartialEq)]
pub struct kev_in_data {
    pub link_data: libc::net_event_data,
    pub ia_addr: libc::in_addr,
    pub ia_net: u32,
    pub ia_netmask: u32,
    pub ia_subnet: u32,
    pub ia_subnetmask: u32,
    pub ia_netbroadcast: libc::in_addr,
    pub ia_dstaddr: libc::in_addr,
}

unsafe impl Encode for kev_in_data {
    const ENCODING: Encoding = Encoding::Struct(
        "kev_in_data",
        &[
            <libc::net_event_data>::ENCODING,
            <libc::in_addr>::ENCODING,
            <u32>::ENCODING,
            <u32>::ENCODING,
            <u32>::ENCODING,
            <u32>::ENCODING,
            <libc::in_addr>::ENCODING,
            <libc::in_addr>::ENCODING,
        ],
    );
}

unsafe impl RefEncode for kev_in_data {
    const ENCODING_REF: Encoding = Encoding::Pointer(&Self::ENCODING);
}

/// [Apple's documentation](https://developer.apple.com/documentation/darwin/kev_in_collision?language=objc)
#[repr(C)]
#[derive(Clone, Copy, Debug, PartialEq)]
pub struct kev_in_collision {
    pub link_data: libc::net_event_data,
    pub ia_ipaddr: libc::in_addr,
    pub hw_len: c_uchar,
    pub hw_addr: *mut c_uchar,
}

unsafe impl Encode for kev_in_collision {
    const ENCODING: Encoding = Encoding::Struct(
        "kev_in_collision",
        &[
            <libc::net_event_data>::ENCODING,
            <libc::in_addr>::ENCODING,
            <c_uchar>::ENCODING,
            <*mut c_uchar>::ENCODING,
        ],
    );
}

unsafe impl RefEncode for kev_in_collision {
    const ENCODING_REF: Encoding = Encoding::Pointer(&Self::ENCODING);
}

/// [Apple's documentation](https://developer.apple.com/documentation/darwin/kev_in_arpfailure?language=objc)
#[repr(C)]
#[derive(Clone, Copy, Debug, PartialEq)]
pub struct kev_in_arpfailure {
    pub link_data: libc::net_event_data,
}

unsafe impl Encode for kev_in_arpfailure {
    const ENCODING: Encoding =
        Encoding::Struct("kev_in_arpfailure", &[<libc::net_event_data>::ENCODING]);
}

unsafe impl RefEncode for kev_in_arpfailure {
    const ENCODING_REF: Encoding = Encoding::Pointer(&Self::ENCODING);
}

/// [Apple's documentation](https://developer.apple.com/documentation/darwin/kev_in_arpalive?language=objc)
#[repr(C)]
#[derive(Clone, Copy, Debug, PartialEq)]
pub struct kev_in_arpalive {
    pub link_data: libc::net_event_data,
}

unsafe impl Encode for kev_in_arpalive {
    const ENCODING: Encoding =
        Encoding::Struct("kev_in_arpalive", &[<libc::net_event_data>::ENCODING]);
}

unsafe impl RefEncode for kev_in_arpalive {
    const ENCODING_REF: Encoding = Encoding::Pointer(&Self::ENCODING);
}

/// [Apple's documentation](https://developer.apple.com/documentation/darwin/kev_in_portinuse?language=objc)
#[repr(C)]
#[derive(Clone, Copy, Debug, PartialEq)]
pub struct kev_in_portinuse {
    pub port: u16,
    pub req_pid: u32,
    pub reserved: [u32; 2],
}

unsafe impl Encode for kev_in_portinuse {
    const ENCODING: Encoding = Encoding::Struct(
        "kev_in_portinuse",
        &[<u16>::ENCODING, <u32>::ENCODING, <[u32; 2]>::ENCODING],
    );
}

unsafe impl RefEncode for kev_in_portinuse {
    const ENCODING_REF: Encoding = Encoding::Pointer(&Self::ENCODING);
}
