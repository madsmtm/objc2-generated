//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use core::ffi::*;
#[cfg(feature = "objc2")]
use objc2::__framework_prelude::*;

use crate::ffi::*;

/// [Apple's documentation](https://developer.apple.com/documentation/darwin/tcp_seq?language=objc)
pub type tcp_seq = u32;

/// [Apple's documentation](https://developer.apple.com/documentation/darwin/tcp_cc?language=objc)
pub type tcp_cc = u32;

/// [Apple's documentation](https://developer.apple.com/documentation/darwin/tcphdr?language=objc)
#[repr(C)]
#[derive(Clone, Copy, Debug, PartialEq)]
pub struct tcphdr {
    pub th_sport: c_ushort,
    pub th_dport: c_ushort,
    pub th_seq: libc::tcp_seq,
    pub th_ack: libc::tcp_seq,
    pub th_x2: c_uint,
    pub th_off: c_uint,
    pub th_flags: c_uchar,
    pub th_win: c_ushort,
    pub th_sum: c_ushort,
    pub th_urp: c_ushort,
}

unsafe impl Encode for tcphdr {
    const ENCODING: Encoding = Encoding::Struct(
        "tcphdr",
        &[
            <c_ushort>::ENCODING,
            <c_ushort>::ENCODING,
            <libc::tcp_seq>::ENCODING,
            <libc::tcp_seq>::ENCODING,
            <c_uint>::ENCODING,
            <c_uint>::ENCODING,
            <c_uchar>::ENCODING,
            <c_ushort>::ENCODING,
            <c_ushort>::ENCODING,
            <c_ushort>::ENCODING,
        ],
    );
}

unsafe impl RefEncode for tcphdr {
    const ENCODING_REF: Encoding = Encoding::Pointer(&Self::ENCODING);
}

/// [Apple's documentation](https://developer.apple.com/documentation/darwin/tcp_connection_info?language=objc)
#[repr(C)]
#[derive(Clone, Copy, Debug, PartialEq)]
pub struct tcp_connection_info {
    pub tcpi_state: u8,
    pub tcpi_snd_wscale: u8,
    pub tcpi_rcv_wscale: u8,
    pub(crate) __pad1: u8,
    pub tcpi_options: u32,
    pub tcpi_flags: u32,
    pub tcpi_rto: u32,
    pub tcpi_maxseg: u32,
    pub tcpi_snd_ssthresh: u32,
    pub tcpi_snd_cwnd: u32,
    pub tcpi_snd_wnd: u32,
    pub tcpi_snd_sbbytes: u32,
    pub tcpi_rcv_wnd: u32,
    pub tcpi_rttcur: u32,
    pub tcpi_srtt: u32,
    pub tcpi_rttvar: u32,
    pub tcpi_tfo_cookie_req: u32,
    pub tcpi_tfo_cookie_rcv: u32,
    pub tcpi_tfo_syn_loss: u32,
    pub tcpi_tfo_syn_data_sent: u32,
    pub tcpi_tfo_syn_data_acked: u32,
    pub tcpi_tfo_syn_data_rcv: u32,
    pub tcpi_tfo_cookie_req_rcv: u32,
    pub tcpi_tfo_cookie_sent: u32,
    pub tcpi_tfo_cookie_invalid: u32,
    pub tcpi_tfo_cookie_wrong: u32,
    pub tcpi_tfo_no_cookie_rcv: u32,
    pub tcpi_tfo_heuristics_disable: u32,
    pub tcpi_tfo_send_blackhole: u32,
    pub tcpi_tfo_recv_blackhole: u32,
    pub tcpi_tfo_onebyte_proxy: u32,
    pub(crate) __pad2: u32,
    pub tcpi_txpackets: u64,
    pub tcpi_txbytes: u64,
    pub tcpi_txretransmitbytes: u64,
    pub tcpi_rxpackets: u64,
    pub tcpi_rxbytes: u64,
    pub tcpi_rxoutoforderbytes: u64,
    pub tcpi_txretransmitpackets: u64,
}

unsafe impl Encode for tcp_connection_info {
    const ENCODING: Encoding = Encoding::Struct(
        "tcp_connection_info",
        &[
            <u8>::ENCODING,
            <u8>::ENCODING,
            <u8>::ENCODING,
            <u8>::ENCODING,
            <u32>::ENCODING,
            <u32>::ENCODING,
            <u32>::ENCODING,
            <u32>::ENCODING,
            <u32>::ENCODING,
            <u32>::ENCODING,
            <u32>::ENCODING,
            <u32>::ENCODING,
            <u32>::ENCODING,
            <u32>::ENCODING,
            <u32>::ENCODING,
            <u32>::ENCODING,
            <u32>::ENCODING,
            <u32>::ENCODING,
            <u32>::ENCODING,
            <u32>::ENCODING,
            <u32>::ENCODING,
            <u32>::ENCODING,
            <u32>::ENCODING,
            <u32>::ENCODING,
            <u32>::ENCODING,
            <u32>::ENCODING,
            <u32>::ENCODING,
            <u32>::ENCODING,
            <u32>::ENCODING,
            <u32>::ENCODING,
            <u32>::ENCODING,
            <u32>::ENCODING,
            <u64>::ENCODING,
            <u64>::ENCODING,
            <u64>::ENCODING,
            <u64>::ENCODING,
            <u64>::ENCODING,
            <u64>::ENCODING,
            <u64>::ENCODING,
        ],
    );
}

unsafe impl RefEncode for tcp_connection_info {
    const ENCODING_REF: Encoding = Encoding::Pointer(&Self::ENCODING);
}
