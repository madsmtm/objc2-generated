//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use core::ffi::*;
#[cfg(feature = "objc2")]
use objc2::__framework_prelude::*;

use crate::ffi::*;

/// [Apple's documentation](https://developer.apple.com/documentation/darwin/ipversion?language=objc)
pub const IPVERSION: c_uint = 4;
/// [Apple's documentation](https://developer.apple.com/documentation/darwin/ip?language=objc)
#[repr(C)]
#[derive(Clone, Copy, Debug, PartialEq)]
pub struct ip {
    pub ip_hl: c_uint,
    pub ip_v: c_uint,
    pub ip_tos: c_uchar,
    pub ip_len: c_ushort,
    pub ip_id: c_ushort,
    pub ip_off: c_ushort,
    pub ip_ttl: c_uchar,
    pub ip_p: c_uchar,
    pub ip_sum: c_ushort,
    pub ip_src: libc::in_addr,
    pub ip_dst: libc::in_addr,
}

unsafe impl Encode for ip {
    const ENCODING: Encoding = Encoding::Struct(
        "ip",
        &[
            <c_uint>::ENCODING,
            <c_uint>::ENCODING,
            <c_uchar>::ENCODING,
            <c_ushort>::ENCODING,
            <c_ushort>::ENCODING,
            <c_ushort>::ENCODING,
            <c_uchar>::ENCODING,
            <c_uchar>::ENCODING,
            <c_ushort>::ENCODING,
            <libc::in_addr>::ENCODING,
            <libc::in_addr>::ENCODING,
        ],
    );
}

unsafe impl RefEncode for ip {
    const ENCODING_REF: Encoding = Encoding::Pointer(&Self::ENCODING);
}

/// [Apple's documentation](https://developer.apple.com/documentation/darwin/ipt_ta?language=objc)
#[repr(C)]
#[derive(Clone, Copy, Debug, PartialEq)]
pub struct ipt_ta {
    pub ipt_addr: libc::in_addr,
    pub ipt_time: libc::n_long,
}

unsafe impl Encode for ipt_ta {
    const ENCODING: Encoding = Encoding::Struct(
        "ipt_ta",
        &[<libc::in_addr>::ENCODING, <libc::n_long>::ENCODING],
    );
}

unsafe impl RefEncode for ipt_ta {
    const ENCODING_REF: Encoding = Encoding::Pointer(&Self::ENCODING);
}

/// [Apple's documentation](https://developer.apple.com/documentation/darwin/ipt_timestamp?language=objc)
#[repr(C)]
#[derive(Clone, Copy)]
pub union ipt_timestamp {
    pub ipt_time: [libc::n_long; 1],
    pub ipt_ta: [libc::ipt_ta; 1],
}

unsafe impl Encode for ipt_timestamp {
    const ENCODING: Encoding = Encoding::Union(
        "ipt_timestamp",
        &[<[libc::n_long; 1]>::ENCODING, <[libc::ipt_ta; 1]>::ENCODING],
    );
}

unsafe impl RefEncode for ipt_timestamp {
    const ENCODING_REF: Encoding = Encoding::Pointer(&Self::ENCODING);
}

/// [Apple's documentation](https://developer.apple.com/documentation/darwin/ip_timestamp?language=objc)
#[repr(C)]
#[derive(Clone, Copy)]
pub struct ip_timestamp {
    pub ipt_code: c_uchar,
    pub ipt_len: c_uchar,
    pub ipt_ptr: c_uchar,
    pub ipt_flg: c_uint,
    pub ipt_oflw: c_uint,
    pub ipt_timestamp: libc::ipt_timestamp,
}

unsafe impl Encode for ip_timestamp {
    const ENCODING: Encoding = Encoding::Struct(
        "ip_timestamp",
        &[
            <c_uchar>::ENCODING,
            <c_uchar>::ENCODING,
            <c_uchar>::ENCODING,
            <c_uint>::ENCODING,
            <c_uint>::ENCODING,
            <libc::ipt_timestamp>::ENCODING,
        ],
    );
}

unsafe impl RefEncode for ip_timestamp {
    const ENCODING_REF: Encoding = Encoding::Pointer(&Self::ENCODING);
}
