//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
#[cfg(feature = "__builtin__")]
use __builtin__::*;
use core::ffi::*;
#[cfg(feature = "objc2")]
use objc2::__framework_prelude::*;

use crate::ffi::*;

/// [Apple's documentation](https://developer.apple.com/documentation/darwin/in_addr?language=objc)
#[repr(C)]
#[derive(Clone, Copy, Debug, PartialEq)]
pub struct in_addr {
    pub s_addr: in_addr_t,
}

unsafe impl Encode for in_addr {
    const ENCODING: Encoding = Encoding::Struct("in_addr", &[<in_addr_t>::ENCODING]);
}

unsafe impl RefEncode for in_addr {
    const ENCODING_REF: Encoding = Encoding::Pointer(&Self::ENCODING);
}

/// [Apple's documentation](https://developer.apple.com/documentation/darwin/sockaddr_in?language=objc)
#[repr(C)]
#[derive(Clone, Copy, Debug, PartialEq)]
pub struct sockaddr_in {
    pub sin_len: u8,
    pub sin_family: libc::sa_family_t,
    pub sin_port: in_port_t,
    pub sin_addr: libc::in_addr,
    pub sin_zero: [c_char; 8],
}

unsafe impl Encode for sockaddr_in {
    const ENCODING: Encoding = Encoding::Struct(
        "sockaddr_in",
        &[
            <u8>::ENCODING,
            <libc::sa_family_t>::ENCODING,
            <in_port_t>::ENCODING,
            <libc::in_addr>::ENCODING,
            <[c_char; 8]>::ENCODING,
        ],
    );
}

unsafe impl RefEncode for sockaddr_in {
    const ENCODING_REF: Encoding = Encoding::Pointer(&Self::ENCODING);
}

/// [Apple's documentation](https://developer.apple.com/documentation/darwin/ip_opts?language=objc)
#[repr(C)]
#[derive(Clone, Copy, Debug, PartialEq)]
pub struct ip_opts {
    pub ip_dst: libc::in_addr,
    pub ip_opts: [c_char; 40],
}

unsafe impl Encode for ip_opts {
    const ENCODING: Encoding = Encoding::Struct(
        "ip_opts",
        &[<libc::in_addr>::ENCODING, <[c_char; 40]>::ENCODING],
    );
}

unsafe impl RefEncode for ip_opts {
    const ENCODING_REF: Encoding = Encoding::Pointer(&Self::ENCODING);
}

/// [Apple's documentation](https://developer.apple.com/documentation/darwin/ip_mreq?language=objc)
#[repr(C)]
#[derive(Clone, Copy, Debug, PartialEq)]
pub struct ip_mreq {
    pub imr_multiaddr: libc::in_addr,
    pub imr_interface: libc::in_addr,
}

unsafe impl Encode for ip_mreq {
    const ENCODING: Encoding = Encoding::Struct(
        "ip_mreq",
        &[<libc::in_addr>::ENCODING, <libc::in_addr>::ENCODING],
    );
}

unsafe impl RefEncode for ip_mreq {
    const ENCODING_REF: Encoding = Encoding::Pointer(&Self::ENCODING);
}

/// [Apple's documentation](https://developer.apple.com/documentation/darwin/ip_mreqn?language=objc)
#[repr(C)]
#[derive(Clone, Copy, Debug, PartialEq)]
pub struct ip_mreqn {
    pub imr_multiaddr: libc::in_addr,
    pub imr_address: libc::in_addr,
    pub imr_ifindex: c_int,
}

unsafe impl Encode for ip_mreqn {
    const ENCODING: Encoding = Encoding::Struct(
        "ip_mreqn",
        &[
            <libc::in_addr>::ENCODING,
            <libc::in_addr>::ENCODING,
            <c_int>::ENCODING,
        ],
    );
}

unsafe impl RefEncode for ip_mreqn {
    const ENCODING_REF: Encoding = Encoding::Pointer(&Self::ENCODING);
}

/// [Apple's documentation](https://developer.apple.com/documentation/darwin/ip_mreq_source?language=objc)
#[repr(C)]
#[derive(Clone, Copy, Debug, PartialEq)]
pub struct ip_mreq_source {
    pub imr_multiaddr: libc::in_addr,
    pub imr_sourceaddr: libc::in_addr,
    pub imr_interface: libc::in_addr,
}

unsafe impl Encode for ip_mreq_source {
    const ENCODING: Encoding = Encoding::Struct(
        "ip_mreq_source",
        &[
            <libc::in_addr>::ENCODING,
            <libc::in_addr>::ENCODING,
            <libc::in_addr>::ENCODING,
        ],
    );
}

unsafe impl RefEncode for ip_mreq_source {
    const ENCODING_REF: Encoding = Encoding::Pointer(&Self::ENCODING);
}

/// [Apple's documentation](https://developer.apple.com/documentation/darwin/group_req?language=objc)
#[repr(C)]
#[derive(Clone, Copy, Debug, PartialEq)]
pub struct group_req {
    pub gr_interface: u32,
    pub gr_group: libc::sockaddr_storage,
}

unsafe impl Encode for group_req {
    const ENCODING: Encoding = Encoding::Struct(
        "group_req",
        &[<u32>::ENCODING, <libc::sockaddr_storage>::ENCODING],
    );
}

unsafe impl RefEncode for group_req {
    const ENCODING_REF: Encoding = Encoding::Pointer(&Self::ENCODING);
}

/// [Apple's documentation](https://developer.apple.com/documentation/darwin/group_source_req?language=objc)
#[repr(C)]
#[derive(Clone, Copy, Debug, PartialEq)]
pub struct group_source_req {
    pub gsr_interface: u32,
    pub gsr_group: libc::sockaddr_storage,
    pub gsr_source: libc::sockaddr_storage,
}

unsafe impl Encode for group_source_req {
    const ENCODING: Encoding = Encoding::Struct(
        "group_source_req",
        &[
            <u32>::ENCODING,
            <libc::sockaddr_storage>::ENCODING,
            <libc::sockaddr_storage>::ENCODING,
        ],
    );
}

unsafe impl RefEncode for group_source_req {
    const ENCODING_REF: Encoding = Encoding::Pointer(&Self::ENCODING);
}

/// [Apple's documentation](https://developer.apple.com/documentation/darwin/__msfilterreq?language=objc)
#[repr(C)]
#[derive(Clone, Copy, Debug, PartialEq)]
pub struct __msfilterreq {
    pub msfr_ifindex: u32,
    pub msfr_fmode: u32,
    pub msfr_nsrcs: u32,
    pub(crate) __msfr_align: u32,
    pub msfr_group: libc::sockaddr_storage,
    pub msfr_srcs: *mut libc::sockaddr_storage,
}

unsafe impl Encode for __msfilterreq {
    const ENCODING: Encoding = Encoding::Struct(
        "__msfilterreq",
        &[
            <u32>::ENCODING,
            <u32>::ENCODING,
            <u32>::ENCODING,
            <u32>::ENCODING,
            <libc::sockaddr_storage>::ENCODING,
            <*mut libc::sockaddr_storage>::ENCODING,
        ],
    );
}

unsafe impl RefEncode for __msfilterreq {
    const ENCODING_REF: Encoding = Encoding::Pointer(&Self::ENCODING);
}

extern "C-unwind" {
    pub fn setipv4sourcefilter(
        param1: c_int,
        param1: libc::in_addr,
        param1: libc::in_addr,
        param1: u32,
        param1: u32,
        param1: *mut libc::in_addr,
    ) -> c_int;
}

extern "C-unwind" {
    pub fn getipv4sourcefilter(
        param1: c_int,
        param1: libc::in_addr,
        param1: libc::in_addr,
        param1: *mut u32,
        param1: *mut u32,
        param1: *mut libc::in_addr,
    ) -> c_int;
}

extern "C-unwind" {
    pub fn setsourcefilter(
        param1: c_int,
        param1: u32,
        param1: *mut libc::sockaddr,
        param1: libc::socklen_t,
        param1: u32,
        param1: u32,
        param1: *mut libc::sockaddr_storage,
    ) -> c_int;
}

extern "C-unwind" {
    pub fn getsourcefilter(
        param1: c_int,
        param1: u32,
        param1: *mut libc::sockaddr,
        param1: libc::socklen_t,
        param1: *mut u32,
        param1: *mut u32,
        param1: *mut libc::sockaddr_storage,
    ) -> c_int;
}

/// [Apple's documentation](https://developer.apple.com/documentation/darwin/in_pktinfo?language=objc)
#[repr(C)]
#[derive(Clone, Copy, Debug, PartialEq)]
pub struct in_pktinfo {
    pub ipi_ifindex: c_uint,
    pub ipi_spec_dst: libc::in_addr,
    pub ipi_addr: libc::in_addr,
}

unsafe impl Encode for in_pktinfo {
    const ENCODING: Encoding = Encoding::Struct(
        "in_pktinfo",
        &[
            <c_uint>::ENCODING,
            <libc::in_addr>::ENCODING,
            <libc::in_addr>::ENCODING,
        ],
    );
}

unsafe impl RefEncode for in_pktinfo {
    const ENCODING_REF: Encoding = Encoding::Pointer(&Self::ENCODING);
}

extern "C-unwind" {
    pub fn bindresvport(param1: c_int, param1: *mut libc::sockaddr_in) -> c_int;
}

extern "C-unwind" {
    pub fn bindresvport_sa(param1: c_int, param1: *mut libc::sockaddr) -> c_int;
}
