//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use core::ffi::*;
#[cfg(feature = "objc2")]
use objc2::__framework_prelude::*;

use crate::ffi::*;

/// [Apple's documentation](https://developer.apple.com/documentation/darwin/ipovly?language=objc)
#[repr(C)]
#[derive(Clone, Copy, Debug, PartialEq)]
pub struct ipovly {
    pub ih_x1: [c_uchar; 9],
    pub ih_pr: c_uchar,
    pub ih_len: c_ushort,
    pub ih_src: libc::in_addr,
    pub ih_dst: libc::in_addr,
}

unsafe impl Encode for ipovly {
    const ENCODING: Encoding = Encoding::Struct(
        "ipovly",
        &[
            <[c_uchar; 9]>::ENCODING,
            <c_uchar>::ENCODING,
            <c_ushort>::ENCODING,
            <libc::in_addr>::ENCODING,
            <libc::in_addr>::ENCODING,
        ],
    );
}

unsafe impl RefEncode for ipovly {
    const ENCODING_REF: Encoding = Encoding::Pointer(&Self::ENCODING);
}

/// [Apple's documentation](https://developer.apple.com/documentation/darwin/ipstat?language=objc)
#[repr(C)]
#[derive(Clone, Copy, Debug, PartialEq)]
pub struct ipstat {
    pub ips_total: u32,
    pub ips_badsum: u32,
    pub ips_tooshort: u32,
    pub ips_toosmall: u32,
    pub ips_badhlen: u32,
    pub ips_badlen: u32,
    pub ips_fragments: u32,
    pub ips_fragdropped: u32,
    pub ips_fragtimeout: u32,
    pub ips_forward: u32,
    pub ips_fastforward: u32,
    pub ips_cantforward: u32,
    pub ips_redirectsent: u32,
    pub ips_noproto: u32,
    pub ips_delivered: u32,
    pub ips_localout: u32,
    pub ips_odropped: u32,
    pub ips_reassembled: u32,
    pub ips_fragmented: u32,
    pub ips_ofragments: u32,
    pub ips_cantfrag: u32,
    pub ips_badoptions: u32,
    pub ips_noroute: u32,
    pub ips_badvers: u32,
    pub ips_rawout: u32,
    pub ips_toolong: u32,
    pub ips_notmember: u32,
    pub ips_nogif: u32,
    pub ips_badaddr: u32,
    pub ips_pktdropcntrl: u32,
    pub ips_rcv_swcsum: u32,
    pub ips_rcv_swcsum_bytes: u32,
    pub ips_snd_swcsum: u32,
    pub ips_snd_swcsum_bytes: u32,
    pub ips_adj: u32,
    pub ips_adj_hwcsum_clr: u32,
    pub ips_rxc_collisions: u32,
    pub ips_rxc_chained: u32,
    pub ips_rxc_notchain: u32,
    pub ips_rxc_chainsz_gt2: u32,
    pub ips_rxc_chainsz_gt4: u32,
    pub ips_rxc_notlist: u32,
    pub ips_raw_sappend_fail: u32,
    pub ips_necp_policy_drop: u32,
    pub ips_rcv_if_weak_match: u32,
    pub ips_rcv_if_no_match: u32,
    pub ips_input_ipf_drop: u32,
    pub ips_input_no_proto: u32,
    pub ips_src_addr_not_avail: u32,
}

unsafe impl Encode for ipstat {
    const ENCODING: Encoding = Encoding::Struct(
        "ipstat",
        &[
            <u32>::ENCODING,
            <u32>::ENCODING,
            <u32>::ENCODING,
            <u32>::ENCODING,
            <u32>::ENCODING,
            <u32>::ENCODING,
            <u32>::ENCODING,
            <u32>::ENCODING,
            <u32>::ENCODING,
            <u32>::ENCODING,
            <u32>::ENCODING,
            <u32>::ENCODING,
            <u32>::ENCODING,
            <u32>::ENCODING,
            <u32>::ENCODING,
            <u32>::ENCODING,
            <u32>::ENCODING,
            <u32>::ENCODING,
            <u32>::ENCODING,
            <u32>::ENCODING,
            <u32>::ENCODING,
            <u32>::ENCODING,
            <u32>::ENCODING,
            <u32>::ENCODING,
            <u32>::ENCODING,
            <u32>::ENCODING,
            <u32>::ENCODING,
            <u32>::ENCODING,
            <u32>::ENCODING,
            <u32>::ENCODING,
            <u32>::ENCODING,
            <u32>::ENCODING,
            <u32>::ENCODING,
            <u32>::ENCODING,
            <u32>::ENCODING,
            <u32>::ENCODING,
            <u32>::ENCODING,
            <u32>::ENCODING,
            <u32>::ENCODING,
            <u32>::ENCODING,
            <u32>::ENCODING,
            <u32>::ENCODING,
            <u32>::ENCODING,
            <u32>::ENCODING,
            <u32>::ENCODING,
            <u32>::ENCODING,
            <u32>::ENCODING,
            <u32>::ENCODING,
            <u32>::ENCODING,
        ],
    );
}

unsafe impl RefEncode for ipstat {
    const ENCODING_REF: Encoding = Encoding::Pointer(&Self::ENCODING);
}

/// [Apple's documentation](https://developer.apple.com/documentation/darwin/ip_linklocal_stat?language=objc)
#[repr(C)]
#[derive(Clone, Copy, Debug, PartialEq)]
pub struct ip_linklocal_stat {
    pub iplls_in_total: u32,
    pub iplls_in_badttl: u32,
    pub iplls_out_total: u32,
    pub iplls_out_badttl: u32,
}

unsafe impl Encode for ip_linklocal_stat {
    const ENCODING: Encoding = Encoding::Struct(
        "ip_linklocal_stat",
        &[
            <u32>::ENCODING,
            <u32>::ENCODING,
            <u32>::ENCODING,
            <u32>::ENCODING,
        ],
    );
}

unsafe impl RefEncode for ip_linklocal_stat {
    const ENCODING_REF: Encoding = Encoding::Pointer(&Self::ENCODING);
}
