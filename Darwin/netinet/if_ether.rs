//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use core::ffi::*;
#[cfg(feature = "objc2")]
use objc2::__framework_prelude::*;

use crate::ffi::*;

/// [Apple's documentation](https://developer.apple.com/documentation/darwin/ether_arp?language=objc)
#[repr(C)]
#[derive(Clone, Copy, Debug, PartialEq)]
pub struct ether_arp {
    pub ea_hdr: libc::arphdr,
    pub arp_sha: [c_uchar; 6],
    pub arp_spa: [c_uchar; 4],
    pub arp_tha: [c_uchar; 6],
    pub arp_tpa: [c_uchar; 4],
}

unsafe impl Encode for ether_arp {
    const ENCODING: Encoding = Encoding::Struct(
        "ether_arp",
        &[
            <libc::arphdr>::ENCODING,
            <[c_uchar; 6]>::ENCODING,
            <[c_uchar; 4]>::ENCODING,
            <[c_uchar; 6]>::ENCODING,
            <[c_uchar; 4]>::ENCODING,
        ],
    );
}

unsafe impl RefEncode for ether_arp {
    const ENCODING_REF: Encoding = Encoding::Pointer(&Self::ENCODING);
}

/// [Apple's documentation](https://developer.apple.com/documentation/darwin/sockaddr_inarp?language=objc)
#[repr(C)]
#[derive(Clone, Copy, Debug, PartialEq)]
pub struct sockaddr_inarp {
    pub sin_len: c_uchar,
    pub sin_family: c_uchar,
    pub sin_port: c_ushort,
    pub sin_addr: libc::in_addr,
    pub sin_srcaddr: libc::in_addr,
    pub sin_tos: c_ushort,
    pub sin_other: c_ushort,
}

unsafe impl Encode for sockaddr_inarp {
    const ENCODING: Encoding = Encoding::Struct(
        "sockaddr_inarp",
        &[
            <c_uchar>::ENCODING,
            <c_uchar>::ENCODING,
            <c_ushort>::ENCODING,
            <libc::in_addr>::ENCODING,
            <libc::in_addr>::ENCODING,
            <c_ushort>::ENCODING,
            <c_ushort>::ENCODING,
        ],
    );
}

unsafe impl RefEncode for sockaddr_inarp {
    const ENCODING_REF: Encoding = Encoding::Pointer(&Self::ENCODING);
}
