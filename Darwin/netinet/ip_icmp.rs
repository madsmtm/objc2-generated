//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use core::ffi::*;
#[cfg(feature = "objc2")]
use objc2::__framework_prelude::*;

use crate::ffi::*;

/// [Apple's documentation](https://developer.apple.com/documentation/darwin/icmp_ra_addr?language=objc)
#[repr(C)]
#[derive(Clone, Copy, Debug, PartialEq)]
pub struct icmp_ra_addr {
    pub ira_addr: u32,
    pub ira_preference: u32,
}

unsafe impl Encode for icmp_ra_addr {
    const ENCODING: Encoding =
        Encoding::Struct("icmp_ra_addr", &[<u32>::ENCODING, <u32>::ENCODING]);
}

unsafe impl RefEncode for icmp_ra_addr {
    const ENCODING_REF: Encoding = Encoding::Pointer(&Self::ENCODING);
}

/// [Apple's documentation](https://developer.apple.com/documentation/darwin/ih_idseq?language=objc)
#[repr(C)]
#[derive(Clone, Copy, Debug, PartialEq)]
pub struct ih_idseq {
    pub icd_id: libc::n_short,
    pub icd_seq: libc::n_short,
}

unsafe impl Encode for ih_idseq {
    const ENCODING: Encoding = Encoding::Struct(
        "ih_idseq",
        &[<libc::n_short>::ENCODING, <libc::n_short>::ENCODING],
    );
}

unsafe impl RefEncode for ih_idseq {
    const ENCODING_REF: Encoding = Encoding::Pointer(&Self::ENCODING);
}

/// [Apple's documentation](https://developer.apple.com/documentation/darwin/ih_pmtu?language=objc)
#[repr(C)]
#[derive(Clone, Copy, Debug, PartialEq)]
pub struct ih_pmtu {
    pub ipm_void: libc::n_short,
    pub ipm_nextmtu: libc::n_short,
}

unsafe impl Encode for ih_pmtu {
    const ENCODING: Encoding = Encoding::Struct(
        "ih_pmtu",
        &[<libc::n_short>::ENCODING, <libc::n_short>::ENCODING],
    );
}

unsafe impl RefEncode for ih_pmtu {
    const ENCODING_REF: Encoding = Encoding::Pointer(&Self::ENCODING);
}

/// [Apple's documentation](https://developer.apple.com/documentation/darwin/ih_rtradv?language=objc)
#[repr(C)]
#[derive(Clone, Copy, Debug, PartialEq)]
pub struct ih_rtradv {
    pub irt_num_addrs: c_uchar,
    pub irt_wpa: c_uchar,
    pub irt_lifetime: u16,
}

unsafe impl Encode for ih_rtradv {
    const ENCODING: Encoding = Encoding::Struct(
        "ih_rtradv",
        &[<c_uchar>::ENCODING, <c_uchar>::ENCODING, <u16>::ENCODING],
    );
}

unsafe impl RefEncode for ih_rtradv {
    const ENCODING_REF: Encoding = Encoding::Pointer(&Self::ENCODING);
}

/// [Apple's documentation](https://developer.apple.com/documentation/darwin/icmp_icmp_hun?language=objc)
#[repr(C)]
#[derive(Clone, Copy)]
pub union icmp_icmp_hun {
    pub ih_pptr: c_uchar,
    pub ih_gwaddr: libc::in_addr,
    pub ih_idseq: libc::ih_idseq,
    pub ih_void: c_int,
    pub ih_pmtu: libc::ih_pmtu,
    pub ih_rtradv: libc::ih_rtradv,
}

unsafe impl Encode for icmp_icmp_hun {
    const ENCODING: Encoding = Encoding::Union(
        "?",
        &[
            <c_uchar>::ENCODING,
            <libc::in_addr>::ENCODING,
            <libc::ih_idseq>::ENCODING,
            <c_int>::ENCODING,
            <libc::ih_pmtu>::ENCODING,
            <libc::ih_rtradv>::ENCODING,
        ],
    );
}

unsafe impl RefEncode for icmp_icmp_hun {
    const ENCODING_REF: Encoding = Encoding::Pointer(&Self::ENCODING);
}

/// [Apple's documentation](https://developer.apple.com/documentation/darwin/id_ts?language=objc)
#[repr(C)]
#[derive(Clone, Copy, Debug, PartialEq)]
pub struct id_ts {
    pub its_otime: libc::n_time,
    pub its_rtime: libc::n_time,
    pub its_ttime: libc::n_time,
}

unsafe impl Encode for id_ts {
    const ENCODING: Encoding = Encoding::Struct(
        "id_ts",
        &[
            <libc::n_time>::ENCODING,
            <libc::n_time>::ENCODING,
            <libc::n_time>::ENCODING,
        ],
    );
}

unsafe impl RefEncode for id_ts {
    const ENCODING_REF: Encoding = Encoding::Pointer(&Self::ENCODING);
}

/// [Apple's documentation](https://developer.apple.com/documentation/darwin/id_ip?language=objc)
#[repr(C)]
#[derive(Clone, Copy, Debug, PartialEq)]
pub struct id_ip {
    pub idi_ip: libc::ip,
}

unsafe impl Encode for id_ip {
    const ENCODING: Encoding = Encoding::Struct("id_ip", &[<libc::ip>::ENCODING]);
}

unsafe impl RefEncode for id_ip {
    const ENCODING_REF: Encoding = Encoding::Pointer(&Self::ENCODING);
}

/// [Apple's documentation](https://developer.apple.com/documentation/darwin/icmp_icmp_dun?language=objc)
#[repr(C)]
#[derive(Clone, Copy)]
pub union icmp_icmp_dun {
    pub id_ts: libc::id_ts,
    pub id_ip: libc::id_ip,
    pub id_radv: libc::icmp_ra_addr,
    pub id_mask: u32,
    pub id_data: [c_char; 1],
}

unsafe impl Encode for icmp_icmp_dun {
    const ENCODING: Encoding = Encoding::Union(
        "?",
        &[
            <libc::id_ts>::ENCODING,
            <libc::id_ip>::ENCODING,
            <libc::icmp_ra_addr>::ENCODING,
            <u32>::ENCODING,
            <[c_char; 1]>::ENCODING,
        ],
    );
}

unsafe impl RefEncode for icmp_icmp_dun {
    const ENCODING_REF: Encoding = Encoding::Pointer(&Self::ENCODING);
}

/// [Apple's documentation](https://developer.apple.com/documentation/darwin/icmp?language=objc)
#[repr(C)]
#[derive(Clone, Copy)]
pub struct icmp {
    pub icmp_type: c_uchar,
    pub icmp_code: c_uchar,
    pub icmp_cksum: c_ushort,
    pub icmp_hun: libc::icmp_icmp_hun,
    pub icmp_dun: libc::icmp_icmp_dun,
}

unsafe impl Encode for icmp {
    const ENCODING: Encoding = Encoding::Struct(
        "icmp",
        &[
            <c_uchar>::ENCODING,
            <c_uchar>::ENCODING,
            <c_ushort>::ENCODING,
            <libc::icmp_icmp_hun>::ENCODING,
            <libc::icmp_icmp_dun>::ENCODING,
        ],
    );
}

unsafe impl RefEncode for icmp {
    const ENCODING_REF: Encoding = Encoding::Pointer(&Self::ENCODING);
}
