//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use core::ffi::*;
#[cfg(feature = "objc2")]
use objc2::__framework_prelude::*;

use crate::ffi::*;

/// [Apple's documentation](https://developer.apple.com/documentation/darwin/bootp?language=objc)
#[repr(C)]
#[derive(Clone, Copy, Debug, PartialEq)]
pub struct bootp {
    pub bp_op: c_uchar,
    pub bp_htype: c_uchar,
    pub bp_hlen: c_uchar,
    pub bp_hops: c_uchar,
    pub bp_xid: u32,
    pub bp_secs: c_ushort,
    pub bp_unused: c_ushort,
    pub bp_ciaddr: libc::in_addr,
    pub bp_yiaddr: libc::in_addr,
    pub bp_siaddr: libc::in_addr,
    pub bp_giaddr: libc::in_addr,
    pub bp_chaddr: [c_uchar; 16],
    pub bp_sname: [c_uchar; 64],
    pub bp_file: [c_uchar; 128],
    pub bp_vend: [c_uchar; 64],
}

unsafe impl Encode for bootp {
    const ENCODING: Encoding = Encoding::Struct(
        "bootp",
        &[
            <c_uchar>::ENCODING,
            <c_uchar>::ENCODING,
            <c_uchar>::ENCODING,
            <c_uchar>::ENCODING,
            <u32>::ENCODING,
            <c_ushort>::ENCODING,
            <c_ushort>::ENCODING,
            <libc::in_addr>::ENCODING,
            <libc::in_addr>::ENCODING,
            <libc::in_addr>::ENCODING,
            <libc::in_addr>::ENCODING,
            <[c_uchar; 16]>::ENCODING,
            <[c_uchar; 64]>::ENCODING,
            <[c_uchar; 128]>::ENCODING,
            <[c_uchar; 64]>::ENCODING,
        ],
    );
}

unsafe impl RefEncode for bootp {
    const ENCODING_REF: Encoding = Encoding::Pointer(&Self::ENCODING);
}

/// [Apple's documentation](https://developer.apple.com/documentation/darwin/vend?language=objc)
#[repr(C)]
#[derive(Clone, Copy, Debug, PartialEq)]
pub struct vend {
    pub v_magic: [c_uchar; 4],
    pub v_flags: u32,
    pub v_unused: [c_uchar; 56],
}

unsafe impl Encode for vend {
    const ENCODING: Encoding = Encoding::Struct(
        "vend",
        &[
            <[c_uchar; 4]>::ENCODING,
            <u32>::ENCODING,
            <[c_uchar; 56]>::ENCODING,
        ],
    );
}

unsafe impl RefEncode for vend {
    const ENCODING_REF: Encoding = Encoding::Pointer(&Self::ENCODING);
}

/// [Apple's documentation](https://developer.apple.com/documentation/darwin/nextvend_nv_u_nv1?language=objc)
#[repr(C)]
#[derive(Clone, Copy, Debug, PartialEq)]
pub struct nextvend_nv_U_NV1 {
    pub NV1_opcode: c_uchar,
    pub NV1_xid: c_uchar,
    pub NV1_text: [c_uchar; 55],
    pub NV1_null: c_uchar,
}

unsafe impl Encode for nextvend_nv_U_NV1 {
    const ENCODING: Encoding = Encoding::Struct(
        "?",
        &[
            <c_uchar>::ENCODING,
            <c_uchar>::ENCODING,
            <[c_uchar; 55]>::ENCODING,
            <c_uchar>::ENCODING,
        ],
    );
}

unsafe impl RefEncode for nextvend_nv_U_NV1 {
    const ENCODING_REF: Encoding = Encoding::Pointer(&Self::ENCODING);
}

/// [Apple's documentation](https://developer.apple.com/documentation/darwin/nextvend_nv_u?language=objc)
#[repr(C)]
#[derive(Clone, Copy)]
pub union nextvend_nv_U {
    pub NV0: [c_uchar; 58],
    pub NV1: libc::nextvend_nv_U_NV1,
}

unsafe impl Encode for nextvend_nv_U {
    const ENCODING: Encoding = Encoding::Union(
        "?",
        &[
            <[c_uchar; 58]>::ENCODING,
            <libc::nextvend_nv_U_NV1>::ENCODING,
        ],
    );
}

unsafe impl RefEncode for nextvend_nv_U {
    const ENCODING_REF: Encoding = Encoding::Pointer(&Self::ENCODING);
}

/// [Apple's documentation](https://developer.apple.com/documentation/darwin/nextvend?language=objc)
#[repr(C)]
#[derive(Clone, Copy)]
pub struct nextvend {
    pub nv_magic: [c_uchar; 4],
    pub nv_version: c_uchar,
    pub(crate) __unknown__: c_ushort,
    pub nv_U: libc::nextvend_nv_U,
}

unsafe impl Encode for nextvend {
    const ENCODING: Encoding = Encoding::Struct(
        "nextvend",
        &[
            <[c_uchar; 4]>::ENCODING,
            <c_uchar>::ENCODING,
            <c_ushort>::ENCODING,
            <libc::nextvend_nv_U>::ENCODING,
        ],
    );
}

unsafe impl RefEncode for nextvend {
    const ENCODING_REF: Encoding = Encoding::Pointer(&Self::ENCODING);
}

/// [Apple's documentation](https://developer.apple.com/documentation/darwin/bootp_packet?language=objc)
#[repr(C)]
#[derive(Clone, Copy, Debug, PartialEq)]
pub struct bootp_packet {
    pub bp_ip: libc::ip,
    pub bp_udp: libc::udphdr,
    pub bp_bootp: libc::bootp,
}

unsafe impl Encode for bootp_packet {
    const ENCODING: Encoding = Encoding::Struct(
        "bootp_packet",
        &[
            <libc::ip>::ENCODING,
            <libc::udphdr>::ENCODING,
            <libc::bootp>::ENCODING,
        ],
    );
}

unsafe impl RefEncode for bootp_packet {
    const ENCODING_REF: Encoding = Encoding::Pointer(&Self::ENCODING);
}
