//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
#[cfg(feature = "__builtin__")]
use __builtin__::*;
use core::ffi::*;

use crate::ffi::*;

#[repr(C)]
#[derive(Clone, Copy, Debug, PartialEq)]
pub struct utmpx {
    /// login name
    pub ut_user: [c_char; 256],
    /// id
    pub ut_id: [c_char; 4],
    /// tty name
    pub ut_line: [c_char; 32],
    /// process id creating the entry
    pub ut_pid: pid_t,
    /// type of this entry
    pub ut_type: c_short,
    /// time entry was created
    pub ut_tv: timeval,
    /// host name
    pub ut_host: [c_char; 256],
    /// reserved for future use
    pub ut_pad: [u32; 16],
}

#[repr(C)]
#[derive(Clone, Copy, Debug, PartialEq)]
pub struct lastlogx {
    /// time entry was created
    pub ll_tv: timeval,
    /// tty name
    pub ll_line: [c_char; 32],
    /// host name
    pub ll_host: [c_char; 256],
}

extern "C-unwind" {
    pub fn endutxent();
}

extern "C-unwind" {
    pub fn endutxent_wtmp();
}

extern "C-unwind" {
    pub fn getlastlogx(param1: uid_t, param1: *mut lastlogx) -> *mut lastlogx;
}

extern "C-unwind" {
    pub fn getlastlogxbyname(param1: *const c_char, param1: *mut lastlogx) -> *mut lastlogx;
}

extern "C-unwind" {
    #[deprecated]
    pub fn getutmp(param1: *const utmpx, param1: *mut utmp);
}

extern "C-unwind" {
    #[deprecated]
    pub fn getutmpx(param1: *const utmp, param1: *mut utmpx);
}

extern "C-unwind" {
    pub fn getutxent() -> *mut utmpx;
}

extern "C-unwind" {
    pub fn getutxent_wtmp() -> *mut utmpx;
}

extern "C-unwind" {
    pub fn getutxid(param1: *const utmpx) -> *mut utmpx;
}

extern "C-unwind" {
    pub fn getutxline(param1: *const utmpx) -> *mut utmpx;
}

extern "C-unwind" {
    pub fn pututxline(param1: *const utmpx) -> *mut utmpx;
}

extern "C-unwind" {
    pub fn setutxent();
}

extern "C-unwind" {
    pub fn setutxent_wtmp(param1: c_int);
}

extern "C-unwind" {
    pub fn utmpxname(param1: *const c_char) -> c_int;
}

extern "C-unwind" {
    pub fn wtmpxname(param1: *const c_char) -> c_int;
}
