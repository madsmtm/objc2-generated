//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use core::ffi::*;
#[cfg(feature = "objc2")]
use objc2::__framework_prelude::*;

use crate::ffi::*;

/// [Apple's documentation](https://developer.apple.com/documentation/darwin/aliasent?language=objc)
#[repr(C)]
#[derive(Clone, Copy, Debug, PartialEq)]
pub struct aliasent {
    pub alias_name: *mut c_char,
    pub alias_members_len: c_uint,
    pub alias_members: *mut *mut c_char,
    pub alias_local: c_int,
}

unsafe impl Encode for aliasent {
    const ENCODING: Encoding = Encoding::Struct(
        "aliasent",
        &[
            <*mut c_char>::ENCODING,
            <c_uint>::ENCODING,
            <*mut *mut c_char>::ENCODING,
            <c_int>::ENCODING,
        ],
    );
}

unsafe impl RefEncode for aliasent {
    const ENCODING_REF: Encoding = Encoding::Pointer(&Self::ENCODING);
}

extern "C-unwind" {
    pub fn alias_setent();
}

extern "C-unwind" {
    pub fn alias_getent() -> *mut libc::aliasent;
}

extern "C-unwind" {
    pub fn alias_endent();
}

extern "C-unwind" {
    pub fn alias_getbyname(param1: *const c_char) -> *mut libc::aliasent;
}
