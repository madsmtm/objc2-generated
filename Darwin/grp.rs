//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use core::ffi::*;
#[cfg(feature = "objc2")]
use objc2::__framework_prelude::*;

use crate::ffi::*;

/// [Apple's documentation](https://developer.apple.com/documentation/darwin/group?language=objc)
#[repr(C)]
#[derive(Clone, Copy, Debug, PartialEq)]
pub struct group {
    pub gr_name: *mut c_char,
    pub gr_passwd: *mut c_char,
    pub gr_gid: libc::gid_t,
    pub gr_mem: *mut *mut c_char,
}

unsafe impl Encode for group {
    const ENCODING: Encoding = Encoding::Struct(
        "group",
        &[
            <*mut c_char>::ENCODING,
            <*mut c_char>::ENCODING,
            <libc::gid_t>::ENCODING,
            <*mut *mut c_char>::ENCODING,
        ],
    );
}

unsafe impl RefEncode for group {
    const ENCODING_REF: Encoding = Encoding::Pointer(&Self::ENCODING);
}

extern "C-unwind" {
    pub fn getgrgid(param1: libc::gid_t) -> *mut libc::group;
}

extern "C-unwind" {
    pub fn getgrnam(param1: *const c_char) -> *mut libc::group;
}

extern "C-unwind" {
    pub fn getgrgid_r(
        param1: libc::gid_t,
        param1: *mut libc::group,
        param1: *mut c_char,
        param1: usize,
        param1: *mut *mut libc::group,
    ) -> c_int;
}

extern "C-unwind" {
    pub fn getgrnam_r(
        param1: *const c_char,
        param1: *mut libc::group,
        param1: *mut c_char,
        param1: usize,
        param1: *mut *mut libc::group,
    ) -> c_int;
}

extern "C-unwind" {
    pub fn getgrent() -> *mut libc::group;
}

extern "C-unwind" {
    pub fn setgrent();
}

extern "C-unwind" {
    pub fn endgrent();
}

extern "C-unwind" {
    pub fn group_from_gid(param1: libc::gid_t, param1: c_int) -> *mut c_char;
}

extern "C-unwind" {
    pub fn getgruuid(param1: uuid_t) -> *mut libc::group;
}

extern "C-unwind" {
    pub fn getgruuid_r(
        param1: uuid_t,
        param1: *mut libc::group,
        param1: *mut c_char,
        param1: usize,
        param1: *mut *mut libc::group,
    ) -> c_int;
}

extern "C-unwind" {
    pub fn setgrfile(param1: *const c_char);
}

extern "C-unwind" {
    pub fn setgroupent(param1: c_int) -> c_int;
}
