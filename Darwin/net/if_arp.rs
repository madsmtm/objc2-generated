//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use core::ffi::*;
#[cfg(feature = "objc2")]
use objc2::__framework_prelude::*;

use crate::ffi::*;

/// [Apple's documentation](https://developer.apple.com/documentation/darwin/arphdr?language=objc)
#[repr(C)]
#[derive(Clone, Copy, Debug, PartialEq)]
pub struct arphdr {
    pub ar_hrd: c_ushort,
    pub ar_pro: c_ushort,
    pub ar_hln: c_uchar,
    pub ar_pln: c_uchar,
    pub ar_op: c_ushort,
}

unsafe impl Encode for arphdr {
    const ENCODING: Encoding = Encoding::Struct(
        "arphdr",
        &[
            <c_ushort>::ENCODING,
            <c_ushort>::ENCODING,
            <c_uchar>::ENCODING,
            <c_uchar>::ENCODING,
            <c_ushort>::ENCODING,
        ],
    );
}

unsafe impl RefEncode for arphdr {
    const ENCODING_REF: Encoding = Encoding::Pointer(&Self::ENCODING);
}

/// [Apple's documentation](https://developer.apple.com/documentation/darwin/arpreq?language=objc)
#[repr(C)]
#[derive(Clone, Copy, Debug, PartialEq)]
pub struct arpreq {
    pub arp_pa: libc::sockaddr,
    pub arp_ha: libc::sockaddr,
    pub arp_flags: c_int,
}

unsafe impl Encode for arpreq {
    const ENCODING: Encoding = Encoding::Struct(
        "arpreq",
        &[
            <libc::sockaddr>::ENCODING,
            <libc::sockaddr>::ENCODING,
            <c_int>::ENCODING,
        ],
    );
}

unsafe impl RefEncode for arpreq {
    const ENCODING_REF: Encoding = Encoding::Pointer(&Self::ENCODING);
}

/// [Apple's documentation](https://developer.apple.com/documentation/darwin/arpstat?language=objc)
#[repr(C)]
#[derive(Clone, Copy, Debug, PartialEq)]
pub struct arpstat {
    pub txrequests: u32,
    pub txreplies: u32,
    pub txannounces: u32,
    pub rxrequests: u32,
    pub rxreplies: u32,
    pub received: u32,
    pub txconflicts: u32,
    pub invalidreqs: u32,
    pub reqnobufs: u32,
    pub dropped: u32,
    pub purged: u32,
    pub timeouts: u32,
    pub dupips: u32,
    pub inuse: u32,
    pub txurequests: u32,
    pub held: u32,
}

unsafe impl Encode for arpstat {
    const ENCODING: Encoding = Encoding::Struct(
        "arpstat",
        &[
            <u32>::ENCODING,
            <u32>::ENCODING,
            <u32>::ENCODING,
            <u32>::ENCODING,
            <u32>::ENCODING,
            <u32>::ENCODING,
            <u32>::ENCODING,
            <u32>::ENCODING,
            <u32>::ENCODING,
            <u32>::ENCODING,
            <u32>::ENCODING,
            <u32>::ENCODING,
            <u32>::ENCODING,
            <u32>::ENCODING,
            <u32>::ENCODING,
            <u32>::ENCODING,
        ],
    );
}

unsafe impl RefEncode for arpstat {
    const ENCODING_REF: Encoding = Encoding::Pointer(&Self::ENCODING);
}
