//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use core::ffi::*;
#[cfg(feature = "objc2")]
use objc2::__framework_prelude::*;

use crate::ffi::*;

/// [Apple's documentation](https://developer.apple.com/documentation/darwin/net_event_data?language=objc)
#[repr(C)]
#[derive(Clone, Copy, Debug, PartialEq)]
pub struct net_event_data {
    pub if_family: u32,
    pub if_unit: u32,
    pub if_name: [c_char; 16],
}

unsafe impl Encode for net_event_data {
    const ENCODING: Encoding = Encoding::Struct(
        "net_event_data",
        &[<u32>::ENCODING, <u32>::ENCODING, <[c_char; 16]>::ENCODING],
    );
}

unsafe impl RefEncode for net_event_data {
    const ENCODING_REF: Encoding = Encoding::Pointer(&Self::ENCODING);
}

/// [Apple's documentation](https://developer.apple.com/documentation/darwin/if_data?language=objc)
#[repr(C)]
#[derive(Clone, Copy, Debug, PartialEq)]
pub struct if_data {
    pub ifi_type: c_uchar,
    pub ifi_typelen: c_uchar,
    pub ifi_physical: c_uchar,
    pub ifi_addrlen: c_uchar,
    pub ifi_hdrlen: c_uchar,
    pub ifi_recvquota: c_uchar,
    pub ifi_xmitquota: c_uchar,
    pub ifi_unused1: c_uchar,
    pub ifi_mtu: u32,
    pub ifi_metric: u32,
    pub ifi_baudrate: u32,
    pub ifi_ipackets: u32,
    pub ifi_ierrors: u32,
    pub ifi_opackets: u32,
    pub ifi_oerrors: u32,
    pub ifi_collisions: u32,
    pub ifi_ibytes: u32,
    pub ifi_obytes: u32,
    pub ifi_imcasts: u32,
    pub ifi_omcasts: u32,
    pub ifi_iqdrops: u32,
    pub ifi_noproto: u32,
    pub ifi_recvtiming: u32,
    pub ifi_xmittiming: u32,
    pub ifi_lastchange: libc::timeval32,
    pub ifi_unused2: u32,
    pub ifi_hwassist: u32,
    pub ifi_reserved1: u32,
    pub ifi_reserved2: u32,
}

unsafe impl Encode for if_data {
    const ENCODING: Encoding = Encoding::Struct(
        "if_data",
        &[
            <c_uchar>::ENCODING,
            <c_uchar>::ENCODING,
            <c_uchar>::ENCODING,
            <c_uchar>::ENCODING,
            <c_uchar>::ENCODING,
            <c_uchar>::ENCODING,
            <c_uchar>::ENCODING,
            <c_uchar>::ENCODING,
            <u32>::ENCODING,
            <u32>::ENCODING,
            <u32>::ENCODING,
            <u32>::ENCODING,
            <u32>::ENCODING,
            <u32>::ENCODING,
            <u32>::ENCODING,
            <u32>::ENCODING,
            <u32>::ENCODING,
            <u32>::ENCODING,
            <u32>::ENCODING,
            <u32>::ENCODING,
            <u32>::ENCODING,
            <u32>::ENCODING,
            <u32>::ENCODING,
            <u32>::ENCODING,
            <libc::timeval32>::ENCODING,
            <u32>::ENCODING,
            <u32>::ENCODING,
            <u32>::ENCODING,
            <u32>::ENCODING,
        ],
    );
}

unsafe impl RefEncode for if_data {
    const ENCODING_REF: Encoding = Encoding::Pointer(&Self::ENCODING);
}

/// [Apple's documentation](https://developer.apple.com/documentation/darwin/if_data64?language=objc)
#[repr(C)]
#[derive(Clone, Copy, Debug, PartialEq)]
pub struct if_data64 {
    pub ifi_type: c_uchar,
    pub ifi_typelen: c_uchar,
    pub ifi_physical: c_uchar,
    pub ifi_addrlen: c_uchar,
    pub ifi_hdrlen: c_uchar,
    pub ifi_recvquota: c_uchar,
    pub ifi_xmitquota: c_uchar,
    pub ifi_unused1: c_uchar,
    pub ifi_mtu: u32,
    pub ifi_metric: u32,
    pub ifi_baudrate: u64,
    pub ifi_ipackets: u64,
    pub ifi_ierrors: u64,
    pub ifi_opackets: u64,
    pub ifi_oerrors: u64,
    pub ifi_collisions: u64,
    pub ifi_ibytes: u64,
    pub ifi_obytes: u64,
    pub ifi_imcasts: u64,
    pub ifi_omcasts: u64,
    pub ifi_iqdrops: u64,
    pub ifi_noproto: u64,
    pub ifi_recvtiming: u32,
    pub ifi_xmittiming: u32,
    pub ifi_lastchange: libc::timeval32,
}

unsafe impl Encode for if_data64 {
    const ENCODING: Encoding = Encoding::Struct(
        "if_data64",
        &[
            <c_uchar>::ENCODING,
            <c_uchar>::ENCODING,
            <c_uchar>::ENCODING,
            <c_uchar>::ENCODING,
            <c_uchar>::ENCODING,
            <c_uchar>::ENCODING,
            <c_uchar>::ENCODING,
            <c_uchar>::ENCODING,
            <u32>::ENCODING,
            <u32>::ENCODING,
            <u64>::ENCODING,
            <u64>::ENCODING,
            <u64>::ENCODING,
            <u64>::ENCODING,
            <u64>::ENCODING,
            <u64>::ENCODING,
            <u64>::ENCODING,
            <u64>::ENCODING,
            <u64>::ENCODING,
            <u64>::ENCODING,
            <u64>::ENCODING,
            <u64>::ENCODING,
            <u32>::ENCODING,
            <u32>::ENCODING,
            <libc::timeval32>::ENCODING,
        ],
    );
}

unsafe impl RefEncode for if_data64 {
    const ENCODING_REF: Encoding = Encoding::Pointer(&Self::ENCODING);
}

/// [Apple's documentation](https://developer.apple.com/documentation/darwin/ifqueue?language=objc)
#[repr(C)]
#[derive(Clone, Copy, Debug, PartialEq)]
pub struct ifqueue {
    pub ifq_head: *mut c_void,
    pub ifq_tail: *mut c_void,
    pub ifq_len: c_int,
    pub ifq_maxlen: c_int,
    pub ifq_drops: c_int,
}

unsafe impl Encode for ifqueue {
    const ENCODING: Encoding = Encoding::Struct(
        "ifqueue",
        &[
            <*mut c_void>::ENCODING,
            <*mut c_void>::ENCODING,
            <c_int>::ENCODING,
            <c_int>::ENCODING,
            <c_int>::ENCODING,
        ],
    );
}

unsafe impl RefEncode for ifqueue {
    const ENCODING_REF: Encoding = Encoding::Pointer(&Self::ENCODING);
}
