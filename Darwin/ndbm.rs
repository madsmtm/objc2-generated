//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use core::ffi::*;

use crate::ffi::*;

/// [Apple's documentation](https://developer.apple.com/documentation/darwin/datum?language=objc)
#[repr(C)]
#[derive(Clone, Copy, Debug, PartialEq)]
pub struct datum {
    pub dptr: *mut c_void,
    pub dsize: usize,
}

/// [Apple's documentation](https://developer.apple.com/documentation/darwin/dbm?language=objc)
#[repr(C)]
#[derive(Clone, Copy, Debug, PartialEq)]
pub struct DBM {
    pub(crate) __opaque: [c_char; 68],
}

extern "C-unwind" {
    pub fn dbm_clearerr(param1: *mut DBM) -> c_int;
}

extern "C-unwind" {
    pub fn dbm_close(param1: *mut DBM);
}

extern "C-unwind" {
    pub fn dbm_delete(param1: *mut DBM, param1: datum) -> c_int;
}

extern "C-unwind" {
    pub fn dbm_dirfno(param1: *mut DBM) -> c_int;
}

extern "C-unwind" {
    pub fn dbm_error(param1: *mut DBM) -> c_int;
}

extern "C-unwind" {
    pub fn dbm_fetch(param1: *mut DBM, param1: datum) -> datum;
}

extern "C-unwind" {
    pub fn dbm_firstkey(param1: *mut DBM) -> datum;
}

extern "C-unwind" {
    pub fn dbm_forder(param1: *mut DBM, param1: datum) -> c_long;
}

extern "C-unwind" {
    pub fn dbm_nextkey(param1: *mut DBM) -> datum;
}

extern "C-unwind" {
    pub fn dbm_open(param1: *const c_char, param1: c_int, param1: mode_t) -> *mut DBM;
}

extern "C-unwind" {
    pub fn dbm_store(param1: *mut DBM, param1: datum, param1: datum, param1: c_int) -> c_int;
}
