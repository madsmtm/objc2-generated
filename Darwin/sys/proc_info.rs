//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use core::ffi::*;
#[cfg(feature = "objc2")]
use objc2::__framework_prelude::*;

use crate::ffi::*;

/// [Apple's documentation](https://developer.apple.com/documentation/darwin/proc_bsdinfo?language=objc)
#[repr(C)]
#[derive(Clone, Copy, Debug, PartialEq)]
pub struct proc_bsdinfo {
    pub pbi_flags: u32,
    pub pbi_status: u32,
    pub pbi_xstatus: u32,
    pub pbi_pid: u32,
    pub pbi_ppid: u32,
    pub pbi_uid: libc::uid_t,
    pub pbi_gid: libc::gid_t,
    pub pbi_ruid: libc::uid_t,
    pub pbi_rgid: libc::gid_t,
    pub pbi_svuid: libc::uid_t,
    pub pbi_svgid: libc::gid_t,
    pub rfu_1: u32,
    pub pbi_comm: [c_char; 16],
    pub pbi_name: [c_char; 32],
    pub pbi_nfiles: u32,
    pub pbi_pgid: u32,
    pub pbi_pjobc: u32,
    pub e_tdev: u32,
    pub e_tpgid: u32,
    pub pbi_nice: i32,
    pub pbi_start_tvsec: u64,
    pub pbi_start_tvusec: u64,
}

unsafe impl Encode for proc_bsdinfo {
    const ENCODING: Encoding = Encoding::Struct(
        "proc_bsdinfo",
        &[
            <u32>::ENCODING,
            <u32>::ENCODING,
            <u32>::ENCODING,
            <u32>::ENCODING,
            <u32>::ENCODING,
            <libc::uid_t>::ENCODING,
            <libc::gid_t>::ENCODING,
            <libc::uid_t>::ENCODING,
            <libc::gid_t>::ENCODING,
            <libc::uid_t>::ENCODING,
            <libc::gid_t>::ENCODING,
            <u32>::ENCODING,
            <[c_char; 16]>::ENCODING,
            <[c_char; 32]>::ENCODING,
            <u32>::ENCODING,
            <u32>::ENCODING,
            <u32>::ENCODING,
            <u32>::ENCODING,
            <u32>::ENCODING,
            <i32>::ENCODING,
            <u64>::ENCODING,
            <u64>::ENCODING,
        ],
    );
}

unsafe impl RefEncode for proc_bsdinfo {
    const ENCODING_REF: Encoding = Encoding::Pointer(&Self::ENCODING);
}

/// [Apple's documentation](https://developer.apple.com/documentation/darwin/proc_bsdshortinfo?language=objc)
#[repr(C)]
#[derive(Clone, Copy, Debug, PartialEq)]
pub struct proc_bsdshortinfo {
    pub pbsi_pid: u32,
    pub pbsi_ppid: u32,
    pub pbsi_pgid: u32,
    pub pbsi_status: u32,
    pub pbsi_comm: [c_char; 16],
    pub pbsi_flags: u32,
    pub pbsi_uid: libc::uid_t,
    pub pbsi_gid: libc::gid_t,
    pub pbsi_ruid: libc::uid_t,
    pub pbsi_rgid: libc::gid_t,
    pub pbsi_svuid: libc::uid_t,
    pub pbsi_svgid: libc::gid_t,
    pub pbsi_rfu: u32,
}

unsafe impl Encode for proc_bsdshortinfo {
    const ENCODING: Encoding = Encoding::Struct(
        "proc_bsdshortinfo",
        &[
            <u32>::ENCODING,
            <u32>::ENCODING,
            <u32>::ENCODING,
            <u32>::ENCODING,
            <[c_char; 16]>::ENCODING,
            <u32>::ENCODING,
            <libc::uid_t>::ENCODING,
            <libc::gid_t>::ENCODING,
            <libc::uid_t>::ENCODING,
            <libc::gid_t>::ENCODING,
            <libc::uid_t>::ENCODING,
            <libc::gid_t>::ENCODING,
            <u32>::ENCODING,
        ],
    );
}

unsafe impl RefEncode for proc_bsdshortinfo {
    const ENCODING_REF: Encoding = Encoding::Pointer(&Self::ENCODING);
}

/// [Apple's documentation](https://developer.apple.com/documentation/darwin/proc_taskinfo?language=objc)
#[repr(C)]
#[derive(Clone, Copy, Debug, PartialEq)]
pub struct proc_taskinfo {
    pub pti_virtual_size: u64,
    pub pti_resident_size: u64,
    pub pti_total_user: u64,
    pub pti_total_system: u64,
    pub pti_threads_user: u64,
    pub pti_threads_system: u64,
    pub pti_policy: i32,
    pub pti_faults: i32,
    pub pti_pageins: i32,
    pub pti_cow_faults: i32,
    pub pti_messages_sent: i32,
    pub pti_messages_received: i32,
    pub pti_syscalls_mach: i32,
    pub pti_syscalls_unix: i32,
    pub pti_csw: i32,
    pub pti_threadnum: i32,
    pub pti_numrunning: i32,
    pub pti_priority: i32,
}

unsafe impl Encode for proc_taskinfo {
    const ENCODING: Encoding = Encoding::Struct(
        "proc_taskinfo",
        &[
            <u64>::ENCODING,
            <u64>::ENCODING,
            <u64>::ENCODING,
            <u64>::ENCODING,
            <u64>::ENCODING,
            <u64>::ENCODING,
            <i32>::ENCODING,
            <i32>::ENCODING,
            <i32>::ENCODING,
            <i32>::ENCODING,
            <i32>::ENCODING,
            <i32>::ENCODING,
            <i32>::ENCODING,
            <i32>::ENCODING,
            <i32>::ENCODING,
            <i32>::ENCODING,
            <i32>::ENCODING,
            <i32>::ENCODING,
        ],
    );
}

unsafe impl RefEncode for proc_taskinfo {
    const ENCODING_REF: Encoding = Encoding::Pointer(&Self::ENCODING);
}

/// [Apple's documentation](https://developer.apple.com/documentation/darwin/proc_taskallinfo?language=objc)
#[repr(C)]
#[derive(Clone, Copy, Debug, PartialEq)]
pub struct proc_taskallinfo {
    pub pbsd: libc::proc_bsdinfo,
    pub ptinfo: libc::proc_taskinfo,
}

unsafe impl Encode for proc_taskallinfo {
    const ENCODING: Encoding = Encoding::Struct(
        "proc_taskallinfo",
        &[
            <libc::proc_bsdinfo>::ENCODING,
            <libc::proc_taskinfo>::ENCODING,
        ],
    );
}

unsafe impl RefEncode for proc_taskallinfo {
    const ENCODING_REF: Encoding = Encoding::Pointer(&Self::ENCODING);
}

/// [Apple's documentation](https://developer.apple.com/documentation/darwin/proc_threadinfo?language=objc)
#[repr(C)]
#[derive(Clone, Copy, Debug, PartialEq)]
pub struct proc_threadinfo {
    pub pth_user_time: u64,
    pub pth_system_time: u64,
    pub pth_cpu_usage: i32,
    pub pth_policy: i32,
    pub pth_run_state: i32,
    pub pth_flags: i32,
    pub pth_sleep_time: i32,
    pub pth_curpri: i32,
    pub pth_priority: i32,
    pub pth_maxpriority: i32,
    pub pth_name: [c_char; 64],
}

unsafe impl Encode for proc_threadinfo {
    const ENCODING: Encoding = Encoding::Struct(
        "proc_threadinfo",
        &[
            <u64>::ENCODING,
            <u64>::ENCODING,
            <i32>::ENCODING,
            <i32>::ENCODING,
            <i32>::ENCODING,
            <i32>::ENCODING,
            <i32>::ENCODING,
            <i32>::ENCODING,
            <i32>::ENCODING,
            <i32>::ENCODING,
            <[c_char; 64]>::ENCODING,
        ],
    );
}

unsafe impl RefEncode for proc_threadinfo {
    const ENCODING_REF: Encoding = Encoding::Pointer(&Self::ENCODING);
}

/// [Apple's documentation](https://developer.apple.com/documentation/darwin/proc_regioninfo?language=objc)
#[repr(C)]
#[derive(Clone, Copy, Debug, PartialEq)]
pub struct proc_regioninfo {
    pub pri_protection: u32,
    pub pri_max_protection: u32,
    pub pri_inheritance: u32,
    pub pri_flags: u32,
    pub pri_offset: u64,
    pub pri_behavior: u32,
    pub pri_user_wired_count: u32,
    pub pri_user_tag: u32,
    pub pri_pages_resident: u32,
    pub pri_pages_shared_now_private: u32,
    pub pri_pages_swapped_out: u32,
    pub pri_pages_dirtied: u32,
    pub pri_ref_count: u32,
    pub pri_shadow_depth: u32,
    pub pri_share_mode: u32,
    pub pri_private_pages_resident: u32,
    pub pri_shared_pages_resident: u32,
    pub pri_obj_id: u32,
    pub pri_depth: u32,
    pub pri_address: u64,
    pub pri_size: u64,
}

unsafe impl Encode for proc_regioninfo {
    const ENCODING: Encoding = Encoding::Struct(
        "proc_regioninfo",
        &[
            <u32>::ENCODING,
            <u32>::ENCODING,
            <u32>::ENCODING,
            <u32>::ENCODING,
            <u64>::ENCODING,
            <u32>::ENCODING,
            <u32>::ENCODING,
            <u32>::ENCODING,
            <u32>::ENCODING,
            <u32>::ENCODING,
            <u32>::ENCODING,
            <u32>::ENCODING,
            <u32>::ENCODING,
            <u32>::ENCODING,
            <u32>::ENCODING,
            <u32>::ENCODING,
            <u32>::ENCODING,
            <u32>::ENCODING,
            <u32>::ENCODING,
            <u64>::ENCODING,
            <u64>::ENCODING,
        ],
    );
}

unsafe impl RefEncode for proc_regioninfo {
    const ENCODING_REF: Encoding = Encoding::Pointer(&Self::ENCODING);
}

/// [Apple's documentation](https://developer.apple.com/documentation/darwin/proc_workqueueinfo?language=objc)
#[repr(C)]
#[derive(Clone, Copy, Debug, PartialEq)]
pub struct proc_workqueueinfo {
    pub pwq_nthreads: u32,
    pub pwq_runthreads: u32,
    pub pwq_blockedthreads: u32,
    pub pwq_state: u32,
}

unsafe impl Encode for proc_workqueueinfo {
    const ENCODING: Encoding = Encoding::Struct(
        "proc_workqueueinfo",
        &[
            <u32>::ENCODING,
            <u32>::ENCODING,
            <u32>::ENCODING,
            <u32>::ENCODING,
        ],
    );
}

unsafe impl RefEncode for proc_workqueueinfo {
    const ENCODING_REF: Encoding = Encoding::Pointer(&Self::ENCODING);
}

/// [Apple's documentation](https://developer.apple.com/documentation/darwin/proc_fileinfo?language=objc)
#[repr(C)]
#[derive(Clone, Copy, Debug, PartialEq)]
pub struct proc_fileinfo {
    pub fi_openflags: u32,
    pub fi_status: u32,
    pub fi_offset: libc::off_t,
    pub fi_type: i32,
    pub fi_guardflags: u32,
}

unsafe impl Encode for proc_fileinfo {
    const ENCODING: Encoding = Encoding::Struct(
        "proc_fileinfo",
        &[
            <u32>::ENCODING,
            <u32>::ENCODING,
            <libc::off_t>::ENCODING,
            <i32>::ENCODING,
            <u32>::ENCODING,
        ],
    );
}

unsafe impl RefEncode for proc_fileinfo {
    const ENCODING_REF: Encoding = Encoding::Pointer(&Self::ENCODING);
}

/// [Apple's documentation](https://developer.apple.com/documentation/darwin/proc_exitreasonbasicinfo?language=objc)
#[repr(C, packed)]
#[derive(Clone, Copy, Debug, PartialEq)]
pub struct proc_exitreasonbasicinfo {
    pub beri_namespace: u32,
    pub beri_code: u64,
    pub beri_flags: u64,
    pub beri_reason_buf_size: u32,
}

unsafe impl Encode for proc_exitreasonbasicinfo {
    const ENCODING: Encoding = Encoding::Struct(
        "proc_exitreasonbasicinfo",
        &[
            <u32>::ENCODING,
            <u64>::ENCODING,
            <u64>::ENCODING,
            <u32>::ENCODING,
        ],
    );
}

unsafe impl RefEncode for proc_exitreasonbasicinfo {
    const ENCODING_REF: Encoding = Encoding::Pointer(&Self::ENCODING);
}

/// [Apple's documentation](https://developer.apple.com/documentation/darwin/proc_exitreasoninfo?language=objc)
#[repr(C, packed)]
#[derive(Clone, Copy, Debug, PartialEq)]
pub struct proc_exitreasoninfo {
    pub eri_namespace: u32,
    pub eri_code: u64,
    pub eri_flags: u64,
    pub eri_reason_buf_size: u32,
    pub eri_kcd_buf: u64,
}

unsafe impl Encode for proc_exitreasoninfo {
    const ENCODING: Encoding = Encoding::Struct(
        "proc_exitreasoninfo",
        &[
            <u32>::ENCODING,
            <u64>::ENCODING,
            <u64>::ENCODING,
            <u32>::ENCODING,
            <u64>::ENCODING,
        ],
    );
}

unsafe impl RefEncode for proc_exitreasoninfo {
    const ENCODING_REF: Encoding = Encoding::Pointer(&Self::ENCODING);
}

/// [Apple's documentation](https://developer.apple.com/documentation/darwin/vinfo_stat?language=objc)
#[repr(C)]
#[derive(Clone, Copy, Debug, PartialEq)]
pub struct vinfo_stat {
    pub vst_dev: u32,
    pub vst_mode: u16,
    pub vst_nlink: u16,
    pub vst_ino: u64,
    pub vst_uid: libc::uid_t,
    pub vst_gid: libc::gid_t,
    pub vst_atime: i64,
    pub vst_atimensec: i64,
    pub vst_mtime: i64,
    pub vst_mtimensec: i64,
    pub vst_ctime: i64,
    pub vst_ctimensec: i64,
    pub vst_birthtime: i64,
    pub vst_birthtimensec: i64,
    pub vst_size: libc::off_t,
    pub vst_blocks: i64,
    pub vst_blksize: i32,
    pub vst_flags: u32,
    pub vst_gen: u32,
    pub vst_rdev: u32,
    pub vst_qspare: [i64; 2],
}

unsafe impl Encode for vinfo_stat {
    const ENCODING: Encoding = Encoding::Struct(
        "vinfo_stat",
        &[
            <u32>::ENCODING,
            <u16>::ENCODING,
            <u16>::ENCODING,
            <u64>::ENCODING,
            <libc::uid_t>::ENCODING,
            <libc::gid_t>::ENCODING,
            <i64>::ENCODING,
            <i64>::ENCODING,
            <i64>::ENCODING,
            <i64>::ENCODING,
            <i64>::ENCODING,
            <i64>::ENCODING,
            <i64>::ENCODING,
            <i64>::ENCODING,
            <libc::off_t>::ENCODING,
            <i64>::ENCODING,
            <i32>::ENCODING,
            <u32>::ENCODING,
            <u32>::ENCODING,
            <u32>::ENCODING,
            <[i64; 2]>::ENCODING,
        ],
    );
}

unsafe impl RefEncode for vinfo_stat {
    const ENCODING_REF: Encoding = Encoding::Pointer(&Self::ENCODING);
}

/// [Apple's documentation](https://developer.apple.com/documentation/darwin/vnode_info?language=objc)
#[repr(C)]
#[derive(Clone, Copy, Debug, PartialEq)]
pub struct vnode_info {
    pub vi_stat: libc::vinfo_stat,
    pub vi_type: c_int,
    pub vi_pad: c_int,
    pub vi_fsid: libc::fsid_t,
}

unsafe impl Encode for vnode_info {
    const ENCODING: Encoding = Encoding::Struct(
        "vnode_info",
        &[
            <libc::vinfo_stat>::ENCODING,
            <c_int>::ENCODING,
            <c_int>::ENCODING,
            <libc::fsid_t>::ENCODING,
        ],
    );
}

unsafe impl RefEncode for vnode_info {
    const ENCODING_REF: Encoding = Encoding::Pointer(&Self::ENCODING);
}

/// [Apple's documentation](https://developer.apple.com/documentation/darwin/vnode_info_path?language=objc)
#[repr(C)]
#[derive(Clone, Copy, Debug, PartialEq)]
pub struct vnode_info_path {
    pub vip_vi: libc::vnode_info,
    pub vip_path: [c_char; 1024],
}

unsafe impl Encode for vnode_info_path {
    const ENCODING: Encoding = Encoding::Struct(
        "vnode_info_path",
        &[<libc::vnode_info>::ENCODING, <[c_char; 1024]>::ENCODING],
    );
}

unsafe impl RefEncode for vnode_info_path {
    const ENCODING_REF: Encoding = Encoding::Pointer(&Self::ENCODING);
}

/// [Apple's documentation](https://developer.apple.com/documentation/darwin/vnode_fdinfo?language=objc)
#[repr(C)]
#[derive(Clone, Copy, Debug, PartialEq)]
pub struct vnode_fdinfo {
    pub pfi: libc::proc_fileinfo,
    pub pvi: libc::vnode_info,
}

unsafe impl Encode for vnode_fdinfo {
    const ENCODING: Encoding = Encoding::Struct(
        "vnode_fdinfo",
        &[
            <libc::proc_fileinfo>::ENCODING,
            <libc::vnode_info>::ENCODING,
        ],
    );
}

unsafe impl RefEncode for vnode_fdinfo {
    const ENCODING_REF: Encoding = Encoding::Pointer(&Self::ENCODING);
}

/// [Apple's documentation](https://developer.apple.com/documentation/darwin/vnode_fdinfowithpath?language=objc)
#[repr(C)]
#[derive(Clone, Copy, Debug, PartialEq)]
pub struct vnode_fdinfowithpath {
    pub pfi: libc::proc_fileinfo,
    pub pvip: libc::vnode_info_path,
}

unsafe impl Encode for vnode_fdinfowithpath {
    const ENCODING: Encoding = Encoding::Struct(
        "vnode_fdinfowithpath",
        &[
            <libc::proc_fileinfo>::ENCODING,
            <libc::vnode_info_path>::ENCODING,
        ],
    );
}

unsafe impl RefEncode for vnode_fdinfowithpath {
    const ENCODING_REF: Encoding = Encoding::Pointer(&Self::ENCODING);
}

/// [Apple's documentation](https://developer.apple.com/documentation/darwin/proc_regionwithpathinfo?language=objc)
#[repr(C)]
#[derive(Clone, Copy, Debug, PartialEq)]
pub struct proc_regionwithpathinfo {
    pub prp_prinfo: libc::proc_regioninfo,
    pub prp_vip: libc::vnode_info_path,
}

unsafe impl Encode for proc_regionwithpathinfo {
    const ENCODING: Encoding = Encoding::Struct(
        "proc_regionwithpathinfo",
        &[
            <libc::proc_regioninfo>::ENCODING,
            <libc::vnode_info_path>::ENCODING,
        ],
    );
}

unsafe impl RefEncode for proc_regionwithpathinfo {
    const ENCODING_REF: Encoding = Encoding::Pointer(&Self::ENCODING);
}

/// [Apple's documentation](https://developer.apple.com/documentation/darwin/proc_regionpath?language=objc)
#[repr(C)]
#[derive(Clone, Copy, Debug, PartialEq)]
pub struct proc_regionpath {
    pub prpo_addr: u64,
    pub prpo_regionlength: u64,
    pub prpo_path: [c_char; 1024],
}

unsafe impl Encode for proc_regionpath {
    const ENCODING: Encoding = Encoding::Struct(
        "proc_regionpath",
        &[<u64>::ENCODING, <u64>::ENCODING, <[c_char; 1024]>::ENCODING],
    );
}

unsafe impl RefEncode for proc_regionpath {
    const ENCODING_REF: Encoding = Encoding::Pointer(&Self::ENCODING);
}

/// [Apple's documentation](https://developer.apple.com/documentation/darwin/proc_vnodepathinfo?language=objc)
#[repr(C)]
#[derive(Clone, Copy, Debug, PartialEq)]
pub struct proc_vnodepathinfo {
    pub pvi_cdir: libc::vnode_info_path,
    pub pvi_rdir: libc::vnode_info_path,
}

unsafe impl Encode for proc_vnodepathinfo {
    const ENCODING: Encoding = Encoding::Struct(
        "proc_vnodepathinfo",
        &[
            <libc::vnode_info_path>::ENCODING,
            <libc::vnode_info_path>::ENCODING,
        ],
    );
}

unsafe impl RefEncode for proc_vnodepathinfo {
    const ENCODING_REF: Encoding = Encoding::Pointer(&Self::ENCODING);
}

/// [Apple's documentation](https://developer.apple.com/documentation/darwin/proc_threadwithpathinfo?language=objc)
#[repr(C)]
#[derive(Clone, Copy, Debug, PartialEq)]
pub struct proc_threadwithpathinfo {
    pub pt: libc::proc_threadinfo,
    pub pvip: libc::vnode_info_path,
}

unsafe impl Encode for proc_threadwithpathinfo {
    const ENCODING: Encoding = Encoding::Struct(
        "proc_threadwithpathinfo",
        &[
            <libc::proc_threadinfo>::ENCODING,
            <libc::vnode_info_path>::ENCODING,
        ],
    );
}

unsafe impl RefEncode for proc_threadwithpathinfo {
    const ENCODING_REF: Encoding = Encoding::Pointer(&Self::ENCODING);
}

/// [Apple's documentation](https://developer.apple.com/documentation/darwin/in4in6_addr?language=objc)
#[repr(C)]
#[derive(Clone, Copy, Debug, PartialEq)]
pub struct in4in6_addr {
    pub i46a_pad32: [u32; 3],
    pub i46a_addr4: libc::in_addr,
}

unsafe impl Encode for in4in6_addr {
    const ENCODING: Encoding = Encoding::Struct(
        "in4in6_addr",
        &[<[u32; 3]>::ENCODING, <libc::in_addr>::ENCODING],
    );
}

unsafe impl RefEncode for in4in6_addr {
    const ENCODING_REF: Encoding = Encoding::Pointer(&Self::ENCODING);
}

/// [Apple's documentation](https://developer.apple.com/documentation/darwin/in_sockinfo_insi_faddr?language=objc)
#[repr(C)]
#[derive(Clone, Copy)]
pub union in_sockinfo_insi_faddr {
    pub ina_46: libc::in4in6_addr,
    pub ina_6: in6_addr,
}

unsafe impl Encode for in_sockinfo_insi_faddr {
    const ENCODING: Encoding =
        Encoding::Union("?", &[<libc::in4in6_addr>::ENCODING, <in6_addr>::ENCODING]);
}

unsafe impl RefEncode for in_sockinfo_insi_faddr {
    const ENCODING_REF: Encoding = Encoding::Pointer(&Self::ENCODING);
}

/// [Apple's documentation](https://developer.apple.com/documentation/darwin/in_sockinfo_insi_laddr?language=objc)
#[repr(C)]
#[derive(Clone, Copy)]
pub union in_sockinfo_insi_laddr {
    pub ina_46: libc::in4in6_addr,
    pub ina_6: in6_addr,
}

unsafe impl Encode for in_sockinfo_insi_laddr {
    const ENCODING: Encoding =
        Encoding::Union("?", &[<libc::in4in6_addr>::ENCODING, <in6_addr>::ENCODING]);
}

unsafe impl RefEncode for in_sockinfo_insi_laddr {
    const ENCODING_REF: Encoding = Encoding::Pointer(&Self::ENCODING);
}

/// [Apple's documentation](https://developer.apple.com/documentation/darwin/in_sockinfo_insi_v4?language=objc)
#[repr(C)]
#[derive(Clone, Copy, Debug, PartialEq)]
pub struct in_sockinfo_insi_v4 {
    pub in4_tos: c_uchar,
}

unsafe impl Encode for in_sockinfo_insi_v4 {
    const ENCODING: Encoding = Encoding::Struct("?", &[<c_uchar>::ENCODING]);
}

unsafe impl RefEncode for in_sockinfo_insi_v4 {
    const ENCODING_REF: Encoding = Encoding::Pointer(&Self::ENCODING);
}

/// [Apple's documentation](https://developer.apple.com/documentation/darwin/in_sockinfo_insi_v6?language=objc)
#[repr(C)]
#[derive(Clone, Copy, Debug, PartialEq)]
pub struct in_sockinfo_insi_v6 {
    pub in6_hlim: u8,
    pub in6_cksum: c_int,
    pub in6_ifindex: c_ushort,
    pub in6_hops: c_short,
}

unsafe impl Encode for in_sockinfo_insi_v6 {
    const ENCODING: Encoding = Encoding::Struct(
        "?",
        &[
            <u8>::ENCODING,
            <c_int>::ENCODING,
            <c_ushort>::ENCODING,
            <c_short>::ENCODING,
        ],
    );
}

unsafe impl RefEncode for in_sockinfo_insi_v6 {
    const ENCODING_REF: Encoding = Encoding::Pointer(&Self::ENCODING);
}

/// [Apple's documentation](https://developer.apple.com/documentation/darwin/in_sockinfo?language=objc)
#[repr(C)]
#[derive(Clone, Copy)]
pub struct in_sockinfo {
    pub insi_fport: c_int,
    pub insi_lport: c_int,
    pub insi_gencnt: u64,
    pub insi_flags: u32,
    pub insi_flow: u32,
    pub insi_vflag: u8,
    pub insi_ip_ttl: u8,
    pub rfu_1: u32,
    pub insi_faddr: libc::in_sockinfo_insi_faddr,
    pub insi_laddr: libc::in_sockinfo_insi_laddr,
    pub insi_v4: libc::in_sockinfo_insi_v4,
    pub insi_v6: libc::in_sockinfo_insi_v6,
}

unsafe impl Encode for in_sockinfo {
    const ENCODING: Encoding = Encoding::Struct(
        "in_sockinfo",
        &[
            <c_int>::ENCODING,
            <c_int>::ENCODING,
            <u64>::ENCODING,
            <u32>::ENCODING,
            <u32>::ENCODING,
            <u8>::ENCODING,
            <u8>::ENCODING,
            <u32>::ENCODING,
            <libc::in_sockinfo_insi_faddr>::ENCODING,
            <libc::in_sockinfo_insi_laddr>::ENCODING,
            <libc::in_sockinfo_insi_v4>::ENCODING,
            <libc::in_sockinfo_insi_v6>::ENCODING,
        ],
    );
}

unsafe impl RefEncode for in_sockinfo {
    const ENCODING_REF: Encoding = Encoding::Pointer(&Self::ENCODING);
}

/// [Apple's documentation](https://developer.apple.com/documentation/darwin/tcp_sockinfo?language=objc)
#[repr(C)]
#[derive(Clone, Copy)]
pub struct tcp_sockinfo {
    pub tcpsi_ini: libc::in_sockinfo,
    pub tcpsi_state: c_int,
    pub tcpsi_timer: [c_int; 4],
    pub tcpsi_mss: c_int,
    pub tcpsi_flags: u32,
    pub rfu_1: u32,
    pub tcpsi_tp: u64,
}

unsafe impl Encode for tcp_sockinfo {
    const ENCODING: Encoding = Encoding::Struct(
        "tcp_sockinfo",
        &[
            <libc::in_sockinfo>::ENCODING,
            <c_int>::ENCODING,
            <[c_int; 4]>::ENCODING,
            <c_int>::ENCODING,
            <u32>::ENCODING,
            <u32>::ENCODING,
            <u64>::ENCODING,
        ],
    );
}

unsafe impl RefEncode for tcp_sockinfo {
    const ENCODING_REF: Encoding = Encoding::Pointer(&Self::ENCODING);
}

/// [Apple's documentation](https://developer.apple.com/documentation/darwin/un_sockinfo_unsi_addr?language=objc)
#[repr(C)]
#[derive(Clone, Copy)]
pub union un_sockinfo_unsi_addr {
    pub ua_sun: libc::sockaddr_un,
    pub ua_dummy: [c_char; 255],
}

unsafe impl Encode for un_sockinfo_unsi_addr {
    const ENCODING: Encoding = Encoding::Union(
        "?",
        &[<libc::sockaddr_un>::ENCODING, <[c_char; 255]>::ENCODING],
    );
}

unsafe impl RefEncode for un_sockinfo_unsi_addr {
    const ENCODING_REF: Encoding = Encoding::Pointer(&Self::ENCODING);
}

/// [Apple's documentation](https://developer.apple.com/documentation/darwin/un_sockinfo_unsi_caddr?language=objc)
#[repr(C)]
#[derive(Clone, Copy)]
pub union un_sockinfo_unsi_caddr {
    pub ua_sun: libc::sockaddr_un,
    pub ua_dummy: [c_char; 255],
}

unsafe impl Encode for un_sockinfo_unsi_caddr {
    const ENCODING: Encoding = Encoding::Union(
        "?",
        &[<libc::sockaddr_un>::ENCODING, <[c_char; 255]>::ENCODING],
    );
}

unsafe impl RefEncode for un_sockinfo_unsi_caddr {
    const ENCODING_REF: Encoding = Encoding::Pointer(&Self::ENCODING);
}

/// [Apple's documentation](https://developer.apple.com/documentation/darwin/un_sockinfo?language=objc)
#[repr(C)]
#[derive(Clone, Copy)]
pub struct un_sockinfo {
    pub unsi_conn_so: u64,
    pub unsi_conn_pcb: u64,
    pub unsi_addr: libc::un_sockinfo_unsi_addr,
    pub unsi_caddr: libc::un_sockinfo_unsi_caddr,
}

unsafe impl Encode for un_sockinfo {
    const ENCODING: Encoding = Encoding::Struct(
        "un_sockinfo",
        &[
            <u64>::ENCODING,
            <u64>::ENCODING,
            <libc::un_sockinfo_unsi_addr>::ENCODING,
            <libc::un_sockinfo_unsi_caddr>::ENCODING,
        ],
    );
}

unsafe impl RefEncode for un_sockinfo {
    const ENCODING_REF: Encoding = Encoding::Pointer(&Self::ENCODING);
}

/// [Apple's documentation](https://developer.apple.com/documentation/darwin/ndrv_info?language=objc)
#[repr(C)]
#[derive(Clone, Copy, Debug, PartialEq)]
pub struct ndrv_info {
    pub ndrvsi_if_family: u32,
    pub ndrvsi_if_unit: u32,
    pub ndrvsi_if_name: [c_char; 16],
}

unsafe impl Encode for ndrv_info {
    const ENCODING: Encoding = Encoding::Struct(
        "ndrv_info",
        &[<u32>::ENCODING, <u32>::ENCODING, <[c_char; 16]>::ENCODING],
    );
}

unsafe impl RefEncode for ndrv_info {
    const ENCODING_REF: Encoding = Encoding::Pointer(&Self::ENCODING);
}

/// [Apple's documentation](https://developer.apple.com/documentation/darwin/kern_event_info?language=objc)
#[repr(C)]
#[derive(Clone, Copy, Debug, PartialEq)]
pub struct kern_event_info {
    pub kesi_vendor_code_filter: u32,
    pub kesi_class_filter: u32,
    pub kesi_subclass_filter: u32,
}

unsafe impl Encode for kern_event_info {
    const ENCODING: Encoding = Encoding::Struct(
        "kern_event_info",
        &[<u32>::ENCODING, <u32>::ENCODING, <u32>::ENCODING],
    );
}

unsafe impl RefEncode for kern_event_info {
    const ENCODING_REF: Encoding = Encoding::Pointer(&Self::ENCODING);
}

/// [Apple's documentation](https://developer.apple.com/documentation/darwin/kern_ctl_info?language=objc)
#[repr(C)]
#[derive(Clone, Copy, Debug, PartialEq)]
pub struct kern_ctl_info {
    pub kcsi_id: u32,
    pub kcsi_reg_unit: u32,
    pub kcsi_flags: u32,
    pub kcsi_recvbufsize: u32,
    pub kcsi_sendbufsize: u32,
    pub kcsi_unit: u32,
    pub kcsi_name: [c_char; 96],
}

unsafe impl Encode for kern_ctl_info {
    const ENCODING: Encoding = Encoding::Struct(
        "kern_ctl_info",
        &[
            <u32>::ENCODING,
            <u32>::ENCODING,
            <u32>::ENCODING,
            <u32>::ENCODING,
            <u32>::ENCODING,
            <u32>::ENCODING,
            <[c_char; 96]>::ENCODING,
        ],
    );
}

unsafe impl RefEncode for kern_ctl_info {
    const ENCODING_REF: Encoding = Encoding::Pointer(&Self::ENCODING);
}

/// [Apple's documentation](https://developer.apple.com/documentation/darwin/vsock_sockinfo?language=objc)
#[repr(C)]
#[derive(Clone, Copy, Debug, PartialEq)]
pub struct vsock_sockinfo {
    pub local_cid: u32,
    pub local_port: u32,
    pub remote_cid: u32,
    pub remote_port: u32,
}

unsafe impl Encode for vsock_sockinfo {
    const ENCODING: Encoding = Encoding::Struct(
        "vsock_sockinfo",
        &[
            <u32>::ENCODING,
            <u32>::ENCODING,
            <u32>::ENCODING,
            <u32>::ENCODING,
        ],
    );
}

unsafe impl RefEncode for vsock_sockinfo {
    const ENCODING_REF: Encoding = Encoding::Pointer(&Self::ENCODING);
}

/// [Apple's documentation](https://developer.apple.com/documentation/darwin/sockbuf_info?language=objc)
#[repr(C)]
#[derive(Clone, Copy, Debug, PartialEq)]
pub struct sockbuf_info {
    pub sbi_cc: u32,
    pub sbi_hiwat: u32,
    pub sbi_mbcnt: u32,
    pub sbi_mbmax: u32,
    pub sbi_lowat: u32,
    pub sbi_flags: c_short,
    pub sbi_timeo: c_short,
}

unsafe impl Encode for sockbuf_info {
    const ENCODING: Encoding = Encoding::Struct(
        "sockbuf_info",
        &[
            <u32>::ENCODING,
            <u32>::ENCODING,
            <u32>::ENCODING,
            <u32>::ENCODING,
            <u32>::ENCODING,
            <c_short>::ENCODING,
            <c_short>::ENCODING,
        ],
    );
}

unsafe impl RefEncode for sockbuf_info {
    const ENCODING_REF: Encoding = Encoding::Pointer(&Self::ENCODING);
}

/// [Apple's documentation](https://developer.apple.com/documentation/darwin/sockinfo_generic?language=objc)
pub const SOCKINFO_GENERIC: c_uint = 0;
/// [Apple's documentation](https://developer.apple.com/documentation/darwin/sockinfo_in?language=objc)
pub const SOCKINFO_IN: c_uint = 1;
/// [Apple's documentation](https://developer.apple.com/documentation/darwin/sockinfo_tcp?language=objc)
pub const SOCKINFO_TCP: c_uint = 2;
/// [Apple's documentation](https://developer.apple.com/documentation/darwin/sockinfo_un?language=objc)
pub const SOCKINFO_UN: c_uint = 3;
/// [Apple's documentation](https://developer.apple.com/documentation/darwin/sockinfo_ndrv?language=objc)
pub const SOCKINFO_NDRV: c_uint = 4;
/// [Apple's documentation](https://developer.apple.com/documentation/darwin/sockinfo_kern_event?language=objc)
pub const SOCKINFO_KERN_EVENT: c_uint = 5;
/// [Apple's documentation](https://developer.apple.com/documentation/darwin/sockinfo_kern_ctl?language=objc)
pub const SOCKINFO_KERN_CTL: c_uint = 6;
/// [Apple's documentation](https://developer.apple.com/documentation/darwin/sockinfo_vsock?language=objc)
pub const SOCKINFO_VSOCK: c_uint = 7;

/// [Apple's documentation](https://developer.apple.com/documentation/darwin/socket_info_soi_proto?language=objc)
#[repr(C)]
#[derive(Clone, Copy)]
pub union socket_info_soi_proto {
    pub pri_in: libc::in_sockinfo,
    pub pri_tcp: libc::tcp_sockinfo,
    pub pri_un: libc::un_sockinfo,
    pub pri_ndrv: libc::ndrv_info,
    pub pri_kern_event: libc::kern_event_info,
    pub pri_kern_ctl: libc::kern_ctl_info,
    pub pri_vsock: libc::vsock_sockinfo,
}

unsafe impl Encode for socket_info_soi_proto {
    const ENCODING: Encoding = Encoding::Union(
        "?",
        &[
            <libc::in_sockinfo>::ENCODING,
            <libc::tcp_sockinfo>::ENCODING,
            <libc::un_sockinfo>::ENCODING,
            <libc::ndrv_info>::ENCODING,
            <libc::kern_event_info>::ENCODING,
            <libc::kern_ctl_info>::ENCODING,
            <libc::vsock_sockinfo>::ENCODING,
        ],
    );
}

unsafe impl RefEncode for socket_info_soi_proto {
    const ENCODING_REF: Encoding = Encoding::Pointer(&Self::ENCODING);
}

/// [Apple's documentation](https://developer.apple.com/documentation/darwin/socket_info?language=objc)
#[repr(C)]
#[derive(Clone, Copy)]
pub struct socket_info {
    pub soi_stat: libc::vinfo_stat,
    pub soi_so: u64,
    pub soi_pcb: u64,
    pub soi_type: c_int,
    pub soi_protocol: c_int,
    pub soi_family: c_int,
    pub soi_options: c_short,
    pub soi_linger: c_short,
    pub soi_state: c_short,
    pub soi_qlen: c_short,
    pub soi_incqlen: c_short,
    pub soi_qlimit: c_short,
    pub soi_timeo: c_short,
    pub soi_error: c_ushort,
    pub soi_oobmark: u32,
    pub soi_rcv: libc::sockbuf_info,
    pub soi_snd: libc::sockbuf_info,
    pub soi_kind: c_int,
    pub rfu_1: u32,
    pub soi_proto: libc::socket_info_soi_proto,
}

unsafe impl Encode for socket_info {
    const ENCODING: Encoding = Encoding::Struct(
        "socket_info",
        &[
            <libc::vinfo_stat>::ENCODING,
            <u64>::ENCODING,
            <u64>::ENCODING,
            <c_int>::ENCODING,
            <c_int>::ENCODING,
            <c_int>::ENCODING,
            <c_short>::ENCODING,
            <c_short>::ENCODING,
            <c_short>::ENCODING,
            <c_short>::ENCODING,
            <c_short>::ENCODING,
            <c_short>::ENCODING,
            <c_short>::ENCODING,
            <c_ushort>::ENCODING,
            <u32>::ENCODING,
            <libc::sockbuf_info>::ENCODING,
            <libc::sockbuf_info>::ENCODING,
            <c_int>::ENCODING,
            <u32>::ENCODING,
            <libc::socket_info_soi_proto>::ENCODING,
        ],
    );
}

unsafe impl RefEncode for socket_info {
    const ENCODING_REF: Encoding = Encoding::Pointer(&Self::ENCODING);
}

/// [Apple's documentation](https://developer.apple.com/documentation/darwin/socket_fdinfo?language=objc)
#[repr(C)]
#[derive(Clone, Copy)]
pub struct socket_fdinfo {
    pub pfi: libc::proc_fileinfo,
    pub psi: libc::socket_info,
}

unsafe impl Encode for socket_fdinfo {
    const ENCODING: Encoding = Encoding::Struct(
        "socket_fdinfo",
        &[
            <libc::proc_fileinfo>::ENCODING,
            <libc::socket_info>::ENCODING,
        ],
    );
}

unsafe impl RefEncode for socket_fdinfo {
    const ENCODING_REF: Encoding = Encoding::Pointer(&Self::ENCODING);
}

/// [Apple's documentation](https://developer.apple.com/documentation/darwin/psem_info?language=objc)
#[repr(C)]
#[derive(Clone, Copy, Debug, PartialEq)]
pub struct psem_info {
    pub psem_stat: libc::vinfo_stat,
    pub psem_name: [c_char; 1024],
}

unsafe impl Encode for psem_info {
    const ENCODING: Encoding = Encoding::Struct(
        "psem_info",
        &[<libc::vinfo_stat>::ENCODING, <[c_char; 1024]>::ENCODING],
    );
}

unsafe impl RefEncode for psem_info {
    const ENCODING_REF: Encoding = Encoding::Pointer(&Self::ENCODING);
}

/// [Apple's documentation](https://developer.apple.com/documentation/darwin/psem_fdinfo?language=objc)
#[repr(C)]
#[derive(Clone, Copy, Debug, PartialEq)]
pub struct psem_fdinfo {
    pub pfi: libc::proc_fileinfo,
    pub pseminfo: libc::psem_info,
}

unsafe impl Encode for psem_fdinfo {
    const ENCODING: Encoding = Encoding::Struct(
        "psem_fdinfo",
        &[<libc::proc_fileinfo>::ENCODING, <libc::psem_info>::ENCODING],
    );
}

unsafe impl RefEncode for psem_fdinfo {
    const ENCODING_REF: Encoding = Encoding::Pointer(&Self::ENCODING);
}

/// [Apple's documentation](https://developer.apple.com/documentation/darwin/pshm_info?language=objc)
#[repr(C)]
#[derive(Clone, Copy, Debug, PartialEq)]
pub struct pshm_info {
    pub pshm_stat: libc::vinfo_stat,
    pub pshm_mappaddr: u64,
    pub pshm_name: [c_char; 1024],
}

unsafe impl Encode for pshm_info {
    const ENCODING: Encoding = Encoding::Struct(
        "pshm_info",
        &[
            <libc::vinfo_stat>::ENCODING,
            <u64>::ENCODING,
            <[c_char; 1024]>::ENCODING,
        ],
    );
}

unsafe impl RefEncode for pshm_info {
    const ENCODING_REF: Encoding = Encoding::Pointer(&Self::ENCODING);
}

/// [Apple's documentation](https://developer.apple.com/documentation/darwin/pshm_fdinfo?language=objc)
#[repr(C)]
#[derive(Clone, Copy, Debug, PartialEq)]
pub struct pshm_fdinfo {
    pub pfi: libc::proc_fileinfo,
    pub pshminfo: libc::pshm_info,
}

unsafe impl Encode for pshm_fdinfo {
    const ENCODING: Encoding = Encoding::Struct(
        "pshm_fdinfo",
        &[<libc::proc_fileinfo>::ENCODING, <libc::pshm_info>::ENCODING],
    );
}

unsafe impl RefEncode for pshm_fdinfo {
    const ENCODING_REF: Encoding = Encoding::Pointer(&Self::ENCODING);
}

/// [Apple's documentation](https://developer.apple.com/documentation/darwin/pipe_info?language=objc)
#[repr(C)]
#[derive(Clone, Copy, Debug, PartialEq)]
pub struct pipe_info {
    pub pipe_stat: libc::vinfo_stat,
    pub pipe_handle: u64,
    pub pipe_peerhandle: u64,
    pub pipe_status: c_int,
    pub rfu_1: c_int,
}

unsafe impl Encode for pipe_info {
    const ENCODING: Encoding = Encoding::Struct(
        "pipe_info",
        &[
            <libc::vinfo_stat>::ENCODING,
            <u64>::ENCODING,
            <u64>::ENCODING,
            <c_int>::ENCODING,
            <c_int>::ENCODING,
        ],
    );
}

unsafe impl RefEncode for pipe_info {
    const ENCODING_REF: Encoding = Encoding::Pointer(&Self::ENCODING);
}

/// [Apple's documentation](https://developer.apple.com/documentation/darwin/pipe_fdinfo?language=objc)
#[repr(C)]
#[derive(Clone, Copy, Debug, PartialEq)]
pub struct pipe_fdinfo {
    pub pfi: libc::proc_fileinfo,
    pub pipeinfo: libc::pipe_info,
}

unsafe impl Encode for pipe_fdinfo {
    const ENCODING: Encoding = Encoding::Struct(
        "pipe_fdinfo",
        &[<libc::proc_fileinfo>::ENCODING, <libc::pipe_info>::ENCODING],
    );
}

unsafe impl RefEncode for pipe_fdinfo {
    const ENCODING_REF: Encoding = Encoding::Pointer(&Self::ENCODING);
}

/// [Apple's documentation](https://developer.apple.com/documentation/darwin/kqueue_info?language=objc)
#[repr(C)]
#[derive(Clone, Copy, Debug, PartialEq)]
pub struct kqueue_info {
    pub kq_stat: libc::vinfo_stat,
    pub kq_state: u32,
    pub rfu_1: u32,
}

unsafe impl Encode for kqueue_info {
    const ENCODING: Encoding = Encoding::Struct(
        "kqueue_info",
        &[
            <libc::vinfo_stat>::ENCODING,
            <u32>::ENCODING,
            <u32>::ENCODING,
        ],
    );
}

unsafe impl RefEncode for kqueue_info {
    const ENCODING_REF: Encoding = Encoding::Pointer(&Self::ENCODING);
}

/// [Apple's documentation](https://developer.apple.com/documentation/darwin/kqueue_dyninfo?language=objc)
#[repr(C)]
#[derive(Clone, Copy, Debug, PartialEq)]
pub struct kqueue_dyninfo {
    pub kqdi_info: libc::kqueue_info,
    pub kqdi_servicer: u64,
    pub kqdi_owner: u64,
    pub kqdi_sync_waiters: u32,
    pub kqdi_sync_waiter_qos: u8,
    pub kqdi_async_qos: u8,
    pub kqdi_request_state: u16,
    pub kqdi_events_qos: u8,
    pub kqdi_pri: u8,
    pub kqdi_pol: u8,
    pub kqdi_cpupercent: u8,
    pub(crate) _kqdi_reserved0: [u8; 4],
    pub(crate) _kqdi_reserved1: [u64; 4],
}

unsafe impl Encode for kqueue_dyninfo {
    const ENCODING: Encoding = Encoding::Struct(
        "kqueue_dyninfo",
        &[
            <libc::kqueue_info>::ENCODING,
            <u64>::ENCODING,
            <u64>::ENCODING,
            <u32>::ENCODING,
            <u8>::ENCODING,
            <u8>::ENCODING,
            <u16>::ENCODING,
            <u8>::ENCODING,
            <u8>::ENCODING,
            <u8>::ENCODING,
            <u8>::ENCODING,
            <[u8; 4]>::ENCODING,
            <[u64; 4]>::ENCODING,
        ],
    );
}

unsafe impl RefEncode for kqueue_dyninfo {
    const ENCODING_REF: Encoding = Encoding::Pointer(&Self::ENCODING);
}

/// [Apple's documentation](https://developer.apple.com/documentation/darwin/kqueue_fdinfo?language=objc)
#[repr(C)]
#[derive(Clone, Copy, Debug, PartialEq)]
pub struct kqueue_fdinfo {
    pub pfi: libc::proc_fileinfo,
    pub kqueueinfo: libc::kqueue_info,
}

unsafe impl Encode for kqueue_fdinfo {
    const ENCODING: Encoding = Encoding::Struct(
        "kqueue_fdinfo",
        &[
            <libc::proc_fileinfo>::ENCODING,
            <libc::kqueue_info>::ENCODING,
        ],
    );
}

unsafe impl RefEncode for kqueue_fdinfo {
    const ENCODING_REF: Encoding = Encoding::Pointer(&Self::ENCODING);
}

/// [Apple's documentation](https://developer.apple.com/documentation/darwin/appletalk_info?language=objc)
#[repr(C)]
#[derive(Clone, Copy, Debug, PartialEq)]
pub struct appletalk_info {
    pub atalk_stat: libc::vinfo_stat,
}

unsafe impl Encode for appletalk_info {
    const ENCODING: Encoding = Encoding::Struct("appletalk_info", &[<libc::vinfo_stat>::ENCODING]);
}

unsafe impl RefEncode for appletalk_info {
    const ENCODING_REF: Encoding = Encoding::Pointer(&Self::ENCODING);
}

/// [Apple's documentation](https://developer.apple.com/documentation/darwin/appletalk_fdinfo?language=objc)
#[repr(C)]
#[derive(Clone, Copy, Debug, PartialEq)]
pub struct appletalk_fdinfo {
    pub pfi: libc::proc_fileinfo,
    pub appletalkinfo: libc::appletalk_info,
}

unsafe impl Encode for appletalk_fdinfo {
    const ENCODING: Encoding = Encoding::Struct(
        "appletalk_fdinfo",
        &[
            <libc::proc_fileinfo>::ENCODING,
            <libc::appletalk_info>::ENCODING,
        ],
    );
}

unsafe impl RefEncode for appletalk_fdinfo {
    const ENCODING_REF: Encoding = Encoding::Pointer(&Self::ENCODING);
}

/// [Apple's documentation](https://developer.apple.com/documentation/darwin/proc_info_udata_t?language=objc)
pub type proc_info_udata_t = u64;

/// [Apple's documentation](https://developer.apple.com/documentation/darwin/proc_fdinfo?language=objc)
#[repr(C)]
#[derive(Clone, Copy, Debug, PartialEq)]
pub struct proc_fdinfo {
    pub proc_fd: i32,
    pub proc_fdtype: u32,
}

unsafe impl Encode for proc_fdinfo {
    const ENCODING: Encoding = Encoding::Struct("proc_fdinfo", &[<i32>::ENCODING, <u32>::ENCODING]);
}

unsafe impl RefEncode for proc_fdinfo {
    const ENCODING_REF: Encoding = Encoding::Pointer(&Self::ENCODING);
}

/// [Apple's documentation](https://developer.apple.com/documentation/darwin/proc_fileportinfo?language=objc)
#[repr(C)]
#[derive(Clone, Copy, Debug, PartialEq)]
pub struct proc_fileportinfo {
    pub proc_fileport: u32,
    pub proc_fdtype: u32,
}

unsafe impl Encode for proc_fileportinfo {
    const ENCODING: Encoding =
        Encoding::Struct("proc_fileportinfo", &[<u32>::ENCODING, <u32>::ENCODING]);
}

unsafe impl RefEncode for proc_fileportinfo {
    const ENCODING_REF: Encoding = Encoding::Pointer(&Self::ENCODING);
}

/// [Apple's documentation](https://developer.apple.com/documentation/darwin/proc_channel_info?language=objc)
#[repr(C)]
#[derive(Clone, Copy, Debug, PartialEq)]
pub struct proc_channel_info {
    pub chi_instance: uuid_t,
    pub chi_port: u32,
    pub chi_type: u32,
    pub chi_flags: u32,
    pub rfu_1: u32,
}

unsafe impl Encode for proc_channel_info {
    const ENCODING: Encoding = Encoding::Struct(
        "proc_channel_info",
        &[
            <uuid_t>::ENCODING,
            <u32>::ENCODING,
            <u32>::ENCODING,
            <u32>::ENCODING,
            <u32>::ENCODING,
        ],
    );
}

unsafe impl RefEncode for proc_channel_info {
    const ENCODING_REF: Encoding = Encoding::Pointer(&Self::ENCODING);
}

/// [Apple's documentation](https://developer.apple.com/documentation/darwin/channel_fdinfo?language=objc)
#[repr(C)]
#[derive(Clone, Copy, Debug, PartialEq)]
pub struct channel_fdinfo {
    pub pfi: libc::proc_fileinfo,
    pub channelinfo: libc::proc_channel_info,
}

unsafe impl Encode for channel_fdinfo {
    const ENCODING: Encoding = Encoding::Struct(
        "channel_fdinfo",
        &[
            <libc::proc_fileinfo>::ENCODING,
            <libc::proc_channel_info>::ENCODING,
        ],
    );
}

unsafe impl RefEncode for channel_fdinfo {
    const ENCODING_REF: Encoding = Encoding::Pointer(&Self::ENCODING);
}
