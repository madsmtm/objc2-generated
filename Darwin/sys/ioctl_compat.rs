//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use core::ffi::*;
#[cfg(feature = "objc2")]
use objc2::__framework_prelude::*;

use crate::ffi::*;

/// [Apple's documentation](https://developer.apple.com/documentation/darwin/tchars?language=objc)
#[repr(C)]
#[derive(Clone, Copy, Debug, PartialEq)]
pub struct tchars {
    pub t_intrc: c_char,
    pub t_quitc: c_char,
    pub t_startc: c_char,
    pub t_stopc: c_char,
    pub t_eofc: c_char,
    pub t_brkc: c_char,
}

unsafe impl Encode for tchars {
    const ENCODING: Encoding = Encoding::Struct(
        "tchars",
        &[
            <c_char>::ENCODING,
            <c_char>::ENCODING,
            <c_char>::ENCODING,
            <c_char>::ENCODING,
            <c_char>::ENCODING,
            <c_char>::ENCODING,
        ],
    );
}

unsafe impl RefEncode for tchars {
    const ENCODING_REF: Encoding = Encoding::Pointer(&Self::ENCODING);
}

/// [Apple's documentation](https://developer.apple.com/documentation/darwin/ltchars?language=objc)
#[repr(C)]
#[derive(Clone, Copy, Debug, PartialEq)]
pub struct ltchars {
    pub t_suspc: c_char,
    pub t_dsuspc: c_char,
    pub t_rprntc: c_char,
    pub t_flushc: c_char,
    pub t_werasc: c_char,
    pub t_lnextc: c_char,
}

unsafe impl Encode for ltchars {
    const ENCODING: Encoding = Encoding::Struct(
        "ltchars",
        &[
            <c_char>::ENCODING,
            <c_char>::ENCODING,
            <c_char>::ENCODING,
            <c_char>::ENCODING,
            <c_char>::ENCODING,
            <c_char>::ENCODING,
        ],
    );
}

unsafe impl RefEncode for ltchars {
    const ENCODING_REF: Encoding = Encoding::Pointer(&Self::ENCODING);
}

/// [Apple's documentation](https://developer.apple.com/documentation/darwin/sgttyb?language=objc)
#[repr(C)]
#[derive(Clone, Copy, Debug, PartialEq)]
pub struct sgttyb {
    pub sg_ispeed: c_char,
    pub sg_ospeed: c_char,
    pub sg_erase: c_char,
    pub sg_kill: c_char,
    pub sg_flags: c_short,
}

unsafe impl Encode for sgttyb {
    const ENCODING: Encoding = Encoding::Struct(
        "sgttyb",
        &[
            <c_char>::ENCODING,
            <c_char>::ENCODING,
            <c_char>::ENCODING,
            <c_char>::ENCODING,
            <c_short>::ENCODING,
        ],
    );
}

unsafe impl RefEncode for sgttyb {
    const ENCODING_REF: Encoding = Encoding::Pointer(&Self::ENCODING);
}
