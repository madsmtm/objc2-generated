//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use core::ffi::*;
#[cfg(feature = "objc2")]
use objc2::__framework_prelude::*;

use crate::ffi::*;

/// [Apple's documentation](https://developer.apple.com/documentation/darwin/unp_gen_t?language=objc)
pub type unp_gen_t = libc::u_quad_t;

/// [Apple's documentation](https://developer.apple.com/documentation/darwin/_unpcb_list_entry?language=objc)
#[repr(C)]
#[derive(Clone, Copy, Debug, PartialEq)]
pub struct _unpcb_list_entry {
    pub le_next: u32,
    pub le_prev: u32,
}

unsafe impl Encode for _unpcb_list_entry {
    const ENCODING: Encoding =
        Encoding::Struct("_unpcb_list_entry", &[<u32>::ENCODING, <u32>::ENCODING]);
}

unsafe impl RefEncode for _unpcb_list_entry {
    const ENCODING_REF: Encoding = Encoding::Pointer(&Self::ENCODING);
}

/// [Apple's documentation](https://developer.apple.com/documentation/darwin/xunpgen?language=objc)
#[repr(C)]
#[derive(Clone, Copy, Debug, PartialEq)]
pub struct xunpgen {
    pub xug_len: u32,
    pub xug_count: c_uint,
    pub xug_gen: libc::unp_gen_t,
    pub xug_sogen: libc::so_gen_t,
}

unsafe impl Encode for xunpgen {
    const ENCODING: Encoding = Encoding::Struct(
        "xunpgen",
        &[
            <u32>::ENCODING,
            <c_uint>::ENCODING,
            <libc::unp_gen_t>::ENCODING,
            <libc::so_gen_t>::ENCODING,
        ],
    );
}

unsafe impl RefEncode for xunpgen {
    const ENCODING_REF: Encoding = Encoding::Pointer(&Self::ENCODING);
}
