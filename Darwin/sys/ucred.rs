//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use core::cell::UnsafeCell;
use core::ffi::*;
use core::marker::{PhantomData, PhantomPinned};
#[cfg(feature = "objc2")]
use objc2::__framework_prelude::*;

use crate::ffi::*;

/// [Apple's documentation](https://developer.apple.com/documentation/darwin/xucred_version?language=objc)
pub const XUCRED_VERSION: c_uint = 0;
/// [Apple's documentation](https://developer.apple.com/documentation/darwin/ucred?language=objc)
#[repr(C)]
#[derive(Debug)]
pub struct ucred {
    inner: [u8; 0],
    _p: UnsafeCell<PhantomData<(*const UnsafeCell<()>, PhantomPinned)>>,
}

unsafe impl RefEncode for ucred {
    const ENCODING_REF: Encoding = Encoding::Pointer(&Encoding::Struct("ucred", &[]));
}

/// [Apple's documentation](https://developer.apple.com/documentation/darwin/kauth_cred_t?language=objc)
pub type kauth_cred_t = *mut libc::ucred;

/// [Apple's documentation](https://developer.apple.com/documentation/darwin/posix_cred?language=objc)
#[repr(C)]
#[derive(Debug)]
pub struct posix_cred {
    inner: [u8; 0],
    _p: UnsafeCell<PhantomData<(*const UnsafeCell<()>, PhantomPinned)>>,
}

unsafe impl RefEncode for posix_cred {
    const ENCODING_REF: Encoding = Encoding::Pointer(&Encoding::Struct("posix_cred", &[]));
}

/// [Apple's documentation](https://developer.apple.com/documentation/darwin/posix_cred_t?language=objc)
pub type posix_cred_t = *mut libc::posix_cred;

/// [Apple's documentation](https://developer.apple.com/documentation/darwin/xucred?language=objc)
#[repr(C)]
#[derive(Clone, Copy, Debug, PartialEq)]
pub struct xucred {
    pub cr_version: c_uint,
    pub cr_uid: libc::uid_t,
    pub cr_ngroups: c_short,
    pub cr_groups: [libc::gid_t; 16],
}

unsafe impl Encode for xucred {
    const ENCODING: Encoding = Encoding::Struct(
        "xucred",
        &[
            <c_uint>::ENCODING,
            <libc::uid_t>::ENCODING,
            <c_short>::ENCODING,
            <[libc::gid_t; 16]>::ENCODING,
        ],
    );
}

unsafe impl RefEncode for xucred {
    const ENCODING_REF: Encoding = Encoding::Pointer(&Self::ENCODING);
}
