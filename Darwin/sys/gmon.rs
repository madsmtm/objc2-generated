//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use core::ffi::*;

use crate::ffi::*;

pub const GMONVERSION: c_uint = 0x00051879;
/// Structure prepended to gmon.out profiling data file.
#[repr(C)]
#[derive(Clone, Copy, Debug, PartialEq)]
pub struct gmonhdr {
    /// base pc address of sample buffer
    pub lpc: u32,
    /// max pc address of sampled buffer
    pub hpc: u32,
    /// size of sample buffer (plus this header)
    pub ncnt: u32,
    /// version number
    pub version: i32,
    /// profiling clock rate
    pub profrate: i32,
    /// reserved
    pub spare: [i32; 3],
}

#[repr(C)]
#[derive(Clone, Copy, Debug, PartialEq)]
pub struct gmonhdr_64 {
    /// base pc address of sample buffer
    pub lpc: u64,
    /// max pc address of sampled buffer
    pub hpc: u64,
    /// size of sample buffer (plus this header)
    pub ncnt: u32,
    /// version number
    pub version: i32,
    /// profiling clock rate
    pub profrate: i32,
    /// reserved
    pub spare: [i32; 3],
}

pub type gmonhdr_t = gmonhdr_64;

#[repr(C)]
#[derive(Clone, Copy, Debug, PartialEq)]
pub struct tostruct {
    pub selfpc: u32,
    pub count: i32,
    pub link: u16,
    pub order: u16,
}

#[repr(C)]
#[derive(Clone, Copy, Debug, PartialEq)]
pub struct tostruct_64 {
    pub selfpc: u64,
    pub count: i32,
    pub link: u16,
    pub order: u16,
}

pub type tostruct_t = tostruct_64;

/// a raw arc, with pointers to the calling site and
/// the called site and a count.
#[repr(C)]
#[derive(Clone, Copy, Debug, PartialEq)]
pub struct rawarc {
    pub raw_frompc: u32,
    pub raw_selfpc: u32,
    pub raw_count: i32,
}

#[repr(C)]
#[derive(Clone, Copy, Debug, PartialEq)]
pub struct rawarc_64 {
    pub raw_frompc: u64,
    pub raw_selfpc: u64,
    pub raw_count: i32,
}

pub type rawarc_t = rawarc_64;

/// The profiling data structures are housed in this structure.
#[repr(C)]
#[derive(Clone, Copy, Debug, PartialEq)]
pub struct gmonparam {
    pub state: c_int,
    pub kcount: *mut c_ushort,
    pub kcountsize: u_long,
    pub froms: *mut c_ushort,
    pub fromssize: u_long,
    pub tos: *mut tostruct_t,
    pub tossize: u_long,
    pub tolimit: c_long,
    pub lowpc: u_long,
    pub highpc: u_long,
    pub textsize: u_long,
    pub hashfraction: u_long,
}

extern "C" {
    pub static _gmonparam: gmonparam;
}

#[repr(C)]
#[derive(Clone, Copy, Debug, PartialEq)]
pub struct gmon_data {
    /// constant for type of data following this struct
    pub r#type: u32,
    /// size in bytes of the data following this struct
    pub size: u32,
}

pub type gmon_data_t = gmon_data;

#[repr(C)]
#[derive(Clone, Copy, Debug, PartialEq)]
pub struct rawarc_order {
    pub raw_frompc: u32,
    pub raw_selfpc: u32,
    pub raw_count: u32,
    pub raw_order: u32,
}

#[repr(C)]
#[derive(Clone, Copy, Debug, PartialEq)]
pub struct rawarc_order_64 {
    pub raw_frompc: u64,
    pub raw_selfpc: u64,
    pub raw_count: u32,
    pub raw_order: u32,
}

pub type rawarc_order_t = rawarc_order_64;
