//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use core::ffi::*;
#[cfg(feature = "objc2")]
use objc2::__framework_prelude::*;

use crate::ffi::*;

/// [Apple's documentation](https://developer.apple.com/documentation/darwin/dk_extent_t?language=objc)
#[repr(C)]
#[derive(Clone, Copy, Debug, PartialEq)]
pub struct dk_extent_t {
    pub offset: u64,
    pub length: u64,
}

unsafe impl Encode for dk_extent_t {
    const ENCODING: Encoding = Encoding::Struct("?", &[<u64>::ENCODING, <u64>::ENCODING]);
}

unsafe impl RefEncode for dk_extent_t {
    const ENCODING_REF: Encoding = Encoding::Pointer(&Self::ENCODING);
}

/// [Apple's documentation](https://developer.apple.com/documentation/darwin/dk_firmware_path_t?language=objc)
#[repr(C)]
#[derive(Clone, Copy, Debug, PartialEq)]
pub struct dk_firmware_path_t {
    pub path: [c_char; 128],
}

unsafe impl Encode for dk_firmware_path_t {
    const ENCODING: Encoding = Encoding::Struct("?", &[<[c_char; 128]>::ENCODING]);
}

unsafe impl RefEncode for dk_firmware_path_t {
    const ENCODING_REF: Encoding = Encoding::Pointer(&Self::ENCODING);
}

/// [Apple's documentation](https://developer.apple.com/documentation/darwin/dk_format_capacity_t?language=objc)
#[repr(C)]
#[derive(Clone, Copy, Debug, PartialEq)]
pub struct dk_format_capacity_t {
    pub blockCount: u64,
    pub blockSize: u32,
    pub reserved0096: [u8; 4],
}

unsafe impl Encode for dk_format_capacity_t {
    const ENCODING: Encoding = Encoding::Struct(
        "?",
        &[<u64>::ENCODING, <u32>::ENCODING, <[u8; 4]>::ENCODING],
    );
}

unsafe impl RefEncode for dk_format_capacity_t {
    const ENCODING_REF: Encoding = Encoding::Pointer(&Self::ENCODING);
}

/// [Apple's documentation](https://developer.apple.com/documentation/darwin/dk_format_capacities_t?language=objc)
#[repr(C)]
#[derive(Clone, Copy, Debug, PartialEq)]
pub struct dk_format_capacities_t {
    pub capacities: *mut libc::dk_format_capacity_t,
    pub capacitiesCount: u32,
    pub reserved0096: [u8; 4],
}

unsafe impl Encode for dk_format_capacities_t {
    const ENCODING: Encoding = Encoding::Struct(
        "?",
        &[
            <*mut libc::dk_format_capacity_t>::ENCODING,
            <u32>::ENCODING,
            <[u8; 4]>::ENCODING,
        ],
    );
}

unsafe impl RefEncode for dk_format_capacities_t {
    const ENCODING_REF: Encoding = Encoding::Pointer(&Self::ENCODING);
}

/// [Apple's documentation](https://developer.apple.com/documentation/darwin/dk_synchronize_t?language=objc)
#[repr(C)]
#[derive(Clone, Copy, Debug, PartialEq)]
pub struct dk_synchronize_t {
    pub offset: u64,
    pub length: u64,
    pub options: u32,
    pub reserved0160: [u8; 4],
}

unsafe impl Encode for dk_synchronize_t {
    const ENCODING: Encoding = Encoding::Struct(
        "?",
        &[
            <u64>::ENCODING,
            <u64>::ENCODING,
            <u32>::ENCODING,
            <[u8; 4]>::ENCODING,
        ],
    );
}

unsafe impl RefEncode for dk_synchronize_t {
    const ENCODING_REF: Encoding = Encoding::Pointer(&Self::ENCODING);
}

/// [Apple's documentation](https://developer.apple.com/documentation/darwin/dk_unmap_t?language=objc)
#[repr(C)]
#[derive(Clone, Copy, Debug, PartialEq)]
pub struct dk_unmap_t {
    pub extents: *mut libc::dk_extent_t,
    pub extentsCount: u32,
    pub options: u32,
}

unsafe impl Encode for dk_unmap_t {
    const ENCODING: Encoding = Encoding::Struct(
        "?",
        &[
            <*mut libc::dk_extent_t>::ENCODING,
            <u32>::ENCODING,
            <u32>::ENCODING,
        ],
    );
}

unsafe impl RefEncode for dk_unmap_t {
    const ENCODING_REF: Encoding = Encoding::Pointer(&Self::ENCODING);
}

/// [Apple's documentation](https://developer.apple.com/documentation/darwin/dk_corestorage_info_t?language=objc)
#[repr(C)]
#[derive(Clone, Copy, Debug, PartialEq)]
pub struct dk_corestorage_info_t {
    pub flags: u64,
    pub hotfile_size: u64,
    pub hibernate_minsize: u64,
    pub swapfile_pinning: u64,
    pub padding: [u64; 4],
}

unsafe impl Encode for dk_corestorage_info_t {
    const ENCODING: Encoding = Encoding::Struct(
        "?",
        &[
            <u64>::ENCODING,
            <u64>::ENCODING,
            <u64>::ENCODING,
            <u64>::ENCODING,
            <[u64; 4]>::ENCODING,
        ],
    );
}

unsafe impl RefEncode for dk_corestorage_info_t {
    const ENCODING_REF: Encoding = Encoding::Pointer(&Self::ENCODING);
}

/// [Apple's documentation](https://developer.apple.com/documentation/darwin/dk_provision_extent_t?language=objc)
#[repr(C)]
#[derive(Clone, Copy, Debug, PartialEq)]
pub struct dk_provision_extent_t {
    pub offset: u64,
    pub length: u64,
    pub provisionType: u8,
    pub reserved: [u8; 7],
}

unsafe impl Encode for dk_provision_extent_t {
    const ENCODING: Encoding = Encoding::Struct(
        "?",
        &[
            <u64>::ENCODING,
            <u64>::ENCODING,
            <u8>::ENCODING,
            <[u8; 7]>::ENCODING,
        ],
    );
}

unsafe impl RefEncode for dk_provision_extent_t {
    const ENCODING_REF: Encoding = Encoding::Pointer(&Self::ENCODING);
}

/// [Apple's documentation](https://developer.apple.com/documentation/darwin/dk_provision_status_t?language=objc)
#[repr(C)]
#[derive(Clone, Copy, Debug, PartialEq)]
pub struct dk_provision_status_t {
    pub offset: u64,
    pub length: u64,
    pub options: u64,
    pub reserved: u32,
    pub extentsCount: u32,
    pub extents: *mut libc::dk_provision_extent_t,
}

unsafe impl Encode for dk_provision_status_t {
    const ENCODING: Encoding = Encoding::Struct(
        "?",
        &[
            <u64>::ENCODING,
            <u64>::ENCODING,
            <u64>::ENCODING,
            <u32>::ENCODING,
            <u32>::ENCODING,
            <*mut libc::dk_provision_extent_t>::ENCODING,
        ],
    );
}

unsafe impl RefEncode for dk_provision_status_t {
    const ENCODING_REF: Encoding = Encoding::Pointer(&Self::ENCODING);
}

/// [Apple's documentation](https://developer.apple.com/documentation/darwin/dk_error_description_t?language=objc)
#[repr(C)]
#[derive(Clone, Copy, Debug, PartialEq)]
pub struct dk_error_description_t {
    pub options: u64,
    pub reserved: u64,
    pub description_size: u64,
    pub description: *mut c_char,
}

unsafe impl Encode for dk_error_description_t {
    const ENCODING: Encoding = Encoding::Struct(
        "?",
        &[
            <u64>::ENCODING,
            <u64>::ENCODING,
            <u64>::ENCODING,
            <*mut c_char>::ENCODING,
        ],
    );
}

unsafe impl RefEncode for dk_error_description_t {
    const ENCODING_REF: Encoding = Encoding::Pointer(&Self::ENCODING);
}
