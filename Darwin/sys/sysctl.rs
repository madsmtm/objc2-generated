//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use core::ffi::*;

use crate::ffi::*;

/// [Apple's documentation](https://developer.apple.com/documentation/darwin/kern_version?language=objc)
pub const KERN_VERSION: c_uint = 4;
/// [Apple's documentation](https://developer.apple.com/documentation/darwin/kern_osversion?language=objc)
pub const KERN_OSVERSION: c_uint = 65;
/// [Apple's documentation](https://developer.apple.com/documentation/darwin/user_posix2_version?language=objc)
pub const USER_POSIX2_VERSION: c_uint = 10;
/// [Apple's documentation](https://developer.apple.com/documentation/darwin/ctlname?language=objc)
#[repr(C)]
#[derive(Clone, Copy, Debug, PartialEq)]
pub struct ctlname {
    pub ctl_name: *mut c_char,
    pub ctl_type: c_int,
}

/// [Apple's documentation](https://developer.apple.com/documentation/darwin/_pcred?language=objc)
#[repr(C)]
#[derive(Clone, Copy, Debug, PartialEq)]
pub struct _pcred {
    pub pc_lock: [c_char; 72],
    pub pc_ucred: *mut libc::ucred,
    pub p_ruid: libc::uid_t,
    pub p_svuid: libc::uid_t,
    pub p_rgid: libc::gid_t,
    pub p_svgid: libc::gid_t,
    pub p_refcnt: c_int,
}

/// [Apple's documentation](https://developer.apple.com/documentation/darwin/_ucred?language=objc)
#[repr(C)]
#[derive(Clone, Copy, Debug, PartialEq)]
pub struct _ucred {
    pub cr_ref: i32,
    pub cr_uid: libc::uid_t,
    pub cr_ngroups: c_short,
    pub cr_groups: [libc::gid_t; 16],
}

/// [Apple's documentation](https://developer.apple.com/documentation/darwin/eproc?language=objc)
#[repr(C)]
#[derive(Clone, Copy, Debug, PartialEq)]
pub struct eproc {
    pub e_paddr: *mut libc::proc,
    pub e_sess: *mut libc::session,
    pub e_pcred: libc::_pcred,
    pub e_ucred: libc::_ucred,
    pub e_vm: libc::vmspace,
    pub e_ppid: libc::pid_t,
    pub e_pgid: libc::pid_t,
    pub e_jobc: c_short,
    pub e_tdev: libc::dev_t,
    pub e_tpgid: libc::pid_t,
    pub e_tsess: *mut libc::session,
    pub e_wmesg: [c_char; 8],
    pub e_xsize: libc::segsz_t,
    pub e_xrssize: c_short,
    pub e_xccount: c_short,
    pub e_xswrss: c_short,
    pub e_flag: i32,
    pub e_login: [c_char; 12],
    pub e_spare: [i32; 4],
}

/// [Apple's documentation](https://developer.apple.com/documentation/darwin/kinfo_proc?language=objc)
#[repr(C)]
#[derive(Clone, Copy)]
pub struct kinfo_proc {
    pub kp_proc: libc::extern_proc,
    pub kp_eproc: libc::eproc,
}

/// [Apple's documentation](https://developer.apple.com/documentation/darwin/xsw_usage?language=objc)
#[repr(C)]
#[derive(Clone, Copy, Debug, PartialEq)]
pub struct xsw_usage {
    pub xsu_total: u64,
    pub xsu_avail: u64,
    pub xsu_used: u64,
    pub xsu_pagesize: u32,
    pub xsu_encrypted: libc::boolean_t,
}

/// [Apple's documentation](https://developer.apple.com/documentation/darwin/loadavg?language=objc)
#[repr(C)]
#[derive(Clone, Copy, Debug, PartialEq)]
pub struct loadavg {
    pub ldavg: [libc::fixpt_t; 3],
    pub fscale: c_long,
}

extern "C" {
    /// [Apple's documentation](https://developer.apple.com/documentation/darwin/averunnable?language=objc)
    pub static averunnable: libc::loadavg;
}

extern "C-unwind" {
    pub fn sysctl(
        param1: *mut c_int,
        param1: c_uint,
        param1: *mut c_void,
        oldlenp: *mut usize,
        param1: *mut c_void,
        newlen: usize,
    ) -> c_int;
}

extern "C-unwind" {
    pub fn sysctlbyname(
        param1: *const c_char,
        param1: *mut c_void,
        oldlenp: *mut usize,
        param1: *mut c_void,
        newlen: usize,
    ) -> c_int;
}

extern "C-unwind" {
    pub fn sysctlnametomib(param1: *const c_char, param1: *mut c_int, sizep: *mut usize) -> c_int;
}
