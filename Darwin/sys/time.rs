//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
#[cfg(feature = "__builtin__")]
use __builtin__::*;
use core::ffi::*;

use crate::ffi::*;

/// [Apple's documentation](https://developer.apple.com/documentation/darwin/itimerval?language=objc)
#[repr(C)]
#[derive(Clone, Copy, Debug, PartialEq)]
pub struct itimerval {
    pub it_interval: timeval,
    pub it_value: timeval,
}

/// [Apple's documentation](https://developer.apple.com/documentation/darwin/timezone?language=objc)
#[repr(C)]
#[derive(Clone, Copy, Debug, PartialEq)]
pub struct timezone {
    pub tz_minuteswest: c_int,
    pub tz_dsttime: c_int,
}

/// [Apple's documentation](https://developer.apple.com/documentation/darwin/clockinfo?language=objc)
#[repr(C)]
#[derive(Clone, Copy, Debug, PartialEq)]
pub struct clockinfo {
    pub hz: c_int,
    pub tick: c_int,
    pub tickadj: c_int,
    pub stathz: c_int,
    pub profhz: c_int,
}

extern "C-unwind" {
    pub fn adjtime(param1: *const timeval, param1: *mut timeval) -> c_int;
}

extern "C-unwind" {
    pub fn futimes(param1: c_int, param1: *const timeval) -> c_int;
}

extern "C-unwind" {
    pub fn lutimes(param1: *const c_char, param1: *const timeval) -> c_int;
}

extern "C-unwind" {
    pub fn settimeofday(param1: *const timeval, param1: *const timezone) -> c_int;
}

extern "C-unwind" {
    pub fn getitimer(param1: c_int, param1: *mut itimerval) -> c_int;
}

extern "C-unwind" {
    pub fn gettimeofday(param1: *mut timeval, param1: *mut c_void) -> c_int;
}

extern "C-unwind" {
    pub fn setitimer(param1: c_int, param1: *const itimerval, param1: *mut itimerval) -> c_int;
}

extern "C-unwind" {
    pub fn utimes(param1: *const c_char, param1: *const timeval) -> c_int;
}
