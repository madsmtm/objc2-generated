//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use core::ffi::*;
#[cfg(feature = "objc2")]
use objc2::__framework_prelude::*;

use crate::ffi::*;

/// [Apple's documentation](https://developer.apple.com/documentation/darwin/ipc_perm?language=objc)
#[repr(C)]
#[derive(Clone, Copy, Debug, PartialEq)]
pub struct ipc_perm {
    pub uid: libc::uid_t,
    pub gid: libc::gid_t,
    pub cuid: libc::uid_t,
    pub cgid: libc::gid_t,
    pub mode: libc::mode_t,
    pub(crate) _seq: c_ushort,
    pub(crate) _key: libc::key_t,
}

unsafe impl Encode for ipc_perm {
    const ENCODING: Encoding = Encoding::Struct(
        "ipc_perm",
        &[
            <libc::uid_t>::ENCODING,
            <libc::gid_t>::ENCODING,
            <libc::uid_t>::ENCODING,
            <libc::gid_t>::ENCODING,
            <libc::mode_t>::ENCODING,
            <c_ushort>::ENCODING,
            <libc::key_t>::ENCODING,
        ],
    );
}

unsafe impl RefEncode for ipc_perm {
    const ENCODING_REF: Encoding = Encoding::Pointer(&Self::ENCODING);
}

extern "C-unwind" {
    pub fn ftok(param1: *const c_char, param1: c_int) -> libc::key_t;
}
