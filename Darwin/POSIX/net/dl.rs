//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use core::ffi::*;
#[cfg(feature = "objc2")]
use objc2::__framework_prelude::*;

use crate::ffi::*;

/// [Apple's documentation](https://developer.apple.com/documentation/darwin/sockaddr_dl?language=objc)
#[repr(C)]
#[derive(Clone, Copy, Debug, PartialEq)]
pub struct sockaddr_dl {
    pub sdl_len: c_uchar,
    pub sdl_family: c_uchar,
    pub sdl_index: c_ushort,
    pub sdl_type: c_uchar,
    pub sdl_nlen: c_uchar,
    pub sdl_alen: c_uchar,
    pub sdl_slen: c_uchar,
    pub sdl_data: [c_char; 12],
}

unsafe impl Encode for sockaddr_dl {
    const ENCODING: Encoding = Encoding::Struct(
        "sockaddr_dl",
        &[
            <c_uchar>::ENCODING,
            <c_uchar>::ENCODING,
            <c_ushort>::ENCODING,
            <c_uchar>::ENCODING,
            <c_uchar>::ENCODING,
            <c_uchar>::ENCODING,
            <c_uchar>::ENCODING,
            <[c_char; 12]>::ENCODING,
        ],
    );
}

unsafe impl RefEncode for sockaddr_dl {
    const ENCODING_REF: Encoding = Encoding::Pointer(&Self::ENCODING);
}

extern "C-unwind" {
    pub fn link_addr(param1: *const c_char, param1: *mut libc::sockaddr_dl);
}

extern "C-unwind" {
    pub fn link_ntoa(param1: *const libc::sockaddr_dl) -> *mut c_char;
}
