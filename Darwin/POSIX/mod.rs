//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
#[cfg(feature = "aio")]
#[path = "aio.rs"]
mod __aio;
#[cfg(feature = "arpa")]
#[path = "arpa/mod.rs"]
mod __arpa;
#[cfg(feature = "cpio")]
#[path = "cpio.rs"]
mod __cpio;
#[cfg(feature = "dirent")]
#[path = "dirent.rs"]
mod __dirent;
#[cfg(feature = "dlfcn")]
#[path = "dlfcn.rs"]
mod __dlfcn;
#[cfg(feature = "fcntl")]
#[path = "fcntl.rs"]
mod __fcntl;
#[cfg(feature = "fmtmsg")]
#[path = "fmtmsg.rs"]
mod __fmtmsg;
#[cfg(feature = "fnmatch")]
#[path = "fnmatch.rs"]
mod __fnmatch;
#[cfg(feature = "ftw")]
#[path = "ftw.rs"]
mod __ftw;
#[cfg(feature = "glob")]
#[path = "glob.rs"]
mod __glob;
#[cfg(feature = "grp")]
#[path = "grp.rs"]
mod __grp;
#[cfg(feature = "iconv")]
#[path = "iconv.rs"]
mod __iconv;
#[cfg(feature = "ifaddrs")]
#[path = "ifaddrs.rs"]
mod __ifaddrs;
#[cfg(feature = "ioctl")]
#[path = "ioctl.rs"]
mod __ioctl;
#[cfg(feature = "langinfo")]
#[path = "langinfo/mod.rs"]
mod __langinfo;
#[cfg(feature = "libgen")]
#[path = "libgen.rs"]
mod __libgen;
#[cfg(feature = "monetary")]
#[path = "monetary/mod.rs"]
mod __monetary;
#[cfg(feature = "ndbm")]
#[path = "ndbm.rs"]
mod __ndbm;
#[cfg(feature = "net")]
#[path = "net/mod.rs"]
mod __net;
#[cfg(feature = "netdb")]
#[path = "netdb.rs"]
mod __netdb;
#[cfg(feature = "netinet")]
#[path = "netinet/mod.rs"]
mod __netinet;
#[cfg(feature = "nl_types")]
#[path = "nl_types.rs"]
mod __nl_types;
#[cfg(feature = "poll")]
#[path = "poll.rs"]
mod __poll;
#[cfg(feature = "pthread")]
#[path = "pthread/mod.rs"]
mod __pthread;
#[cfg(feature = "pwd")]
#[path = "pwd.rs"]
mod __pwd;
#[cfg(feature = "regex")]
#[path = "regex/mod.rs"]
mod __regex;
#[cfg(feature = "sched")]
#[path = "sched.rs"]
mod __sched;
#[cfg(feature = "search")]
#[path = "search.rs"]
mod __search;
#[cfg(feature = "semaphore")]
#[path = "semaphore.rs"]
mod __semaphore;
#[cfg(feature = "spawn")]
#[path = "spawn.rs"]
mod __spawn;
#[cfg(feature = "strings")]
#[path = "strings.rs"]
mod __strings;
#[cfg(feature = "sys")]
#[path = "sys/mod.rs"]
mod __sys;
#[cfg(feature = "syslog")]
#[path = "syslog.rs"]
mod __syslog;
#[cfg(feature = "tar")]
#[path = "tar.rs"]
mod __tar;
#[cfg(feature = "termios")]
#[path = "termios.rs"]
mod __termios;
#[cfg(feature = "ulimit")]
#[path = "ulimit.rs"]
mod __ulimit;
#[cfg(feature = "unistd")]
#[path = "unistd.rs"]
mod __unistd;
#[cfg(feature = "utime")]
#[path = "utime.rs"]
mod __utime;
#[cfg(feature = "utmpx")]
#[path = "utmpx.rs"]
mod __utmpx;
#[cfg(feature = "wordexp")]
#[path = "wordexp.rs"]
mod __wordexp;

pub use self::__aio::aio_cancel;
pub use self::__aio::aio_error;
pub use self::__aio::aio_fsync;
pub use self::__aio::aio_read;
pub use self::__aio::aio_return;
pub use self::__aio::aio_suspend;
pub use self::__aio::aio_write;
pub use self::__aio::aiocb;
pub use self::__aio::lio_listio;
#[cfg(feature = "arpa")]
pub use self::__arpa::*;
pub(crate) use self::__dirent::__opendir2;
pub use self::__dirent::alphasort;
pub use self::__dirent::closedir;
pub use self::__dirent::dirent;
pub use self::__dirent::dirfd;
pub use self::__dirent::fdopendir;
pub use self::__dirent::getdirentries;
pub use self::__dirent::opendir;
pub use self::__dirent::readdir;
pub use self::__dirent::readdir_r;
pub use self::__dirent::rewinddir;
pub use self::__dirent::scandir;
pub use self::__dirent::scandir_b;
pub use self::__dirent::seekdir;
pub use self::__dirent::telldir;
pub use self::__dirent::DIR;
pub use self::__dlfcn::dl_info;
pub use self::__dlfcn::dladdr;
pub use self::__dlfcn::dlclose;
pub use self::__dlfcn::dlerror;
pub use self::__dlfcn::dlopen;
pub use self::__dlfcn::dlopen_preflight;
pub use self::__dlfcn::dlsym;
pub use self::__dlfcn::Dl_info;
pub use self::__fcntl::creat;
pub use self::__fcntl::fattributiontag;
pub use self::__fcntl::fattributiontag_t;
pub use self::__fcntl::fchecklv;
pub use self::__fcntl::fchecklv_t;
pub use self::__fcntl::fgetsigsinfo;
pub use self::__fcntl::fgetsigsinfo_t;
pub use self::__fcntl::filesec_dup;
pub use self::__fcntl::filesec_free;
pub use self::__fcntl::filesec_get_property;
pub use self::__fcntl::filesec_init;
pub use self::__fcntl::filesec_property_t;
pub use self::__fcntl::filesec_query_property;
pub use self::__fcntl::filesec_set_property;
pub use self::__fcntl::filesec_unset_property;
pub use self::__fcntl::flock;
pub use self::__fcntl::flock;
pub use self::__fcntl::flocktimeout;
pub use self::__fcntl::fpunchhole;
pub use self::__fcntl::fpunchhole_t;
pub use self::__fcntl::fsignatures;
pub use self::__fcntl::fsignatures_t;
pub use self::__fcntl::fspecread;
pub use self::__fcntl::fspecread_t;
pub use self::__fcntl::fstore;
pub use self::__fcntl::fstore_t;
pub use self::__fcntl::fsupplement;
pub use self::__fcntl::fsupplement_t;
pub use self::__fcntl::ftrimactivefile;
pub use self::__fcntl::ftrimactivefile_t;
pub use self::__fcntl::log2phys;
pub use self::__fcntl::openat_authenticated_np;
pub use self::__fcntl::openx_np;
pub use self::__fcntl::radvisory;
pub use self::__fmtmsg::fmtmsg;
pub use self::__fnmatch::fnmatch;
pub use self::__ftw::ftw;
pub use self::__ftw::nftw;
pub use self::__ftw::FTW;
pub use self::__glob::glob;
pub use self::__glob::glob_b;
pub use self::__glob::glob_t;
pub use self::__glob::glob_t_gl_closedir;
pub use self::__glob::globfree;
pub use self::__grp::endgrent;
pub use self::__grp::getgrent;
pub use self::__grp::getgrgid;
pub use self::__grp::getgrgid_r;
pub use self::__grp::getgrnam;
pub use self::__grp::getgrnam_r;
pub use self::__grp::getgruuid;
pub use self::__grp::getgruuid_r;
pub use self::__grp::group;
pub use self::__grp::group_from_gid;
pub use self::__grp::setgrent;
pub use self::__grp::setgrfile;
pub use self::__grp::setgroupent;
pub(crate) use self::__iconv::__iconv_bool;
pub(crate) use self::__iconv::__iconv_free_list;
pub(crate) use self::__iconv::__iconv_get_list;
pub(crate) use self::__iconv::__tag_iconv_t;
pub(crate) use self::__iconv::_libiconv_version;
pub use self::__iconv::iconv;
pub use self::__iconv::iconv_allocation_t;
pub use self::__iconv::iconv_canonicalize;
pub use self::__iconv::iconv_close;
pub use self::__iconv::iconv_fallbacks;
pub use self::__iconv::iconv_hooks;
pub use self::__iconv::iconv_open;
pub use self::__iconv::iconv_open_into;
pub use self::__iconv::iconv_t;
pub use self::__iconv::iconv_unicode_char_hook;
pub use self::__iconv::iconv_unicode_mb_to_uc_fallback;
pub use self::__iconv::iconv_unicode_uc_to_mb_fallback;
pub use self::__iconv::iconv_wchar_mb_to_wc_fallback;
pub use self::__iconv::iconv_wchar_wc_to_mb_fallback;
pub use self::__iconv::iconv_wide_char_hook;
pub use self::__iconv::iconvctl;
pub use self::__iconv::iconvlist;
pub use self::__iconv::libiconv_set_relocation_prefix;
pub(crate) use self::__iconv::_LIBICONV_VERSION;
pub use self::__ifaddrs::freeifaddrs;
pub use self::__ifaddrs::freeifmaddrs;
pub use self::__ifaddrs::getifaddrs;
pub use self::__ifaddrs::getifmaddrs;
pub use self::__ifaddrs::ifaddrs;
pub use self::__ifaddrs::ifmaddrs;
pub use self::__ioctl::ttysize;
#[cfg(feature = "langinfo")]
pub use self::__langinfo::*;
pub use self::__libgen::basename;
pub use self::__libgen::basename_r;
pub use self::__libgen::dirname;
pub use self::__libgen::dirname_r;
#[cfg(feature = "monetary")]
pub use self::__monetary::*;
pub use self::__ndbm::datum;
pub use self::__ndbm::dbm_clearerr;
pub use self::__ndbm::dbm_close;
pub use self::__ndbm::dbm_delete;
pub use self::__ndbm::dbm_dirfno;
pub use self::__ndbm::dbm_error;
pub use self::__ndbm::dbm_fetch;
pub use self::__ndbm::dbm_firstkey;
pub use self::__ndbm::dbm_forder;
pub use self::__ndbm::dbm_nextkey;
pub use self::__ndbm::dbm_open;
pub use self::__ndbm::dbm_store;
pub use self::__ndbm::DBM;
#[cfg(feature = "net")]
pub use self::__net::*;
pub use self::__netdb::addrinfo;
pub use self::__netdb::endhostent;
pub use self::__netdb::endnetent;
pub use self::__netdb::endnetgrent;
pub use self::__netdb::endprotoent;
pub use self::__netdb::endrpcent;
pub use self::__netdb::endservent;
pub use self::__netdb::freeaddrinfo;
pub use self::__netdb::freehostent;
pub use self::__netdb::gai_strerror;
pub use self::__netdb::getaddrinfo;
pub use self::__netdb::gethostbyaddr;
pub use self::__netdb::gethostbyname;
pub use self::__netdb::gethostbyname2;
pub use self::__netdb::gethostent;
pub use self::__netdb::getipnodebyaddr;
pub use self::__netdb::getipnodebyname;
pub use self::__netdb::getnameinfo;
pub use self::__netdb::getnetbyaddr;
pub use self::__netdb::getnetbyname;
pub use self::__netdb::getnetent;
pub use self::__netdb::getnetgrent;
pub use self::__netdb::getprotobyname;
pub use self::__netdb::getprotobynumber;
pub use self::__netdb::getprotoent;
pub use self::__netdb::getrpcbyname;
pub use self::__netdb::getrpcbynumber;
pub use self::__netdb::getrpcent;
pub use self::__netdb::getservbyname;
pub use self::__netdb::getservbyport;
pub use self::__netdb::getservent;
pub use self::__netdb::h_errno;
pub use self::__netdb::herror;
pub use self::__netdb::hostent;
pub use self::__netdb::hstrerror;
pub use self::__netdb::innetgr;
pub use self::__netdb::netent;
pub use self::__netdb::protoent;
pub use self::__netdb::rpcent;
pub use self::__netdb::servent;
pub use self::__netdb::sethostent;
pub use self::__netdb::setnetent;
pub use self::__netdb::setnetgrent;
pub use self::__netdb::setprotoent;
pub use self::__netdb::setrpcent;
pub use self::__netdb::setservent;
#[cfg(feature = "netinet")]
pub use self::__netinet::*;
pub use self::__poll::nfds_t;
pub use self::__poll::poll;
pub use self::__poll::pollfd;
#[cfg(feature = "pthread")]
pub use self::__pthread::*;
pub use self::__pwd::endpwent;
pub use self::__pwd::getpwent;
pub use self::__pwd::getpwnam;
pub use self::__pwd::getpwnam_r;
pub use self::__pwd::getpwuid;
pub use self::__pwd::getpwuid_r;
pub use self::__pwd::getpwuuid;
pub use self::__pwd::getpwuuid_r;
pub use self::__pwd::passwd;
pub use self::__pwd::setpassent;
pub use self::__pwd::setpwent;
pub use self::__pwd::user_from_uid;
#[cfg(feature = "regex")]
pub use self::__regex::*;
pub use self::__search::entry;
pub use self::__search::hcreate;
pub use self::__search::hdestroy;
pub use self::__search::hsearch;
pub use self::__search::insque;
pub use self::__search::lfind;
pub use self::__search::lsearch;
pub use self::__search::remque;
pub use self::__search::tdelete;
pub use self::__search::tfind;
pub use self::__search::tsearch;
pub use self::__search::twalk;
pub use self::__search::ACTION;
pub use self::__search::ENTRY;
pub use self::__search::VISIT;
pub use self::__semaphore::pseminfo;
pub use self::__spawn::posix_spawn;
pub use self::__spawn::posix_spawn_file_actions_addchdir_np;
pub use self::__spawn::posix_spawn_file_actions_addclose;
pub use self::__spawn::posix_spawn_file_actions_adddup2;
pub use self::__spawn::posix_spawn_file_actions_addfchdir_np;
pub use self::__spawn::posix_spawn_file_actions_addinherit_np;
pub use self::__spawn::posix_spawn_file_actions_addopen;
pub use self::__spawn::posix_spawn_file_actions_destroy;
pub use self::__spawn::posix_spawn_file_actions_init;
pub use self::__spawn::posix_spawn_file_actions_t;
pub use self::__spawn::posix_spawnattr_destroy;
pub use self::__spawn::posix_spawnattr_getarchpref_np;
pub use self::__spawn::posix_spawnattr_getbinpref_np;
pub use self::__spawn::posix_spawnattr_getflags;
pub use self::__spawn::posix_spawnattr_getpgroup;
pub use self::__spawn::posix_spawnattr_getsigdefault;
pub use self::__spawn::posix_spawnattr_getsigmask;
pub use self::__spawn::posix_spawnattr_init;
pub use self::__spawn::posix_spawnattr_set_csm_np;
pub use self::__spawn::posix_spawnattr_setarchpref_np;
pub use self::__spawn::posix_spawnattr_setauditsessionport_np;
pub use self::__spawn::posix_spawnattr_setbinpref_np;
pub use self::__spawn::posix_spawnattr_setexceptionports_np;
pub use self::__spawn::posix_spawnattr_setflags;
pub use self::__spawn::posix_spawnattr_setnosmt_np;
pub use self::__spawn::posix_spawnattr_setpgroup;
pub use self::__spawn::posix_spawnattr_setsigdefault;
pub use self::__spawn::posix_spawnattr_setsigmask;
pub use self::__spawn::posix_spawnattr_setspecialport_np;
pub use self::__spawn::posix_spawnattr_t;
pub use self::__spawn::posix_spawnp;
#[cfg(feature = "sys")]
pub use self::__sys::*;
pub use self::__syslog::closelog;
pub use self::__syslog::openlog;
pub use self::__syslog::setlogmask;
pub use self::__syslog::vsyslog;
pub use self::__tar::TVERSION;
pub use self::__termios::cc_t;
pub use self::__termios::cfgetispeed;
pub use self::__termios::cfgetospeed;
pub use self::__termios::cfmakeraw;
pub use self::__termios::cfsetispeed;
pub use self::__termios::cfsetospeed;
pub use self::__termios::cfsetspeed;
pub use self::__termios::speed_t;
pub use self::__termios::tcdrain;
pub use self::__termios::tcflag_t;
pub use self::__termios::tcflow;
pub use self::__termios::tcflush;
pub use self::__termios::tcgetattr;
pub use self::__termios::tcgetsid;
pub use self::__termios::tcsendbreak;
pub use self::__termios::tcsetattr;
pub use self::__termios::termios;
pub use self::__utime::utimbuf;
pub use self::__utime::utime;
pub use self::__utmpx::endutxent;
pub use self::__utmpx::endutxent_wtmp;
pub use self::__utmpx::getlastlogx;
pub use self::__utmpx::getlastlogxbyname;
pub use self::__utmpx::getutmp;
pub use self::__utmpx::getutmpx;
pub use self::__utmpx::getutxent;
pub use self::__utmpx::getutxent_wtmp;
pub use self::__utmpx::getutxid;
pub use self::__utmpx::getutxline;
pub use self::__utmpx::lastlogx;
pub use self::__utmpx::pututxline;
pub use self::__utmpx::setutxent;
pub use self::__utmpx::setutxent_wtmp;
pub use self::__utmpx::utmpx;
pub use self::__utmpx::utmpxname;
pub use self::__utmpx::wtmpxname;
pub use self::__wordexp::wordexp;
pub use self::__wordexp::wordexp_t;
pub use self::__wordexp::wordfree;
