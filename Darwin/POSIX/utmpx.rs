//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
#[cfg(feature = "__builtin__")]
use __builtin__::*;
use core::ffi::*;
#[cfg(feature = "objc2")]
use objc2::__framework_prelude::*;

use crate::ffi::*;

/// [Apple's documentation](https://developer.apple.com/documentation/darwin/utmpx?language=objc)
#[repr(C)]
#[derive(Clone, Copy, Debug, PartialEq)]
pub struct utmpx {
    pub ut_user: [c_char; 256],
    pub ut_id: [c_char; 4],
    pub ut_line: [c_char; 32],
    pub ut_pid: libc::pid_t,
    pub ut_type: c_short,
    pub ut_tv: timeval,
    pub ut_host: [c_char; 256],
    pub ut_pad: [u32; 16],
}

unsafe impl Encode for utmpx {
    const ENCODING: Encoding = Encoding::Struct(
        "utmpx",
        &[
            <[c_char; 256]>::ENCODING,
            <[c_char; 4]>::ENCODING,
            <[c_char; 32]>::ENCODING,
            <libc::pid_t>::ENCODING,
            <c_short>::ENCODING,
            <timeval>::ENCODING,
            <[c_char; 256]>::ENCODING,
            <[u32; 16]>::ENCODING,
        ],
    );
}

unsafe impl RefEncode for utmpx {
    const ENCODING_REF: Encoding = Encoding::Pointer(&Self::ENCODING);
}

/// [Apple's documentation](https://developer.apple.com/documentation/darwin/lastlogx?language=objc)
#[repr(C)]
#[derive(Clone, Copy, Debug, PartialEq)]
pub struct lastlogx {
    pub ll_tv: timeval,
    pub ll_line: [c_char; 32],
    pub ll_host: [c_char; 256],
}

unsafe impl Encode for lastlogx {
    const ENCODING: Encoding = Encoding::Struct(
        "lastlogx",
        &[
            <timeval>::ENCODING,
            <[c_char; 32]>::ENCODING,
            <[c_char; 256]>::ENCODING,
        ],
    );
}

unsafe impl RefEncode for lastlogx {
    const ENCODING_REF: Encoding = Encoding::Pointer(&Self::ENCODING);
}

extern "C-unwind" {
    pub fn endutxent();
}

extern "C-unwind" {
    pub fn endutxent_wtmp();
}

extern "C-unwind" {
    pub fn getlastlogx(param1: libc::uid_t, param1: *mut libc::lastlogx) -> *mut libc::lastlogx;
}

extern "C-unwind" {
    pub fn getlastlogxbyname(
        param1: *const c_char,
        param1: *mut libc::lastlogx,
    ) -> *mut libc::lastlogx;
}

extern "C-unwind" {
    #[deprecated]
    pub fn getutmp(param1: *const libc::utmpx, param1: *mut libc::utmp);
}

extern "C-unwind" {
    #[deprecated]
    pub fn getutmpx(param1: *const libc::utmp, param1: *mut libc::utmpx);
}

extern "C-unwind" {
    pub fn getutxent() -> *mut libc::utmpx;
}

extern "C-unwind" {
    pub fn getutxent_wtmp() -> *mut libc::utmpx;
}

extern "C-unwind" {
    pub fn getutxid(param1: *const libc::utmpx) -> *mut libc::utmpx;
}

extern "C-unwind" {
    pub fn getutxline(param1: *const libc::utmpx) -> *mut libc::utmpx;
}

extern "C-unwind" {
    pub fn pututxline(param1: *const libc::utmpx) -> *mut libc::utmpx;
}

extern "C-unwind" {
    pub fn setutxent();
}

extern "C-unwind" {
    pub fn setutxent_wtmp(param1: c_int);
}

extern "C-unwind" {
    pub fn utmpxname(param1: *const c_char) -> c_int;
}

extern "C-unwind" {
    pub fn wtmpxname(param1: *const c_char) -> c_int;
}
