//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use core::ffi::*;
#[cfg(feature = "objc2")]
use objc2::__framework_prelude::*;

use crate::ffi::*;

/// [Apple's documentation](https://developer.apple.com/documentation/darwin/msgqnum_t?language=objc)
pub type msgqnum_t = c_ulong;

/// [Apple's documentation](https://developer.apple.com/documentation/darwin/msglen_t?language=objc)
pub type msglen_t = c_ulong;

/// [Apple's documentation](https://developer.apple.com/documentation/darwin/__msqid_ds_new?language=objc)
#[repr(C)]
#[derive(Clone, Copy, Debug, PartialEq)]
pub struct __msqid_ds_new {
    pub msg_perm: libc::ipc_perm,
    pub msg_first: i32,
    pub msg_last: i32,
    pub msg_cbytes: libc::msglen_t,
    pub msg_qnum: libc::msgqnum_t,
    pub msg_qbytes: libc::msglen_t,
    pub msg_lspid: libc::pid_t,
    pub msg_lrpid: libc::pid_t,
    pub msg_stime: libc::time_t,
    pub msg_pad1: i32,
    pub msg_rtime: libc::time_t,
    pub msg_pad2: i32,
    pub msg_ctime: libc::time_t,
    pub msg_pad3: i32,
    pub msg_pad4: [i32; 4],
}

unsafe impl Encode for __msqid_ds_new {
    const ENCODING: Encoding = Encoding::Struct(
        "__msqid_ds_new",
        &[
            <libc::ipc_perm>::ENCODING,
            <i32>::ENCODING,
            <i32>::ENCODING,
            <libc::msglen_t>::ENCODING,
            <libc::msgqnum_t>::ENCODING,
            <libc::msglen_t>::ENCODING,
            <libc::pid_t>::ENCODING,
            <libc::pid_t>::ENCODING,
            <libc::time_t>::ENCODING,
            <i32>::ENCODING,
            <libc::time_t>::ENCODING,
            <i32>::ENCODING,
            <libc::time_t>::ENCODING,
            <i32>::ENCODING,
            <[i32; 4]>::ENCODING,
        ],
    );
}

unsafe impl RefEncode for __msqid_ds_new {
    const ENCODING_REF: Encoding = Encoding::Pointer(&Self::ENCODING);
}

/// [Apple's documentation](https://developer.apple.com/documentation/darwin/msg?language=objc)
#[repr(C)]
#[derive(Clone, Copy, Debug, PartialEq)]
pub struct msg {
    pub msg_next: *mut libc::msg,
    pub msg_type: c_long,
    pub msg_ts: c_ushort,
    pub msg_spot: c_short,
    pub label: *mut libc::label,
}

unsafe impl Encode for msg {
    const ENCODING: Encoding = Encoding::Struct(
        "msg",
        &[
            <*mut libc::msg>::ENCODING,
            Encoding::C_LONG,
            <c_ushort>::ENCODING,
            <c_short>::ENCODING,
            <*mut libc::label>::ENCODING,
        ],
    );
}

unsafe impl RefEncode for msg {
    const ENCODING_REF: Encoding = Encoding::Pointer(&Self::ENCODING);
}

/// [Apple's documentation](https://developer.apple.com/documentation/darwin/mymsg?language=objc)
#[repr(C)]
#[derive(Clone, Copy, Debug, PartialEq)]
pub struct mymsg {
    pub mtype: c_long,
    pub mtext: [c_char; 1],
}

unsafe impl Encode for mymsg {
    const ENCODING: Encoding =
        Encoding::Struct("mymsg", &[Encoding::C_LONG, <[c_char; 1]>::ENCODING]);
}

unsafe impl RefEncode for mymsg {
    const ENCODING_REF: Encoding = Encoding::Pointer(&Self::ENCODING);
}

/// [Apple's documentation](https://developer.apple.com/documentation/darwin/msginfo?language=objc)
#[repr(C)]
#[derive(Clone, Copy, Debug, PartialEq)]
pub struct msginfo {
    pub msgmax: c_int,
    pub msgmni: c_int,
    pub msgmnb: c_int,
    pub msgtql: c_int,
    pub msgssz: c_int,
    pub msgseg: c_int,
}

unsafe impl Encode for msginfo {
    const ENCODING: Encoding = Encoding::Struct(
        "msginfo",
        &[
            <c_int>::ENCODING,
            <c_int>::ENCODING,
            <c_int>::ENCODING,
            <c_int>::ENCODING,
            <c_int>::ENCODING,
            <c_int>::ENCODING,
        ],
    );
}

unsafe impl RefEncode for msginfo {
    const ENCODING_REF: Encoding = Encoding::Pointer(&Self::ENCODING);
}

extern "C-unwind" {
    #[cfg_attr(target_vendor = "apple", link_name = "msgctl")]
    pub fn msgctl(param1: c_int, param1: c_int, param1: *mut libc::__msqid_ds_new) -> c_int;
}

extern "C-unwind" {
    pub fn msgget(param1: libc::key_t, param1: c_int) -> c_int;
}

extern "C-unwind" {
    #[cfg_attr(target_vendor = "apple", link_name = "msgrcv")]
    pub fn msgrcv(
        param1: c_int,
        param1: *mut c_void,
        param1: usize,
        param1: c_long,
        param1: c_int,
    ) -> isize;
}

extern "C-unwind" {
    #[cfg_attr(target_vendor = "apple", link_name = "msgsnd")]
    pub fn msgsnd(param1: c_int, param1: *const c_void, param1: usize, param1: c_int) -> c_int;
}
