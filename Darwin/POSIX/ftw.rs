//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use core::ffi::*;
#[cfg(feature = "objc2")]
use objc2::__framework_prelude::*;

use crate::ffi::*;

/// [Apple's documentation](https://developer.apple.com/documentation/darwin/ftw?language=objc)
#[repr(C)]
#[derive(Clone, Copy, Debug, PartialEq)]
pub struct FTW {
    pub base: c_int,
    pub level: c_int,
}

unsafe impl Encode for FTW {
    const ENCODING: Encoding = Encoding::Struct("FTW", &[<c_int>::ENCODING, <c_int>::ENCODING]);
}

unsafe impl RefEncode for FTW {
    const ENCODING_REF: Encoding = Encoding::Pointer(&Self::ENCODING);
}

extern "C-unwind" {
    #[cfg_attr(target_vendor = "apple", link_name = "ftw")]
    pub fn ftw(
        param1: *const c_char,
        param1: Option<
            unsafe extern "C-unwind" fn(*const c_char, *const libc::stat, c_int) -> c_int,
        >,
        param1: c_int,
    ) -> c_int;
}

extern "C-unwind" {
    #[cfg_attr(target_vendor = "apple", link_name = "nftw")]
    pub fn nftw(
        param1: *const c_char,
        param1: Option<
            unsafe extern "C-unwind" fn(
                *const c_char,
                *const libc::stat,
                c_int,
                *mut libc::FTW,
            ) -> c_int,
        >,
        param1: c_int,
        param1: c_int,
    ) -> c_int;
}
