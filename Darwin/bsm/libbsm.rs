//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use core::ffi::*;

use crate::ffi::*;

/// [Apple's documentation](https://developer.apple.com/documentation/darwin/au_event_ent?language=objc)
#[repr(C)]
#[derive(Clone, Copy, Debug, PartialEq)]
pub struct au_event_ent {
    pub ae_number: au_event_t,
    pub ae_name: *mut c_char,
    pub ae_desc: *mut c_char,
    pub ae_class: au_class_t,
}

/// [Apple's documentation](https://developer.apple.com/documentation/darwin/au_event_ent_t?language=objc)
pub type au_event_ent_t = au_event_ent;

/// [Apple's documentation](https://developer.apple.com/documentation/darwin/au_class_ent?language=objc)
#[repr(C)]
#[derive(Clone, Copy, Debug, PartialEq)]
pub struct au_class_ent {
    pub ac_name: *mut c_char,
    pub ac_class: au_class_t,
    pub ac_desc: *mut c_char,
}

/// [Apple's documentation](https://developer.apple.com/documentation/darwin/au_class_ent_t?language=objc)
pub type au_class_ent_t = au_class_ent;

/// [Apple's documentation](https://developer.apple.com/documentation/darwin/au_user_ent?language=objc)
#[repr(C)]
#[derive(Clone, Copy, Debug, PartialEq)]
pub struct au_user_ent {
    pub au_name: *mut c_char,
    pub au_always: au_mask_t,
    pub au_never: au_mask_t,
}

/// [Apple's documentation](https://developer.apple.com/documentation/darwin/au_user_ent_t?language=objc)
pub type au_user_ent_t = au_user_ent;

/// [Apple's documentation](https://developer.apple.com/documentation/darwin/au_tid32?language=objc)
#[repr(C)]
#[derive(Clone, Copy, Debug, PartialEq)]
pub struct au_tid32 {
    pub port: u32,
    pub addr: u32,
}

/// [Apple's documentation](https://developer.apple.com/documentation/darwin/au_tid32_t?language=objc)
pub type au_tid32_t = au_tid32;

/// [Apple's documentation](https://developer.apple.com/documentation/darwin/au_tid64?language=objc)
#[repr(C)]
#[derive(Clone, Copy, Debug, PartialEq)]
pub struct au_tid64 {
    pub port: u64,
    pub addr: u32,
}

/// [Apple's documentation](https://developer.apple.com/documentation/darwin/au_tid64_t?language=objc)
pub type au_tid64_t = au_tid64;

/// [Apple's documentation](https://developer.apple.com/documentation/darwin/au_tidaddr32?language=objc)
#[repr(C)]
#[derive(Clone, Copy, Debug, PartialEq)]
pub struct au_tidaddr32 {
    pub port: u32,
    pub r#type: u32,
    pub addr: [u32; 4],
}

/// [Apple's documentation](https://developer.apple.com/documentation/darwin/au_tidaddr32_t?language=objc)
pub type au_tidaddr32_t = au_tidaddr32;

/// [Apple's documentation](https://developer.apple.com/documentation/darwin/au_tidaddr64?language=objc)
#[repr(C)]
#[derive(Clone, Copy, Debug, PartialEq)]
pub struct au_tidaddr64 {
    pub port: u64,
    pub r#type: u32,
    pub addr: [u32; 4],
}

/// [Apple's documentation](https://developer.apple.com/documentation/darwin/au_tidaddr64_t?language=objc)
pub type au_tidaddr64_t = au_tidaddr64;

/// [Apple's documentation](https://developer.apple.com/documentation/darwin/au_arg32_t?language=objc)
#[repr(C)]
#[derive(Clone, Copy, Debug, PartialEq)]
pub struct au_arg32_t {
    pub no: c_uchar,
    pub val: u32,
    pub len: u16,
    pub text: *mut c_char,
}

/// [Apple's documentation](https://developer.apple.com/documentation/darwin/au_arg64_t?language=objc)
#[repr(C)]
#[derive(Clone, Copy, Debug, PartialEq)]
pub struct au_arg64_t {
    pub no: c_uchar,
    pub val: u64,
    pub len: u16,
    pub text: *mut c_char,
}

/// [Apple's documentation](https://developer.apple.com/documentation/darwin/au_arb_t?language=objc)
#[repr(C)]
#[derive(Clone, Copy, Debug, PartialEq)]
pub struct au_arb_t {
    pub howtopr: c_uchar,
    pub bu: c_uchar,
    pub uc: c_uchar,
    pub data: *mut c_uchar,
}

/// [Apple's documentation](https://developer.apple.com/documentation/darwin/au_attr32_t?language=objc)
#[repr(C)]
#[derive(Clone, Copy, Debug, PartialEq)]
pub struct au_attr32_t {
    pub mode: u32,
    pub uid: u32,
    pub gid: u32,
    pub fsid: u32,
    pub nid: u64,
    pub dev: u32,
}

/// [Apple's documentation](https://developer.apple.com/documentation/darwin/au_attr64_t?language=objc)
#[repr(C)]
#[derive(Clone, Copy, Debug, PartialEq)]
pub struct au_attr64_t {
    pub mode: u32,
    pub uid: u32,
    pub gid: u32,
    pub fsid: u32,
    pub nid: u64,
    pub dev: u64,
}

/// [Apple's documentation](https://developer.apple.com/documentation/darwin/au_execarg_t?language=objc)
#[repr(C)]
#[derive(Clone, Copy, Debug, PartialEq)]
pub struct au_execarg_t {
    pub count: u32,
    pub text: [*mut c_char; 128],
}

/// [Apple's documentation](https://developer.apple.com/documentation/darwin/au_execenv_t?language=objc)
#[repr(C)]
#[derive(Clone, Copy, Debug, PartialEq)]
pub struct au_execenv_t {
    pub count: u32,
    pub text: [*mut c_char; 128],
}

/// [Apple's documentation](https://developer.apple.com/documentation/darwin/au_cert_hash_t?language=objc)
#[repr(C)]
#[derive(Clone, Copy, Debug, PartialEq)]
pub struct au_cert_hash_t {
    pub count: u32,
    pub text: [*mut c_char; 32],
}

/// [Apple's documentation](https://developer.apple.com/documentation/darwin/au_krb5_principal_t?language=objc)
#[repr(C)]
#[derive(Clone, Copy, Debug, PartialEq)]
pub struct au_krb5_principal_t {
    pub count: u32,
    pub text: [*mut c_char; 32],
}

/// [Apple's documentation](https://developer.apple.com/documentation/darwin/au_exit_t?language=objc)
#[repr(C)]
#[derive(Clone, Copy, Debug, PartialEq)]
pub struct au_exit_t {
    pub status: u32,
    pub ret: u32,
}

/// [Apple's documentation](https://developer.apple.com/documentation/darwin/au_file_t?language=objc)
#[repr(C)]
#[derive(Clone, Copy, Debug, PartialEq)]
pub struct au_file_t {
    pub s: u32,
    pub ms: u32,
    pub len: u16,
    pub name: *mut c_char,
}

/// [Apple's documentation](https://developer.apple.com/documentation/darwin/au_groups_t?language=objc)
#[repr(C)]
#[derive(Clone, Copy, Debug, PartialEq)]
pub struct au_groups_t {
    pub no: u16,
    pub list: [u32; 16],
}

/// [Apple's documentation](https://developer.apple.com/documentation/darwin/au_header32_t?language=objc)
#[repr(C)]
#[derive(Clone, Copy, Debug, PartialEq)]
pub struct au_header32_t {
    pub size: u32,
    pub version: c_uchar,
    pub e_type: u16,
    pub e_mod: u16,
    pub s: u32,
    pub ms: u32,
}

/// [Apple's documentation](https://developer.apple.com/documentation/darwin/au_header32_ex_t?language=objc)
#[repr(C)]
#[derive(Clone, Copy, Debug, PartialEq)]
pub struct au_header32_ex_t {
    pub size: u32,
    pub version: c_uchar,
    pub e_type: u16,
    pub e_mod: u16,
    pub ad_type: u32,
    pub addr: [u32; 4],
    pub s: u32,
    pub ms: u32,
}

/// [Apple's documentation](https://developer.apple.com/documentation/darwin/au_header64_t?language=objc)
#[repr(C)]
#[derive(Clone, Copy, Debug, PartialEq)]
pub struct au_header64_t {
    pub size: u32,
    pub version: c_uchar,
    pub e_type: u16,
    pub e_mod: u16,
    pub s: u64,
    pub ms: u64,
}

/// [Apple's documentation](https://developer.apple.com/documentation/darwin/au_header64_ex_t?language=objc)
#[repr(C)]
#[derive(Clone, Copy, Debug, PartialEq)]
pub struct au_header64_ex_t {
    pub size: u32,
    pub version: c_uchar,
    pub e_type: u16,
    pub e_mod: u16,
    pub ad_type: u32,
    pub addr: [u32; 4],
    pub s: u64,
    pub ms: u64,
}

/// [Apple's documentation](https://developer.apple.com/documentation/darwin/au_inaddr_t?language=objc)
#[repr(C)]
#[derive(Clone, Copy, Debug, PartialEq)]
pub struct au_inaddr_t {
    pub addr: u32,
}

/// [Apple's documentation](https://developer.apple.com/documentation/darwin/au_inaddr_ex_t?language=objc)
#[repr(C)]
#[derive(Clone, Copy, Debug, PartialEq)]
pub struct au_inaddr_ex_t {
    pub r#type: u32,
    pub addr: [u32; 4],
}

/// [Apple's documentation](https://developer.apple.com/documentation/darwin/au_ip_t?language=objc)
#[repr(C)]
#[derive(Clone, Copy, Debug, PartialEq)]
pub struct au_ip_t {
    pub version: c_uchar,
    pub tos: c_uchar,
    pub len: u16,
    pub id: u16,
    pub offset: u16,
    pub ttl: c_uchar,
    pub prot: c_uchar,
    pub chksm: u16,
    pub src: u32,
    pub dest: u32,
}

/// [Apple's documentation](https://developer.apple.com/documentation/darwin/au_ipc_t?language=objc)
#[repr(C)]
#[derive(Clone, Copy, Debug, PartialEq)]
pub struct au_ipc_t {
    pub r#type: c_uchar,
    pub id: u32,
}

/// [Apple's documentation](https://developer.apple.com/documentation/darwin/au_ipcperm_t?language=objc)
#[repr(C)]
#[derive(Clone, Copy, Debug, PartialEq)]
pub struct au_ipcperm_t {
    pub uid: u32,
    pub gid: u32,
    pub puid: u32,
    pub pgid: u32,
    pub mode: u32,
    pub seq: u32,
    pub key: u32,
}

/// [Apple's documentation](https://developer.apple.com/documentation/darwin/au_iport_t?language=objc)
#[repr(C)]
#[derive(Clone, Copy, Debug, PartialEq)]
pub struct au_iport_t {
    pub port: u16,
}

/// [Apple's documentation](https://developer.apple.com/documentation/darwin/au_opaque_t?language=objc)
#[repr(C)]
#[derive(Clone, Copy, Debug, PartialEq)]
pub struct au_opaque_t {
    pub size: u16,
    pub data: *mut c_char,
}

/// [Apple's documentation](https://developer.apple.com/documentation/darwin/au_path_t?language=objc)
#[repr(C)]
#[derive(Clone, Copy, Debug, PartialEq)]
pub struct au_path_t {
    pub len: u16,
    pub path: *mut c_char,
}

/// [Apple's documentation](https://developer.apple.com/documentation/darwin/au_proc32_t?language=objc)
#[repr(C)]
#[derive(Clone, Copy, Debug, PartialEq)]
pub struct au_proc32_t {
    pub auid: u32,
    pub euid: u32,
    pub egid: u32,
    pub ruid: u32,
    pub rgid: u32,
    pub pid: u32,
    pub sid: u32,
    pub tid: au_tid32_t,
}

/// [Apple's documentation](https://developer.apple.com/documentation/darwin/au_proc64_t?language=objc)
#[repr(C)]
#[derive(Clone, Copy, Debug, PartialEq)]
pub struct au_proc64_t {
    pub auid: u32,
    pub euid: u32,
    pub egid: u32,
    pub ruid: u32,
    pub rgid: u32,
    pub pid: u32,
    pub sid: u32,
    pub tid: au_tid64_t,
}

/// [Apple's documentation](https://developer.apple.com/documentation/darwin/au_proc32ex_t?language=objc)
#[repr(C)]
#[derive(Clone, Copy, Debug, PartialEq)]
pub struct au_proc32ex_t {
    pub auid: u32,
    pub euid: u32,
    pub egid: u32,
    pub ruid: u32,
    pub rgid: u32,
    pub pid: u32,
    pub sid: u32,
    pub tid: au_tidaddr32_t,
}

/// [Apple's documentation](https://developer.apple.com/documentation/darwin/au_proc64ex_t?language=objc)
#[repr(C)]
#[derive(Clone, Copy, Debug, PartialEq)]
pub struct au_proc64ex_t {
    pub auid: u32,
    pub euid: u32,
    pub egid: u32,
    pub ruid: u32,
    pub rgid: u32,
    pub pid: u32,
    pub sid: u32,
    pub tid: au_tidaddr64_t,
}

/// [Apple's documentation](https://developer.apple.com/documentation/darwin/au_ret32_t?language=objc)
#[repr(C)]
#[derive(Clone, Copy, Debug, PartialEq)]
pub struct au_ret32_t {
    pub status: c_uchar,
    pub ret: u32,
}

/// [Apple's documentation](https://developer.apple.com/documentation/darwin/au_ret64_t?language=objc)
#[repr(C)]
#[derive(Clone, Copy, Debug, PartialEq)]
pub struct au_ret64_t {
    pub err: c_uchar,
    pub val: u64,
}

/// [Apple's documentation](https://developer.apple.com/documentation/darwin/au_seq_t?language=objc)
#[repr(C)]
#[derive(Clone, Copy, Debug, PartialEq)]
pub struct au_seq_t {
    pub seqno: u32,
}

/// [Apple's documentation](https://developer.apple.com/documentation/darwin/au_socket_t?language=objc)
#[repr(C)]
#[derive(Clone, Copy, Debug, PartialEq)]
pub struct au_socket_t {
    pub r#type: u16,
    pub l_port: u16,
    pub l_addr: u32,
    pub r_port: u16,
    pub r_addr: u32,
}

/// [Apple's documentation](https://developer.apple.com/documentation/darwin/au_socket_ex32_t?language=objc)
#[repr(C)]
#[derive(Clone, Copy, Debug, PartialEq)]
pub struct au_socket_ex32_t {
    pub domain: u16,
    pub r#type: u16,
    pub atype: u16,
    pub l_port: u16,
    pub l_addr: [u32; 4],
    pub r_port: u32,
    pub r_addr: [u32; 4],
}

/// [Apple's documentation](https://developer.apple.com/documentation/darwin/au_socketinet_ex32_t?language=objc)
#[repr(C)]
#[derive(Clone, Copy, Debug, PartialEq)]
pub struct au_socketinet_ex32_t {
    pub family: u16,
    pub port: u16,
    pub addr: [u32; 4],
}

/// [Apple's documentation](https://developer.apple.com/documentation/darwin/au_socketinet32_t?language=objc)
#[repr(C)]
#[derive(Clone, Copy, Debug, PartialEq)]
pub struct au_socketinet32_t {
    pub family: u16,
    pub port: u16,
    pub addr: u32,
}

/// [Apple's documentation](https://developer.apple.com/documentation/darwin/au_socketunix_t?language=objc)
#[repr(C)]
#[derive(Clone, Copy, Debug, PartialEq)]
pub struct au_socketunix_t {
    pub family: u16,
    pub path: [c_char; 104],
}

/// [Apple's documentation](https://developer.apple.com/documentation/darwin/au_subject32_t?language=objc)
#[repr(C)]
#[derive(Clone, Copy, Debug, PartialEq)]
pub struct au_subject32_t {
    pub auid: u32,
    pub euid: u32,
    pub egid: u32,
    pub ruid: u32,
    pub rgid: u32,
    pub pid: u32,
    pub sid: u32,
    pub tid: au_tid32_t,
}

/// [Apple's documentation](https://developer.apple.com/documentation/darwin/au_subject64_t?language=objc)
#[repr(C)]
#[derive(Clone, Copy, Debug, PartialEq)]
pub struct au_subject64_t {
    pub auid: u32,
    pub euid: u32,
    pub egid: u32,
    pub ruid: u32,
    pub rgid: u32,
    pub pid: u32,
    pub sid: u32,
    pub tid: au_tid64_t,
}

/// [Apple's documentation](https://developer.apple.com/documentation/darwin/au_subject32ex_t?language=objc)
#[repr(C)]
#[derive(Clone, Copy, Debug, PartialEq)]
pub struct au_subject32ex_t {
    pub auid: u32,
    pub euid: u32,
    pub egid: u32,
    pub ruid: u32,
    pub rgid: u32,
    pub pid: u32,
    pub sid: u32,
    pub tid: au_tidaddr32_t,
}

/// [Apple's documentation](https://developer.apple.com/documentation/darwin/au_subject64ex_t?language=objc)
#[repr(C)]
#[derive(Clone, Copy, Debug, PartialEq)]
pub struct au_subject64ex_t {
    pub auid: u32,
    pub euid: u32,
    pub egid: u32,
    pub ruid: u32,
    pub rgid: u32,
    pub pid: u32,
    pub sid: u32,
    pub tid: au_tidaddr64_t,
}

/// [Apple's documentation](https://developer.apple.com/documentation/darwin/au_text_t?language=objc)
#[repr(C)]
#[derive(Clone, Copy, Debug, PartialEq)]
pub struct au_text_t {
    pub len: u16,
    pub text: *mut c_char,
}

/// [Apple's documentation](https://developer.apple.com/documentation/darwin/au_zonename_t?language=objc)
#[repr(C)]
#[derive(Clone, Copy, Debug, PartialEq)]
pub struct au_zonename_t {
    pub len: u16,
    pub zonename: *mut c_char,
}

/// [Apple's documentation](https://developer.apple.com/documentation/darwin/au_kevent_t?language=objc)
#[repr(C)]
#[derive(Clone, Copy, Debug, PartialEq)]
pub struct au_kevent_t {
    pub ident: u32,
    pub filter: u16,
    pub flags: u16,
    pub fflags: u32,
    pub data: u32,
}

/// [Apple's documentation](https://developer.apple.com/documentation/darwin/au_invalid_t?language=objc)
#[repr(C)]
#[derive(Clone, Copy, Debug, PartialEq)]
pub struct au_invalid_t {
    pub length: u16,
    pub data: *mut c_char,
}

/// [Apple's documentation](https://developer.apple.com/documentation/darwin/au_identity_t?language=objc)
#[repr(C)]
#[derive(Clone, Copy, Debug, PartialEq)]
pub struct au_identity_t {
    pub signer_type: u32,
    pub signing_id_len: u16,
    pub signing_id: *mut c_char,
    pub signing_id_truncated: c_uchar,
    pub team_id_len: u16,
    pub team_id: *mut c_char,
    pub team_id_truncated: c_uchar,
    pub cdhash_len: u16,
    pub cdhash: *mut u8,
}

/// [Apple's documentation](https://developer.apple.com/documentation/darwin/au_trailer_t?language=objc)
#[repr(C)]
#[derive(Clone, Copy, Debug, PartialEq)]
pub struct au_trailer_t {
    pub magic: u16,
    pub count: u32,
}

/// [Apple's documentation](https://developer.apple.com/documentation/darwin/tokenstr_tt?language=objc)
#[repr(C)]
#[derive(Clone, Copy)]
pub union tokenstr_tt {
    pub arg32: au_arg32_t,
    pub arg64: au_arg64_t,
    pub arb: au_arb_t,
    pub attr32: au_attr32_t,
    pub attr64: au_attr64_t,
    pub execarg: au_execarg_t,
    pub execenv: au_execenv_t,
    pub exit: au_exit_t,
    pub file: au_file_t,
    pub grps: au_groups_t,
    pub hdr32: au_header32_t,
    pub hdr32_ex: au_header32_ex_t,
    pub hdr64: au_header64_t,
    pub hdr64_ex: au_header64_ex_t,
    pub inaddr: au_inaddr_t,
    pub inaddr_ex: au_inaddr_ex_t,
    pub ip: au_ip_t,
    pub ipc: au_ipc_t,
    pub ipcperm: au_ipcperm_t,
    pub iport: au_iport_t,
    pub opaque: au_opaque_t,
    pub path: au_path_t,
    pub proc32: au_proc32_t,
    pub proc32_ex: au_proc32ex_t,
    pub proc64: au_proc64_t,
    pub proc64_ex: au_proc64ex_t,
    pub ret32: au_ret32_t,
    pub ret64: au_ret64_t,
    pub seq: au_seq_t,
    pub socket: au_socket_t,
    pub socket_ex32: au_socket_ex32_t,
    pub sockinet_ex32: au_socketinet_ex32_t,
    pub sockunix: au_socketunix_t,
    pub subj32: au_subject32_t,
    pub subj32_ex: au_subject32ex_t,
    pub subj64: au_subject64_t,
    pub subj64_ex: au_subject64ex_t,
    pub text: au_text_t,
    pub kevent: au_kevent_t,
    pub invalid: au_invalid_t,
    pub trail: au_trailer_t,
    pub zonename: au_zonename_t,
    pub cert_hash: au_cert_hash_t,
    pub krb5_principal: au_krb5_principal_t,
    pub identity: au_identity_t,
}

/// [Apple's documentation](https://developer.apple.com/documentation/darwin/tokenstr?language=objc)
#[repr(C)]
#[derive(Clone, Copy)]
pub struct tokenstr {
    pub id: c_uchar,
    pub data: *mut c_uchar,
    pub len: usize,
    pub tt: tokenstr_tt,
}

/// [Apple's documentation](https://developer.apple.com/documentation/darwin/tokenstr_t?language=objc)
pub type tokenstr_t = tokenstr;

extern "C-unwind" {
    #[deprecated = "audit is deprecated"]
    pub fn setauclass();
}

extern "C-unwind" {
    #[deprecated = "audit is deprecated"]
    pub fn endauclass();
}

extern "C-unwind" {
    #[deprecated = "audit is deprecated"]
    pub fn getauclassent() -> *mut au_class_ent;
}

extern "C-unwind" {
    #[deprecated = "audit is deprecated"]
    pub fn getauclassent_r(class_int: *mut au_class_ent_t) -> *mut au_class_ent;
}

extern "C-unwind" {
    #[deprecated = "audit is deprecated"]
    pub fn getauclassnam(name: *const c_char) -> *mut au_class_ent;
}

extern "C-unwind" {
    #[deprecated = "audit is deprecated"]
    pub fn getauclassnam_r(
        class_int: *mut au_class_ent_t,
        name: *const c_char,
    ) -> *mut au_class_ent;
}

extern "C-unwind" {
    #[deprecated = "audit is deprecated"]
    pub fn getauclassnum(class_number: au_class_t) -> *mut au_class_ent;
}

extern "C-unwind" {
    #[deprecated = "audit is deprecated"]
    pub fn getauclassnum_r(
        class_int: *mut au_class_ent_t,
        class_number: au_class_t,
    ) -> *mut au_class_ent;
}

extern "C-unwind" {
    #[deprecated = "audit is deprecated"]
    pub fn setac();
}

extern "C-unwind" {
    #[deprecated = "audit is deprecated"]
    pub fn endac();
}

extern "C-unwind" {
    #[deprecated = "audit is deprecated"]
    pub fn getacdir(name: *mut c_char, len: c_int) -> c_int;
}

extern "C-unwind" {
    #[deprecated = "audit is deprecated"]
    pub fn getacmin(min_val: *mut c_int) -> c_int;
}

extern "C-unwind" {
    #[deprecated = "audit is deprecated"]
    pub fn getacfilesz(size_val: *mut usize) -> c_int;
}

extern "C-unwind" {
    #[deprecated = "audit is deprecated"]
    pub fn getacflg(auditstr: *mut c_char, len: c_int) -> c_int;
}

extern "C-unwind" {
    #[deprecated = "audit is deprecated"]
    pub fn getacna(auditstr: *mut c_char, len: c_int) -> c_int;
}

extern "C-unwind" {
    #[deprecated = "audit is deprecated"]
    pub fn getacpol(auditstr: *mut c_char, len: usize) -> c_int;
}

extern "C-unwind" {
    #[deprecated = "no longer implemented"]
    pub fn getacsflagsmask(which: *const c_char, auditstr: *mut c_char, len: usize) -> c_int;
}

extern "C-unwind" {
    #[deprecated = "audit is deprecated"]
    pub fn getachost(auditstr: *mut c_char, len: usize) -> c_int;
}

extern "C-unwind" {
    #[deprecated = "audit is deprecated"]
    pub fn getacexpire(andflg: *mut c_int, age: *mut time_t, size: *mut usize) -> c_int;
}

extern "C-unwind" {
    #[deprecated = "audit is deprecated"]
    pub fn getauditflagsbin(auditstr: *mut c_char, masks: *mut au_mask_t) -> c_int;
}

extern "C-unwind" {
    #[deprecated = "audit is deprecated"]
    pub fn getauditflagschar(auditstr: *mut c_char, masks: *mut au_mask_t, verbose: c_int)
        -> c_int;
}

extern "C-unwind" {
    #[deprecated = "audit is deprecated"]
    pub fn au_preselect(
        event: au_event_t,
        mask_p: *mut au_mask_t,
        sorf: c_int,
        flag: c_int,
    ) -> c_int;
}

extern "C-unwind" {
    #[deprecated = "audit is deprecated"]
    pub fn au_poltostr(policy: c_int, maxsize: usize, buf: *mut c_char) -> isize;
}

extern "C-unwind" {
    #[deprecated = "audit is deprecated"]
    pub fn au_strtopol(polstr: *const c_char, policy: *mut c_int) -> c_int;
}

extern "C-unwind" {
    pub fn au_sflagstostr(flags: u64, maxsize: usize, buf: *mut c_char) -> isize;
}

extern "C-unwind" {
    pub fn au_strtosflags(sflagsstr: *const c_char, flags: *mut u64) -> c_int;
}

extern "C-unwind" {
    #[deprecated = "audit is deprecated"]
    pub fn setauevent();
}

extern "C-unwind" {
    #[deprecated = "audit is deprecated"]
    pub fn endauevent();
}

extern "C-unwind" {
    #[deprecated = "audit is deprecated"]
    pub fn getauevent() -> *mut au_event_ent;
}

extern "C-unwind" {
    #[deprecated = "audit is deprecated"]
    pub fn getauevent_r(e: *mut au_event_ent) -> *mut au_event_ent;
}

extern "C-unwind" {
    #[deprecated = "audit is deprecated"]
    pub fn getauevnam(name: *const c_char) -> *mut au_event_ent;
}

extern "C-unwind" {
    #[deprecated = "audit is deprecated"]
    pub fn getauevnam_r(e: *mut au_event_ent, name: *const c_char) -> *mut au_event_ent;
}

extern "C-unwind" {
    #[deprecated = "audit is deprecated"]
    pub fn getauevnum(event_number: au_event_t) -> *mut au_event_ent;
}

extern "C-unwind" {
    #[deprecated = "audit is deprecated"]
    pub fn getauevnum_r(e: *mut au_event_ent, event_number: au_event_t) -> *mut au_event_ent;
}

extern "C-unwind" {
    #[deprecated = "audit is deprecated"]
    pub fn getauevnonam(event_name: *const c_char) -> *mut au_event_t;
}

extern "C-unwind" {
    #[deprecated = "audit is deprecated"]
    pub fn getauevnonam_r(ev: *mut au_event_t, event_name: *const c_char) -> *mut au_event_t;
}

extern "C-unwind" {
    #[deprecated = "audit is deprecated"]
    pub fn setauuser();
}

extern "C-unwind" {
    #[deprecated = "audit is deprecated"]
    pub fn endauuser();
}

extern "C-unwind" {
    #[deprecated = "audit is deprecated"]
    pub fn getauuserent() -> *mut au_user_ent;
}

extern "C-unwind" {
    #[deprecated = "audit is deprecated"]
    pub fn getauuserent_r(u: *mut au_user_ent) -> *mut au_user_ent;
}

extern "C-unwind" {
    #[deprecated = "audit is deprecated"]
    pub fn getauusernam(name: *const c_char) -> *mut au_user_ent;
}

extern "C-unwind" {
    #[deprecated = "audit is deprecated"]
    pub fn getauusernam_r(u: *mut au_user_ent, name: *const c_char) -> *mut au_user_ent;
}

extern "C-unwind" {
    #[deprecated = "audit is deprecated"]
    pub fn au_user_mask(username: *mut c_char, mask_p: *mut au_mask_t) -> c_int;
}

extern "C-unwind" {
    #[deprecated = "audit is deprecated"]
    pub fn getfauditflags(
        usremask: *mut au_mask_t,
        usrdmask: *mut au_mask_t,
        lastmask: *mut au_mask_t,
    ) -> c_int;
}

extern "C-unwind" {
    #[deprecated = "audit is deprecated"]
    pub fn au_read_rec(fp: *mut FILE, buf: *mut *mut c_uchar) -> c_int;
}

extern "C-unwind" {
    #[deprecated = "audit is deprecated"]
    pub fn au_fetch_tok(tok: *mut tokenstr_t, buf: *mut c_uchar, len: c_int) -> c_int;
}

extern "C-unwind" {
    #[deprecated = "audit is deprecated"]
    pub fn au_print_tok(
        outfp: *mut FILE,
        tok: *mut tokenstr_t,
        del: *mut c_char,
        raw: c_char,
        sfrm: c_char,
    );
}

extern "C-unwind" {
    #[deprecated = "audit is deprecated"]
    pub fn au_print_flags_tok(
        outfp: *mut FILE,
        tok: *mut tokenstr_t,
        del: *mut c_char,
        oflags: c_int,
    );
}

extern "C-unwind" {
    #[deprecated = "audit is deprecated"]
    pub fn au_print_tok_xml(
        outfp: *mut FILE,
        tok: *mut tokenstr_t,
        del: *mut c_char,
        raw: c_char,
        sfrm: c_char,
    );
}

extern "C-unwind" {
    #[deprecated = "audit is deprecated"]
    pub fn au_print_xml_header(outfp: *mut FILE);
}

extern "C-unwind" {
    #[deprecated = "audit is deprecated"]
    pub fn au_print_xml_footer(outfp: *mut FILE);
}

extern "C-unwind" {
    #[deprecated = "audit is deprecated"]
    pub fn au_strerror(bsm_error: c_uchar) -> *const c_char;
}

/// [Apple's documentation](https://developer.apple.com/documentation/darwin/kaunoerr?language=objc)
pub const kAUNoErr: c_int = 0;
/// [Apple's documentation](https://developer.apple.com/documentation/darwin/kaubadparamerr?language=objc)
pub const kAUBadParamErr: c_int = -66049;
/// [Apple's documentation](https://developer.apple.com/documentation/darwin/kaustaterr?language=objc)
pub const kAUStatErr: c_int = -66048;
/// [Apple's documentation](https://developer.apple.com/documentation/darwin/kausysctlerr?language=objc)
pub const kAUSysctlErr: c_int = -66047;
/// [Apple's documentation](https://developer.apple.com/documentation/darwin/kauopenerr?language=objc)
pub const kAUOpenErr: c_int = -66046;
/// [Apple's documentation](https://developer.apple.com/documentation/darwin/kaumakesubjecttokerr?language=objc)
pub const kAUMakeSubjectTokErr: c_int = -66045;
/// [Apple's documentation](https://developer.apple.com/documentation/darwin/kauwritesubjecttokerr?language=objc)
pub const kAUWriteSubjectTokErr: c_int = -66044;
/// [Apple's documentation](https://developer.apple.com/documentation/darwin/kauwritecallertokerr?language=objc)
pub const kAUWriteCallerTokErr: c_int = -66043;
/// [Apple's documentation](https://developer.apple.com/documentation/darwin/kaumakereturntokerr?language=objc)
pub const kAUMakeReturnTokErr: c_int = -66042;
/// [Apple's documentation](https://developer.apple.com/documentation/darwin/kauwritereturntokerr?language=objc)
pub const kAUWriteReturnTokErr: c_int = -66041;
/// [Apple's documentation](https://developer.apple.com/documentation/darwin/kaucloseerr?language=objc)
pub const kAUCloseErr: c_int = -66040;
/// [Apple's documentation](https://developer.apple.com/documentation/darwin/kaumaketexttokerr?language=objc)
pub const kAUMakeTextTokErr: c_int = -66039;
/// [Apple's documentation](https://developer.apple.com/documentation/darwin/kaulasterr?language=objc)
pub const kAULastErr: c_int = -66038;

extern "C-unwind" {
    #[deprecated = "audit is deprecated"]
    pub fn au_free_token(tok: Option<&token_t>);
}

extern "C-unwind" {
    #[deprecated = "audit is deprecated"]
    pub fn au_get_state() -> c_int;
}

extern "C-unwind" {
    #[deprecated = "audit is deprecated"]
    pub fn au_notify_initialize() -> u32;
}

extern "C-unwind" {
    #[deprecated = "audit is deprecated"]
    pub fn au_notify_terminate() -> c_int;
}

extern "C-unwind" {
    #[deprecated = "audit is deprecated"]
    pub fn cannot_audit(param1: c_int) -> c_int;
}

extern "C-unwind" {
    pub fn audit_set_terminal_id_ex(tid: *mut au_tid_addr_t) -> c_int;
}

extern "C-unwind" {
    pub fn audit_set_terminal_id(tid: *mut au_tid_t) -> c_int;
}

extern "C-unwind" {
    #[deprecated = "audit is deprecated"]
    pub fn audit_write(
        event_code: c_short,
        subject: Option<&token_t>,
        misctok: Option<&token_t>,
        retval: c_char,
        errcode: c_int,
    ) -> c_int;
}

extern "C-unwind" {
    #[deprecated = "audit is deprecated"]
    pub fn audit_write_success_ex(
        event_code: c_short,
        misctok: Option<&token_t>,
        auid: au_id_t,
        euid: uid_t,
        egid: gid_t,
        ruid: uid_t,
        rgid: gid_t,
        pid: pid_t,
        sid: au_asid_t,
        tid: *mut au_tid_addr_t,
    ) -> c_int;
}

extern "C-unwind" {
    #[deprecated = "audit is deprecated"]
    pub fn audit_write_success(
        event_code: c_short,
        misctok: Option<&token_t>,
        auid: au_id_t,
        euid: uid_t,
        egid: gid_t,
        ruid: uid_t,
        rgid: gid_t,
        pid: pid_t,
        sid: au_asid_t,
        tid: *mut au_tid_t,
    ) -> c_int;
}

extern "C-unwind" {
    #[deprecated = "audit is deprecated"]
    pub fn audit_write_success_self(event_code: c_short, misctok: Option<&token_t>) -> c_int;
}

extern "C-unwind" {
    #[deprecated = "audit is deprecated"]
    pub fn audit_write_failure_ex(
        event_code: c_short,
        errmsg: *mut c_char,
        errret: c_int,
        auid: au_id_t,
        euid: uid_t,
        egid: gid_t,
        ruid: uid_t,
        rgid: gid_t,
        pid: pid_t,
        sid: au_asid_t,
        tid: *mut au_tid_addr_t,
    ) -> c_int;
}

extern "C-unwind" {
    #[deprecated = "audit is deprecated"]
    pub fn audit_write_failure(
        event_code: c_short,
        errmsg: *mut c_char,
        errret: c_int,
        auid: au_id_t,
        euid: uid_t,
        egid: gid_t,
        ruid: uid_t,
        rgid: gid_t,
        pid: pid_t,
        sid: au_asid_t,
        tid: *mut au_tid_t,
    ) -> c_int;
}

extern "C-unwind" {
    #[deprecated = "audit is deprecated"]
    pub fn audit_write_failure_self(
        event_code: c_short,
        errmsg: *mut c_char,
        errret: c_int,
    ) -> c_int;
}

extern "C-unwind" {
    #[deprecated = "audit is deprecated"]
    pub fn audit_write_failure_na_ex(
        event_code: c_short,
        errmsg: *mut c_char,
        errret: c_int,
        euid: uid_t,
        egid: gid_t,
        pid: pid_t,
        tid: *mut au_tid_addr_t,
    ) -> c_int;
}

extern "C-unwind" {
    #[deprecated = "audit is deprecated"]
    pub fn audit_write_failure_na(
        event_code: c_short,
        errmsg: *mut c_char,
        errret: c_int,
        euid: uid_t,
        egid: gid_t,
        pid: pid_t,
        tid: *mut au_tid_t,
    ) -> c_int;
}

extern "C-unwind" {
    pub fn audit_token_to_au32(
        atoken: audit_token_t,
        auidp: *mut uid_t,
        euidp: *mut uid_t,
        egidp: *mut gid_t,
        ruidp: *mut uid_t,
        rgidp: *mut gid_t,
        pidp: *mut pid_t,
        asidp: *mut au_asid_t,
        tidp: *mut au_tid_t,
    );
}

extern "C-unwind" {
    pub fn audit_token_to_auid(atoken: audit_token_t) -> uid_t;
}

extern "C-unwind" {
    pub fn audit_token_to_euid(atoken: audit_token_t) -> uid_t;
}

extern "C-unwind" {
    pub fn audit_token_to_egid(atoken: audit_token_t) -> gid_t;
}

extern "C-unwind" {
    pub fn audit_token_to_ruid(atoken: audit_token_t) -> uid_t;
}

extern "C-unwind" {
    pub fn audit_token_to_rgid(atoken: audit_token_t) -> gid_t;
}

extern "C-unwind" {
    pub fn audit_token_to_pid(atoken: audit_token_t) -> pid_t;
}

extern "C-unwind" {
    pub fn audit_token_to_asid(atoken: audit_token_t) -> au_asid_t;
}

extern "C-unwind" {
    pub fn audit_token_to_pidversion(atoken: audit_token_t) -> c_int;
}

extern "C-unwind" {
    #[deprecated = "audit is deprecated"]
    pub fn audit_get_car(path: *mut c_char, sz: usize) -> c_int;
}

extern "C-unwind" {
    #[deprecated = "audit is deprecated"]
    pub fn audit_get_class(evc_map: *mut au_evclass_map_t, sz: usize) -> c_int;
}

extern "C-unwind" {
    #[deprecated = "audit is deprecated"]
    pub fn audit_set_class(evc_map: *mut au_evclass_map_t, sz: usize) -> c_int;
}

extern "C-unwind" {
    #[deprecated = "audit is deprecated"]
    pub fn audit_get_cond(cond: *mut c_int) -> c_int;
}

extern "C-unwind" {
    #[deprecated = "audit is deprecated"]
    pub fn audit_set_cond(cond: *mut c_int) -> c_int;
}

extern "C-unwind" {
    #[deprecated = "audit is deprecated"]
    pub fn audit_get_cwd(path: *mut c_char, sz: usize) -> c_int;
}

extern "C-unwind" {
    #[deprecated = "audit is deprecated"]
    pub fn audit_get_fsize(fstat: *mut au_fstat_t, sz: usize) -> c_int;
}

extern "C-unwind" {
    #[deprecated = "audit is deprecated"]
    pub fn audit_set_fsize(fstat: *mut au_fstat_t, sz: usize) -> c_int;
}

extern "C-unwind" {
    #[deprecated = "audit is deprecated"]
    pub fn audit_get_kmask(kmask: *mut au_mask_t, sz: usize) -> c_int;
}

extern "C-unwind" {
    #[deprecated = "audit is deprecated"]
    pub fn audit_set_kmask(kmask: *mut au_mask_t, sz: usize) -> c_int;
}

extern "C-unwind" {
    #[deprecated = "audit is deprecated"]
    pub fn audit_get_kaudit(aia: *mut auditinfo_addr_t, sz: usize) -> c_int;
}

extern "C-unwind" {
    #[deprecated = "audit is deprecated"]
    pub fn audit_set_kaudit(aia: *mut auditinfo_addr_t, sz: usize) -> c_int;
}

extern "C-unwind" {
    #[deprecated = "audit is deprecated"]
    pub fn audit_set_pmask(api: *mut auditpinfo_t, sz: usize) -> c_int;
}

extern "C-unwind" {
    #[deprecated = "use audit_get_pinfo_addr"]
    pub fn audit_get_pinfo(api: *mut auditpinfo_t, sz: usize) -> c_int;
}

extern "C-unwind" {
    pub fn audit_get_pinfo_addr(apia: *mut auditpinfo_addr_t, sz: usize) -> c_int;
}

extern "C-unwind" {
    #[deprecated = "audit is deprecated"]
    pub fn audit_get_policy(policy: *mut c_int) -> c_int;
}

extern "C-unwind" {
    #[deprecated = "audit is deprecated"]
    pub fn audit_set_policy(policy: *mut c_int) -> c_int;
}

extern "C-unwind" {
    #[deprecated = "audit is deprecated"]
    pub fn audit_get_qctrl(qctrl: *mut au_qctrl_t, sz: usize) -> c_int;
}

extern "C-unwind" {
    #[deprecated = "audit is deprecated"]
    pub fn audit_set_qctrl(qctrl: *mut au_qctrl_t, sz: usize) -> c_int;
}

extern "C-unwind" {
    pub fn audit_get_sflags(flags: *mut u64) -> c_int;
}

extern "C-unwind" {
    pub fn audit_set_sflags(flags: u64) -> c_int;
}

extern "C-unwind" {
    #[deprecated = "no longer implemented"]
    pub fn audit_get_sflags_mask(which: *const c_char, mask: *mut u64) -> c_int;
}

extern "C-unwind" {
    #[deprecated = "no longer implemented"]
    pub fn audit_set_sflags_mask(which: *const c_char, mask: u64) -> c_int;
}

extern "C-unwind" {
    pub fn audit_get_sinfo_addr(aia: *mut auditinfo_addr_t, sz: usize) -> c_int;
}

extern "C-unwind" {
    #[deprecated = "audit is deprecated"]
    pub fn audit_get_stat(stats: *mut au_stat_t, sz: usize) -> c_int;
}

extern "C-unwind" {
    #[deprecated = "audit is deprecated"]
    pub fn audit_set_stat(stats: *mut au_stat_t, sz: usize) -> c_int;
}

extern "C-unwind" {
    #[deprecated = "audit is deprecated"]
    pub fn audit_send_trigger(trigger: *mut c_int) -> c_int;
}

extern "C-unwind" {
    #[deprecated = "audit is deprecated"]
    pub fn audit_get_ctlmode(mode: *mut au_ctlmode_t, sz: usize) -> c_int;
}

extern "C-unwind" {
    #[deprecated = "audit is deprecated"]
    pub fn audit_get_expire_after(expire: *mut au_expire_after_t, sz: usize) -> c_int;
}
