//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
#[cfg(feature = "assert")]
#[path = "assert.rs"]
mod __assert;
#[cfg(feature = "complex")]
#[path = "complex.rs"]
mod __complex;
#[cfg(feature = "copyfile")]
#[path = "copyfile.rs"]
mod __copyfile;
#[cfg(feature = "ctype")]
#[path = "ctype.rs"]
mod __ctype;
#[cfg(feature = "err")]
#[path = "err.rs"]
mod __err;
#[cfg(feature = "errno")]
#[path = "errno.rs"]
mod __errno;
#[cfg(feature = "fenv")]
#[path = "fenv.rs"]
mod __fenv;
#[cfg(feature = "float")]
#[path = "float.rs"]
mod __float;
#[cfg(feature = "inttypes")]
#[path = "inttypes.rs"]
mod __inttypes;
#[cfg(feature = "iso646")]
#[path = "iso646.rs"]
mod __iso646;
#[cfg(feature = "limits")]
#[path = "limits.rs"]
mod __limits;
#[cfg(feature = "locale")]
#[path = "locale.rs"]
mod __locale;
#[cfg(feature = "math")]
#[path = "math.rs"]
mod __math;
#[cfg(feature = "readpassphrase")]
#[path = "readpassphrase.rs"]
mod __readpassphrase;
#[cfg(feature = "setjmp")]
#[path = "setjmp.rs"]
mod __setjmp;
#[cfg(feature = "signal")]
#[path = "signal.rs"]
mod __signal;
#[cfg(feature = "stdarg")]
#[path = "stdarg.rs"]
mod __stdarg;
#[cfg(feature = "stdatomic")]
#[path = "stdatomic.rs"]
mod __stdatomic;
#[cfg(feature = "stdbool")]
#[path = "stdbool.rs"]
mod __stdbool;
#[cfg(feature = "stddef")]
#[path = "stddef.rs"]
mod __stddef;
#[cfg(feature = "stdint")]
#[path = "stdint.rs"]
mod __stdint;
#[cfg(feature = "stdio")]
#[path = "stdio.rs"]
mod __stdio;
#[cfg(feature = "stdlib")]
#[path = "stdlib.rs"]
mod __stdlib;
#[cfg(feature = "string")]
#[path = "string.rs"]
mod __string;
#[cfg(feature = "tgmath")]
#[path = "tgmath.rs"]
mod __tgmath;
#[cfg(feature = "time")]
#[path = "time.rs"]
mod __time;
#[cfg(feature = "util")]
#[path = "util.rs"]
mod __util;
#[cfg(feature = "wchar")]
#[path = "wchar.rs"]
mod __wchar;
#[cfg(feature = "wctype")]
#[path = "wctype.rs"]
mod __wctype;
#[cfg(feature = "xattr_flags")]
#[path = "xattr_flags.rs"]
mod __xattr_flags;
#[cfg(feature = "xlocale")]
#[path = "xlocale.rs"]
mod __xlocale;

pub(crate) use self::__copyfile::_copyfile_state;
pub use self::__copyfile::copyfile;
pub use self::__copyfile::copyfile_callback_t;
pub use self::__copyfile::copyfile_flags_t;
pub use self::__copyfile::copyfile_state_alloc;
pub use self::__copyfile::copyfile_state_free;
pub use self::__copyfile::copyfile_state_get;
pub use self::__copyfile::copyfile_state_set;
pub use self::__copyfile::copyfile_state_t;
pub use self::__copyfile::fcopyfile;
pub use self::__err::err_set_exit;
pub use self::__err::err_set_exit_b;
pub use self::__err::err_set_file;
pub use self::__err::verr;
pub use self::__err::verrc;
pub use self::__err::verrx;
pub use self::__err::vwarn;
pub use self::__err::vwarnc;
pub use self::__err::vwarnx;
pub use self::__readpassphrase::readpassphrase;
pub use self::__util::forkpty;
pub use self::__util::fparseln;
pub use self::__util::login;
pub use self::__util::login_tty;
pub use self::__util::logout;
pub use self::__util::logwtmp;
pub use self::__util::opendev;
pub use self::__util::openpty;
pub use self::__util::pidlock;
pub use self::__util::ttyaction;
pub use self::__util::ttylock;
pub use self::__util::ttymsg;
pub use self::__util::ttyunlock;
pub use self::__xattr_flags::xattr_flags_from_name;
pub use self::__xattr_flags::xattr_flags_t;
pub use self::__xattr_flags::xattr_intent_with_flags;
pub use self::__xattr_flags::xattr_name_with_flags;
pub use self::__xattr_flags::xattr_name_without_flags;
pub use self::__xattr_flags::xattr_operation_intent_t;
pub use self::__xattr_flags::xattr_preserve_for_intent;
