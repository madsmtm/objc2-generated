//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use core::ffi::*;
#[cfg(feature = "objc2")]
use objc2::__framework_prelude::*;

use crate::ffi::*;

/// [Apple's documentation](https://developer.apple.com/documentation/darwin/fstab?language=objc)
#[repr(C)]
#[derive(Clone, Copy, Debug, PartialEq)]
pub struct fstab {
    pub fs_spec: *mut c_char,
    pub fs_file: *mut c_char,
    pub fs_vfstype: *mut c_char,
    pub fs_mntops: *mut c_char,
    pub fs_type: *mut c_char,
    pub fs_freq: c_int,
    pub fs_passno: c_int,
}

unsafe impl Encode for fstab {
    const ENCODING: Encoding = Encoding::Struct(
        "fstab",
        &[
            <*mut c_char>::ENCODING,
            <*mut c_char>::ENCODING,
            <*mut c_char>::ENCODING,
            <*mut c_char>::ENCODING,
            <*mut c_char>::ENCODING,
            <c_int>::ENCODING,
            <c_int>::ENCODING,
        ],
    );
}

unsafe impl RefEncode for fstab {
    const ENCODING_REF: Encoding = Encoding::Pointer(&Self::ENCODING);
}

extern "C-unwind" {
    pub fn getfsent() -> *mut libc::fstab;
}

extern "C-unwind" {
    pub fn getfsspec(param1: *const c_char) -> *mut libc::fstab;
}

extern "C-unwind" {
    pub fn getfsfile(param1: *const c_char) -> *mut libc::fstab;
}

extern "C-unwind" {
    pub fn setfsent() -> c_int;
}

extern "C-unwind" {
    pub fn endfsent();
}
