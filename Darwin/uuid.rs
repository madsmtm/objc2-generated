//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
#[cfg(feature = "__builtin__")]
use __builtin__::*;
use core::ffi::*;

use crate::ffi::*;

/// [Apple's documentation](https://developer.apple.com/documentation/darwin/uuid_string_t?language=objc)
pub type uuid_string_t = __darwin_uuid_string_t;

/// [Apple's documentation](https://developer.apple.com/documentation/darwin/uuid_null?language=objc)
pub static UUID_NULL: uuid_t = UUID_DEFINE!(
    UnknownUUID_NULL,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0,
    0
);

extern "C-unwind" {
    pub fn uuid_clear(uu: uuid_t);
}

extern "C-unwind" {
    pub fn uuid_compare(uu1: uuid_t, uu2: uuid_t) -> c_int;
}

extern "C-unwind" {
    pub fn uuid_copy(dst: uuid_t, src: uuid_t);
}

extern "C-unwind" {
    pub fn uuid_generate(out: uuid_t);
}

extern "C-unwind" {
    pub fn uuid_generate_random(out: uuid_t);
}

extern "C-unwind" {
    pub fn uuid_generate_time(out: uuid_t);
}

extern "C-unwind" {
    pub fn uuid_is_null(uu: uuid_t) -> c_int;
}

extern "C-unwind" {
    pub fn uuid_parse(r#in: uuid_string_t, uu: uuid_t) -> c_int;
}

extern "C-unwind" {
    pub fn uuid_unparse(uu: uuid_t, out: uuid_string_t);
}

extern "C-unwind" {
    pub fn uuid_unparse_lower(uu: uuid_t, out: uuid_string_t);
}

extern "C-unwind" {
    pub fn uuid_unparse_upper(uu: uuid_t, out: uuid_string_t);
}
