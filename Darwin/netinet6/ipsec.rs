//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use core::ffi::*;

use crate::ffi::*;

/// statistics for ipsec processing
#[repr(C)]
#[derive(Clone, Copy, Debug, PartialEq)]
pub struct ipsecstat {
    /// succeeded inbound process
    pub in_success: u_quad_t,
    pub in_polvio: u_quad_t,
    /// inbound SA is unavailable
    pub in_nosa: u_quad_t,
    /// inbound processing failed due to EINVAL
    pub in_inval: u_quad_t,
    /// inbound processing failed due to ENOBUFS
    pub in_nomem: u_quad_t,
    /// failed getting a SPI
    pub in_badspi: u_quad_t,
    /// AH replay check failed
    pub in_ahreplay: u_quad_t,
    /// ESP replay check failed
    pub in_espreplay: u_quad_t,
    /// AH authentication success
    pub in_ahauthsucc: u_quad_t,
    /// AH authentication failure
    pub in_ahauthfail: u_quad_t,
    /// ESP authentication success
    pub in_espauthsucc: u_quad_t,
    /// ESP authentication failure
    pub in_espauthfail: u_quad_t,
    pub in_esphist: [u_quad_t; 256],
    pub in_ahhist: [u_quad_t; 256],
    pub in_comphist: [u_quad_t; 256],
    /// succeeded outbound process
    pub out_success: u_quad_t,
    pub out_polvio: u_quad_t,
    /// outbound SA is unavailable
    pub out_nosa: u_quad_t,
    /// outbound process failed due to EINVAL
    pub out_inval: u_quad_t,
    /// outbound processing failed due to ENOBUFS
    pub out_nomem: u_quad_t,
    /// there is no route
    pub out_noroute: u_quad_t,
    pub out_esphist: [u_quad_t; 256],
    pub out_ahhist: [u_quad_t; 256],
    pub out_comphist: [u_quad_t; 256],
}

#[repr(C)]
#[derive(Clone, Copy, Debug, PartialEq)]
pub struct ipsec_wake_pkt_info {
    pub wake_pkt: [u8; 100],
    pub wake_uuid: uuid_string_t,
    pub wake_pkt_spi: u32,
    pub wake_pkt_seq: u32,
    pub wake_pkt_len: u16,
}

#[repr(C)]
#[derive(Clone, Copy, Debug, PartialEq)]
pub struct ipsec_wake_pkt_event_data {
    pub wake_uuid: uuid_string_t,
}

extern "C-unwind" {
    pub fn ipsec_set_policy(param1: *mut c_char, param1: c_int) -> caddr_t;
}

extern "C-unwind" {
    pub fn ipsec_get_policylen(param1: caddr_t) -> c_int;
}

extern "C-unwind" {
    pub fn ipsec_dump_policy(param1: caddr_t, param1: *mut c_char) -> *mut c_char;
}

extern "C-unwind" {
    pub fn ipsec_strerror() -> *const c_char;
}
