//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use core::ffi::*;
#[cfg(feature = "objc2")]
use objc2::__framework_prelude::*;

use crate::ffi::*;

/// [Apple's documentation](https://developer.apple.com/documentation/darwin/in6_addrlifetime?language=objc)
#[repr(C)]
#[derive(Clone, Copy, Debug, PartialEq)]
pub struct in6_addrlifetime {
    pub ia6t_expire: libc::time_t,
    pub ia6t_preferred: libc::time_t,
    pub ia6t_vltime: u32,
    pub ia6t_pltime: u32,
}

unsafe impl Encode for in6_addrlifetime {
    const ENCODING: Encoding = Encoding::Struct(
        "in6_addrlifetime",
        &[
            <libc::time_t>::ENCODING,
            <libc::time_t>::ENCODING,
            <u32>::ENCODING,
            <u32>::ENCODING,
        ],
    );
}

unsafe impl RefEncode for in6_addrlifetime {
    const ENCODING_REF: Encoding = Encoding::Pointer(&Self::ENCODING);
}

/// [Apple's documentation](https://developer.apple.com/documentation/darwin/in6_addrpolicy?language=objc)
#[repr(C)]
#[derive(Clone, Copy)]
pub struct in6_addrpolicy {
    pub addr: sockaddr_in6,
    pub addrmask: sockaddr_in6,
    pub preced: c_int,
    pub label: c_int,
    pub r#use: libc::u_quad_t,
}

unsafe impl Encode for in6_addrpolicy {
    const ENCODING: Encoding = Encoding::Struct(
        "in6_addrpolicy",
        &[
            <sockaddr_in6>::ENCODING,
            <sockaddr_in6>::ENCODING,
            <c_int>::ENCODING,
            <c_int>::ENCODING,
            <libc::u_quad_t>::ENCODING,
        ],
    );
}

unsafe impl RefEncode for in6_addrpolicy {
    const ENCODING_REF: Encoding = Encoding::Pointer(&Self::ENCODING);
}

/// [Apple's documentation](https://developer.apple.com/documentation/darwin/in6_ifstat?language=objc)
#[repr(C)]
#[derive(Clone, Copy, Debug, PartialEq)]
pub struct in6_ifstat {
    pub ifs6_in_receive: libc::u_quad_t,
    pub ifs6_in_hdrerr: libc::u_quad_t,
    pub ifs6_in_toobig: libc::u_quad_t,
    pub ifs6_in_noroute: libc::u_quad_t,
    pub ifs6_in_addrerr: libc::u_quad_t,
    pub ifs6_in_protounknown: libc::u_quad_t,
    pub ifs6_in_truncated: libc::u_quad_t,
    pub ifs6_in_discard: libc::u_quad_t,
    pub ifs6_in_deliver: libc::u_quad_t,
    pub ifs6_out_forward: libc::u_quad_t,
    pub ifs6_out_request: libc::u_quad_t,
    pub ifs6_out_discard: libc::u_quad_t,
    pub ifs6_out_fragok: libc::u_quad_t,
    pub ifs6_out_fragfail: libc::u_quad_t,
    pub ifs6_out_fragcreat: libc::u_quad_t,
    pub ifs6_reass_reqd: libc::u_quad_t,
    pub ifs6_reass_ok: libc::u_quad_t,
    pub ifs6_atmfrag_rcvd: libc::u_quad_t,
    pub ifs6_reass_fail: libc::u_quad_t,
    pub ifs6_in_mcast: libc::u_quad_t,
    pub ifs6_out_mcast: libc::u_quad_t,
    pub ifs6_cantfoward_icmp6: libc::u_quad_t,
    pub ifs6_addr_expiry_cnt: libc::u_quad_t,
    pub ifs6_pfx_expiry_cnt: libc::u_quad_t,
    pub ifs6_defrtr_expiry_cnt: libc::u_quad_t,
}

unsafe impl Encode for in6_ifstat {
    const ENCODING: Encoding = Encoding::Struct(
        "in6_ifstat",
        &[
            <libc::u_quad_t>::ENCODING,
            <libc::u_quad_t>::ENCODING,
            <libc::u_quad_t>::ENCODING,
            <libc::u_quad_t>::ENCODING,
            <libc::u_quad_t>::ENCODING,
            <libc::u_quad_t>::ENCODING,
            <libc::u_quad_t>::ENCODING,
            <libc::u_quad_t>::ENCODING,
            <libc::u_quad_t>::ENCODING,
            <libc::u_quad_t>::ENCODING,
            <libc::u_quad_t>::ENCODING,
            <libc::u_quad_t>::ENCODING,
            <libc::u_quad_t>::ENCODING,
            <libc::u_quad_t>::ENCODING,
            <libc::u_quad_t>::ENCODING,
            <libc::u_quad_t>::ENCODING,
            <libc::u_quad_t>::ENCODING,
            <libc::u_quad_t>::ENCODING,
            <libc::u_quad_t>::ENCODING,
            <libc::u_quad_t>::ENCODING,
            <libc::u_quad_t>::ENCODING,
            <libc::u_quad_t>::ENCODING,
            <libc::u_quad_t>::ENCODING,
            <libc::u_quad_t>::ENCODING,
            <libc::u_quad_t>::ENCODING,
        ],
    );
}

unsafe impl RefEncode for in6_ifstat {
    const ENCODING_REF: Encoding = Encoding::Pointer(&Self::ENCODING);
}

/// [Apple's documentation](https://developer.apple.com/documentation/darwin/icmp6_ifstat?language=objc)
#[repr(C)]
#[derive(Clone, Copy, Debug, PartialEq)]
pub struct icmp6_ifstat {
    pub ifs6_in_msg: libc::u_quad_t,
    pub ifs6_in_error: libc::u_quad_t,
    pub ifs6_in_dstunreach: libc::u_quad_t,
    pub ifs6_in_adminprohib: libc::u_quad_t,
    pub ifs6_in_timeexceed: libc::u_quad_t,
    pub ifs6_in_paramprob: libc::u_quad_t,
    pub ifs6_in_pkttoobig: libc::u_quad_t,
    pub ifs6_in_echo: libc::u_quad_t,
    pub ifs6_in_echoreply: libc::u_quad_t,
    pub ifs6_in_routersolicit: libc::u_quad_t,
    pub ifs6_in_routeradvert: libc::u_quad_t,
    pub ifs6_in_neighborsolicit: libc::u_quad_t,
    pub ifs6_in_neighboradvert: libc::u_quad_t,
    pub ifs6_in_redirect: libc::u_quad_t,
    pub ifs6_in_mldquery: libc::u_quad_t,
    pub ifs6_in_mldreport: libc::u_quad_t,
    pub ifs6_in_mlddone: libc::u_quad_t,
    pub ifs6_out_msg: libc::u_quad_t,
    pub ifs6_out_error: libc::u_quad_t,
    pub ifs6_out_dstunreach: libc::u_quad_t,
    pub ifs6_out_adminprohib: libc::u_quad_t,
    pub ifs6_out_timeexceed: libc::u_quad_t,
    pub ifs6_out_paramprob: libc::u_quad_t,
    pub ifs6_out_pkttoobig: libc::u_quad_t,
    pub ifs6_out_echo: libc::u_quad_t,
    pub ifs6_out_echoreply: libc::u_quad_t,
    pub ifs6_out_routersolicit: libc::u_quad_t,
    pub ifs6_out_routeradvert: libc::u_quad_t,
    pub ifs6_out_neighborsolicit: libc::u_quad_t,
    pub ifs6_out_neighboradvert: libc::u_quad_t,
    pub ifs6_out_redirect: libc::u_quad_t,
    pub ifs6_out_mldquery: libc::u_quad_t,
    pub ifs6_out_mldreport: libc::u_quad_t,
    pub ifs6_out_mlddone: libc::u_quad_t,
}

unsafe impl Encode for icmp6_ifstat {
    const ENCODING: Encoding = Encoding::Struct(
        "icmp6_ifstat",
        &[
            <libc::u_quad_t>::ENCODING,
            <libc::u_quad_t>::ENCODING,
            <libc::u_quad_t>::ENCODING,
            <libc::u_quad_t>::ENCODING,
            <libc::u_quad_t>::ENCODING,
            <libc::u_quad_t>::ENCODING,
            <libc::u_quad_t>::ENCODING,
            <libc::u_quad_t>::ENCODING,
            <libc::u_quad_t>::ENCODING,
            <libc::u_quad_t>::ENCODING,
            <libc::u_quad_t>::ENCODING,
            <libc::u_quad_t>::ENCODING,
            <libc::u_quad_t>::ENCODING,
            <libc::u_quad_t>::ENCODING,
            <libc::u_quad_t>::ENCODING,
            <libc::u_quad_t>::ENCODING,
            <libc::u_quad_t>::ENCODING,
            <libc::u_quad_t>::ENCODING,
            <libc::u_quad_t>::ENCODING,
            <libc::u_quad_t>::ENCODING,
            <libc::u_quad_t>::ENCODING,
            <libc::u_quad_t>::ENCODING,
            <libc::u_quad_t>::ENCODING,
            <libc::u_quad_t>::ENCODING,
            <libc::u_quad_t>::ENCODING,
            <libc::u_quad_t>::ENCODING,
            <libc::u_quad_t>::ENCODING,
            <libc::u_quad_t>::ENCODING,
            <libc::u_quad_t>::ENCODING,
            <libc::u_quad_t>::ENCODING,
            <libc::u_quad_t>::ENCODING,
            <libc::u_quad_t>::ENCODING,
            <libc::u_quad_t>::ENCODING,
            <libc::u_quad_t>::ENCODING,
        ],
    );
}

unsafe impl RefEncode for icmp6_ifstat {
    const ENCODING_REF: Encoding = Encoding::Pointer(&Self::ENCODING);
}

/// [Apple's documentation](https://developer.apple.com/documentation/darwin/in6_ifreq_ifr_ifru?language=objc)
#[repr(C)]
#[derive(Clone, Copy)]
pub union in6_ifreq_ifr_ifru {
    pub ifru_addr: sockaddr_in6,
    pub ifru_dstaddr: sockaddr_in6,
    pub ifru_flags: c_int,
    pub ifru_flags6: c_int,
    pub ifru_metric: c_int,
    pub ifru_intval: c_int,
    pub ifru_data: libc::caddr_t,
    pub ifru_lifetime: libc::in6_addrlifetime,
    pub ifru_stat: libc::in6_ifstat,
    pub ifru_icmp6stat: libc::icmp6_ifstat,
    pub ifru_scope_id: [u32; 16],
}

unsafe impl Encode for in6_ifreq_ifr_ifru {
    const ENCODING: Encoding = Encoding::Union(
        "?",
        &[
            <sockaddr_in6>::ENCODING,
            <sockaddr_in6>::ENCODING,
            <c_int>::ENCODING,
            <c_int>::ENCODING,
            <c_int>::ENCODING,
            <c_int>::ENCODING,
            <libc::caddr_t>::ENCODING,
            <libc::in6_addrlifetime>::ENCODING,
            <libc::in6_ifstat>::ENCODING,
            <libc::icmp6_ifstat>::ENCODING,
            <[u32; 16]>::ENCODING,
        ],
    );
}

unsafe impl RefEncode for in6_ifreq_ifr_ifru {
    const ENCODING_REF: Encoding = Encoding::Pointer(&Self::ENCODING);
}

/// [Apple's documentation](https://developer.apple.com/documentation/darwin/in6_ifreq?language=objc)
#[repr(C)]
#[derive(Clone, Copy)]
pub struct in6_ifreq {
    pub ifr_name: [c_char; 16],
    pub ifr_ifru: libc::in6_ifreq_ifr_ifru,
}

unsafe impl Encode for in6_ifreq {
    const ENCODING: Encoding = Encoding::Struct(
        "in6_ifreq",
        &[
            <[c_char; 16]>::ENCODING,
            <libc::in6_ifreq_ifr_ifru>::ENCODING,
        ],
    );
}

unsafe impl RefEncode for in6_ifreq {
    const ENCODING_REF: Encoding = Encoding::Pointer(&Self::ENCODING);
}

/// [Apple's documentation](https://developer.apple.com/documentation/darwin/in6_aliasreq?language=objc)
#[repr(C)]
#[derive(Clone, Copy)]
pub struct in6_aliasreq {
    pub ifra_name: [c_char; 16],
    pub ifra_addr: sockaddr_in6,
    pub ifra_broadaddr: sockaddr_in6,
    pub ifra_prefixmask: sockaddr_in6,
    pub ifra_flags: c_int,
    pub ifra_lifetime: libc::in6_addrlifetime,
}

unsafe impl Encode for in6_aliasreq {
    const ENCODING: Encoding = Encoding::Struct(
        "in6_aliasreq",
        &[
            <[c_char; 16]>::ENCODING,
            <sockaddr_in6>::ENCODING,
            <sockaddr_in6>::ENCODING,
            <sockaddr_in6>::ENCODING,
            <c_int>::ENCODING,
            <libc::in6_addrlifetime>::ENCODING,
        ],
    );
}

unsafe impl RefEncode for in6_aliasreq {
    const ENCODING_REF: Encoding = Encoding::Pointer(&Self::ENCODING);
}

/// [Apple's documentation](https://developer.apple.com/documentation/darwin/prf_ra?language=objc)
#[repr(C)]
#[derive(Clone, Copy, Debug, PartialEq)]
pub struct prf_ra {
    pub onlink: c_uchar,
    pub autonomous: c_uchar,
    pub reserved: c_uchar,
}

unsafe impl Encode for prf_ra {
    const ENCODING: Encoding = Encoding::Struct(
        "prf_ra",
        &[
            <c_uchar>::ENCODING,
            <c_uchar>::ENCODING,
            <c_uchar>::ENCODING,
        ],
    );
}

unsafe impl RefEncode for prf_ra {
    const ENCODING_REF: Encoding = Encoding::Pointer(&Self::ENCODING);
}

/// [Apple's documentation](https://developer.apple.com/documentation/darwin/prf_rr?language=objc)
#[repr(C)]
#[derive(Clone, Copy, Debug, PartialEq)]
pub struct prf_rr {
    pub decrvalid: c_uchar,
    pub decrprefd: c_uchar,
    pub reserved: c_uchar,
}

unsafe impl Encode for prf_rr {
    const ENCODING: Encoding = Encoding::Struct(
        "prf_rr",
        &[
            <c_uchar>::ENCODING,
            <c_uchar>::ENCODING,
            <c_uchar>::ENCODING,
        ],
    );
}

unsafe impl RefEncode for prf_rr {
    const ENCODING_REF: Encoding = Encoding::Pointer(&Self::ENCODING);
}

/// [Apple's documentation](https://developer.apple.com/documentation/darwin/in6_prflags?language=objc)
#[repr(C)]
#[derive(Clone, Copy, Debug, PartialEq)]
pub struct in6_prflags {
    pub prf_ra: libc::prf_ra,
    pub prf_reserved1: c_uchar,
    pub prf_reserved2: c_ushort,
    pub prf_rr: libc::prf_rr,
    pub prf_reserved3: c_uchar,
    pub prf_reserved4: c_ushort,
}

unsafe impl Encode for in6_prflags {
    const ENCODING: Encoding = Encoding::Struct(
        "in6_prflags",
        &[
            <libc::prf_ra>::ENCODING,
            <c_uchar>::ENCODING,
            <c_ushort>::ENCODING,
            <libc::prf_rr>::ENCODING,
            <c_uchar>::ENCODING,
            <c_ushort>::ENCODING,
        ],
    );
}

unsafe impl RefEncode for in6_prflags {
    const ENCODING_REF: Encoding = Encoding::Pointer(&Self::ENCODING);
}

/// [Apple's documentation](https://developer.apple.com/documentation/darwin/in6_prefixreq?language=objc)
#[repr(C)]
#[derive(Clone, Copy)]
pub struct in6_prefixreq {
    pub ipr_name: [c_char; 16],
    pub ipr_origin: c_uchar,
    pub ipr_plen: c_uchar,
    pub ipr_vltime: u32,
    pub ipr_pltime: u32,
    pub ipr_flags: libc::in6_prflags,
    pub ipr_prefix: sockaddr_in6,
}

unsafe impl Encode for in6_prefixreq {
    const ENCODING: Encoding = Encoding::Struct(
        "in6_prefixreq",
        &[
            <[c_char; 16]>::ENCODING,
            <c_uchar>::ENCODING,
            <c_uchar>::ENCODING,
            <u32>::ENCODING,
            <u32>::ENCODING,
            <libc::in6_prflags>::ENCODING,
            <sockaddr_in6>::ENCODING,
        ],
    );
}

unsafe impl RefEncode for in6_prefixreq {
    const ENCODING_REF: Encoding = Encoding::Pointer(&Self::ENCODING);
}

/// [Apple's documentation](https://developer.apple.com/documentation/darwin/irr_raflagmask?language=objc)
#[repr(C)]
#[derive(Clone, Copy, Debug, PartialEq)]
pub struct irr_raflagmask {
    pub onlink: c_uchar,
    pub autonomous: c_uchar,
    pub reserved: c_uchar,
}

unsafe impl Encode for irr_raflagmask {
    const ENCODING: Encoding = Encoding::Struct(
        "irr_raflagmask",
        &[
            <c_uchar>::ENCODING,
            <c_uchar>::ENCODING,
            <c_uchar>::ENCODING,
        ],
    );
}

unsafe impl RefEncode for irr_raflagmask {
    const ENCODING_REF: Encoding = Encoding::Pointer(&Self::ENCODING);
}

/// [Apple's documentation](https://developer.apple.com/documentation/darwin/in6_rrenumreq?language=objc)
#[repr(C)]
#[derive(Clone, Copy)]
pub struct in6_rrenumreq {
    pub irr_name: [c_char; 16],
    pub irr_origin: c_uchar,
    pub irr_m_len: c_uchar,
    pub irr_m_minlen: c_uchar,
    pub irr_m_maxlen: c_uchar,
    pub irr_u_uselen: c_uchar,
    pub irr_u_keeplen: c_uchar,
    pub irr_raflagmask: libc::irr_raflagmask,
    pub irr_vltime: u32,
    pub irr_pltime: u32,
    pub irr_flags: libc::in6_prflags,
    pub irr_matchprefix: sockaddr_in6,
    pub irr_useprefix: sockaddr_in6,
}

unsafe impl Encode for in6_rrenumreq {
    const ENCODING: Encoding = Encoding::Struct(
        "in6_rrenumreq",
        &[
            <[c_char; 16]>::ENCODING,
            <c_uchar>::ENCODING,
            <c_uchar>::ENCODING,
            <c_uchar>::ENCODING,
            <c_uchar>::ENCODING,
            <c_uchar>::ENCODING,
            <c_uchar>::ENCODING,
            <libc::irr_raflagmask>::ENCODING,
            <u32>::ENCODING,
            <u32>::ENCODING,
            <libc::in6_prflags>::ENCODING,
            <sockaddr_in6>::ENCODING,
            <sockaddr_in6>::ENCODING,
        ],
    );
}

unsafe impl RefEncode for in6_rrenumreq {
    const ENCODING_REF: Encoding = Encoding::Pointer(&Self::ENCODING);
}

/// [Apple's documentation](https://developer.apple.com/documentation/darwin/kev_in6_addrlifetime?language=objc)
#[repr(C)]
#[derive(Clone, Copy, Debug, PartialEq)]
pub struct kev_in6_addrlifetime {
    pub ia6t_expire: u32,
    pub ia6t_preferred: u32,
    pub ia6t_vltime: u32,
    pub ia6t_pltime: u32,
}

unsafe impl Encode for kev_in6_addrlifetime {
    const ENCODING: Encoding = Encoding::Struct(
        "kev_in6_addrlifetime",
        &[
            <u32>::ENCODING,
            <u32>::ENCODING,
            <u32>::ENCODING,
            <u32>::ENCODING,
        ],
    );
}

unsafe impl RefEncode for kev_in6_addrlifetime {
    const ENCODING_REF: Encoding = Encoding::Pointer(&Self::ENCODING);
}

/// [Apple's documentation](https://developer.apple.com/documentation/darwin/kev_in6_data?language=objc)
#[repr(C)]
#[derive(Clone, Copy)]
pub struct kev_in6_data {
    pub link_data: libc::net_event_data,
    pub ia_addr: sockaddr_in6,
    pub ia_net: sockaddr_in6,
    pub ia_dstaddr: sockaddr_in6,
    pub ia_prefixmask: sockaddr_in6,
    pub ia_plen: u32,
    pub ia6_flags: u32,
    pub ia_lifetime: libc::kev_in6_addrlifetime,
    pub ia_mac: [u8; 6],
}

unsafe impl Encode for kev_in6_data {
    const ENCODING: Encoding = Encoding::Struct(
        "kev_in6_data",
        &[
            <libc::net_event_data>::ENCODING,
            <sockaddr_in6>::ENCODING,
            <sockaddr_in6>::ENCODING,
            <sockaddr_in6>::ENCODING,
            <sockaddr_in6>::ENCODING,
            <u32>::ENCODING,
            <u32>::ENCODING,
            <libc::kev_in6_addrlifetime>::ENCODING,
            <[u8; 6]>::ENCODING,
        ],
    );
}

unsafe impl RefEncode for kev_in6_data {
    const ENCODING_REF: Encoding = Encoding::Pointer(&Self::ENCODING);
}
