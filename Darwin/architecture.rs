//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use core::ffi::*;

use crate::ffi::*;

/// [Apple's documentation](https://developer.apple.com/documentation/darwin/nxswappedfloat?language=objc)
pub type NXSwappedFloat = c_ulong;

/// [Apple's documentation](https://developer.apple.com/documentation/darwin/nxswappeddouble?language=objc)
pub type NXSwappedDouble = c_ulonglong;

// TODO: pub fn NXSwapShort(inv: c_ushort,) -> c_ushort;

// TODO: pub fn NXSwapInt(inv: c_uint,) -> c_uint;

// TODO: pub fn NXSwapLong(inv: c_ulong,) -> c_ulong;

// TODO: pub fn NXSwapLongLong(inv: c_ulonglong,) -> c_ulonglong;

// TODO: pub fn NXConvertHostFloatToSwapped(x: c_float,) -> libc::NXSwappedFloat;

// TODO: pub fn NXConvertSwappedFloatToHost(x: libc::NXSwappedFloat,) -> c_float;

// TODO: pub fn NXConvertHostDoubleToSwapped(x: c_double,) -> libc::NXSwappedDouble;

// TODO: pub fn NXConvertSwappedDoubleToHost(x: libc::NXSwappedDouble,) -> c_double;

// TODO: pub fn NXSwapFloat(x: libc::NXSwappedFloat,) -> libc::NXSwappedFloat;

// TODO: pub fn NXSwapDouble(x: libc::NXSwappedDouble,) -> libc::NXSwappedDouble;

/// [Apple's documentation](https://developer.apple.com/documentation/darwin/nxbyteorder?language=objc)
#[repr(transparent)]
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash, PartialOrd, Ord)]
pub struct NXByteOrder(pub c_uint);
impl NXByteOrder {
    #[doc(alias = "NX_UnknownByteOrder")]
    pub const UnknownByteOrder: Self = Self(0);
    #[doc(alias = "NX_LittleEndian")]
    pub const LittleEndian: Self = Self(1);
    #[doc(alias = "NX_BigEndian")]
    pub const BigEndian: Self = Self(2);
}

// TODO: pub fn NXHostByteOrder() -> libc::NXByteOrder;

// TODO: pub fn NXSwapBigShortToHost(x: c_ushort,) -> c_ushort;

// TODO: pub fn NXSwapBigIntToHost(x: c_uint,) -> c_uint;

// TODO: pub fn NXSwapBigLongToHost(x: c_ulong,) -> c_ulong;

// TODO: pub fn NXSwapBigLongLongToHost(x: c_ulonglong,) -> c_ulonglong;

// TODO: pub fn NXSwapBigDoubleToHost(x: libc::NXSwappedDouble,) -> c_double;

// TODO: pub fn NXSwapBigFloatToHost(x: libc::NXSwappedFloat,) -> c_float;

// TODO: pub fn NXSwapHostShortToBig(x: c_ushort,) -> c_ushort;

// TODO: pub fn NXSwapHostIntToBig(x: c_uint,) -> c_uint;

// TODO: pub fn NXSwapHostLongToBig(x: c_ulong,) -> c_ulong;

// TODO: pub fn NXSwapHostLongLongToBig(x: c_ulonglong,) -> c_ulonglong;

// TODO: pub fn NXSwapHostDoubleToBig(x: c_double,) -> libc::NXSwappedDouble;

// TODO: pub fn NXSwapHostFloatToBig(x: c_float,) -> libc::NXSwappedFloat;

// TODO: pub fn NXSwapLittleShortToHost(x: c_ushort,) -> c_ushort;

// TODO: pub fn NXSwapLittleIntToHost(x: c_uint,) -> c_uint;

// TODO: pub fn NXSwapLittleLongToHost(x: c_ulong,) -> c_ulong;

// TODO: pub fn NXSwapLittleLongLongToHost(x: c_ulonglong,) -> c_ulonglong;

// TODO: pub fn NXSwapLittleDoubleToHost(x: libc::NXSwappedDouble,) -> c_double;

// TODO: pub fn NXSwapLittleFloatToHost(x: libc::NXSwappedFloat,) -> c_float;

// TODO: pub fn NXSwapHostShortToLittle(x: c_ushort,) -> c_ushort;

// TODO: pub fn NXSwapHostIntToLittle(x: c_uint,) -> c_uint;

// TODO: pub fn NXSwapHostLongToLittle(x: c_ulong,) -> c_ulong;

// TODO: pub fn NXSwapHostLongLongToLittle(x: c_ulonglong,) -> c_ulonglong;

// TODO: pub fn NXSwapHostDoubleToLittle(x: c_double,) -> libc::NXSwappedDouble;

// TODO: pub fn NXSwapHostFloatToLittle(x: c_float,) -> libc::NXSwappedFloat;
