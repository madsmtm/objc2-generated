//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use core::ffi::*;

use crate::ffi::*;

/// [Apple's documentation](https://developer.apple.com/documentation/darwin/passwd?language=objc)
#[repr(C)]
#[derive(Clone, Copy, Debug, PartialEq)]
pub struct passwd {
    pub pw_name: *mut c_char,
    pub pw_passwd: *mut c_char,
    pub pw_uid: uid_t,
    pub pw_gid: gid_t,
    pub pw_change: __darwin_time_t,
    pub pw_class: *mut c_char,
    pub pw_gecos: *mut c_char,
    pub pw_dir: *mut c_char,
    pub pw_shell: *mut c_char,
    pub pw_expire: __darwin_time_t,
}

extern "C-unwind" {
    pub fn getpwuid(param1: uid_t) -> *mut passwd;
}

extern "C-unwind" {
    pub fn getpwnam(param1: *const c_char) -> *mut passwd;
}

extern "C-unwind" {
    pub fn getpwuid_r(
        param1: uid_t,
        param1: *mut passwd,
        param1: *mut c_char,
        param1: usize,
        param1: *mut *mut passwd,
    ) -> c_int;
}

extern "C-unwind" {
    pub fn getpwnam_r(
        param1: *const c_char,
        param1: *mut passwd,
        param1: *mut c_char,
        param1: usize,
        param1: *mut *mut passwd,
    ) -> c_int;
}

extern "C-unwind" {
    pub fn getpwent() -> *mut passwd;
}

extern "C-unwind" {
    pub fn setpwent();
}

extern "C-unwind" {
    pub fn endpwent();
}

extern "C-unwind" {
    pub fn setpassent(param1: c_int) -> c_int;
}

extern "C-unwind" {
    pub fn user_from_uid(param1: uid_t, param1: c_int) -> *mut c_char;
}

extern "C-unwind" {
    pub fn getpwuuid(param1: uuid_t) -> *mut passwd;
}

extern "C-unwind" {
    pub fn getpwuuid_r(
        param1: uuid_t,
        param1: *mut passwd,
        param1: *mut c_char,
        param1: usize,
        param1: *mut *mut passwd,
    ) -> c_int;
}
