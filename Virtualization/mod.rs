// This file has been automatically generated by `objc2`'s `header-translator`.
// DO NOT EDIT

#![allow(unused_imports)]
#![allow(deprecated)]
#![allow(non_snake_case)]
#![allow(non_camel_case_types)]
#![allow(non_upper_case_globals)]
#![allow(missing_docs)]
#![allow(clippy::too_many_arguments)]
#![allow(clippy::type_complexity)]
#![allow(clippy::upper_case_acronyms)]
#![allow(clippy::identity_op)]
#![allow(clippy::missing_safety_doc)]
#![allow(clippy::doc_lazy_continuation)]
#![allow(rustdoc::broken_intra_doc_links)]
#![allow(rustdoc::bare_urls)]
#![allow(rustdoc::unportable_markdown)]
#![allow(rustdoc::invalid_html_tags)]

#[link(name = "Virtualization", kind = "framework")]
extern "C" {}

#[cfg(feature = "VZAudioDeviceConfiguration")]
#[path = "VZAudioDeviceConfiguration.rs"]
mod __VZAudioDeviceConfiguration;
#[cfg(feature = "VZAudioInputStreamSource")]
#[path = "VZAudioInputStreamSource.rs"]
mod __VZAudioInputStreamSource;
#[cfg(feature = "VZAudioOutputStreamSink")]
#[path = "VZAudioOutputStreamSink.rs"]
mod __VZAudioOutputStreamSink;
#[cfg(feature = "VZBootLoader")]
#[path = "VZBootLoader.rs"]
mod __VZBootLoader;
#[cfg(feature = "VZBridgedNetworkDeviceAttachment")]
#[path = "VZBridgedNetworkDeviceAttachment.rs"]
mod __VZBridgedNetworkDeviceAttachment;
#[cfg(feature = "VZBridgedNetworkInterface")]
#[path = "VZBridgedNetworkInterface.rs"]
mod __VZBridgedNetworkInterface;
#[cfg(feature = "VZConsoleDevice")]
#[path = "VZConsoleDevice.rs"]
mod __VZConsoleDevice;
#[cfg(feature = "VZConsoleDeviceConfiguration")]
#[path = "VZConsoleDeviceConfiguration.rs"]
mod __VZConsoleDeviceConfiguration;
#[cfg(feature = "VZConsolePortConfiguration")]
#[path = "VZConsolePortConfiguration.rs"]
mod __VZConsolePortConfiguration;
#[cfg(feature = "VZDefines")]
#[path = "VZDefines.rs"]
mod __VZDefines;
#[cfg(feature = "VZDirectoryShare")]
#[path = "VZDirectoryShare.rs"]
mod __VZDirectoryShare;
#[cfg(feature = "VZDirectorySharingDevice")]
#[path = "VZDirectorySharingDevice.rs"]
mod __VZDirectorySharingDevice;
#[cfg(feature = "VZDirectorySharingDeviceConfiguration")]
#[path = "VZDirectorySharingDeviceConfiguration.rs"]
mod __VZDirectorySharingDeviceConfiguration;
#[cfg(feature = "VZDiskBlockDeviceStorageDeviceAttachment")]
#[path = "VZDiskBlockDeviceStorageDeviceAttachment.rs"]
mod __VZDiskBlockDeviceStorageDeviceAttachment;
#[cfg(feature = "VZDiskImageStorageDeviceAttachment")]
#[path = "VZDiskImageStorageDeviceAttachment.rs"]
mod __VZDiskImageStorageDeviceAttachment;
#[cfg(feature = "VZDiskSynchronizationMode")]
#[path = "VZDiskSynchronizationMode.rs"]
mod __VZDiskSynchronizationMode;
#[cfg(feature = "VZEFIBootLoader")]
#[path = "VZEFIBootLoader.rs"]
mod __VZEFIBootLoader;
#[cfg(feature = "VZEFIVariableStore")]
#[path = "VZEFIVariableStore.rs"]
mod __VZEFIVariableStore;
#[cfg(feature = "VZEntropyDeviceConfiguration")]
#[path = "VZEntropyDeviceConfiguration.rs"]
mod __VZEntropyDeviceConfiguration;
#[cfg(feature = "VZError")]
#[path = "VZError.rs"]
mod __VZError;
#[cfg(feature = "VZFileHandleNetworkDeviceAttachment")]
#[path = "VZFileHandleNetworkDeviceAttachment.rs"]
mod __VZFileHandleNetworkDeviceAttachment;
#[cfg(feature = "VZFileHandleSerialPortAttachment")]
#[path = "VZFileHandleSerialPortAttachment.rs"]
mod __VZFileHandleSerialPortAttachment;
#[cfg(feature = "VZFileSerialPortAttachment")]
#[path = "VZFileSerialPortAttachment.rs"]
mod __VZFileSerialPortAttachment;
#[cfg(feature = "VZGenericMachineIdentifier")]
#[path = "VZGenericMachineIdentifier.rs"]
mod __VZGenericMachineIdentifier;
#[cfg(feature = "VZGenericPlatformConfiguration")]
#[path = "VZGenericPlatformConfiguration.rs"]
mod __VZGenericPlatformConfiguration;
#[cfg(feature = "VZGraphicsDevice")]
#[path = "VZGraphicsDevice.rs"]
mod __VZGraphicsDevice;
#[cfg(feature = "VZGraphicsDeviceConfiguration")]
#[path = "VZGraphicsDeviceConfiguration.rs"]
mod __VZGraphicsDeviceConfiguration;
#[cfg(feature = "VZGraphicsDisplay")]
#[path = "VZGraphicsDisplay.rs"]
mod __VZGraphicsDisplay;
#[cfg(feature = "VZGraphicsDisplayConfiguration")]
#[path = "VZGraphicsDisplayConfiguration.rs"]
mod __VZGraphicsDisplayConfiguration;
#[cfg(feature = "VZHostAudioInputStreamSource")]
#[path = "VZHostAudioInputStreamSource.rs"]
mod __VZHostAudioInputStreamSource;
#[cfg(feature = "VZHostAudioOutputStreamSink")]
#[path = "VZHostAudioOutputStreamSink.rs"]
mod __VZHostAudioOutputStreamSink;
#[cfg(feature = "VZKeyboardConfiguration")]
#[path = "VZKeyboardConfiguration.rs"]
mod __VZKeyboardConfiguration;
#[cfg(feature = "VZLinuxBootLoader")]
#[path = "VZLinuxBootLoader.rs"]
mod __VZLinuxBootLoader;
#[cfg(feature = "VZLinuxRosettaAbstractSocketCachingOptions")]
#[path = "VZLinuxRosettaAbstractSocketCachingOptions.rs"]
mod __VZLinuxRosettaAbstractSocketCachingOptions;
#[cfg(feature = "VZLinuxRosettaCachingOptions")]
#[path = "VZLinuxRosettaCachingOptions.rs"]
mod __VZLinuxRosettaCachingOptions;
#[cfg(feature = "VZLinuxRosettaDirectoryShare")]
#[path = "VZLinuxRosettaDirectoryShare.rs"]
mod __VZLinuxRosettaDirectoryShare;
#[cfg(feature = "VZLinuxRosettaUnixSocketCachingOptions")]
#[path = "VZLinuxRosettaUnixSocketCachingOptions.rs"]
mod __VZLinuxRosettaUnixSocketCachingOptions;
#[cfg(feature = "VZMACAddress")]
#[path = "VZMACAddress.rs"]
mod __VZMACAddress;
#[cfg(feature = "VZMacAuxiliaryStorage")]
#[path = "VZMacAuxiliaryStorage.rs"]
mod __VZMacAuxiliaryStorage;
#[cfg(feature = "VZMacGraphicsDevice")]
#[path = "VZMacGraphicsDevice.rs"]
mod __VZMacGraphicsDevice;
#[cfg(feature = "VZMacGraphicsDeviceConfiguration")]
#[path = "VZMacGraphicsDeviceConfiguration.rs"]
mod __VZMacGraphicsDeviceConfiguration;
#[cfg(feature = "VZMacGraphicsDisplay")]
#[path = "VZMacGraphicsDisplay.rs"]
mod __VZMacGraphicsDisplay;
#[cfg(feature = "VZMacGraphicsDisplayConfiguration")]
#[path = "VZMacGraphicsDisplayConfiguration.rs"]
mod __VZMacGraphicsDisplayConfiguration;
#[cfg(feature = "VZMacHardwareModel")]
#[path = "VZMacHardwareModel.rs"]
mod __VZMacHardwareModel;
#[cfg(feature = "VZMacKeyboardConfiguration")]
#[path = "VZMacKeyboardConfiguration.rs"]
mod __VZMacKeyboardConfiguration;
#[cfg(feature = "VZMacMachineIdentifier")]
#[path = "VZMacMachineIdentifier.rs"]
mod __VZMacMachineIdentifier;
#[cfg(feature = "VZMacOSBootLoader")]
#[path = "VZMacOSBootLoader.rs"]
mod __VZMacOSBootLoader;
#[cfg(feature = "VZMacOSConfigurationRequirements")]
#[path = "VZMacOSConfigurationRequirements.rs"]
mod __VZMacOSConfigurationRequirements;
#[cfg(feature = "VZMacOSInstaller")]
#[path = "VZMacOSInstaller.rs"]
mod __VZMacOSInstaller;
#[cfg(feature = "VZMacOSRestoreImage")]
#[path = "VZMacOSRestoreImage.rs"]
mod __VZMacOSRestoreImage;
#[cfg(feature = "VZMacOSVirtualMachineStartOptions")]
#[path = "VZMacOSVirtualMachineStartOptions.rs"]
mod __VZMacOSVirtualMachineStartOptions;
#[cfg(feature = "VZMacPlatformConfiguration")]
#[path = "VZMacPlatformConfiguration.rs"]
mod __VZMacPlatformConfiguration;
#[cfg(feature = "VZMacTrackpadConfiguration")]
#[path = "VZMacTrackpadConfiguration.rs"]
mod __VZMacTrackpadConfiguration;
#[cfg(feature = "VZMemoryBalloonDevice")]
#[path = "VZMemoryBalloonDevice.rs"]
mod __VZMemoryBalloonDevice;
#[cfg(feature = "VZMemoryBalloonDeviceConfiguration")]
#[path = "VZMemoryBalloonDeviceConfiguration.rs"]
mod __VZMemoryBalloonDeviceConfiguration;
#[cfg(feature = "VZMultipleDirectoryShare")]
#[path = "VZMultipleDirectoryShare.rs"]
mod __VZMultipleDirectoryShare;
#[cfg(feature = "VZNATNetworkDeviceAttachment")]
#[path = "VZNATNetworkDeviceAttachment.rs"]
mod __VZNATNetworkDeviceAttachment;
#[cfg(feature = "VZNVMExpressControllerDeviceConfiguration")]
#[path = "VZNVMExpressControllerDeviceConfiguration.rs"]
mod __VZNVMExpressControllerDeviceConfiguration;
#[cfg(feature = "VZNetworkBlockDeviceStorageDeviceAttachment")]
#[path = "VZNetworkBlockDeviceStorageDeviceAttachment.rs"]
mod __VZNetworkBlockDeviceStorageDeviceAttachment;
#[cfg(feature = "VZNetworkDevice")]
#[path = "VZNetworkDevice.rs"]
mod __VZNetworkDevice;
#[cfg(feature = "VZNetworkDeviceAttachment")]
#[path = "VZNetworkDeviceAttachment.rs"]
mod __VZNetworkDeviceAttachment;
#[cfg(feature = "VZNetworkDeviceConfiguration")]
#[path = "VZNetworkDeviceConfiguration.rs"]
mod __VZNetworkDeviceConfiguration;
#[cfg(feature = "VZPlatformConfiguration")]
#[path = "VZPlatformConfiguration.rs"]
mod __VZPlatformConfiguration;
#[cfg(feature = "VZPointingDeviceConfiguration")]
#[path = "VZPointingDeviceConfiguration.rs"]
mod __VZPointingDeviceConfiguration;
#[cfg(feature = "VZSerialPortAttachment")]
#[path = "VZSerialPortAttachment.rs"]
mod __VZSerialPortAttachment;
#[cfg(feature = "VZSerialPortConfiguration")]
#[path = "VZSerialPortConfiguration.rs"]
mod __VZSerialPortConfiguration;
#[cfg(feature = "VZSharedDirectory")]
#[path = "VZSharedDirectory.rs"]
mod __VZSharedDirectory;
#[cfg(feature = "VZSingleDirectoryShare")]
#[path = "VZSingleDirectoryShare.rs"]
mod __VZSingleDirectoryShare;
#[cfg(feature = "VZSocketDevice")]
#[path = "VZSocketDevice.rs"]
mod __VZSocketDevice;
#[cfg(feature = "VZSocketDeviceConfiguration")]
#[path = "VZSocketDeviceConfiguration.rs"]
mod __VZSocketDeviceConfiguration;
#[cfg(feature = "VZSpiceAgentPortAttachment")]
#[path = "VZSpiceAgentPortAttachment.rs"]
mod __VZSpiceAgentPortAttachment;
#[cfg(feature = "VZStorageDevice")]
#[path = "VZStorageDevice.rs"]
mod __VZStorageDevice;
#[cfg(feature = "VZStorageDeviceAttachment")]
#[path = "VZStorageDeviceAttachment.rs"]
mod __VZStorageDeviceAttachment;
#[cfg(feature = "VZStorageDeviceConfiguration")]
#[path = "VZStorageDeviceConfiguration.rs"]
mod __VZStorageDeviceConfiguration;
#[cfg(feature = "VZUSBController")]
#[path = "VZUSBController.rs"]
mod __VZUSBController;
#[cfg(feature = "VZUSBControllerConfiguration")]
#[path = "VZUSBControllerConfiguration.rs"]
mod __VZUSBControllerConfiguration;
#[cfg(feature = "VZUSBDevice")]
#[path = "VZUSBDevice.rs"]
mod __VZUSBDevice;
#[cfg(feature = "VZUSBDeviceConfiguration")]
#[path = "VZUSBDeviceConfiguration.rs"]
mod __VZUSBDeviceConfiguration;
#[cfg(feature = "VZUSBKeyboardConfiguration")]
#[path = "VZUSBKeyboardConfiguration.rs"]
mod __VZUSBKeyboardConfiguration;
#[cfg(feature = "VZUSBMassStorageDevice")]
#[path = "VZUSBMassStorageDevice.rs"]
mod __VZUSBMassStorageDevice;
#[cfg(feature = "VZUSBMassStorageDeviceConfiguration")]
#[path = "VZUSBMassStorageDeviceConfiguration.rs"]
mod __VZUSBMassStorageDeviceConfiguration;
#[cfg(feature = "VZUSBScreenCoordinatePointingDeviceConfiguration")]
#[path = "VZUSBScreenCoordinatePointingDeviceConfiguration.rs"]
mod __VZUSBScreenCoordinatePointingDeviceConfiguration;
#[cfg(feature = "VZVirtioBlockDeviceConfiguration")]
#[path = "VZVirtioBlockDeviceConfiguration.rs"]
mod __VZVirtioBlockDeviceConfiguration;
#[cfg(feature = "VZVirtioConsoleDevice")]
#[path = "VZVirtioConsoleDevice.rs"]
mod __VZVirtioConsoleDevice;
#[cfg(feature = "VZVirtioConsoleDeviceConfiguration")]
#[path = "VZVirtioConsoleDeviceConfiguration.rs"]
mod __VZVirtioConsoleDeviceConfiguration;
#[cfg(feature = "VZVirtioConsoleDeviceSerialPortConfiguration")]
#[path = "VZVirtioConsoleDeviceSerialPortConfiguration.rs"]
mod __VZVirtioConsoleDeviceSerialPortConfiguration;
#[cfg(feature = "VZVirtioConsolePort")]
#[path = "VZVirtioConsolePort.rs"]
mod __VZVirtioConsolePort;
#[cfg(feature = "VZVirtioConsolePortArray")]
#[path = "VZVirtioConsolePortArray.rs"]
mod __VZVirtioConsolePortArray;
#[cfg(feature = "VZVirtioConsolePortConfiguration")]
#[path = "VZVirtioConsolePortConfiguration.rs"]
mod __VZVirtioConsolePortConfiguration;
#[cfg(feature = "VZVirtioConsolePortConfigurationArray")]
#[path = "VZVirtioConsolePortConfigurationArray.rs"]
mod __VZVirtioConsolePortConfigurationArray;
#[cfg(feature = "VZVirtioEntropyDeviceConfiguration")]
#[path = "VZVirtioEntropyDeviceConfiguration.rs"]
mod __VZVirtioEntropyDeviceConfiguration;
#[cfg(feature = "VZVirtioFileSystemDevice")]
#[path = "VZVirtioFileSystemDevice.rs"]
mod __VZVirtioFileSystemDevice;
#[cfg(feature = "VZVirtioFileSystemDeviceConfiguration")]
#[path = "VZVirtioFileSystemDeviceConfiguration.rs"]
mod __VZVirtioFileSystemDeviceConfiguration;
#[cfg(feature = "VZVirtioGraphicsDevice")]
#[path = "VZVirtioGraphicsDevice.rs"]
mod __VZVirtioGraphicsDevice;
#[cfg(feature = "VZVirtioGraphicsDeviceConfiguration")]
#[path = "VZVirtioGraphicsDeviceConfiguration.rs"]
mod __VZVirtioGraphicsDeviceConfiguration;
#[cfg(feature = "VZVirtioGraphicsScanout")]
#[path = "VZVirtioGraphicsScanout.rs"]
mod __VZVirtioGraphicsScanout;
#[cfg(feature = "VZVirtioGraphicsScanoutConfiguration")]
#[path = "VZVirtioGraphicsScanoutConfiguration.rs"]
mod __VZVirtioGraphicsScanoutConfiguration;
#[cfg(feature = "VZVirtioNetworkDeviceConfiguration")]
#[path = "VZVirtioNetworkDeviceConfiguration.rs"]
mod __VZVirtioNetworkDeviceConfiguration;
#[cfg(feature = "VZVirtioSocketConnection")]
#[path = "VZVirtioSocketConnection.rs"]
mod __VZVirtioSocketConnection;
#[cfg(feature = "VZVirtioSocketDevice")]
#[path = "VZVirtioSocketDevice.rs"]
mod __VZVirtioSocketDevice;
#[cfg(feature = "VZVirtioSocketDeviceConfiguration")]
#[path = "VZVirtioSocketDeviceConfiguration.rs"]
mod __VZVirtioSocketDeviceConfiguration;
#[cfg(feature = "VZVirtioSocketListener")]
#[path = "VZVirtioSocketListener.rs"]
mod __VZVirtioSocketListener;
#[cfg(feature = "VZVirtioSoundDeviceConfiguration")]
#[path = "VZVirtioSoundDeviceConfiguration.rs"]
mod __VZVirtioSoundDeviceConfiguration;
#[cfg(feature = "VZVirtioSoundDeviceInputStreamConfiguration")]
#[path = "VZVirtioSoundDeviceInputStreamConfiguration.rs"]
mod __VZVirtioSoundDeviceInputStreamConfiguration;
#[cfg(feature = "VZVirtioSoundDeviceOutputStreamConfiguration")]
#[path = "VZVirtioSoundDeviceOutputStreamConfiguration.rs"]
mod __VZVirtioSoundDeviceOutputStreamConfiguration;
#[cfg(feature = "VZVirtioSoundDeviceStreamConfiguration")]
#[path = "VZVirtioSoundDeviceStreamConfiguration.rs"]
mod __VZVirtioSoundDeviceStreamConfiguration;
#[cfg(feature = "VZVirtioTraditionalMemoryBalloonDevice")]
#[path = "VZVirtioTraditionalMemoryBalloonDevice.rs"]
mod __VZVirtioTraditionalMemoryBalloonDevice;
#[cfg(feature = "VZVirtioTraditionalMemoryBalloonDeviceConfiguration")]
#[path = "VZVirtioTraditionalMemoryBalloonDeviceConfiguration.rs"]
mod __VZVirtioTraditionalMemoryBalloonDeviceConfiguration;
#[cfg(feature = "VZVirtualMachine")]
#[path = "VZVirtualMachine.rs"]
mod __VZVirtualMachine;
#[cfg(feature = "VZVirtualMachineConfiguration")]
#[path = "VZVirtualMachineConfiguration.rs"]
mod __VZVirtualMachineConfiguration;
#[cfg(feature = "VZVirtualMachineDelegate")]
#[path = "VZVirtualMachineDelegate.rs"]
mod __VZVirtualMachineDelegate;
#[cfg(feature = "VZVirtualMachineStartOptions")]
#[path = "VZVirtualMachineStartOptions.rs"]
mod __VZVirtualMachineStartOptions;
#[cfg(feature = "VZVirtualMachineView")]
#[path = "VZVirtualMachineView.rs"]
mod __VZVirtualMachineView;
#[cfg(feature = "VZVmnetNetworkDeviceAttachment")]
#[path = "VZVmnetNetworkDeviceAttachment.rs"]
mod __VZVmnetNetworkDeviceAttachment;
#[cfg(feature = "VZXHCIController")]
#[path = "VZXHCIController.rs"]
mod __VZXHCIController;
#[cfg(feature = "VZXHCIControllerConfiguration")]
#[path = "VZXHCIControllerConfiguration.rs"]
mod __VZXHCIControllerConfiguration;

#[cfg(feature = "VZAudioDeviceConfiguration")]
pub use self::__VZAudioDeviceConfiguration::VZAudioDeviceConfiguration;
#[cfg(feature = "VZAudioInputStreamSource")]
pub use self::__VZAudioInputStreamSource::VZAudioInputStreamSource;
#[cfg(feature = "VZAudioOutputStreamSink")]
pub use self::__VZAudioOutputStreamSink::VZAudioOutputStreamSink;
#[cfg(feature = "VZBootLoader")]
pub use self::__VZBootLoader::VZBootLoader;
#[cfg(all(
    feature = "VZBridgedNetworkDeviceAttachment",
    feature = "VZNetworkDeviceAttachment"
))]
pub use self::__VZBridgedNetworkDeviceAttachment::VZBridgedNetworkDeviceAttachment;
#[cfg(feature = "VZBridgedNetworkInterface")]
pub use self::__VZBridgedNetworkInterface::VZBridgedNetworkInterface;
#[cfg(feature = "VZConsoleDevice")]
pub use self::__VZConsoleDevice::VZConsoleDevice;
#[cfg(feature = "VZConsoleDeviceConfiguration")]
pub use self::__VZConsoleDeviceConfiguration::VZConsoleDeviceConfiguration;
#[cfg(feature = "VZConsolePortConfiguration")]
pub use self::__VZConsolePortConfiguration::VZConsolePortConfiguration;
#[cfg(feature = "VZDirectoryShare")]
pub use self::__VZDirectoryShare::VZDirectoryShare;
#[cfg(feature = "VZDirectorySharingDevice")]
pub use self::__VZDirectorySharingDevice::VZDirectorySharingDevice;
#[cfg(feature = "VZDirectorySharingDeviceConfiguration")]
pub use self::__VZDirectorySharingDeviceConfiguration::VZDirectorySharingDeviceConfiguration;
#[cfg(all(
    feature = "VZDiskBlockDeviceStorageDeviceAttachment",
    feature = "VZStorageDeviceAttachment"
))]
pub use self::__VZDiskBlockDeviceStorageDeviceAttachment::VZDiskBlockDeviceStorageDeviceAttachment;
#[cfg(feature = "VZDiskImageStorageDeviceAttachment")]
pub use self::__VZDiskImageStorageDeviceAttachment::VZDiskImageCachingMode;
#[cfg(all(
    feature = "VZDiskImageStorageDeviceAttachment",
    feature = "VZStorageDeviceAttachment"
))]
pub use self::__VZDiskImageStorageDeviceAttachment::VZDiskImageStorageDeviceAttachment;
#[cfg(feature = "VZDiskImageStorageDeviceAttachment")]
pub use self::__VZDiskImageStorageDeviceAttachment::VZDiskImageSynchronizationMode;
#[cfg(feature = "VZDiskSynchronizationMode")]
pub use self::__VZDiskSynchronizationMode::VZDiskSynchronizationMode;
#[cfg(all(feature = "VZBootLoader", feature = "VZEFIBootLoader"))]
pub use self::__VZEFIBootLoader::VZEFIBootLoader;
#[cfg(feature = "VZEFIVariableStore")]
pub use self::__VZEFIVariableStore::VZEFIVariableStore;
#[cfg(feature = "VZEFIVariableStore")]
pub use self::__VZEFIVariableStore::VZEFIVariableStoreInitializationOptions;
#[cfg(feature = "VZEntropyDeviceConfiguration")]
pub use self::__VZEntropyDeviceConfiguration::VZEntropyDeviceConfiguration;
#[cfg(feature = "VZError")]
pub use self::__VZError::VZErrorCode;
#[cfg(feature = "VZError")]
pub use self::__VZError::VZErrorDomain;
#[cfg(all(
    feature = "VZFileHandleNetworkDeviceAttachment",
    feature = "VZNetworkDeviceAttachment"
))]
pub use self::__VZFileHandleNetworkDeviceAttachment::VZFileHandleNetworkDeviceAttachment;
#[cfg(all(
    feature = "VZFileHandleSerialPortAttachment",
    feature = "VZSerialPortAttachment"
))]
pub use self::__VZFileHandleSerialPortAttachment::VZFileHandleSerialPortAttachment;
#[cfg(all(
    feature = "VZFileSerialPortAttachment",
    feature = "VZSerialPortAttachment"
))]
pub use self::__VZFileSerialPortAttachment::VZFileSerialPortAttachment;
#[cfg(feature = "VZGenericMachineIdentifier")]
pub use self::__VZGenericMachineIdentifier::VZGenericMachineIdentifier;
#[cfg(all(
    feature = "VZGenericPlatformConfiguration",
    feature = "VZPlatformConfiguration"
))]
pub use self::__VZGenericPlatformConfiguration::VZGenericPlatformConfiguration;
#[cfg(feature = "VZGraphicsDevice")]
pub use self::__VZGraphicsDevice::VZGraphicsDevice;
#[cfg(feature = "VZGraphicsDeviceConfiguration")]
pub use self::__VZGraphicsDeviceConfiguration::VZGraphicsDeviceConfiguration;
#[cfg(feature = "VZGraphicsDisplay")]
pub use self::__VZGraphicsDisplay::VZGraphicsDisplay;
#[cfg(feature = "VZGraphicsDisplay")]
pub use self::__VZGraphicsDisplay::VZGraphicsDisplayObserver;
#[cfg(feature = "VZGraphicsDisplayConfiguration")]
pub use self::__VZGraphicsDisplayConfiguration::VZGraphicsDisplayConfiguration;
#[cfg(all(
    feature = "VZAudioInputStreamSource",
    feature = "VZHostAudioInputStreamSource"
))]
pub use self::__VZHostAudioInputStreamSource::VZHostAudioInputStreamSource;
#[cfg(all(
    feature = "VZAudioOutputStreamSink",
    feature = "VZHostAudioOutputStreamSink"
))]
pub use self::__VZHostAudioOutputStreamSink::VZHostAudioOutputStreamSink;
#[cfg(feature = "VZKeyboardConfiguration")]
pub use self::__VZKeyboardConfiguration::VZKeyboardConfiguration;
#[cfg(all(feature = "VZBootLoader", feature = "VZLinuxBootLoader"))]
pub use self::__VZLinuxBootLoader::VZLinuxBootLoader;
#[cfg(all(
    feature = "VZLinuxRosettaAbstractSocketCachingOptions",
    feature = "VZLinuxRosettaCachingOptions"
))]
pub use self::__VZLinuxRosettaAbstractSocketCachingOptions::VZLinuxRosettaAbstractSocketCachingOptions;
#[cfg(feature = "VZLinuxRosettaCachingOptions")]
pub use self::__VZLinuxRosettaCachingOptions::VZLinuxRosettaCachingOptions;
#[cfg(feature = "VZLinuxRosettaDirectoryShare")]
pub use self::__VZLinuxRosettaDirectoryShare::VZLinuxRosettaAvailability;
#[cfg(all(feature = "VZDirectoryShare", feature = "VZLinuxRosettaDirectoryShare"))]
pub use self::__VZLinuxRosettaDirectoryShare::VZLinuxRosettaDirectoryShare;
#[cfg(all(
    feature = "VZLinuxRosettaCachingOptions",
    feature = "VZLinuxRosettaUnixSocketCachingOptions"
))]
pub use self::__VZLinuxRosettaUnixSocketCachingOptions::VZLinuxRosettaUnixSocketCachingOptions;
#[cfg(feature = "VZMACAddress")]
pub use self::__VZMACAddress::VZMACAddress;
#[cfg(feature = "VZMacAuxiliaryStorage")]
pub use self::__VZMacAuxiliaryStorage::VZMacAuxiliaryStorage;
#[cfg(feature = "VZMacAuxiliaryStorage")]
pub use self::__VZMacAuxiliaryStorage::VZMacAuxiliaryStorageInitializationOptions;
#[cfg(all(feature = "VZGraphicsDevice", feature = "VZMacGraphicsDevice"))]
pub use self::__VZMacGraphicsDevice::VZMacGraphicsDevice;
#[cfg(all(
    feature = "VZGraphicsDeviceConfiguration",
    feature = "VZMacGraphicsDeviceConfiguration"
))]
pub use self::__VZMacGraphicsDeviceConfiguration::VZMacGraphicsDeviceConfiguration;
#[cfg(all(feature = "VZGraphicsDisplay", feature = "VZMacGraphicsDisplay"))]
pub use self::__VZMacGraphicsDisplay::VZMacGraphicsDisplay;
#[cfg(all(
    feature = "VZGraphicsDisplayConfiguration",
    feature = "VZMacGraphicsDisplayConfiguration"
))]
pub use self::__VZMacGraphicsDisplayConfiguration::VZMacGraphicsDisplayConfiguration;
#[cfg(feature = "VZMacHardwareModel")]
pub use self::__VZMacHardwareModel::VZMacHardwareModel;
#[cfg(all(
    feature = "VZKeyboardConfiguration",
    feature = "VZMacKeyboardConfiguration"
))]
pub use self::__VZMacKeyboardConfiguration::VZMacKeyboardConfiguration;
#[cfg(feature = "VZMacMachineIdentifier")]
pub use self::__VZMacMachineIdentifier::VZMacMachineIdentifier;
#[cfg(all(feature = "VZBootLoader", feature = "VZMacOSBootLoader"))]
pub use self::__VZMacOSBootLoader::VZMacOSBootLoader;
#[cfg(feature = "VZMacOSConfigurationRequirements")]
pub use self::__VZMacOSConfigurationRequirements::VZMacOSConfigurationRequirements;
#[cfg(feature = "VZMacOSInstaller")]
pub use self::__VZMacOSInstaller::VZMacOSInstaller;
#[cfg(feature = "VZMacOSRestoreImage")]
pub use self::__VZMacOSRestoreImage::VZMacOSRestoreImage;
#[cfg(all(
    feature = "VZMacOSVirtualMachineStartOptions",
    feature = "VZVirtualMachineStartOptions"
))]
pub use self::__VZMacOSVirtualMachineStartOptions::VZMacOSVirtualMachineStartOptions;
#[cfg(all(
    feature = "VZMacPlatformConfiguration",
    feature = "VZPlatformConfiguration"
))]
pub use self::__VZMacPlatformConfiguration::VZMacPlatformConfiguration;
#[cfg(all(
    feature = "VZMacTrackpadConfiguration",
    feature = "VZPointingDeviceConfiguration"
))]
pub use self::__VZMacTrackpadConfiguration::VZMacTrackpadConfiguration;
#[cfg(feature = "VZMemoryBalloonDevice")]
pub use self::__VZMemoryBalloonDevice::VZMemoryBalloonDevice;
#[cfg(feature = "VZMemoryBalloonDeviceConfiguration")]
pub use self::__VZMemoryBalloonDeviceConfiguration::VZMemoryBalloonDeviceConfiguration;
#[cfg(all(feature = "VZDirectoryShare", feature = "VZMultipleDirectoryShare"))]
pub use self::__VZMultipleDirectoryShare::VZMultipleDirectoryShare;
#[cfg(all(
    feature = "VZNATNetworkDeviceAttachment",
    feature = "VZNetworkDeviceAttachment"
))]
pub use self::__VZNATNetworkDeviceAttachment::VZNATNetworkDeviceAttachment;
#[cfg(all(
    feature = "VZNVMExpressControllerDeviceConfiguration",
    feature = "VZStorageDeviceConfiguration"
))]
pub use self::__VZNVMExpressControllerDeviceConfiguration::VZNVMExpressControllerDeviceConfiguration;
#[cfg(all(
    feature = "VZNetworkBlockDeviceStorageDeviceAttachment",
    feature = "VZStorageDeviceAttachment"
))]
pub use self::__VZNetworkBlockDeviceStorageDeviceAttachment::VZNetworkBlockDeviceStorageDeviceAttachment;
#[cfg(feature = "VZNetworkBlockDeviceStorageDeviceAttachment")]
pub use self::__VZNetworkBlockDeviceStorageDeviceAttachment::VZNetworkBlockDeviceStorageDeviceAttachmentDelegate;
#[cfg(feature = "VZNetworkDevice")]
pub use self::__VZNetworkDevice::VZNetworkDevice;
#[cfg(feature = "VZNetworkDeviceAttachment")]
pub use self::__VZNetworkDeviceAttachment::VZNetworkDeviceAttachment;
#[cfg(feature = "VZNetworkDeviceConfiguration")]
pub use self::__VZNetworkDeviceConfiguration::VZNetworkDeviceConfiguration;
#[cfg(feature = "VZPlatformConfiguration")]
pub use self::__VZPlatformConfiguration::VZPlatformConfiguration;
#[cfg(feature = "VZPointingDeviceConfiguration")]
pub use self::__VZPointingDeviceConfiguration::VZPointingDeviceConfiguration;
#[cfg(feature = "VZSerialPortAttachment")]
pub use self::__VZSerialPortAttachment::VZSerialPortAttachment;
#[cfg(feature = "VZSerialPortConfiguration")]
pub use self::__VZSerialPortConfiguration::VZSerialPortConfiguration;
#[cfg(feature = "VZSharedDirectory")]
pub use self::__VZSharedDirectory::VZSharedDirectory;
#[cfg(all(feature = "VZDirectoryShare", feature = "VZSingleDirectoryShare"))]
pub use self::__VZSingleDirectoryShare::VZSingleDirectoryShare;
#[cfg(feature = "VZSocketDevice")]
pub use self::__VZSocketDevice::VZSocketDevice;
#[cfg(feature = "VZSocketDeviceConfiguration")]
pub use self::__VZSocketDeviceConfiguration::VZSocketDeviceConfiguration;
#[cfg(all(
    feature = "VZSerialPortAttachment",
    feature = "VZSpiceAgentPortAttachment"
))]
pub use self::__VZSpiceAgentPortAttachment::VZSpiceAgentPortAttachment;
#[cfg(feature = "VZStorageDevice")]
pub use self::__VZStorageDevice::VZStorageDevice;
#[cfg(feature = "VZStorageDeviceAttachment")]
pub use self::__VZStorageDeviceAttachment::VZStorageDeviceAttachment;
#[cfg(feature = "VZStorageDeviceConfiguration")]
pub use self::__VZStorageDeviceConfiguration::VZStorageDeviceConfiguration;
#[cfg(feature = "VZUSBController")]
pub use self::__VZUSBController::VZUSBController;
#[cfg(feature = "VZUSBControllerConfiguration")]
pub use self::__VZUSBControllerConfiguration::VZUSBControllerConfiguration;
#[cfg(feature = "VZUSBDevice")]
pub use self::__VZUSBDevice::VZUSBDevice;
#[cfg(feature = "VZUSBDeviceConfiguration")]
pub use self::__VZUSBDeviceConfiguration::VZUSBDeviceConfiguration;
#[cfg(all(
    feature = "VZKeyboardConfiguration",
    feature = "VZUSBKeyboardConfiguration"
))]
pub use self::__VZUSBKeyboardConfiguration::VZUSBKeyboardConfiguration;
#[cfg(all(feature = "VZStorageDevice", feature = "VZUSBMassStorageDevice"))]
pub use self::__VZUSBMassStorageDevice::VZUSBMassStorageDevice;
#[cfg(all(
    feature = "VZStorageDeviceConfiguration",
    feature = "VZUSBMassStorageDeviceConfiguration"
))]
pub use self::__VZUSBMassStorageDeviceConfiguration::VZUSBMassStorageDeviceConfiguration;
#[cfg(all(
    feature = "VZPointingDeviceConfiguration",
    feature = "VZUSBScreenCoordinatePointingDeviceConfiguration"
))]
pub use self::__VZUSBScreenCoordinatePointingDeviceConfiguration::VZUSBScreenCoordinatePointingDeviceConfiguration;
#[cfg(all(
    feature = "VZStorageDeviceConfiguration",
    feature = "VZVirtioBlockDeviceConfiguration"
))]
pub use self::__VZVirtioBlockDeviceConfiguration::VZVirtioBlockDeviceConfiguration;
#[cfg(all(feature = "VZConsoleDevice", feature = "VZVirtioConsoleDevice"))]
pub use self::__VZVirtioConsoleDevice::VZVirtioConsoleDevice;
#[cfg(feature = "VZVirtioConsoleDevice")]
pub use self::__VZVirtioConsoleDevice::VZVirtioConsoleDeviceDelegate;
#[cfg(all(
    feature = "VZConsoleDeviceConfiguration",
    feature = "VZVirtioConsoleDeviceConfiguration"
))]
pub use self::__VZVirtioConsoleDeviceConfiguration::VZVirtioConsoleDeviceConfiguration;
#[cfg(all(
    feature = "VZSerialPortConfiguration",
    feature = "VZVirtioConsoleDeviceSerialPortConfiguration"
))]
pub use self::__VZVirtioConsoleDeviceSerialPortConfiguration::VZVirtioConsoleDeviceSerialPortConfiguration;
#[cfg(feature = "VZVirtioConsolePort")]
pub use self::__VZVirtioConsolePort::VZVirtioConsolePort;
#[cfg(feature = "VZVirtioConsolePortArray")]
pub use self::__VZVirtioConsolePortArray::VZVirtioConsolePortArray;
#[cfg(all(
    feature = "VZConsolePortConfiguration",
    feature = "VZVirtioConsolePortConfiguration"
))]
pub use self::__VZVirtioConsolePortConfiguration::VZVirtioConsolePortConfiguration;
#[cfg(feature = "VZVirtioConsolePortConfigurationArray")]
pub use self::__VZVirtioConsolePortConfigurationArray::VZVirtioConsolePortConfigurationArray;
#[cfg(all(
    feature = "VZEntropyDeviceConfiguration",
    feature = "VZVirtioEntropyDeviceConfiguration"
))]
pub use self::__VZVirtioEntropyDeviceConfiguration::VZVirtioEntropyDeviceConfiguration;
#[cfg(all(
    feature = "VZDirectorySharingDevice",
    feature = "VZVirtioFileSystemDevice"
))]
pub use self::__VZVirtioFileSystemDevice::VZVirtioFileSystemDevice;
#[cfg(all(
    feature = "VZDirectorySharingDeviceConfiguration",
    feature = "VZVirtioFileSystemDeviceConfiguration"
))]
pub use self::__VZVirtioFileSystemDeviceConfiguration::VZVirtioFileSystemDeviceConfiguration;
#[cfg(all(feature = "VZGraphicsDevice", feature = "VZVirtioGraphicsDevice"))]
pub use self::__VZVirtioGraphicsDevice::VZVirtioGraphicsDevice;
#[cfg(all(
    feature = "VZGraphicsDeviceConfiguration",
    feature = "VZVirtioGraphicsDeviceConfiguration"
))]
pub use self::__VZVirtioGraphicsDeviceConfiguration::VZVirtioGraphicsDeviceConfiguration;
#[cfg(all(feature = "VZGraphicsDisplay", feature = "VZVirtioGraphicsScanout"))]
pub use self::__VZVirtioGraphicsScanout::VZVirtioGraphicsScanout;
#[cfg(all(
    feature = "VZGraphicsDisplayConfiguration",
    feature = "VZVirtioGraphicsScanoutConfiguration"
))]
pub use self::__VZVirtioGraphicsScanoutConfiguration::VZVirtioGraphicsScanoutConfiguration;
#[cfg(all(
    feature = "VZNetworkDeviceConfiguration",
    feature = "VZVirtioNetworkDeviceConfiguration"
))]
pub use self::__VZVirtioNetworkDeviceConfiguration::VZVirtioNetworkDeviceConfiguration;
#[cfg(feature = "VZVirtioSocketConnection")]
pub use self::__VZVirtioSocketConnection::VZVirtioSocketConnection;
#[cfg(all(feature = "VZSocketDevice", feature = "VZVirtioSocketDevice"))]
pub use self::__VZVirtioSocketDevice::VZVirtioSocketDevice;
#[cfg(all(
    feature = "VZSocketDeviceConfiguration",
    feature = "VZVirtioSocketDeviceConfiguration"
))]
pub use self::__VZVirtioSocketDeviceConfiguration::VZVirtioSocketDeviceConfiguration;
#[cfg(feature = "VZVirtioSocketListener")]
pub use self::__VZVirtioSocketListener::VZVirtioSocketListener;
#[cfg(feature = "VZVirtioSocketListener")]
pub use self::__VZVirtioSocketListener::VZVirtioSocketListenerDelegate;
#[cfg(all(
    feature = "VZAudioDeviceConfiguration",
    feature = "VZVirtioSoundDeviceConfiguration"
))]
pub use self::__VZVirtioSoundDeviceConfiguration::VZVirtioSoundDeviceConfiguration;
#[cfg(all(
    feature = "VZVirtioSoundDeviceInputStreamConfiguration",
    feature = "VZVirtioSoundDeviceStreamConfiguration"
))]
pub use self::__VZVirtioSoundDeviceInputStreamConfiguration::VZVirtioSoundDeviceInputStreamConfiguration;
#[cfg(all(
    feature = "VZVirtioSoundDeviceOutputStreamConfiguration",
    feature = "VZVirtioSoundDeviceStreamConfiguration"
))]
pub use self::__VZVirtioSoundDeviceOutputStreamConfiguration::VZVirtioSoundDeviceOutputStreamConfiguration;
#[cfg(feature = "VZVirtioSoundDeviceStreamConfiguration")]
pub use self::__VZVirtioSoundDeviceStreamConfiguration::VZVirtioSoundDeviceStreamConfiguration;
#[cfg(all(
    feature = "VZMemoryBalloonDevice",
    feature = "VZVirtioTraditionalMemoryBalloonDevice"
))]
pub use self::__VZVirtioTraditionalMemoryBalloonDevice::VZVirtioTraditionalMemoryBalloonDevice;
#[cfg(all(
    feature = "VZMemoryBalloonDeviceConfiguration",
    feature = "VZVirtioTraditionalMemoryBalloonDeviceConfiguration"
))]
pub use self::__VZVirtioTraditionalMemoryBalloonDeviceConfiguration::VZVirtioTraditionalMemoryBalloonDeviceConfiguration;
#[cfg(feature = "VZVirtualMachine")]
pub use self::__VZVirtualMachine::VZVirtualMachine;
#[cfg(feature = "VZVirtualMachine")]
pub use self::__VZVirtualMachine::VZVirtualMachineState;
#[cfg(feature = "VZVirtualMachineConfiguration")]
pub use self::__VZVirtualMachineConfiguration::VZVirtualMachineConfiguration;
#[cfg(feature = "VZVirtualMachineDelegate")]
pub use self::__VZVirtualMachineDelegate::VZVirtualMachineDelegate;
#[cfg(feature = "VZVirtualMachineStartOptions")]
pub use self::__VZVirtualMachineStartOptions::VZVirtualMachineStartOptions;
#[cfg(all(feature = "VZVirtualMachineView", feature = "objc2-app-kit"))]
pub use self::__VZVirtualMachineView::VZVirtualMachineView;
#[cfg(all(
    feature = "VZNetworkDeviceAttachment",
    feature = "VZVmnetNetworkDeviceAttachment"
))]
pub use self::__VZVmnetNetworkDeviceAttachment::VZVmnetNetworkDeviceAttachment;
#[cfg(all(feature = "VZUSBController", feature = "VZXHCIController"))]
pub use self::__VZXHCIController::VZXHCIController;
#[cfg(all(
    feature = "VZUSBControllerConfiguration",
    feature = "VZXHCIControllerConfiguration"
))]
pub use self::__VZXHCIControllerConfiguration::VZXHCIControllerConfiguration;
