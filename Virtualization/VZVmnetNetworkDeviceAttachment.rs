//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use core::ptr::NonNull;
use objc2::__framework_prelude::*;

use crate::*;

extern_class!(
    /// Network device attachment that allows custom network topology.
    ///
    /// This attachment is backed by a logical network which is created and customized through
    /// the vmnet framework APIs to allow custom network topology, which allows multiple virtual
    /// machines to appear on the same network and connect with each other.
    ///
    ///
    /// See: VZNetworkDeviceConfiguration
    ///
    /// See: VZVirtioNetworkDeviceConfiguration
    ///
    /// See also [Apple's documentation](https://developer.apple.com/documentation/virtualization/vzvmnetnetworkdeviceattachment?language=objc)
    #[unsafe(super(VZNetworkDeviceAttachment, NSObject))]
    #[derive(Debug, PartialEq, Eq, Hash)]
    #[cfg(feature = "VZNetworkDeviceAttachment")]
    pub struct VZVmnetNetworkDeviceAttachment;
);

#[cfg(feature = "VZNetworkDeviceAttachment")]
extern_conformance!(
    unsafe impl NSObjectProtocol for VZVmnetNetworkDeviceAttachment {}
);

#[cfg(feature = "VZNetworkDeviceAttachment")]
impl VZVmnetNetworkDeviceAttachment {
    extern_methods!();
}

/// Methods declared on superclass `VZNetworkDeviceAttachment`.
#[cfg(feature = "VZNetworkDeviceAttachment")]
impl VZVmnetNetworkDeviceAttachment {
    extern_methods!(
        #[unsafe(method(new))]
        #[unsafe(method_family = new)]
        pub unsafe fn new() -> Retained<Self>;

        #[unsafe(method(init))]
        #[unsafe(method_family = init)]
        pub unsafe fn init(this: Allocated<Self>) -> Retained<Self>;
    );
}
