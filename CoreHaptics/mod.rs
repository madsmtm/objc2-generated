// This file has been automatically generated by `objc2`'s `header-translator`.
// DO NOT EDIT

#![allow(unused_imports)]
#![allow(deprecated)]
#![allow(non_snake_case)]
#![allow(non_camel_case_types)]
#![allow(non_upper_case_globals)]
#![allow(missing_docs)]
#![allow(clippy::too_many_arguments)]
#![allow(clippy::type_complexity)]
#![allow(clippy::upper_case_acronyms)]
#![allow(clippy::identity_op)]
#![allow(clippy::missing_safety_doc)]
#![allow(clippy::doc_lazy_continuation)]
#![allow(rustdoc::broken_intra_doc_links)]
#![allow(rustdoc::bare_urls)]
#![allow(rustdoc::invalid_html_tags)]

#[link(name = "CoreHaptics", kind = "framework")]
extern "C" {}

#[cfg(feature = "CHHapticDeviceCapability")]
#[path = "CHHapticDeviceCapability.rs"]
mod __CHHapticDeviceCapability;
#[cfg(feature = "CHHapticEngine")]
#[path = "CHHapticEngine.rs"]
mod __CHHapticEngine;
#[cfg(feature = "CHHapticErrors")]
#[path = "CHHapticErrors.rs"]
mod __CHHapticErrors;
#[cfg(feature = "CHHapticEvent")]
#[path = "CHHapticEvent.rs"]
mod __CHHapticEvent;
#[cfg(feature = "CHHapticParameter")]
#[path = "CHHapticParameter.rs"]
mod __CHHapticParameter;
#[cfg(feature = "CHHapticPattern")]
#[path = "CHHapticPattern.rs"]
mod __CHHapticPattern;
#[cfg(feature = "CHHapticPatternPlayer")]
#[path = "CHHapticPatternPlayer.rs"]
mod __CHHapticPatternPlayer;

#[cfg(feature = "CHHapticDeviceCapability")]
pub use self::__CHHapticDeviceCapability::CHHapticDeviceCapability;
#[cfg(feature = "CHHapticDeviceCapability")]
pub use self::__CHHapticDeviceCapability::CHHapticParameterAttributes;
#[cfg(feature = "CHHapticEngine")]
pub use self::__CHHapticEngine::CHHapticAudioResourceKey;
#[cfg(feature = "CHHapticEngine")]
pub use self::__CHHapticEngine::CHHapticAudioResourceKeyLoopEnabled;
#[cfg(feature = "CHHapticEngine")]
pub use self::__CHHapticEngine::CHHapticAudioResourceKeyUseVolumeEnvelope;
#[cfg(all(feature = "CHHapticEngine", feature = "block2"))]
pub use self::__CHHapticEngine::CHHapticCompletionHandler;
#[cfg(feature = "CHHapticEngine")]
pub use self::__CHHapticEngine::CHHapticEngine;
#[cfg(feature = "CHHapticEngine")]
pub use self::__CHHapticEngine::CHHapticEngineFinishedAction;
#[cfg(all(feature = "CHHapticEngine", feature = "block2"))]
pub use self::__CHHapticEngine::CHHapticEngineFinishedHandler;
#[cfg(all(feature = "CHHapticEngine", feature = "block2"))]
pub use self::__CHHapticEngine::CHHapticEngineResetHandler;
#[cfg(all(feature = "CHHapticEngine", feature = "block2"))]
pub use self::__CHHapticEngine::CHHapticEngineStoppedHandler;
#[cfg(feature = "CHHapticEngine")]
pub use self::__CHHapticEngine::CHHapticEngineStoppedReason;
#[cfg(feature = "CHHapticEngine")]
pub use self::__CHHapticEngine::CHHapticTimeImmediate;
#[cfg(feature = "CHHapticErrors")]
pub use self::__CHHapticErrors::CHHapticErrorCode;
#[cfg(feature = "CHHapticEvent")]
pub use self::__CHHapticEvent::CHHapticAudioResourceID;
#[cfg(feature = "CHHapticEvent")]
pub use self::__CHHapticEvent::CHHapticEvent;
#[cfg(feature = "CHHapticEvent")]
pub use self::__CHHapticEvent::CHHapticEventType;
#[cfg(feature = "CHHapticEvent")]
pub use self::__CHHapticEvent::CHHapticEventTypeAudioContinuous;
#[cfg(feature = "CHHapticEvent")]
pub use self::__CHHapticEvent::CHHapticEventTypeAudioCustom;
#[cfg(feature = "CHHapticEvent")]
pub use self::__CHHapticEvent::CHHapticEventTypeHapticContinuous;
#[cfg(feature = "CHHapticEvent")]
pub use self::__CHHapticEvent::CHHapticEventTypeHapticTransient;
#[cfg(feature = "CHHapticParameter")]
pub use self::__CHHapticParameter::CHHapticDynamicParameter;
#[cfg(feature = "CHHapticParameter")]
pub use self::__CHHapticParameter::CHHapticDynamicParameterID;
#[cfg(feature = "CHHapticParameter")]
pub use self::__CHHapticParameter::CHHapticDynamicParameterIDAudioAttackTimeControl;
#[cfg(feature = "CHHapticParameter")]
pub use self::__CHHapticParameter::CHHapticDynamicParameterIDAudioBrightnessControl;
#[cfg(feature = "CHHapticParameter")]
pub use self::__CHHapticParameter::CHHapticDynamicParameterIDAudioDecayTimeControl;
#[cfg(feature = "CHHapticParameter")]
pub use self::__CHHapticParameter::CHHapticDynamicParameterIDAudioPanControl;
#[cfg(feature = "CHHapticParameter")]
pub use self::__CHHapticParameter::CHHapticDynamicParameterIDAudioPitchControl;
#[cfg(feature = "CHHapticParameter")]
pub use self::__CHHapticParameter::CHHapticDynamicParameterIDAudioReleaseTimeControl;
#[cfg(feature = "CHHapticParameter")]
pub use self::__CHHapticParameter::CHHapticDynamicParameterIDAudioVolumeControl;
#[cfg(feature = "CHHapticParameter")]
pub use self::__CHHapticParameter::CHHapticDynamicParameterIDHapticAttackTimeControl;
#[cfg(feature = "CHHapticParameter")]
pub use self::__CHHapticParameter::CHHapticDynamicParameterIDHapticDecayTimeControl;
#[cfg(feature = "CHHapticParameter")]
pub use self::__CHHapticParameter::CHHapticDynamicParameterIDHapticIntensityControl;
#[cfg(feature = "CHHapticParameter")]
pub use self::__CHHapticParameter::CHHapticDynamicParameterIDHapticReleaseTimeControl;
#[cfg(feature = "CHHapticParameter")]
pub use self::__CHHapticParameter::CHHapticDynamicParameterIDHapticSharpnessControl;
#[cfg(feature = "CHHapticParameter")]
pub use self::__CHHapticParameter::CHHapticEventParameter;
#[cfg(feature = "CHHapticParameter")]
pub use self::__CHHapticParameter::CHHapticEventParameterID;
#[cfg(feature = "CHHapticParameter")]
pub use self::__CHHapticParameter::CHHapticEventParameterIDAttackTime;
#[cfg(feature = "CHHapticParameter")]
pub use self::__CHHapticParameter::CHHapticEventParameterIDAudioBrightness;
#[cfg(feature = "CHHapticParameter")]
pub use self::__CHHapticParameter::CHHapticEventParameterIDAudioPan;
#[cfg(feature = "CHHapticParameter")]
pub use self::__CHHapticParameter::CHHapticEventParameterIDAudioPitch;
#[cfg(feature = "CHHapticParameter")]
pub use self::__CHHapticParameter::CHHapticEventParameterIDAudioVolume;
#[cfg(feature = "CHHapticParameter")]
pub use self::__CHHapticParameter::CHHapticEventParameterIDDecayTime;
#[cfg(feature = "CHHapticParameter")]
pub use self::__CHHapticParameter::CHHapticEventParameterIDHapticIntensity;
#[cfg(feature = "CHHapticParameter")]
pub use self::__CHHapticParameter::CHHapticEventParameterIDHapticSharpness;
#[cfg(feature = "CHHapticParameter")]
pub use self::__CHHapticParameter::CHHapticEventParameterIDReleaseTime;
#[cfg(feature = "CHHapticParameter")]
pub use self::__CHHapticParameter::CHHapticEventParameterIDSustained;
#[cfg(feature = "CHHapticParameter")]
pub use self::__CHHapticParameter::CHHapticParameterCurve;
#[cfg(feature = "CHHapticParameter")]
pub use self::__CHHapticParameter::CHHapticParameterCurveControlPoint;
#[cfg(feature = "CHHapticPattern")]
pub use self::__CHHapticPattern::CHHapticPattern;
#[cfg(feature = "CHHapticPattern")]
pub use self::__CHHapticPattern::CHHapticPatternKey;
#[cfg(feature = "CHHapticPattern")]
pub use self::__CHHapticPattern::CHHapticPatternKeyEvent;
#[cfg(feature = "CHHapticPattern")]
pub use self::__CHHapticPattern::CHHapticPatternKeyEventDuration;
#[cfg(feature = "CHHapticPattern")]
pub use self::__CHHapticPattern::CHHapticPatternKeyEventParameters;
#[cfg(feature = "CHHapticPattern")]
pub use self::__CHHapticPattern::CHHapticPatternKeyEventType;
#[cfg(feature = "CHHapticPattern")]
pub use self::__CHHapticPattern::CHHapticPatternKeyEventWaveformLoopEnabled;
#[cfg(feature = "CHHapticPattern")]
pub use self::__CHHapticPattern::CHHapticPatternKeyEventWaveformPath;
#[cfg(feature = "CHHapticPattern")]
pub use self::__CHHapticPattern::CHHapticPatternKeyEventWaveformUseVolumeEnvelope;
#[cfg(feature = "CHHapticPattern")]
pub use self::__CHHapticPattern::CHHapticPatternKeyParameter;
#[cfg(feature = "CHHapticPattern")]
pub use self::__CHHapticPattern::CHHapticPatternKeyParameterCurve;
#[cfg(feature = "CHHapticPattern")]
pub use self::__CHHapticPattern::CHHapticPatternKeyParameterCurveControlPoints;
#[cfg(feature = "CHHapticPattern")]
pub use self::__CHHapticPattern::CHHapticPatternKeyParameterID;
#[cfg(feature = "CHHapticPattern")]
pub use self::__CHHapticPattern::CHHapticPatternKeyParameterValue;
#[cfg(feature = "CHHapticPattern")]
pub use self::__CHHapticPattern::CHHapticPatternKeyPattern;
#[cfg(feature = "CHHapticPattern")]
pub use self::__CHHapticPattern::CHHapticPatternKeyTime;
#[cfg(feature = "CHHapticPattern")]
pub use self::__CHHapticPattern::CHHapticPatternKeyVersion;
#[cfg(feature = "CHHapticPatternPlayer")]
pub use self::__CHHapticPatternPlayer::CHHapticAdvancedPatternPlayer;
#[cfg(all(feature = "CHHapticPatternPlayer", feature = "block2"))]
pub use self::__CHHapticPatternPlayer::CHHapticAdvancedPatternPlayerCompletionHandler;
#[cfg(feature = "CHHapticPatternPlayer")]
pub use self::__CHHapticPatternPlayer::CHHapticPatternPlayer;
