//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use core::ffi::*;
use core::ptr::NonNull;
use objc2::__framework_prelude::*;
use objc2_app_kit::*;
use objc2_foundation::*;

use crate::*;

extern "C" {
    /// [Apple's documentation](https://developer.apple.com/documentation/quartz/globalupdateok?language=objc)
    pub static globalUpdateOK: Boolean;
}

extern_class!(
    /// [Apple's documentation](https://developer.apple.com/documentation/quartz/quartzfilterview?language=objc)
    #[unsafe(super(NSView, NSResponder, NSObject))]
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub struct QuartzFilterView;
);

extern_conformance!(
    unsafe impl NSAccessibility for QuartzFilterView {}
);

extern_conformance!(
    unsafe impl NSAccessibilityElementProtocol for QuartzFilterView {}
);

extern_conformance!(
    unsafe impl NSAnimatablePropertyContainer for QuartzFilterView {}
);

extern_conformance!(
    unsafe impl NSAppearanceCustomization for QuartzFilterView {}
);

extern_conformance!(
    unsafe impl NSCoding for QuartzFilterView {}
);

extern_conformance!(
    unsafe impl NSDraggingDestination for QuartzFilterView {}
);

extern_conformance!(
    unsafe impl NSObjectProtocol for QuartzFilterView {}
);

extern_conformance!(
    unsafe impl NSUserInterfaceItemIdentification for QuartzFilterView {}
);

impl QuartzFilterView {
    extern_methods!(
        #[unsafe(method(sizeToFit))]
        #[unsafe(method_family = none)]
        pub unsafe fn sizeToFit(&self);
    );
}

/// Methods declared on superclass `NSView`.
impl QuartzFilterView {
    extern_methods!(
        #[unsafe(method(initWithFrame:))]
        #[unsafe(method_family = init)]
        pub unsafe fn initWithFrame(this: Allocated<Self>, frame_rect: NSRect) -> Retained<Self>;

        /// # Safety
        ///
        /// `coder` possibly has further requirements.
        #[unsafe(method(initWithCoder:))]
        #[unsafe(method_family = init)]
        pub unsafe fn initWithCoder(
            this: Allocated<Self>,
            coder: &NSCoder,
        ) -> Option<Retained<Self>>;
    );
}

/// Methods declared on superclass `NSResponder`.
impl QuartzFilterView {
    extern_methods!(
        #[unsafe(method(init))]
        #[unsafe(method_family = init)]
        pub unsafe fn init(this: Allocated<Self>) -> Retained<Self>;
    );
}

/// Methods declared on superclass `NSObject`.
impl QuartzFilterView {
    extern_methods!(
        #[unsafe(method(new))]
        #[unsafe(method_family = new)]
        pub unsafe fn new(mtm: MainThreadMarker) -> Retained<Self>;
    );
}

extern_class!(
    /// [Apple's documentation](https://developer.apple.com/documentation/quartz/quartzfiltermanager?language=objc)
    #[unsafe(super(NSObject))]
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub struct QuartzFilterManager;
);

extern_conformance!(
    unsafe impl NSObjectProtocol for QuartzFilterManager {}
);

impl QuartzFilterManager {
    extern_methods!(
        #[unsafe(method(filterManager))]
        #[unsafe(method_family = none)]
        pub unsafe fn filterManager() -> Option<Retained<QuartzFilterManager>>;

        /// # Safety
        ///
        /// - `domains` generic should be of the correct type.
        /// - `domains` might not allow `None`.
        #[unsafe(method(filtersInDomains:))]
        #[unsafe(method_family = none)]
        pub unsafe fn filtersInDomains(domains: Option<&NSArray>) -> Option<Retained<NSArray>>;

        #[unsafe(method(filterPanel))]
        #[unsafe(method_family = none)]
        pub unsafe fn filterPanel(&self, mtm: MainThreadMarker) -> Option<Retained<NSPanel>>;

        #[unsafe(method(filterView))]
        #[unsafe(method_family = none)]
        pub unsafe fn filterView(
            &self,
            mtm: MainThreadMarker,
        ) -> Option<Retained<QuartzFilterView>>;

        #[cfg(feature = "QuartzFilter")]
        #[unsafe(method(selectedFilter))]
        #[unsafe(method_family = none)]
        pub unsafe fn selectedFilter(&self) -> Option<Retained<QuartzFilter>>;

        #[cfg(feature = "QuartzFilter")]
        /// # Safety
        ///
        /// `filter` might not allow `None`.
        #[unsafe(method(selectFilter:))]
        #[unsafe(method_family = none)]
        pub unsafe fn selectFilter(&self, filter: Option<&QuartzFilter>) -> bool;

        /// # Safety
        ///
        /// - `a_delegate` should be of the correct type.
        /// - `a_delegate` might not allow `None`.
        #[unsafe(method(setDelegate:))]
        #[unsafe(method_family = none)]
        pub unsafe fn setDelegate(&self, a_delegate: Option<&AnyObject>);

        #[unsafe(method(delegate))]
        #[unsafe(method_family = none)]
        pub unsafe fn delegate(&self) -> Option<Retained<AnyObject>>;

        #[cfg(feature = "QuartzFilter")]
        /// # Safety
        ///
        /// - `filter_properties` generic should be of the correct type.
        /// - `filter_properties` might not allow `None`.
        #[unsafe(method(importFilter:))]
        #[unsafe(method_family = none)]
        pub unsafe fn importFilter(
            &self,
            filter_properties: Option<&NSDictionary>,
        ) -> Option<Retained<QuartzFilter>>;
    );
}

/// Methods declared on superclass `NSObject`.
impl QuartzFilterManager {
    extern_methods!(
        #[unsafe(method(init))]
        #[unsafe(method_family = init)]
        pub unsafe fn init(this: Allocated<Self>) -> Retained<Self>;

        #[unsafe(method(new))]
        #[unsafe(method_family = new)]
        pub unsafe fn new() -> Retained<Self>;
    );
}

mod private_NSObjectQuartzFilterManagerDelegate {
    pub trait Sealed {}
}

/// Category "QuartzFilterManagerDelegate" on [`NSObject`].
#[doc(alias = "QuartzFilterManagerDelegate")]
pub unsafe trait NSObjectQuartzFilterManagerDelegate:
    ClassType + Sized + private_NSObjectQuartzFilterManagerDelegate::Sealed
{
    extern_methods!(
        #[cfg(feature = "QuartzFilter")]
        /// # Safety
        ///
        /// - `sender` might not allow `None`.
        /// - `filter` might not allow `None`.
        #[unsafe(method(quartzFilterManager:didAddFilter:))]
        #[unsafe(method_family = none)]
        unsafe fn quartzFilterManager_didAddFilter(
            &self,
            sender: Option<&QuartzFilterManager>,
            filter: Option<&QuartzFilter>,
        );

        #[cfg(feature = "QuartzFilter")]
        /// # Safety
        ///
        /// - `sender` might not allow `None`.
        /// - `filter` might not allow `None`.
        #[unsafe(method(quartzFilterManager:didRemoveFilter:))]
        #[unsafe(method_family = none)]
        unsafe fn quartzFilterManager_didRemoveFilter(
            &self,
            sender: Option<&QuartzFilterManager>,
            filter: Option<&QuartzFilter>,
        );

        #[cfg(feature = "QuartzFilter")]
        /// # Safety
        ///
        /// - `sender` might not allow `None`.
        /// - `filter` might not allow `None`.
        #[unsafe(method(quartzFilterManager:didModifyFilter:))]
        #[unsafe(method_family = none)]
        unsafe fn quartzFilterManager_didModifyFilter(
            &self,
            sender: Option<&QuartzFilterManager>,
            filter: Option<&QuartzFilter>,
        );

        #[cfg(feature = "QuartzFilter")]
        /// # Safety
        ///
        /// - `sender` might not allow `None`.
        /// - `filter` might not allow `None`.
        #[unsafe(method(quartzFilterManager:didSelectFilter:))]
        #[unsafe(method_family = none)]
        unsafe fn quartzFilterManager_didSelectFilter(
            &self,
            sender: Option<&QuartzFilterManager>,
            filter: Option<&QuartzFilter>,
        );
    );
}

impl private_NSObjectQuartzFilterManagerDelegate::Sealed for NSObject {}
unsafe impl NSObjectQuartzFilterManagerDelegate for NSObject {}

extern "C" {
    /// [Apple's documentation](https://developer.apple.com/documentation/quartz/kquartzfilterapplicationdomain?language=objc)
    pub static kQuartzFilterApplicationDomain: Option<&'static NSString>;
}

extern "C" {
    /// [Apple's documentation](https://developer.apple.com/documentation/quartz/kquartzfilterpdfworkflowdomain?language=objc)
    pub static kQuartzFilterPDFWorkflowDomain: Option<&'static NSString>;
}

extern "C" {
    /// [Apple's documentation](https://developer.apple.com/documentation/quartz/kquartzfilterprintingdomain?language=objc)
    pub static kQuartzFilterPrintingDomain: Option<&'static NSString>;
}

extern "C" {
    /// [Apple's documentation](https://developer.apple.com/documentation/quartz/kquartzfiltermanagerdidaddfilternotification?language=objc)
    pub static kQuartzFilterManagerDidAddFilterNotification: Option<&'static NSString>;
}

extern "C" {
    /// [Apple's documentation](https://developer.apple.com/documentation/quartz/kquartzfiltermanagerdidremovefilternotification?language=objc)
    pub static kQuartzFilterManagerDidRemoveFilterNotification: Option<&'static NSString>;
}

extern "C" {
    /// [Apple's documentation](https://developer.apple.com/documentation/quartz/kquartzfiltermanagerdidmodifyfilternotification?language=objc)
    pub static kQuartzFilterManagerDidModifyFilterNotification: Option<&'static NSString>;
}

extern "C" {
    /// [Apple's documentation](https://developer.apple.com/documentation/quartz/kquartzfiltermanagerdidselectfilternotification?language=objc)
    pub static kQuartzFilterManagerDidSelectFilterNotification: Option<&'static NSString>;
}
