//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use core::ffi::*;
use core::ptr::NonNull;
use objc2::__framework_prelude::*;
use objc2_metal::*;

use crate::*;

extern_protocol!(
    /// An upscaling effect that generates a higher resolution texture in a render pass by spatially analyzing an input texture.
    ///
    /// You create instances of this class by calling ``MTLFXSpatialScalerDescriptor/newSpatialScalerWithDevice:compiler:``.
    ///
    /// When using instances of objects conforming to this protocol, you configure the different properties it
    /// inherits from protocol ``MTLFXSpatialScalerBase`` and then call ``encodeToCommandBuffer:`` to
    /// encode its work into a Metal command buffer.
    ///
    /// See ``MTLFXSpatialScalerBase`` for more details on configuring and using spatial scalers.
    ///
    /// See also [Apple's documentation](https://developer.apple.com/documentation/metalfx/mtl4fxspatialscaler?language=objc)
    #[cfg(feature = "MTLFXSpatialScaler")]
    pub unsafe trait MTL4FXSpatialScaler: MTLFXSpatialScalerBase {
        /// Encode this spatial scaler work into a command buffer.
        ///
        /// - Parameters:
        /// - commandBuffer: A command buffer into which this spatial scaler encodes work.
        #[unsafe(method(encodeToCommandBuffer:))]
        #[unsafe(method_family = none)]
        unsafe fn encodeToCommandBuffer(
            &self,
            command_buffer: &ProtocolObject<dyn MTL4CommandBuffer>,
        );
    }
);
