//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use core::ffi::*;
use core::ptr::NonNull;
use objc2::__framework_prelude::*;
use objc2_foundation::*;

use crate::*;

extern_class!(
    /// [Apple's documentation](https://developer.apple.com/documentation/webkit/domnamednodemap?language=objc)
    #[unsafe(super(DOMObject, WebScriptObject, NSObject))]
    #[derive(Debug, PartialEq, Eq, Hash)]
    #[cfg(all(feature = "DOMObject", feature = "WebScriptObject"))]
    #[deprecated]
    pub struct DOMNamedNodeMap;
);

#[cfg(all(feature = "DOMObject", feature = "WebScriptObject"))]
extern_conformance!(
    unsafe impl NSCopying for DOMNamedNodeMap {}
);

#[cfg(all(feature = "DOMObject", feature = "WebScriptObject"))]
unsafe impl CopyingHelper for DOMNamedNodeMap {
    type Result = Self;
}

#[cfg(all(feature = "DOMObject", feature = "WebScriptObject"))]
extern_conformance!(
    unsafe impl NSObjectProtocol for DOMNamedNodeMap {}
);

#[cfg(all(feature = "DOMObject", feature = "WebScriptObject"))]
impl DOMNamedNodeMap {
    extern_methods!(
        #[deprecated]
        #[unsafe(method(length))]
        #[unsafe(method_family = none)]
        pub unsafe fn length(&self) -> c_uint;

        #[cfg(feature = "DOMNode")]
        /// # Safety
        ///
        /// `name` might not allow `None`.
        #[deprecated]
        #[unsafe(method(getNamedItem:))]
        #[unsafe(method_family = none)]
        pub unsafe fn getNamedItem(&self, name: Option<&NSString>) -> Option<Retained<DOMNode>>;

        #[cfg(feature = "DOMNode")]
        /// # Safety
        ///
        /// `node` might not allow `None`.
        #[deprecated]
        #[unsafe(method(setNamedItem:))]
        #[unsafe(method_family = none)]
        pub unsafe fn setNamedItem(&self, node: Option<&DOMNode>) -> Option<Retained<DOMNode>>;

        #[cfg(feature = "DOMNode")]
        /// # Safety
        ///
        /// `name` might not allow `None`.
        #[deprecated]
        #[unsafe(method(removeNamedItem:))]
        #[unsafe(method_family = none)]
        pub unsafe fn removeNamedItem(&self, name: Option<&NSString>) -> Option<Retained<DOMNode>>;

        #[cfg(feature = "DOMNode")]
        #[deprecated]
        #[unsafe(method(item:))]
        #[unsafe(method_family = none)]
        pub unsafe fn item(&self, index: c_uint) -> Option<Retained<DOMNode>>;

        #[cfg(feature = "DOMNode")]
        /// # Safety
        ///
        /// - `namespace_uri` might not allow `None`.
        /// - `local_name` might not allow `None`.
        #[unsafe(method(getNamedItemNS:localName:))]
        #[unsafe(method_family = none)]
        pub unsafe fn getNamedItemNS_localName(
            &self,
            namespace_uri: Option<&NSString>,
            local_name: Option<&NSString>,
        ) -> Option<Retained<DOMNode>>;

        #[cfg(feature = "DOMNode")]
        /// # Safety
        ///
        /// `node` might not allow `None`.
        #[deprecated]
        #[unsafe(method(setNamedItemNS:))]
        #[unsafe(method_family = none)]
        pub unsafe fn setNamedItemNS(&self, node: Option<&DOMNode>) -> Option<Retained<DOMNode>>;

        #[cfg(feature = "DOMNode")]
        /// # Safety
        ///
        /// - `namespace_uri` might not allow `None`.
        /// - `local_name` might not allow `None`.
        #[unsafe(method(removeNamedItemNS:localName:))]
        #[unsafe(method_family = none)]
        pub unsafe fn removeNamedItemNS_localName(
            &self,
            namespace_uri: Option<&NSString>,
            local_name: Option<&NSString>,
        ) -> Option<Retained<DOMNode>>;
    );
}

/// Methods declared on superclass `DOMObject`.
#[cfg(all(feature = "DOMObject", feature = "WebScriptObject"))]
impl DOMNamedNodeMap {
    extern_methods!(
        #[deprecated]
        #[unsafe(method(init))]
        #[unsafe(method_family = init)]
        pub unsafe fn init(this: Allocated<Self>) -> Retained<Self>;
    );
}

/// Methods declared on superclass `NSObject`.
#[cfg(all(feature = "DOMObject", feature = "WebScriptObject"))]
impl DOMNamedNodeMap {
    extern_methods!(
        #[unsafe(method(new))]
        #[unsafe(method_family = new)]
        pub unsafe fn new() -> Retained<Self>;
    );
}

/// DOMNamedNodeMapDeprecated.
#[deprecated]
#[cfg(all(feature = "DOMObject", feature = "WebScriptObject"))]
impl DOMNamedNodeMap {
    extern_methods!(
        #[cfg(feature = "DOMNode")]
        /// # Safety
        ///
        /// - `namespace_uri` might not allow `None`.
        /// - `local_name` might not allow `None`.
        #[deprecated]
        #[unsafe(method(getNamedItemNS::))]
        #[unsafe(method_family = none)]
        pub unsafe fn getNamedItemNS(
            &self,
            namespace_uri: Option<&NSString>,
            local_name: Option<&NSString>,
        ) -> Option<Retained<DOMNode>>;

        #[cfg(feature = "DOMNode")]
        /// # Safety
        ///
        /// - `namespace_uri` might not allow `None`.
        /// - `local_name` might not allow `None`.
        #[deprecated]
        #[unsafe(method(removeNamedItemNS::))]
        #[unsafe(method_family = none)]
        pub unsafe fn removeNamedItemNS(
            &self,
            namespace_uri: Option<&NSString>,
            local_name: Option<&NSString>,
        ) -> Option<Retained<DOMNode>>;
    );
}
