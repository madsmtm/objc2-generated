//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use core::ffi::*;
use core::ptr::NonNull;
use objc2::__framework_prelude::*;
use objc2_foundation::*;

use crate::*;

extern_class!(
    /// [Apple's documentation](https://developer.apple.com/documentation/webkit/domhtmltextareaelement?language=objc)
    #[unsafe(super(
        DOMHTMLElement,
        DOMElement,
        DOMNode,
        DOMObject,
        WebScriptObject,
        NSObject
    ))]
    #[derive(Debug, PartialEq, Eq, Hash)]
    #[cfg(all(
        feature = "DOMElement",
        feature = "DOMHTMLElement",
        feature = "DOMNode",
        feature = "DOMObject",
        feature = "WebScriptObject"
    ))]
    #[deprecated]
    pub struct DOMHTMLTextAreaElement;
);

#[cfg(all(
    feature = "DOMElement",
    feature = "DOMEventTarget",
    feature = "DOMHTMLElement",
    feature = "DOMNode",
    feature = "DOMObject",
    feature = "WebScriptObject"
))]
extern_conformance!(
    unsafe impl DOMEventTarget for DOMHTMLTextAreaElement {}
);

#[cfg(all(
    feature = "DOMElement",
    feature = "DOMHTMLElement",
    feature = "DOMNode",
    feature = "DOMObject",
    feature = "WebScriptObject"
))]
extern_conformance!(
    unsafe impl NSCopying for DOMHTMLTextAreaElement {}
);

#[cfg(all(
    feature = "DOMElement",
    feature = "DOMHTMLElement",
    feature = "DOMNode",
    feature = "DOMObject",
    feature = "WebScriptObject"
))]
unsafe impl CopyingHelper for DOMHTMLTextAreaElement {
    type Result = Self;
}

#[cfg(all(
    feature = "DOMElement",
    feature = "DOMHTMLElement",
    feature = "DOMNode",
    feature = "DOMObject",
    feature = "WebScriptObject"
))]
extern_conformance!(
    unsafe impl NSObjectProtocol for DOMHTMLTextAreaElement {}
);

#[cfg(all(
    feature = "DOMElement",
    feature = "DOMHTMLElement",
    feature = "DOMNode",
    feature = "DOMObject",
    feature = "WebScriptObject"
))]
impl DOMHTMLTextAreaElement {
    extern_methods!(
        #[unsafe(method(autofocus))]
        #[unsafe(method_family = none)]
        pub unsafe fn autofocus(&self) -> bool;

        /// Setter for [`autofocus`][Self::autofocus].
        #[unsafe(method(setAutofocus:))]
        #[unsafe(method_family = none)]
        pub unsafe fn setAutofocus(&self, autofocus: bool);

        #[deprecated]
        #[unsafe(method(disabled))]
        #[unsafe(method_family = none)]
        pub unsafe fn disabled(&self) -> bool;

        /// Setter for [`disabled`][Self::disabled].
        #[deprecated]
        #[unsafe(method(setDisabled:))]
        #[unsafe(method_family = none)]
        pub unsafe fn setDisabled(&self, disabled: bool);

        #[cfg(feature = "DOMHTMLFormElement")]
        #[deprecated]
        #[unsafe(method(form))]
        #[unsafe(method_family = none)]
        pub unsafe fn form(&self) -> Option<Retained<DOMHTMLFormElement>>;

        #[deprecated]
        #[unsafe(method(name))]
        #[unsafe(method_family = none)]
        pub unsafe fn name(&self) -> Retained<NSString>;

        /// Setter for [`name`][Self::name].
        ///
        /// This is [copied][objc2_foundation::NSCopying::copy] when set.
        #[deprecated]
        #[unsafe(method(setName:))]
        #[unsafe(method_family = none)]
        pub unsafe fn setName(&self, name: Option<&NSString>);

        #[deprecated]
        #[unsafe(method(readOnly))]
        #[unsafe(method_family = none)]
        pub unsafe fn readOnly(&self) -> bool;

        /// Setter for [`readOnly`][Self::readOnly].
        #[deprecated]
        #[unsafe(method(setReadOnly:))]
        #[unsafe(method_family = none)]
        pub unsafe fn setReadOnly(&self, read_only: bool);

        #[deprecated]
        #[unsafe(method(rows))]
        #[unsafe(method_family = none)]
        pub unsafe fn rows(&self) -> c_int;

        /// Setter for [`rows`][Self::rows].
        #[deprecated]
        #[unsafe(method(setRows:))]
        #[unsafe(method_family = none)]
        pub unsafe fn setRows(&self, rows: c_int);

        #[deprecated]
        #[unsafe(method(cols))]
        #[unsafe(method_family = none)]
        pub unsafe fn cols(&self) -> c_int;

        /// Setter for [`cols`][Self::cols].
        #[deprecated]
        #[unsafe(method(setCols:))]
        #[unsafe(method_family = none)]
        pub unsafe fn setCols(&self, cols: c_int);

        #[deprecated]
        #[unsafe(method(type))]
        #[unsafe(method_family = none)]
        pub unsafe fn r#type(&self) -> Retained<NSString>;

        #[deprecated]
        #[unsafe(method(defaultValue))]
        #[unsafe(method_family = none)]
        pub unsafe fn defaultValue(&self) -> Retained<NSString>;

        /// Setter for [`defaultValue`][Self::defaultValue].
        ///
        /// This is [copied][objc2_foundation::NSCopying::copy] when set.
        #[deprecated]
        #[unsafe(method(setDefaultValue:))]
        #[unsafe(method_family = none)]
        pub unsafe fn setDefaultValue(&self, default_value: Option<&NSString>);

        #[deprecated]
        #[unsafe(method(value))]
        #[unsafe(method_family = none)]
        pub unsafe fn value(&self) -> Retained<NSString>;

        /// Setter for [`value`][Self::value].
        ///
        /// This is [copied][objc2_foundation::NSCopying::copy] when set.
        #[deprecated]
        #[unsafe(method(setValue:))]
        #[unsafe(method_family = none)]
        pub unsafe fn setValue(&self, value: Option<&NSString>);

        #[unsafe(method(willValidate))]
        #[unsafe(method_family = none)]
        pub unsafe fn willValidate(&self) -> bool;

        #[unsafe(method(selectionStart))]
        #[unsafe(method_family = none)]
        pub unsafe fn selectionStart(&self) -> c_int;

        /// Setter for [`selectionStart`][Self::selectionStart].
        #[unsafe(method(setSelectionStart:))]
        #[unsafe(method_family = none)]
        pub unsafe fn setSelectionStart(&self, selection_start: c_int);

        #[unsafe(method(selectionEnd))]
        #[unsafe(method_family = none)]
        pub unsafe fn selectionEnd(&self) -> c_int;

        /// Setter for [`selectionEnd`][Self::selectionEnd].
        #[unsafe(method(setSelectionEnd:))]
        #[unsafe(method_family = none)]
        pub unsafe fn setSelectionEnd(&self, selection_end: c_int);

        #[deprecated]
        #[unsafe(method(accessKey))]
        #[unsafe(method_family = none)]
        pub unsafe fn accessKey(&self) -> Retained<NSString>;

        /// Setter for [`accessKey`][Self::accessKey].
        ///
        /// This is [copied][objc2_foundation::NSCopying::copy] when set.
        #[deprecated]
        #[unsafe(method(setAccessKey:))]
        #[unsafe(method_family = none)]
        pub unsafe fn setAccessKey(&self, access_key: Option<&NSString>);

        #[deprecated]
        #[unsafe(method(select))]
        #[unsafe(method_family = none)]
        pub unsafe fn select(&self);

        #[unsafe(method(setSelectionRange:end:))]
        #[unsafe(method_family = none)]
        pub unsafe fn setSelectionRange_end(&self, start: c_int, end: c_int);
    );
}

/// Methods declared on superclass `DOMObject`.
#[cfg(all(
    feature = "DOMElement",
    feature = "DOMHTMLElement",
    feature = "DOMNode",
    feature = "DOMObject",
    feature = "WebScriptObject"
))]
impl DOMHTMLTextAreaElement {
    extern_methods!(
        #[deprecated]
        #[unsafe(method(init))]
        #[unsafe(method_family = init)]
        pub unsafe fn init(this: Allocated<Self>) -> Retained<Self>;
    );
}

/// Methods declared on superclass `NSObject`.
#[cfg(all(
    feature = "DOMElement",
    feature = "DOMHTMLElement",
    feature = "DOMNode",
    feature = "DOMObject",
    feature = "WebScriptObject"
))]
impl DOMHTMLTextAreaElement {
    extern_methods!(
        #[unsafe(method(new))]
        #[unsafe(method_family = new)]
        pub unsafe fn new() -> Retained<Self>;
    );
}
