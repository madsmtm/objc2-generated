//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use core::ffi::*;
use core::ptr::NonNull;
use objc2::__framework_prelude::*;
use objc2_foundation::*;

use crate::*;

extern_class!(
    /// [Apple's documentation](https://developer.apple.com/documentation/webkit/domhtmltablecellelement?language=objc)
    #[unsafe(super(
        DOMHTMLElement,
        DOMElement,
        DOMNode,
        DOMObject,
        WebScriptObject,
        NSObject
    ))]
    #[derive(Debug, PartialEq, Eq, Hash)]
    #[cfg(all(
        feature = "DOMElement",
        feature = "DOMHTMLElement",
        feature = "DOMNode",
        feature = "DOMObject",
        feature = "WebScriptObject"
    ))]
    #[deprecated]
    pub struct DOMHTMLTableCellElement;
);

#[cfg(all(
    feature = "DOMElement",
    feature = "DOMEventTarget",
    feature = "DOMHTMLElement",
    feature = "DOMNode",
    feature = "DOMObject",
    feature = "WebScriptObject"
))]
extern_conformance!(
    unsafe impl DOMEventTarget for DOMHTMLTableCellElement {}
);

#[cfg(all(
    feature = "DOMElement",
    feature = "DOMHTMLElement",
    feature = "DOMNode",
    feature = "DOMObject",
    feature = "WebScriptObject"
))]
extern_conformance!(
    unsafe impl NSCopying for DOMHTMLTableCellElement {}
);

#[cfg(all(
    feature = "DOMElement",
    feature = "DOMHTMLElement",
    feature = "DOMNode",
    feature = "DOMObject",
    feature = "WebScriptObject"
))]
unsafe impl CopyingHelper for DOMHTMLTableCellElement {
    type Result = Self;
}

#[cfg(all(
    feature = "DOMElement",
    feature = "DOMHTMLElement",
    feature = "DOMNode",
    feature = "DOMObject",
    feature = "WebScriptObject"
))]
extern_conformance!(
    unsafe impl NSObjectProtocol for DOMHTMLTableCellElement {}
);

#[cfg(all(
    feature = "DOMElement",
    feature = "DOMHTMLElement",
    feature = "DOMNode",
    feature = "DOMObject",
    feature = "WebScriptObject"
))]
impl DOMHTMLTableCellElement {
    extern_methods!(
        #[deprecated]
        #[unsafe(method(cellIndex))]
        #[unsafe(method_family = none)]
        pub unsafe fn cellIndex(&self) -> c_int;

        #[deprecated]
        #[unsafe(method(align))]
        #[unsafe(method_family = none)]
        pub unsafe fn align(&self) -> Retained<NSString>;

        /// Setter for [`align`][Self::align].
        ///
        /// This is [copied][objc2_foundation::NSCopying::copy] when set.
        #[deprecated]
        #[unsafe(method(setAlign:))]
        #[unsafe(method_family = none)]
        pub unsafe fn setAlign(&self, align: Option<&NSString>);

        #[deprecated]
        #[unsafe(method(axis))]
        #[unsafe(method_family = none)]
        pub unsafe fn axis(&self) -> Retained<NSString>;

        /// Setter for [`axis`][Self::axis].
        ///
        /// This is [copied][objc2_foundation::NSCopying::copy] when set.
        #[deprecated]
        #[unsafe(method(setAxis:))]
        #[unsafe(method_family = none)]
        pub unsafe fn setAxis(&self, axis: Option<&NSString>);

        #[deprecated]
        #[unsafe(method(bgColor))]
        #[unsafe(method_family = none)]
        pub unsafe fn bgColor(&self) -> Retained<NSString>;

        /// Setter for [`bgColor`][Self::bgColor].
        ///
        /// This is [copied][objc2_foundation::NSCopying::copy] when set.
        #[deprecated]
        #[unsafe(method(setBgColor:))]
        #[unsafe(method_family = none)]
        pub unsafe fn setBgColor(&self, bg_color: Option<&NSString>);

        #[deprecated]
        #[unsafe(method(ch))]
        #[unsafe(method_family = none)]
        pub unsafe fn ch(&self) -> Retained<NSString>;

        /// Setter for [`ch`][Self::ch].
        ///
        /// This is [copied][objc2_foundation::NSCopying::copy] when set.
        #[deprecated]
        #[unsafe(method(setCh:))]
        #[unsafe(method_family = none)]
        pub unsafe fn setCh(&self, ch: Option<&NSString>);

        #[deprecated]
        #[unsafe(method(chOff))]
        #[unsafe(method_family = none)]
        pub unsafe fn chOff(&self) -> Retained<NSString>;

        /// Setter for [`chOff`][Self::chOff].
        ///
        /// This is [copied][objc2_foundation::NSCopying::copy] when set.
        #[deprecated]
        #[unsafe(method(setChOff:))]
        #[unsafe(method_family = none)]
        pub unsafe fn setChOff(&self, ch_off: Option<&NSString>);

        #[deprecated]
        #[unsafe(method(colSpan))]
        #[unsafe(method_family = none)]
        pub unsafe fn colSpan(&self) -> c_int;

        /// Setter for [`colSpan`][Self::colSpan].
        #[deprecated]
        #[unsafe(method(setColSpan:))]
        #[unsafe(method_family = none)]
        pub unsafe fn setColSpan(&self, col_span: c_int);

        #[deprecated]
        #[unsafe(method(rowSpan))]
        #[unsafe(method_family = none)]
        pub unsafe fn rowSpan(&self) -> c_int;

        /// Setter for [`rowSpan`][Self::rowSpan].
        #[deprecated]
        #[unsafe(method(setRowSpan:))]
        #[unsafe(method_family = none)]
        pub unsafe fn setRowSpan(&self, row_span: c_int);

        #[deprecated]
        #[unsafe(method(headers))]
        #[unsafe(method_family = none)]
        pub unsafe fn headers(&self) -> Retained<NSString>;

        /// Setter for [`headers`][Self::headers].
        ///
        /// This is [copied][objc2_foundation::NSCopying::copy] when set.
        #[deprecated]
        #[unsafe(method(setHeaders:))]
        #[unsafe(method_family = none)]
        pub unsafe fn setHeaders(&self, headers: Option<&NSString>);

        #[deprecated]
        #[unsafe(method(height))]
        #[unsafe(method_family = none)]
        pub unsafe fn height(&self) -> Retained<NSString>;

        /// Setter for [`height`][Self::height].
        ///
        /// This is [copied][objc2_foundation::NSCopying::copy] when set.
        #[deprecated]
        #[unsafe(method(setHeight:))]
        #[unsafe(method_family = none)]
        pub unsafe fn setHeight(&self, height: Option<&NSString>);

        #[deprecated]
        #[unsafe(method(noWrap))]
        #[unsafe(method_family = none)]
        pub unsafe fn noWrap(&self) -> bool;

        /// Setter for [`noWrap`][Self::noWrap].
        #[deprecated]
        #[unsafe(method(setNoWrap:))]
        #[unsafe(method_family = none)]
        pub unsafe fn setNoWrap(&self, no_wrap: bool);

        #[deprecated]
        #[unsafe(method(vAlign))]
        #[unsafe(method_family = none)]
        pub unsafe fn vAlign(&self) -> Retained<NSString>;

        /// Setter for [`vAlign`][Self::vAlign].
        ///
        /// This is [copied][objc2_foundation::NSCopying::copy] when set.
        #[deprecated]
        #[unsafe(method(setVAlign:))]
        #[unsafe(method_family = none)]
        pub unsafe fn setVAlign(&self, v_align: Option<&NSString>);

        #[deprecated]
        #[unsafe(method(width))]
        #[unsafe(method_family = none)]
        pub unsafe fn width(&self) -> Retained<NSString>;

        /// Setter for [`width`][Self::width].
        ///
        /// This is [copied][objc2_foundation::NSCopying::copy] when set.
        #[deprecated]
        #[unsafe(method(setWidth:))]
        #[unsafe(method_family = none)]
        pub unsafe fn setWidth(&self, width: Option<&NSString>);

        #[deprecated]
        #[unsafe(method(abbr))]
        #[unsafe(method_family = none)]
        pub unsafe fn abbr(&self) -> Retained<NSString>;

        /// Setter for [`abbr`][Self::abbr].
        ///
        /// This is [copied][objc2_foundation::NSCopying::copy] when set.
        #[deprecated]
        #[unsafe(method(setAbbr:))]
        #[unsafe(method_family = none)]
        pub unsafe fn setAbbr(&self, abbr: Option<&NSString>);

        #[deprecated]
        #[unsafe(method(scope))]
        #[unsafe(method_family = none)]
        pub unsafe fn scope(&self) -> Retained<NSString>;

        /// Setter for [`scope`][Self::scope].
        ///
        /// This is [copied][objc2_foundation::NSCopying::copy] when set.
        #[deprecated]
        #[unsafe(method(setScope:))]
        #[unsafe(method_family = none)]
        pub unsafe fn setScope(&self, scope: Option<&NSString>);
    );
}

/// Methods declared on superclass `DOMObject`.
#[cfg(all(
    feature = "DOMElement",
    feature = "DOMHTMLElement",
    feature = "DOMNode",
    feature = "DOMObject",
    feature = "WebScriptObject"
))]
impl DOMHTMLTableCellElement {
    extern_methods!(
        #[deprecated]
        #[unsafe(method(init))]
        #[unsafe(method_family = init)]
        pub unsafe fn init(this: Allocated<Self>) -> Retained<Self>;
    );
}

/// Methods declared on superclass `NSObject`.
#[cfg(all(
    feature = "DOMElement",
    feature = "DOMHTMLElement",
    feature = "DOMNode",
    feature = "DOMObject",
    feature = "WebScriptObject"
))]
impl DOMHTMLTableCellElement {
    extern_methods!(
        #[unsafe(method(new))]
        #[unsafe(method_family = new)]
        pub unsafe fn new() -> Retained<Self>;
    );
}
