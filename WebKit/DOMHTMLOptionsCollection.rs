//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use core::ffi::*;
use core::ptr::NonNull;
use objc2::__framework_prelude::*;
use objc2_foundation::*;

use crate::*;

extern_class!(
    /// [Apple's documentation](https://developer.apple.com/documentation/webkit/domhtmloptionscollection?language=objc)
    #[unsafe(super(DOMObject, WebScriptObject, NSObject))]
    #[derive(Debug, PartialEq, Eq, Hash)]
    #[cfg(all(feature = "DOMObject", feature = "WebScriptObject"))]
    #[deprecated]
    pub struct DOMHTMLOptionsCollection;
);

#[cfg(all(feature = "DOMObject", feature = "WebScriptObject"))]
extern_conformance!(
    unsafe impl NSCopying for DOMHTMLOptionsCollection {}
);

#[cfg(all(feature = "DOMObject", feature = "WebScriptObject"))]
unsafe impl CopyingHelper for DOMHTMLOptionsCollection {
    type Result = Self;
}

#[cfg(all(feature = "DOMObject", feature = "WebScriptObject"))]
extern_conformance!(
    unsafe impl NSObjectProtocol for DOMHTMLOptionsCollection {}
);

#[cfg(all(feature = "DOMObject", feature = "WebScriptObject"))]
impl DOMHTMLOptionsCollection {
    extern_methods!(
        #[unsafe(method(selectedIndex))]
        #[unsafe(method_family = none)]
        pub unsafe fn selectedIndex(&self) -> c_int;

        /// Setter for [`selectedIndex`][Self::selectedIndex].
        #[unsafe(method(setSelectedIndex:))]
        #[unsafe(method_family = none)]
        pub unsafe fn setSelectedIndex(&self, selected_index: c_int);

        #[deprecated]
        #[unsafe(method(length))]
        #[unsafe(method_family = none)]
        pub unsafe fn length(&self) -> c_uint;

        /// Setter for [`length`][Self::length].
        #[deprecated]
        #[unsafe(method(setLength:))]
        #[unsafe(method_family = none)]
        pub unsafe fn setLength(&self, length: c_uint);

        #[cfg(feature = "DOMNode")]
        /// # Safety
        ///
        /// `name` might not allow `None`.
        #[deprecated]
        #[unsafe(method(namedItem:))]
        #[unsafe(method_family = none)]
        pub unsafe fn namedItem(&self, name: Option<&NSString>) -> Option<Retained<DOMNode>>;

        #[cfg(all(
            feature = "DOMElement",
            feature = "DOMHTMLElement",
            feature = "DOMHTMLOptionElement",
            feature = "DOMNode"
        ))]
        /// # Safety
        ///
        /// `option` might not allow `None`.
        #[unsafe(method(add:index:))]
        #[unsafe(method_family = none)]
        pub unsafe fn add_index(&self, option: Option<&DOMHTMLOptionElement>, index: c_uint);

        #[unsafe(method(remove:))]
        #[unsafe(method_family = none)]
        pub unsafe fn remove(&self, index: c_uint);

        #[cfg(feature = "DOMNode")]
        #[deprecated]
        #[unsafe(method(item:))]
        #[unsafe(method_family = none)]
        pub unsafe fn item(&self, index: c_uint) -> Option<Retained<DOMNode>>;
    );
}

/// Methods declared on superclass `DOMObject`.
#[cfg(all(feature = "DOMObject", feature = "WebScriptObject"))]
impl DOMHTMLOptionsCollection {
    extern_methods!(
        #[deprecated]
        #[unsafe(method(init))]
        #[unsafe(method_family = init)]
        pub unsafe fn init(this: Allocated<Self>) -> Retained<Self>;
    );
}

/// Methods declared on superclass `NSObject`.
#[cfg(all(feature = "DOMObject", feature = "WebScriptObject"))]
impl DOMHTMLOptionsCollection {
    extern_methods!(
        #[unsafe(method(new))]
        #[unsafe(method_family = new)]
        pub unsafe fn new() -> Retained<Self>;
    );
}
