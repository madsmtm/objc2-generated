//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use core::ffi::*;
use core::ptr::NonNull;
use objc2::__framework_prelude::*;
use objc2_foundation::*;

use crate::*;

extern_class!(
    /// [Apple's documentation](https://developer.apple.com/documentation/webkit/domtreewalker?language=objc)
    #[unsafe(super(DOMObject, WebScriptObject, NSObject))]
    #[derive(Debug, PartialEq, Eq, Hash)]
    #[cfg(all(feature = "DOMObject", feature = "WebScriptObject"))]
    #[deprecated]
    pub struct DOMTreeWalker;
);

#[cfg(all(feature = "DOMObject", feature = "WebScriptObject"))]
extern_conformance!(
    unsafe impl NSCopying for DOMTreeWalker {}
);

#[cfg(all(feature = "DOMObject", feature = "WebScriptObject"))]
unsafe impl CopyingHelper for DOMTreeWalker {
    type Result = Self;
}

#[cfg(all(feature = "DOMObject", feature = "WebScriptObject"))]
extern_conformance!(
    unsafe impl NSObjectProtocol for DOMTreeWalker {}
);

#[cfg(all(feature = "DOMObject", feature = "WebScriptObject"))]
impl DOMTreeWalker {
    extern_methods!(
        #[cfg(feature = "DOMNode")]
        #[deprecated]
        #[unsafe(method(root))]
        #[unsafe(method_family = none)]
        pub unsafe fn root(&self) -> Option<Retained<DOMNode>>;

        #[deprecated]
        #[unsafe(method(whatToShow))]
        #[unsafe(method_family = none)]
        pub unsafe fn whatToShow(&self) -> c_uint;

        #[cfg(feature = "DOMNodeFilter")]
        #[deprecated]
        #[unsafe(method(filter))]
        #[unsafe(method_family = none)]
        pub unsafe fn filter(&self) -> Option<Retained<ProtocolObject<dyn DOMNodeFilter>>>;

        #[deprecated]
        #[unsafe(method(expandEntityReferences))]
        #[unsafe(method_family = none)]
        pub unsafe fn expandEntityReferences(&self) -> bool;

        #[cfg(feature = "DOMNode")]
        #[deprecated]
        #[unsafe(method(currentNode))]
        #[unsafe(method_family = none)]
        pub unsafe fn currentNode(&self) -> Option<Retained<DOMNode>>;

        #[cfg(feature = "DOMNode")]
        /// Setter for [`currentNode`][Self::currentNode].
        ///
        /// # Safety
        ///
        /// `current_node` might not allow `None`.
        #[deprecated]
        #[unsafe(method(setCurrentNode:))]
        #[unsafe(method_family = none)]
        pub unsafe fn setCurrentNode(&self, current_node: Option<&DOMNode>);

        #[cfg(feature = "DOMNode")]
        #[deprecated]
        #[unsafe(method(parentNode))]
        #[unsafe(method_family = none)]
        pub unsafe fn parentNode(&self) -> Option<Retained<DOMNode>>;

        #[cfg(feature = "DOMNode")]
        #[deprecated]
        #[unsafe(method(firstChild))]
        #[unsafe(method_family = none)]
        pub unsafe fn firstChild(&self) -> Option<Retained<DOMNode>>;

        #[cfg(feature = "DOMNode")]
        #[deprecated]
        #[unsafe(method(lastChild))]
        #[unsafe(method_family = none)]
        pub unsafe fn lastChild(&self) -> Option<Retained<DOMNode>>;

        #[cfg(feature = "DOMNode")]
        #[deprecated]
        #[unsafe(method(previousSibling))]
        #[unsafe(method_family = none)]
        pub unsafe fn previousSibling(&self) -> Option<Retained<DOMNode>>;

        #[cfg(feature = "DOMNode")]
        #[deprecated]
        #[unsafe(method(nextSibling))]
        #[unsafe(method_family = none)]
        pub unsafe fn nextSibling(&self) -> Option<Retained<DOMNode>>;

        #[cfg(feature = "DOMNode")]
        #[deprecated]
        #[unsafe(method(previousNode))]
        #[unsafe(method_family = none)]
        pub unsafe fn previousNode(&self) -> Option<Retained<DOMNode>>;

        #[cfg(feature = "DOMNode")]
        #[deprecated]
        #[unsafe(method(nextNode))]
        #[unsafe(method_family = none)]
        pub unsafe fn nextNode(&self) -> Option<Retained<DOMNode>>;
    );
}

/// Methods declared on superclass `DOMObject`.
#[cfg(all(feature = "DOMObject", feature = "WebScriptObject"))]
impl DOMTreeWalker {
    extern_methods!(
        #[deprecated]
        #[unsafe(method(init))]
        #[unsafe(method_family = init)]
        pub unsafe fn init(this: Allocated<Self>) -> Retained<Self>;
    );
}

/// Methods declared on superclass `NSObject`.
#[cfg(all(feature = "DOMObject", feature = "WebScriptObject"))]
impl DOMTreeWalker {
    extern_methods!(
        #[unsafe(method(new))]
        #[unsafe(method_family = new)]
        pub unsafe fn new() -> Retained<Self>;
    );
}
