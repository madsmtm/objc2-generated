//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use core::ffi::*;
use core::ptr::NonNull;
use objc2::__framework_prelude::*;
use objc2_foundation::*;

use crate::*;

extern_class!(
    /// [Apple's documentation](https://developer.apple.com/documentation/webkit/domuievent?language=objc)
    #[unsafe(super(DOMEvent, DOMObject, WebScriptObject, NSObject))]
    #[derive(Debug, PartialEq, Eq, Hash)]
    #[cfg(all(
        feature = "DOMEvent",
        feature = "DOMObject",
        feature = "WebScriptObject"
    ))]
    #[deprecated]
    pub struct DOMUIEvent;
);

#[cfg(all(
    feature = "DOMEvent",
    feature = "DOMObject",
    feature = "WebScriptObject"
))]
extern_conformance!(
    unsafe impl NSCopying for DOMUIEvent {}
);

#[cfg(all(
    feature = "DOMEvent",
    feature = "DOMObject",
    feature = "WebScriptObject"
))]
unsafe impl CopyingHelper for DOMUIEvent {
    type Result = Self;
}

#[cfg(all(
    feature = "DOMEvent",
    feature = "DOMObject",
    feature = "WebScriptObject"
))]
extern_conformance!(
    unsafe impl NSObjectProtocol for DOMUIEvent {}
);

#[cfg(all(
    feature = "DOMEvent",
    feature = "DOMObject",
    feature = "WebScriptObject"
))]
impl DOMUIEvent {
    extern_methods!(
        #[cfg(feature = "DOMAbstractView")]
        #[deprecated]
        #[unsafe(method(view))]
        #[unsafe(method_family = none)]
        pub unsafe fn view(&self) -> Option<Retained<DOMAbstractView>>;

        #[deprecated]
        #[unsafe(method(detail))]
        #[unsafe(method_family = none)]
        pub unsafe fn detail(&self) -> c_int;

        #[unsafe(method(keyCode))]
        #[unsafe(method_family = none)]
        pub unsafe fn keyCode(&self) -> c_int;

        #[unsafe(method(charCode))]
        #[unsafe(method_family = none)]
        pub unsafe fn charCode(&self) -> c_int;

        #[deprecated]
        #[unsafe(method(layerX))]
        #[unsafe(method_family = none)]
        pub unsafe fn layerX(&self) -> c_int;

        #[deprecated]
        #[unsafe(method(layerY))]
        #[unsafe(method_family = none)]
        pub unsafe fn layerY(&self) -> c_int;

        #[unsafe(method(pageX))]
        #[unsafe(method_family = none)]
        pub unsafe fn pageX(&self) -> c_int;

        #[unsafe(method(pageY))]
        #[unsafe(method_family = none)]
        pub unsafe fn pageY(&self) -> c_int;

        #[unsafe(method(which))]
        #[unsafe(method_family = none)]
        pub unsafe fn which(&self) -> c_int;

        #[cfg(feature = "DOMAbstractView")]
        /// # Safety
        ///
        /// - `type` might not allow `None`.
        /// - `view` might not allow `None`.
        #[unsafe(method(initUIEvent:canBubble:cancelable:view:detail:))]
        #[unsafe(method_family = none)]
        pub unsafe fn initUIEvent_canBubble_cancelable_view_detail(
            &self,
            r#type: Option<&NSString>,
            can_bubble: bool,
            cancelable: bool,
            view: Option<&DOMAbstractView>,
            detail: c_int,
        );
    );
}

/// Methods declared on superclass `DOMObject`.
#[cfg(all(
    feature = "DOMEvent",
    feature = "DOMObject",
    feature = "WebScriptObject"
))]
impl DOMUIEvent {
    extern_methods!(
        #[deprecated]
        #[unsafe(method(init))]
        #[unsafe(method_family = init)]
        pub unsafe fn init(this: Allocated<Self>) -> Retained<Self>;
    );
}

/// Methods declared on superclass `NSObject`.
#[cfg(all(
    feature = "DOMEvent",
    feature = "DOMObject",
    feature = "WebScriptObject"
))]
impl DOMUIEvent {
    extern_methods!(
        #[unsafe(method(new))]
        #[unsafe(method_family = new)]
        pub unsafe fn new() -> Retained<Self>;
    );
}

/// DOMUIEventDeprecated.
#[deprecated]
#[cfg(all(
    feature = "DOMEvent",
    feature = "DOMObject",
    feature = "WebScriptObject"
))]
impl DOMUIEvent {
    extern_methods!(
        #[cfg(feature = "DOMAbstractView")]
        /// # Safety
        ///
        /// - `type` might not allow `None`.
        /// - `view` might not allow `None`.
        #[deprecated]
        #[unsafe(method(initUIEvent:::::))]
        #[unsafe(method_family = none)]
        pub unsafe fn initUIEvent(
            &self,
            r#type: Option<&NSString>,
            can_bubble: bool,
            cancelable: bool,
            view: Option<&DOMAbstractView>,
            detail: c_int,
        );
    );
}
