//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use core::ffi::*;
use core::ptr::NonNull;
use objc2::__framework_prelude::*;
use objc2_foundation::*;

use crate::*;

extern_class!(
    /// [Apple's documentation](https://developer.apple.com/documentation/webkit/domhtmlinputelement?language=objc)
    #[unsafe(super(
        DOMHTMLElement,
        DOMElement,
        DOMNode,
        DOMObject,
        WebScriptObject,
        NSObject
    ))]
    #[derive(Debug, PartialEq, Eq, Hash)]
    #[cfg(all(
        feature = "DOMElement",
        feature = "DOMHTMLElement",
        feature = "DOMNode",
        feature = "DOMObject",
        feature = "WebScriptObject"
    ))]
    #[deprecated]
    pub struct DOMHTMLInputElement;
);

#[cfg(all(
    feature = "DOMElement",
    feature = "DOMEventTarget",
    feature = "DOMHTMLElement",
    feature = "DOMNode",
    feature = "DOMObject",
    feature = "WebScriptObject"
))]
extern_conformance!(
    unsafe impl DOMEventTarget for DOMHTMLInputElement {}
);

#[cfg(all(
    feature = "DOMElement",
    feature = "DOMHTMLElement",
    feature = "DOMNode",
    feature = "DOMObject",
    feature = "WebScriptObject"
))]
extern_conformance!(
    unsafe impl NSCopying for DOMHTMLInputElement {}
);

#[cfg(all(
    feature = "DOMElement",
    feature = "DOMHTMLElement",
    feature = "DOMNode",
    feature = "DOMObject",
    feature = "WebScriptObject"
))]
unsafe impl CopyingHelper for DOMHTMLInputElement {
    type Result = Self;
}

#[cfg(all(
    feature = "DOMElement",
    feature = "DOMHTMLElement",
    feature = "DOMNode",
    feature = "DOMObject",
    feature = "WebScriptObject"
))]
extern_conformance!(
    unsafe impl NSObjectProtocol for DOMHTMLInputElement {}
);

#[cfg(all(
    feature = "DOMElement",
    feature = "DOMHTMLElement",
    feature = "DOMNode",
    feature = "DOMObject",
    feature = "WebScriptObject"
))]
impl DOMHTMLInputElement {
    extern_methods!(
        #[deprecated]
        #[unsafe(method(accept))]
        #[unsafe(method_family = none)]
        pub unsafe fn accept(&self) -> Retained<NSString>;

        /// Setter for [`accept`][Self::accept].
        ///
        /// This is [copied][objc2_foundation::NSCopying::copy] when set.
        #[deprecated]
        #[unsafe(method(setAccept:))]
        #[unsafe(method_family = none)]
        pub unsafe fn setAccept(&self, accept: Option<&NSString>);

        #[deprecated]
        #[unsafe(method(alt))]
        #[unsafe(method_family = none)]
        pub unsafe fn alt(&self) -> Retained<NSString>;

        /// Setter for [`alt`][Self::alt].
        ///
        /// This is [copied][objc2_foundation::NSCopying::copy] when set.
        #[deprecated]
        #[unsafe(method(setAlt:))]
        #[unsafe(method_family = none)]
        pub unsafe fn setAlt(&self, alt: Option<&NSString>);

        #[unsafe(method(autofocus))]
        #[unsafe(method_family = none)]
        pub unsafe fn autofocus(&self) -> bool;

        /// Setter for [`autofocus`][Self::autofocus].
        #[unsafe(method(setAutofocus:))]
        #[unsafe(method_family = none)]
        pub unsafe fn setAutofocus(&self, autofocus: bool);

        #[deprecated]
        #[unsafe(method(defaultChecked))]
        #[unsafe(method_family = none)]
        pub unsafe fn defaultChecked(&self) -> bool;

        /// Setter for [`defaultChecked`][Self::defaultChecked].
        #[deprecated]
        #[unsafe(method(setDefaultChecked:))]
        #[unsafe(method_family = none)]
        pub unsafe fn setDefaultChecked(&self, default_checked: bool);

        #[deprecated]
        #[unsafe(method(checked))]
        #[unsafe(method_family = none)]
        pub unsafe fn checked(&self) -> bool;

        /// Setter for [`checked`][Self::checked].
        #[deprecated]
        #[unsafe(method(setChecked:))]
        #[unsafe(method_family = none)]
        pub unsafe fn setChecked(&self, checked: bool);

        #[deprecated]
        #[unsafe(method(disabled))]
        #[unsafe(method_family = none)]
        pub unsafe fn disabled(&self) -> bool;

        /// Setter for [`disabled`][Self::disabled].
        #[deprecated]
        #[unsafe(method(setDisabled:))]
        #[unsafe(method_family = none)]
        pub unsafe fn setDisabled(&self, disabled: bool);

        #[cfg(feature = "DOMHTMLFormElement")]
        #[deprecated]
        #[unsafe(method(form))]
        #[unsafe(method_family = none)]
        pub unsafe fn form(&self) -> Option<Retained<DOMHTMLFormElement>>;

        #[cfg(feature = "DOMFileList")]
        #[unsafe(method(files))]
        #[unsafe(method_family = none)]
        pub unsafe fn files(&self) -> Option<Retained<DOMFileList>>;

        #[cfg(feature = "DOMFileList")]
        /// Setter for [`files`][Self::files].
        ///
        /// # Safety
        ///
        /// `files` might not allow `None`.
        #[unsafe(method(setFiles:))]
        #[unsafe(method_family = none)]
        pub unsafe fn setFiles(&self, files: Option<&DOMFileList>);

        #[unsafe(method(indeterminate))]
        #[unsafe(method_family = none)]
        pub unsafe fn indeterminate(&self) -> bool;

        /// Setter for [`indeterminate`][Self::indeterminate].
        #[unsafe(method(setIndeterminate:))]
        #[unsafe(method_family = none)]
        pub unsafe fn setIndeterminate(&self, indeterminate: bool);

        #[deprecated]
        #[unsafe(method(maxLength))]
        #[unsafe(method_family = none)]
        pub unsafe fn maxLength(&self) -> c_int;

        /// Setter for [`maxLength`][Self::maxLength].
        #[deprecated]
        #[unsafe(method(setMaxLength:))]
        #[unsafe(method_family = none)]
        pub unsafe fn setMaxLength(&self, max_length: c_int);

        #[unsafe(method(multiple))]
        #[unsafe(method_family = none)]
        pub unsafe fn multiple(&self) -> bool;

        /// Setter for [`multiple`][Self::multiple].
        #[unsafe(method(setMultiple:))]
        #[unsafe(method_family = none)]
        pub unsafe fn setMultiple(&self, multiple: bool);

        #[deprecated]
        #[unsafe(method(name))]
        #[unsafe(method_family = none)]
        pub unsafe fn name(&self) -> Retained<NSString>;

        /// Setter for [`name`][Self::name].
        ///
        /// This is [copied][objc2_foundation::NSCopying::copy] when set.
        #[deprecated]
        #[unsafe(method(setName:))]
        #[unsafe(method_family = none)]
        pub unsafe fn setName(&self, name: Option<&NSString>);

        #[deprecated]
        #[unsafe(method(readOnly))]
        #[unsafe(method_family = none)]
        pub unsafe fn readOnly(&self) -> bool;

        /// Setter for [`readOnly`][Self::readOnly].
        #[deprecated]
        #[unsafe(method(setReadOnly:))]
        #[unsafe(method_family = none)]
        pub unsafe fn setReadOnly(&self, read_only: bool);

        #[deprecated]
        #[unsafe(method(size))]
        #[unsafe(method_family = none)]
        pub unsafe fn size(&self) -> Retained<NSString>;

        /// Setter for [`size`][Self::size].
        ///
        /// This is [copied][objc2_foundation::NSCopying::copy] when set.
        #[deprecated]
        #[unsafe(method(setSize:))]
        #[unsafe(method_family = none)]
        pub unsafe fn setSize(&self, size: Option<&NSString>);

        #[deprecated]
        #[unsafe(method(src))]
        #[unsafe(method_family = none)]
        pub unsafe fn src(&self) -> Retained<NSString>;

        /// Setter for [`src`][Self::src].
        ///
        /// This is [copied][objc2_foundation::NSCopying::copy] when set.
        #[deprecated]
        #[unsafe(method(setSrc:))]
        #[unsafe(method_family = none)]
        pub unsafe fn setSrc(&self, src: Option<&NSString>);

        #[deprecated]
        #[unsafe(method(type))]
        #[unsafe(method_family = none)]
        pub unsafe fn r#type(&self) -> Retained<NSString>;

        /// Setter for [`type`][Self::type].
        ///
        /// This is [copied][objc2_foundation::NSCopying::copy] when set.
        #[deprecated]
        #[unsafe(method(setType:))]
        #[unsafe(method_family = none)]
        pub unsafe fn setType(&self, r#type: Option<&NSString>);

        #[deprecated]
        #[unsafe(method(defaultValue))]
        #[unsafe(method_family = none)]
        pub unsafe fn defaultValue(&self) -> Retained<NSString>;

        /// Setter for [`defaultValue`][Self::defaultValue].
        ///
        /// This is [copied][objc2_foundation::NSCopying::copy] when set.
        #[deprecated]
        #[unsafe(method(setDefaultValue:))]
        #[unsafe(method_family = none)]
        pub unsafe fn setDefaultValue(&self, default_value: Option<&NSString>);

        #[deprecated]
        #[unsafe(method(value))]
        #[unsafe(method_family = none)]
        pub unsafe fn value(&self) -> Retained<NSString>;

        /// Setter for [`value`][Self::value].
        ///
        /// This is [copied][objc2_foundation::NSCopying::copy] when set.
        #[deprecated]
        #[unsafe(method(setValue:))]
        #[unsafe(method_family = none)]
        pub unsafe fn setValue(&self, value: Option<&NSString>);

        #[unsafe(method(willValidate))]
        #[unsafe(method_family = none)]
        pub unsafe fn willValidate(&self) -> bool;

        #[unsafe(method(selectionStart))]
        #[unsafe(method_family = none)]
        pub unsafe fn selectionStart(&self) -> c_int;

        /// Setter for [`selectionStart`][Self::selectionStart].
        #[unsafe(method(setSelectionStart:))]
        #[unsafe(method_family = none)]
        pub unsafe fn setSelectionStart(&self, selection_start: c_int);

        #[unsafe(method(selectionEnd))]
        #[unsafe(method_family = none)]
        pub unsafe fn selectionEnd(&self) -> c_int;

        /// Setter for [`selectionEnd`][Self::selectionEnd].
        #[unsafe(method(setSelectionEnd:))]
        #[unsafe(method_family = none)]
        pub unsafe fn setSelectionEnd(&self, selection_end: c_int);

        #[deprecated]
        #[unsafe(method(align))]
        #[unsafe(method_family = none)]
        pub unsafe fn align(&self) -> Retained<NSString>;

        /// Setter for [`align`][Self::align].
        ///
        /// This is [copied][objc2_foundation::NSCopying::copy] when set.
        #[deprecated]
        #[unsafe(method(setAlign:))]
        #[unsafe(method_family = none)]
        pub unsafe fn setAlign(&self, align: Option<&NSString>);

        #[deprecated]
        #[unsafe(method(useMap))]
        #[unsafe(method_family = none)]
        pub unsafe fn useMap(&self) -> Retained<NSString>;

        /// Setter for [`useMap`][Self::useMap].
        ///
        /// This is [copied][objc2_foundation::NSCopying::copy] when set.
        #[deprecated]
        #[unsafe(method(setUseMap:))]
        #[unsafe(method_family = none)]
        pub unsafe fn setUseMap(&self, use_map: Option<&NSString>);

        #[deprecated]
        #[unsafe(method(accessKey))]
        #[unsafe(method_family = none)]
        pub unsafe fn accessKey(&self) -> Retained<NSString>;

        /// Setter for [`accessKey`][Self::accessKey].
        ///
        /// This is [copied][objc2_foundation::NSCopying::copy] when set.
        #[deprecated]
        #[unsafe(method(setAccessKey:))]
        #[unsafe(method_family = none)]
        pub unsafe fn setAccessKey(&self, access_key: Option<&NSString>);

        #[unsafe(method(altDisplayString))]
        #[unsafe(method_family = none)]
        pub unsafe fn altDisplayString(&self) -> Retained<NSString>;

        #[unsafe(method(absoluteImageURL))]
        #[unsafe(method_family = none)]
        pub unsafe fn absoluteImageURL(&self) -> Retained<NSURL>;

        #[deprecated]
        #[unsafe(method(select))]
        #[unsafe(method_family = none)]
        pub unsafe fn select(&self);

        #[unsafe(method(setSelectionRange:end:))]
        #[unsafe(method_family = none)]
        pub unsafe fn setSelectionRange_end(&self, start: c_int, end: c_int);

        #[deprecated]
        #[unsafe(method(click))]
        #[unsafe(method_family = none)]
        pub unsafe fn click(&self);
    );
}

/// Methods declared on superclass `DOMObject`.
#[cfg(all(
    feature = "DOMElement",
    feature = "DOMHTMLElement",
    feature = "DOMNode",
    feature = "DOMObject",
    feature = "WebScriptObject"
))]
impl DOMHTMLInputElement {
    extern_methods!(
        #[deprecated]
        #[unsafe(method(init))]
        #[unsafe(method_family = init)]
        pub unsafe fn init(this: Allocated<Self>) -> Retained<Self>;
    );
}

/// Methods declared on superclass `NSObject`.
#[cfg(all(
    feature = "DOMElement",
    feature = "DOMHTMLElement",
    feature = "DOMNode",
    feature = "DOMObject",
    feature = "WebScriptObject"
))]
impl DOMHTMLInputElement {
    extern_methods!(
        #[unsafe(method(new))]
        #[unsafe(method_family = new)]
        pub unsafe fn new() -> Retained<Self>;
    );
}
