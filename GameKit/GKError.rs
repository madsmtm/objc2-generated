//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use core::ptr::NonNull;
use objc2::__framework_prelude::*;
use objc2_foundation::*;

use crate::*;

extern "C" {
    /// [Apple's documentation](https://developer.apple.com/documentation/gamekit/gkerrordomain?language=objc)
    pub static GKErrorDomain: &'static NSString;
}

/// [Apple's documentation](https://developer.apple.com/documentation/gamekit/gkerrorcode?language=objc)
// NS_ENUM
#[repr(transparent)]
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash, PartialOrd, Ord)]
pub struct GKErrorCode(pub NSInteger);
impl GKErrorCode {
    #[doc(alias = "GKErrorUnknown")]
    pub const Unknown: Self = Self(1);
    #[doc(alias = "GKErrorCancelled")]
    pub const Cancelled: Self = Self(2);
    #[doc(alias = "GKErrorCommunicationsFailure")]
    pub const CommunicationsFailure: Self = Self(3);
    #[doc(alias = "GKErrorUserDenied")]
    pub const UserDenied: Self = Self(4);
    #[doc(alias = "GKErrorInvalidCredentials")]
    pub const InvalidCredentials: Self = Self(5);
    #[doc(alias = "GKErrorNotAuthenticated")]
    pub const NotAuthenticated: Self = Self(6);
    #[doc(alias = "GKErrorAuthenticationInProgress")]
    pub const AuthenticationInProgress: Self = Self(7);
    #[doc(alias = "GKErrorInvalidPlayer")]
    pub const InvalidPlayer: Self = Self(8);
    #[doc(alias = "GKErrorScoreNotSet")]
    pub const ScoreNotSet: Self = Self(9);
    #[doc(alias = "GKErrorParentalControlsBlocked")]
    pub const ParentalControlsBlocked: Self = Self(10);
    #[doc(alias = "GKErrorPlayerStatusExceedsMaximumLength")]
    pub const PlayerStatusExceedsMaximumLength: Self = Self(11);
    #[doc(alias = "GKErrorPlayerStatusInvalid")]
    pub const PlayerStatusInvalid: Self = Self(12);
    #[doc(alias = "GKErrorMatchRequestInvalid")]
    pub const MatchRequestInvalid: Self = Self(13);
    #[doc(alias = "GKErrorUnderage")]
    pub const Underage: Self = Self(14);
    #[doc(alias = "GKErrorGameUnrecognized")]
    pub const GameUnrecognized: Self = Self(15);
    #[doc(alias = "GKErrorNotSupported")]
    pub const NotSupported: Self = Self(16);
    #[doc(alias = "GKErrorInvalidParameter")]
    pub const InvalidParameter: Self = Self(17);
    #[doc(alias = "GKErrorUnexpectedConnection")]
    pub const UnexpectedConnection: Self = Self(18);
    #[doc(alias = "GKErrorChallengeInvalid")]
    #[deprecated]
    pub const ChallengeInvalid: Self = Self(19);
    #[doc(alias = "GKErrorTurnBasedMatchDataTooLarge")]
    pub const TurnBasedMatchDataTooLarge: Self = Self(20);
    #[doc(alias = "GKErrorTurnBasedTooManySessions")]
    pub const TurnBasedTooManySessions: Self = Self(21);
    #[doc(alias = "GKErrorTurnBasedInvalidParticipant")]
    pub const TurnBasedInvalidParticipant: Self = Self(22);
    #[doc(alias = "GKErrorTurnBasedInvalidTurn")]
    pub const TurnBasedInvalidTurn: Self = Self(23);
    #[doc(alias = "GKErrorTurnBasedInvalidState")]
    pub const TurnBasedInvalidState: Self = Self(24);
    #[doc(alias = "GKErrorInvitationsDisabled")]
    pub const InvitationsDisabled: Self = Self(25);
    #[doc(alias = "GKErrorPlayerPhotoFailure")]
    pub const PlayerPhotoFailure: Self = Self(26);
    #[doc(alias = "GKErrorUbiquityContainerUnavailable")]
    pub const UbiquityContainerUnavailable: Self = Self(27);
    #[doc(alias = "GKErrorMatchNotConnected")]
    pub const MatchNotConnected: Self = Self(28);
    #[doc(alias = "GKErrorGameSessionRequestInvalid")]
    pub const GameSessionRequestInvalid: Self = Self(29);
    #[doc(alias = "GKErrorRestrictedToAutomatch")]
    pub const RestrictedToAutomatch: Self = Self(30);
    #[doc(alias = "GKErrorAPINotAvailable")]
    pub const APINotAvailable: Self = Self(31);
    #[doc(alias = "GKErrorNotAuthorized")]
    pub const NotAuthorized: Self = Self(32);
    #[doc(alias = "GKErrorConnectionTimeout")]
    pub const ConnectionTimeout: Self = Self(33);
    #[doc(alias = "GKErrorAPIObsolete")]
    pub const APIObsolete: Self = Self(34);
    #[doc(alias = "GKErrorICloudUnavailable")]
    pub const ICloudUnavailable: Self = Self(35);
    #[doc(alias = "GKErrorLockdownMode")]
    pub const LockdownMode: Self = Self(36);
    #[doc(alias = "GKErrorAppUnlisted")]
    pub const AppUnlisted: Self = Self(37);
    #[doc(alias = "GKErrorDebugMode")]
    pub const DebugMode: Self = Self(38);
    #[doc(alias = "GKErrorFriendListDescriptionMissing")]
    pub const FriendListDescriptionMissing: Self = Self(100);
    #[doc(alias = "GKErrorFriendListRestricted")]
    pub const FriendListRestricted: Self = Self(101);
    #[doc(alias = "GKErrorFriendListDenied")]
    pub const FriendListDenied: Self = Self(102);
    #[doc(alias = "GKErrorFriendRequestNotAvailable")]
    pub const FriendRequestNotAvailable: Self = Self(103);
}

unsafe impl Encode for GKErrorCode {
    const ENCODING: Encoding = NSInteger::ENCODING;
}

unsafe impl RefEncode for GKErrorCode {
    const ENCODING_REF: Encoding = Encoding::Pointer(&Self::ENCODING);
}
