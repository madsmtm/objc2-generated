// This file has been automatically generated by `objc2`'s `header-translator`.
// DO NOT EDIT

#![allow(unused_imports)]
#![allow(deprecated)]
#![allow(non_snake_case)]
#![allow(non_camel_case_types)]
#![allow(non_upper_case_globals)]
#![allow(missing_docs)]
#![allow(clippy::too_many_arguments)]
#![allow(clippy::type_complexity)]
#![allow(clippy::upper_case_acronyms)]
#![allow(clippy::identity_op)]
#![allow(clippy::missing_safety_doc)]
#![allow(clippy::doc_lazy_continuation)]
#![allow(rustdoc::broken_intra_doc_links)]
#![allow(rustdoc::bare_urls)]
#![allow(rustdoc::unportable_markdown)]
#![allow(rustdoc::invalid_html_tags)]

#[link(name = "GameKit", kind = "framework")]
extern "C" {}

#[cfg(feature = "GKAccessPoint")]
#[path = "GKAccessPoint.rs"]
mod __GKAccessPoint;
#[cfg(feature = "GKAchievement")]
#[path = "GKAchievement.rs"]
mod __GKAchievement;
#[cfg(feature = "GKAchievementDescription")]
#[path = "GKAchievementDescription.rs"]
mod __GKAchievementDescription;
#[cfg(feature = "GKAchievementViewController")]
#[path = "GKAchievementViewController.rs"]
mod __GKAchievementViewController;
#[cfg(feature = "GKBasePlayer")]
#[path = "GKBasePlayer.rs"]
mod __GKBasePlayer;
#[cfg(feature = "GKChallenge")]
#[path = "GKChallenge.rs"]
mod __GKChallenge;
#[cfg(feature = "GKChallengeDefinition")]
#[path = "GKChallengeDefinition.rs"]
mod __GKChallengeDefinition;
#[cfg(feature = "GKChallengeEventHandler")]
#[path = "GKChallengeEventHandler.rs"]
mod __GKChallengeEventHandler;
#[cfg(feature = "GKChallengesViewController")]
#[path = "GKChallengesViewController.rs"]
mod __GKChallengesViewController;
#[cfg(feature = "GKCloudPlayer")]
#[path = "GKCloudPlayer.rs"]
mod __GKCloudPlayer;
#[cfg(feature = "GKDefines")]
#[path = "GKDefines.rs"]
mod __GKDefines;
#[cfg(feature = "GKDialogController")]
#[path = "GKDialogController.rs"]
mod __GKDialogController;
#[cfg(feature = "GKError")]
#[path = "GKError.rs"]
mod __GKError;
#[cfg(feature = "GKEventListener")]
#[path = "GKEventListener.rs"]
mod __GKEventListener;
#[cfg(feature = "GKFriendRequestComposeViewController")]
#[path = "GKFriendRequestComposeViewController.rs"]
mod __GKFriendRequestComposeViewController;
#[cfg(feature = "GKGameActivity")]
#[path = "GKGameActivity.rs"]
mod __GKGameActivity;
#[cfg(feature = "GKGameActivityDefinition")]
#[path = "GKGameActivityDefinition.rs"]
mod __GKGameActivityDefinition;
#[cfg(feature = "GKGameActivityListener")]
#[path = "GKGameActivityListener.rs"]
mod __GKGameActivityListener;
#[cfg(feature = "GKGameActivityPlayStyle")]
#[path = "GKGameActivityPlayStyle.rs"]
mod __GKGameActivityPlayStyle;
#[cfg(feature = "GKGameActivityState")]
#[path = "GKGameActivityState.rs"]
mod __GKGameActivityState;
#[cfg(feature = "GKGameCenterViewController")]
#[path = "GKGameCenterViewController.rs"]
mod __GKGameCenterViewController;
#[cfg(feature = "GKGameSession")]
#[path = "GKGameSession.rs"]
mod __GKGameSession;
#[cfg(feature = "GKGameSessionError")]
#[path = "GKGameSessionError.rs"]
mod __GKGameSessionError;
#[cfg(feature = "GKGameSessionEventListener")]
#[path = "GKGameSessionEventListener.rs"]
mod __GKGameSessionEventListener;
#[cfg(feature = "GKGameSessionSharingViewController")]
#[path = "GKGameSessionSharingViewController.rs"]
mod __GKGameSessionSharingViewController;
#[cfg(feature = "GKLeaderboard")]
#[path = "GKLeaderboard.rs"]
mod __GKLeaderboard;
#[cfg(feature = "GKLeaderboardEntry")]
#[path = "GKLeaderboardEntry.rs"]
mod __GKLeaderboardEntry;
#[cfg(feature = "GKLeaderboardScore")]
#[path = "GKLeaderboardScore.rs"]
mod __GKLeaderboardScore;
#[cfg(feature = "GKLeaderboardSet")]
#[path = "GKLeaderboardSet.rs"]
mod __GKLeaderboardSet;
#[cfg(feature = "GKLeaderboardViewController")]
#[path = "GKLeaderboardViewController.rs"]
mod __GKLeaderboardViewController;
#[cfg(feature = "GKLocalPlayer")]
#[path = "GKLocalPlayer.rs"]
mod __GKLocalPlayer;
#[cfg(feature = "GKMatch")]
#[path = "GKMatch.rs"]
mod __GKMatch;
#[cfg(feature = "GKMatchmaker")]
#[path = "GKMatchmaker.rs"]
mod __GKMatchmaker;
#[cfg(feature = "GKMatchmakerViewController")]
#[path = "GKMatchmakerViewController.rs"]
mod __GKMatchmakerViewController;
#[cfg(feature = "GKNotificationBanner")]
#[path = "GKNotificationBanner.rs"]
mod __GKNotificationBanner;
#[cfg(feature = "GKPeerPickerController")]
#[path = "GKPeerPickerController.rs"]
mod __GKPeerPickerController;
#[cfg(feature = "GKPlayer")]
#[path = "GKPlayer.rs"]
mod __GKPlayer;
#[cfg(feature = "GKPublicConstants")]
#[path = "GKPublicConstants.rs"]
mod __GKPublicConstants;
#[cfg(feature = "GKPublicProtocols")]
#[path = "GKPublicProtocols.rs"]
mod __GKPublicProtocols;
#[cfg(feature = "GKReleaseState")]
#[path = "GKReleaseState.rs"]
mod __GKReleaseState;
#[cfg(feature = "GKSavedGame")]
#[path = "GKSavedGame.rs"]
mod __GKSavedGame;
#[cfg(feature = "GKSavedGameListener")]
#[path = "GKSavedGameListener.rs"]
mod __GKSavedGameListener;
#[cfg(feature = "GKScore")]
#[path = "GKScore.rs"]
mod __GKScore;
#[cfg(feature = "GKSession")]
#[path = "GKSession.rs"]
mod __GKSession;
#[cfg(feature = "GKSessionError")]
#[path = "GKSessionError.rs"]
mod __GKSessionError;
#[cfg(feature = "GKTurnBasedMatch")]
#[path = "GKTurnBasedMatch.rs"]
mod __GKTurnBasedMatch;
#[cfg(feature = "GKTurnBasedMatchmakerViewController")]
#[path = "GKTurnBasedMatchmakerViewController.rs"]
mod __GKTurnBasedMatchmakerViewController;
#[cfg(feature = "GKVoiceChat")]
#[path = "GKVoiceChat.rs"]
mod __GKVoiceChat;
#[cfg(feature = "GKVoiceChatService")]
#[path = "GKVoiceChatService.rs"]
mod __GKVoiceChatService;

#[cfg(feature = "GKAccessPoint")]
pub use self::__GKAccessPoint::GKAccessPoint;
#[cfg(feature = "GKAccessPoint")]
pub use self::__GKAccessPoint::GKAccessPointLocation;
#[cfg(feature = "GKAchievement")]
pub use self::__GKAchievement::GKAchievement;
#[cfg(feature = "GKAchievementDescription")]
pub use self::__GKAchievementDescription::GKAchievementDescription;
#[cfg(all(
    feature = "GKAchievementViewController",
    feature = "GKGameCenterViewController",
    feature = "objc2-app-kit"
))]
#[cfg(target_os = "macos")]
pub use self::__GKAchievementViewController::GKAchievementViewController;
#[cfg(feature = "GKAchievementViewController")]
pub use self::__GKAchievementViewController::GKAchievementViewControllerDelegate;
#[cfg(feature = "GKBasePlayer")]
pub use self::__GKBasePlayer::GKBasePlayer;
#[cfg(feature = "GKChallenge")]
pub use self::__GKChallenge::GKAchievementChallenge;
#[cfg(feature = "GKChallenge")]
pub use self::__GKChallenge::GKChallenge;
#[cfg(all(feature = "GKChallenge", feature = "block2", feature = "objc2-app-kit"))]
#[cfg(target_os = "macos")]
pub use self::__GKChallenge::GKChallengeComposeCompletionBlock;
#[cfg(all(
    feature = "GKBasePlayer",
    feature = "GKChallenge",
    feature = "GKPlayer",
    feature = "block2",
    feature = "objc2-app-kit"
))]
#[cfg(target_os = "macos")]
pub use self::__GKChallenge::GKChallengeComposeHandler;
#[cfg(feature = "GKChallenge")]
pub use self::__GKChallenge::GKChallengeState;
#[cfg(feature = "GKChallenge")]
pub use self::__GKChallenge::GKScoreChallenge;
#[cfg(feature = "GKChallengeDefinition")]
pub use self::__GKChallengeDefinition::GKChallengeDefinition;
#[cfg(feature = "GKChallengeEventHandler")]
pub use self::__GKChallengeEventHandler::GKChallengeEventHandler;
#[cfg(feature = "GKChallengeEventHandler")]
pub use self::__GKChallengeEventHandler::GKChallengeEventHandlerDelegate;
#[cfg(all(feature = "GKChallengesViewController", feature = "objc2-app-kit"))]
#[cfg(target_os = "macos")]
pub use self::__GKChallengesViewController::GKChallengesViewController;
#[cfg(feature = "GKChallengesViewController")]
pub use self::__GKChallengesViewController::GKChallengesViewControllerDelegate;
#[cfg(all(feature = "GKBasePlayer", feature = "GKCloudPlayer"))]
pub use self::__GKCloudPlayer::GKCloudPlayer;
#[cfg(feature = "GKDefines")]
pub use self::__GKDefines::GKMatchProperties;
#[cfg(all(feature = "GKDialogController", feature = "objc2-app-kit"))]
#[cfg(target_os = "macos")]
pub use self::__GKDialogController::GKDialogController;
#[cfg(feature = "GKDialogController")]
pub use self::__GKDialogController::GKViewController;
#[cfg(feature = "GKError")]
pub use self::__GKError::GKErrorCode;
#[cfg(feature = "GKError")]
pub use self::__GKError::GKErrorDomain;
#[cfg(feature = "GKEventListener")]
pub use self::__GKEventListener::GKChallengeListener;
#[cfg(all(
    feature = "GKFriendRequestComposeViewController",
    feature = "objc2-app-kit"
))]
#[cfg(target_os = "macos")]
pub use self::__GKFriendRequestComposeViewController::GKFriendRequestComposeViewController;
#[cfg(feature = "GKFriendRequestComposeViewController")]
pub use self::__GKFriendRequestComposeViewController::GKFriendRequestComposeViewControllerDelegate;
#[cfg(feature = "GKGameActivity")]
pub use self::__GKGameActivity::GKGameActivity;
#[cfg(feature = "GKGameActivityDefinition")]
pub use self::__GKGameActivityDefinition::GKGameActivityDefinition;
#[cfg(feature = "GKGameActivityListener")]
pub use self::__GKGameActivityListener::GKGameActivityListener;
#[cfg(feature = "GKGameActivityPlayStyle")]
pub use self::__GKGameActivityPlayStyle::GKGameActivityPlayStyle;
#[cfg(feature = "GKGameActivityState")]
pub use self::__GKGameActivityState::GKGameActivityState;
#[cfg(feature = "GKGameCenterViewController")]
pub use self::__GKGameCenterViewController::GKGameCenterControllerDelegate;
#[cfg(all(feature = "GKGameCenterViewController", feature = "objc2-app-kit"))]
#[cfg(target_os = "macos")]
pub use self::__GKGameCenterViewController::GKGameCenterViewController;
#[cfg(feature = "GKGameCenterViewController")]
pub use self::__GKGameCenterViewController::GKGameCenterViewControllerState;
#[cfg(feature = "GKGameSession")]
pub use self::__GKGameSession::GKConnectionState;
#[cfg(feature = "GKGameSession")]
pub use self::__GKGameSession::GKGameSession;
#[cfg(feature = "GKGameSession")]
pub use self::__GKGameSession::GKTransportType;
#[cfg(feature = "GKGameSessionError")]
pub use self::__GKGameSessionError::GKGameSessionErrorCode;
#[cfg(feature = "GKGameSessionError")]
pub use self::__GKGameSessionError::GKGameSessionErrorDomain;
#[cfg(feature = "GKGameSessionEventListener")]
pub use self::__GKGameSessionEventListener::GKGameSessionEventListener;
#[cfg(feature = "GKLeaderboard")]
pub use self::__GKLeaderboard::GKLeaderboard;
#[cfg(feature = "GKLeaderboard")]
pub use self::__GKLeaderboard::GKLeaderboardPlayerScope;
#[cfg(feature = "GKLeaderboard")]
pub use self::__GKLeaderboard::GKLeaderboardTimeScope;
#[cfg(feature = "GKLeaderboard")]
pub use self::__GKLeaderboard::GKLeaderboardType;
#[cfg(feature = "GKLeaderboardEntry")]
pub use self::__GKLeaderboardEntry::GKLeaderboardEntry;
#[cfg(feature = "GKLeaderboardScore")]
pub use self::__GKLeaderboardScore::GKLeaderboardScore;
#[cfg(feature = "GKLeaderboardSet")]
pub use self::__GKLeaderboardSet::GKLeaderboardSet;
#[cfg(all(
    feature = "GKGameCenterViewController",
    feature = "GKLeaderboardViewController",
    feature = "objc2-app-kit"
))]
#[cfg(target_os = "macos")]
pub use self::__GKLeaderboardViewController::GKLeaderboardViewController;
#[cfg(feature = "GKLeaderboardViewController")]
pub use self::__GKLeaderboardViewController::GKLeaderboardViewControllerDelegate;
#[cfg(feature = "GKLocalPlayer")]
pub use self::__GKLocalPlayer::GKFriendsAuthorizationStatus;
#[cfg(all(
    feature = "GKBasePlayer",
    feature = "GKLocalPlayer",
    feature = "GKPlayer"
))]
pub use self::__GKLocalPlayer::GKLocalPlayer;
#[cfg(all(
    feature = "GKEventListener",
    feature = "GKGameActivityListener",
    feature = "GKLocalPlayer",
    feature = "GKMatchmaker",
    feature = "GKSavedGameListener",
    feature = "GKTurnBasedMatch"
))]
pub use self::__GKLocalPlayer::GKLocalPlayerListener;
#[cfg(feature = "GKLocalPlayer")]
pub use self::__GKLocalPlayer::GKPlayerAuthenticationDidChangeNotificationName;
#[cfg(feature = "GKMatch")]
pub use self::__GKMatch::GKMatch;
#[cfg(feature = "GKMatch")]
pub use self::__GKMatch::GKMatchDelegate;
#[cfg(feature = "GKMatch")]
pub use self::__GKMatch::GKMatchSendDataMode;
#[cfg(feature = "GKMatch")]
pub use self::__GKMatch::GKPlayerConnectionState;
#[cfg(feature = "GKMatchmaker")]
pub use self::__GKMatchmaker::GKInvite;
#[cfg(feature = "GKMatchmaker")]
pub use self::__GKMatchmaker::GKInviteEventListener;
#[cfg(feature = "GKMatchmaker")]
pub use self::__GKMatchmaker::GKInviteRecipientResponse;
#[cfg(feature = "GKMatchmaker")]
pub use self::__GKMatchmaker::GKInviteeResponse;
#[cfg(feature = "GKMatchmaker")]
pub use self::__GKMatchmaker::GKMatchRequest;
#[cfg(feature = "GKMatchmaker")]
pub use self::__GKMatchmaker::GKMatchType;
#[cfg(feature = "GKMatchmaker")]
pub use self::__GKMatchmaker::GKMatchedPlayers;
#[cfg(feature = "GKMatchmaker")]
pub use self::__GKMatchmaker::GKMatchmaker;
#[cfg(all(feature = "GKMatchmakerViewController", feature = "objc2-app-kit"))]
#[cfg(target_os = "macos")]
pub use self::__GKMatchmakerViewController::GKMatchmakerViewController;
#[cfg(feature = "GKMatchmakerViewController")]
pub use self::__GKMatchmakerViewController::GKMatchmakerViewControllerDelegate;
#[cfg(feature = "GKMatchmakerViewController")]
pub use self::__GKMatchmakerViewController::GKMatchmakingMode;
#[cfg(feature = "GKNotificationBanner")]
pub use self::__GKNotificationBanner::GKNotificationBanner;
#[cfg(feature = "GKPlayer")]
pub use self::__GKPlayer::GKPhotoSize;
#[cfg(all(feature = "GKBasePlayer", feature = "GKPlayer"))]
pub use self::__GKPlayer::GKPlayer;
#[cfg(feature = "GKPlayer")]
pub use self::__GKPlayer::GKPlayerDidChangeNotificationName;
#[cfg(feature = "GKPlayer")]
pub use self::__GKPlayer::GKPlayerIDNoLongerAvailable;
#[cfg(feature = "GKPublicConstants")]
pub use self::__GKPublicConstants::GKPeerConnectionState;
#[cfg(feature = "GKPublicConstants")]
pub use self::__GKPublicConstants::GKSendDataMode;
#[cfg(feature = "GKPublicConstants")]
pub use self::__GKPublicConstants::GKSessionMode;
#[cfg(feature = "GKPublicConstants")]
pub use self::__GKPublicConstants::GKVoiceChatServiceError;
#[cfg(feature = "GKPublicConstants")]
pub use self::__GKPublicConstants::GKVoiceChatServiceErrorDomain;
#[cfg(feature = "GKPublicProtocols")]
pub use self::__GKPublicProtocols::GKSessionDelegate;
#[cfg(feature = "GKPublicProtocols")]
pub use self::__GKPublicProtocols::GKVoiceChatClient;
#[cfg(feature = "GKReleaseState")]
pub use self::__GKReleaseState::GKReleaseState;
#[cfg(feature = "GKSavedGame")]
pub use self::__GKSavedGame::GKSavedGame;
#[cfg(feature = "GKSavedGameListener")]
pub use self::__GKSavedGameListener::GKSavedGameListener;
#[cfg(feature = "GKScore")]
pub use self::__GKScore::GKScore;
#[cfg(feature = "GKSession")]
pub use self::__GKSession::GKSession;
#[cfg(feature = "GKSessionError")]
pub use self::__GKSessionError::GKSessionError;
#[cfg(feature = "GKSessionError")]
pub use self::__GKSessionError::GKSessionErrorDomain;
#[cfg(feature = "GKTurnBasedMatch")]
pub use self::__GKTurnBasedMatch::GKExchangeTimeoutDefault;
#[cfg(feature = "GKTurnBasedMatch")]
pub use self::__GKTurnBasedMatch::GKExchangeTimeoutNone;
#[cfg(feature = "GKTurnBasedMatch")]
pub use self::__GKTurnBasedMatch::GKTurnBasedEventHandler;
#[cfg(feature = "GKTurnBasedMatch")]
pub use self::__GKTurnBasedMatch::GKTurnBasedEventHandlerDelegate;
#[cfg(feature = "GKTurnBasedMatch")]
pub use self::__GKTurnBasedMatch::GKTurnBasedEventListener;
#[cfg(feature = "GKTurnBasedMatch")]
pub use self::__GKTurnBasedMatch::GKTurnBasedExchange;
#[cfg(feature = "GKTurnBasedMatch")]
pub use self::__GKTurnBasedMatch::GKTurnBasedExchangeReply;
#[cfg(feature = "GKTurnBasedMatch")]
pub use self::__GKTurnBasedMatch::GKTurnBasedExchangeStatus;
#[cfg(feature = "GKTurnBasedMatch")]
pub use self::__GKTurnBasedMatch::GKTurnBasedMatch;
#[cfg(feature = "GKTurnBasedMatch")]
pub use self::__GKTurnBasedMatch::GKTurnBasedMatchOutcome;
#[cfg(feature = "GKTurnBasedMatch")]
pub use self::__GKTurnBasedMatch::GKTurnBasedMatchStatus;
#[cfg(feature = "GKTurnBasedMatch")]
pub use self::__GKTurnBasedMatch::GKTurnBasedParticipant;
#[cfg(feature = "GKTurnBasedMatch")]
pub use self::__GKTurnBasedMatch::GKTurnBasedParticipantStatus;
#[cfg(feature = "GKTurnBasedMatch")]
pub use self::__GKTurnBasedMatch::GKTurnTimeoutDefault;
#[cfg(feature = "GKTurnBasedMatch")]
pub use self::__GKTurnBasedMatch::GKTurnTimeoutNone;
#[cfg(all(
    feature = "GKTurnBasedMatchmakerViewController",
    feature = "objc2-app-kit"
))]
#[cfg(target_os = "macos")]
pub use self::__GKTurnBasedMatchmakerViewController::GKTurnBasedMatchmakerViewController;
#[cfg(feature = "GKTurnBasedMatchmakerViewController")]
pub use self::__GKTurnBasedMatchmakerViewController::GKTurnBasedMatchmakerViewControllerDelegate;
#[cfg(feature = "GKVoiceChat")]
pub use self::__GKVoiceChat::GKVoiceChat;
#[cfg(feature = "GKVoiceChat")]
pub use self::__GKVoiceChat::GKVoiceChatPlayerState;
#[cfg(feature = "GKVoiceChatService")]
pub use self::__GKVoiceChatService::GKVoiceChatService;
