//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use core::ffi::*;
use core::ptr::NonNull;
use objc2::__framework_prelude::*;
use objc2_foundation::*;

use crate::*;

extern_protocol!(
    /// [Apple's documentation](https://developer.apple.com/documentation/gamekit/gkgamesessioneventlistener?language=objc)
    #[deprecated]
    pub unsafe trait GKGameSessionEventListener: NSObjectProtocol {
        #[cfg(all(
            feature = "GKBasePlayer",
            feature = "GKCloudPlayer",
            feature = "GKGameSession"
        ))]
        #[deprecated]
        #[optional]
        #[unsafe(method(session:didAddPlayer:))]
        #[unsafe(method_family = none)]
        unsafe fn session_didAddPlayer(&self, session: &GKGameSession, player: &GKCloudPlayer);

        #[cfg(all(
            feature = "GKBasePlayer",
            feature = "GKCloudPlayer",
            feature = "GKGameSession"
        ))]
        #[deprecated]
        #[optional]
        #[unsafe(method(session:didRemovePlayer:))]
        #[unsafe(method_family = none)]
        unsafe fn session_didRemovePlayer(&self, session: &GKGameSession, player: &GKCloudPlayer);

        #[cfg(all(
            feature = "GKBasePlayer",
            feature = "GKCloudPlayer",
            feature = "GKGameSession"
        ))]
        #[deprecated]
        #[optional]
        #[unsafe(method(session:player:didChangeConnectionState:))]
        #[unsafe(method_family = none)]
        unsafe fn session_player_didChangeConnectionState(
            &self,
            session: &GKGameSession,
            player: &GKCloudPlayer,
            new_state: GKConnectionState,
        );

        #[cfg(all(
            feature = "GKBasePlayer",
            feature = "GKCloudPlayer",
            feature = "GKGameSession"
        ))]
        #[deprecated]
        #[optional]
        #[unsafe(method(session:player:didSaveData:))]
        #[unsafe(method_family = none)]
        unsafe fn session_player_didSaveData(
            &self,
            session: &GKGameSession,
            player: &GKCloudPlayer,
            data: &NSData,
        );

        #[cfg(all(
            feature = "GKBasePlayer",
            feature = "GKCloudPlayer",
            feature = "GKGameSession"
        ))]
        #[deprecated]
        #[optional]
        #[unsafe(method(session:didReceiveData:fromPlayer:))]
        #[unsafe(method_family = none)]
        unsafe fn session_didReceiveData_fromPlayer(
            &self,
            session: &GKGameSession,
            data: &NSData,
            player: &GKCloudPlayer,
        );

        #[cfg(all(
            feature = "GKBasePlayer",
            feature = "GKCloudPlayer",
            feature = "GKGameSession"
        ))]
        #[deprecated]
        #[optional]
        #[unsafe(method(session:didReceiveMessage:withData:fromPlayer:))]
        #[unsafe(method_family = none)]
        unsafe fn session_didReceiveMessage_withData_fromPlayer(
            &self,
            session: &GKGameSession,
            message: &NSString,
            data: &NSData,
            player: &GKCloudPlayer,
        );
    }
);

/// GKGameSessionEventListener.
#[deprecated = "For real-time matches, use GKMatchmakerViewController. For turn-based matches, use GKTurnBasedMatchmakerViewController."]
#[cfg(feature = "GKGameSession")]
impl GKGameSession {
    extern_methods!(
        /// # Safety
        ///
        /// `listener` must implement GKGameSessionEventListener.
        #[deprecated]
        #[unsafe(method(addEventListener:))]
        #[unsafe(method_family = none)]
        pub unsafe fn addEventListener(listener: &NSObject);

        /// # Safety
        ///
        /// `listener` must implement GKGameSessionEventListener.
        #[deprecated]
        #[unsafe(method(removeEventListener:))]
        #[unsafe(method_family = none)]
        pub unsafe fn removeEventListener(listener: &NSObject);
    );
}
