// This file has been automatically generated by `objc2`'s `header-translator`.
// DO NOT EDIT

#![allow(unused_imports)]
#![allow(deprecated)]
#![allow(non_snake_case)]
#![allow(non_camel_case_types)]
#![allow(non_upper_case_globals)]
#![allow(missing_docs)]
#![allow(clippy::too_many_arguments)]
#![allow(clippy::type_complexity)]
#![allow(clippy::upper_case_acronyms)]
#![allow(clippy::identity_op)]
#![allow(clippy::missing_safety_doc)]
#![allow(clippy::doc_lazy_continuation)]
#![allow(rustdoc::broken_intra_doc_links)]
#![allow(rustdoc::bare_urls)]
#![allow(rustdoc::invalid_html_tags)]

#[link(name = "MediaExtension", kind = "framework")]
extern "C" {}

#[cfg(feature = "MEError")]
#[path = "MEError.rs"]
mod __MEError;
#[cfg(feature = "MEExtensionPlugin")]
#[path = "MEExtensionPlugin.rs"]
mod __MEExtensionPlugin;
#[cfg(feature = "MEFormatReader")]
#[path = "MEFormatReader.rs"]
mod __MEFormatReader;
#[cfg(feature = "MERAWProcessor")]
#[path = "MERAWProcessor.rs"]
mod __MERAWProcessor;
#[cfg(feature = "MEVideoDecoder")]
#[path = "MEVideoDecoder.rs"]
mod __MEVideoDecoder;

#[cfg(feature = "MEError")]
pub use self::__MEError::MEError;
#[cfg(feature = "MEError")]
pub use self::__MEError::MediaExtensionErrorDomain;
#[cfg(feature = "MEFormatReader")]
pub use self::__MEFormatReader::MEByteSource;
#[cfg(feature = "MEFormatReader")]
pub use self::__MEFormatReader::MEEstimatedSampleLocation;
#[cfg(feature = "MEFormatReader")]
pub use self::__MEFormatReader::MEFileInfo;
#[cfg(feature = "MEFormatReader")]
pub use self::__MEFormatReader::MEFileInfoFragmentsStatus;
#[cfg(feature = "MEFormatReader")]
pub use self::__MEFormatReader::MEFormatReader;
#[cfg(feature = "MEFormatReader")]
pub use self::__MEFormatReader::MEFormatReaderExtension;
#[cfg(feature = "MEFormatReader")]
pub use self::__MEFormatReader::MEFormatReaderInstantiationOptions;
#[cfg(feature = "MEFormatReader")]
pub use self::__MEFormatReader::MEFormatReaderParseAdditionalFragmentsStatus;
#[cfg(feature = "MEFormatReader")]
pub use self::__MEFormatReader::MEHEVCDependencyInfo;
#[cfg(feature = "MEFormatReader")]
pub use self::__MEFormatReader::MESampleCursor;
#[cfg(feature = "MEFormatReader")]
pub use self::__MEFormatReader::MESampleCursorChunk;
#[cfg(feature = "MEFormatReader")]
pub use self::__MEFormatReader::MESampleLocation;
#[cfg(feature = "MEFormatReader")]
pub use self::__MEFormatReader::METrackInfo;
#[cfg(feature = "MEFormatReader")]
pub use self::__MEFormatReader::METrackReader;
#[cfg(feature = "MERAWProcessor")]
pub use self::__MERAWProcessor::MERAWProcessingBooleanParameter;
#[cfg(feature = "MERAWProcessor")]
pub use self::__MERAWProcessor::MERAWProcessingFloatParameter;
#[cfg(feature = "MERAWProcessor")]
pub use self::__MERAWProcessor::MERAWProcessingIntegerParameter;
#[cfg(feature = "MERAWProcessor")]
pub use self::__MERAWProcessor::MERAWProcessingListElementParameter;
#[cfg(feature = "MERAWProcessor")]
pub use self::__MERAWProcessor::MERAWProcessingListParameter;
#[cfg(feature = "MERAWProcessor")]
pub use self::__MERAWProcessor::MERAWProcessingParameter;
#[cfg(feature = "MERAWProcessor")]
pub use self::__MERAWProcessor::MERAWProcessingSubGroupParameter;
#[cfg(feature = "MERAWProcessor")]
pub use self::__MERAWProcessor::MERAWProcessor;
#[cfg(feature = "MERAWProcessor")]
pub use self::__MERAWProcessor::MERAWProcessorExtension;
#[cfg(feature = "MERAWProcessor")]
pub use self::__MERAWProcessor::MERAWProcessorPixelBufferManager;
#[cfg(feature = "MERAWProcessor")]
pub use self::__MERAWProcessor::MERAWProcessorReadyForMoreMediaDataDidChangeNotification;
#[cfg(feature = "MERAWProcessor")]
pub use self::__MERAWProcessor::MERAWProcessorValuesDidChangeNotification;
#[cfg(feature = "MEVideoDecoder")]
pub use self::__MEVideoDecoder::MEDecodeFrameOptions;
#[cfg(feature = "MEVideoDecoder")]
pub use self::__MEVideoDecoder::MEDecodeFrameStatus;
#[cfg(feature = "MEVideoDecoder")]
pub use self::__MEVideoDecoder::MEVideoDecoder;
#[cfg(feature = "MEVideoDecoder")]
pub use self::__MEVideoDecoder::MEVideoDecoderExtension;
#[cfg(feature = "MEVideoDecoder")]
pub use self::__MEVideoDecoder::MEVideoDecoderPixelBufferManager;
#[cfg(feature = "MEVideoDecoder")]
pub use self::__MEVideoDecoder::MEVideoDecoderReadyForMoreMediaDataDidChangeNotification;
