// This file has been automatically generated by `objc2`'s `header-translator`.
// DO NOT EDIT

#![allow(unused_imports)]
#![allow(deprecated)]
#![allow(non_snake_case)]
#![allow(non_camel_case_types)]
#![allow(non_upper_case_globals)]
#![allow(missing_docs)]
#![allow(clippy::too_many_arguments)]
#![allow(clippy::type_complexity)]
#![allow(clippy::upper_case_acronyms)]
#![allow(clippy::identity_op)]
#![allow(clippy::missing_safety_doc)]
#![allow(clippy::doc_lazy_continuation)]
#![allow(rustdoc::broken_intra_doc_links)]
#![allow(rustdoc::bare_urls)]
#![allow(rustdoc::invalid_html_tags)]

#[link(name = "TVMLKit", kind = "framework")]
extern "C" {}

#[cfg(feature = "TVApplicationController")]
#[path = "TVApplicationController.rs"]
mod __TVApplicationController;
#[cfg(feature = "TVBrowserViewController")]
#[path = "TVBrowserViewController.rs"]
mod __TVBrowserViewController;
#[cfg(feature = "TVColor")]
#[path = "TVColor.rs"]
mod __TVColor;
#[cfg(feature = "TVDocumentViewController")]
#[path = "TVDocumentViewController.rs"]
mod __TVDocumentViewController;
#[cfg(feature = "TVElementFactory")]
#[path = "TVElementFactory.rs"]
mod __TVElementFactory;
#[cfg(feature = "TVImageElement")]
#[path = "TVImageElement.rs"]
mod __TVImageElement;
#[cfg(feature = "TVInterfaceFactory")]
#[path = "TVInterfaceFactory.rs"]
mod __TVInterfaceFactory;
#[cfg(feature = "TVMLKitDefines")]
#[path = "TVMLKitDefines.rs"]
mod __TVMLKitDefines;
#[cfg(feature = "TVMLKitErrors")]
#[path = "TVMLKitErrors.rs"]
mod __TVMLKitErrors;
#[cfg(feature = "TVPlayback")]
#[path = "TVPlayback.rs"]
mod __TVPlayback;
#[cfg(feature = "TVStyleFactory")]
#[path = "TVStyleFactory.rs"]
mod __TVStyleFactory;
#[cfg(feature = "TVTextElement")]
#[path = "TVTextElement.rs"]
mod __TVTextElement;
#[cfg(feature = "TVViewElement")]
#[path = "TVViewElement.rs"]
mod __TVViewElement;
#[cfg(feature = "TVViewElementStyle")]
#[path = "TVViewElementStyle.rs"]
mod __TVViewElementStyle;

#[cfg(feature = "TVApplicationController")]
pub use self::__TVApplicationController::TVApplicationController;
#[cfg(feature = "TVApplicationController")]
pub use self::__TVApplicationController::TVApplicationControllerContext;
#[cfg(feature = "TVApplicationController")]
pub use self::__TVApplicationController::TVApplicationControllerDelegate;
#[cfg(feature = "TVBrowserViewController")]
pub use self::__TVBrowserViewController::TVBrowserTransitionAnimator;
#[cfg(all(feature = "TVBrowserViewController", feature = "objc2-ui-kit"))]
pub use self::__TVBrowserViewController::TVBrowserViewController;
#[cfg(feature = "TVBrowserViewController")]
pub use self::__TVBrowserViewController::TVBrowserViewControllerDataSource;
#[cfg(feature = "TVBrowserViewController")]
pub use self::__TVBrowserViewController::TVBrowserViewControllerDelegate;
#[cfg(feature = "TVColor")]
pub use self::__TVColor::TVColor;
#[cfg(feature = "TVColor")]
pub use self::__TVColor::TVColorType;
#[cfg(feature = "TVDocumentViewController")]
pub use self::__TVDocumentViewController::TVDocumentError;
#[cfg(feature = "TVDocumentViewController")]
pub use self::__TVDocumentViewController::TVDocumentErrorDomain;
#[cfg(feature = "TVDocumentViewController")]
pub use self::__TVDocumentViewController::TVDocumentEvent;
#[cfg(feature = "TVDocumentViewController")]
pub use self::__TVDocumentViewController::TVDocumentEventAppear;
#[cfg(feature = "TVDocumentViewController")]
pub use self::__TVDocumentViewController::TVDocumentEventDisappear;
#[cfg(feature = "TVDocumentViewController")]
pub use self::__TVDocumentViewController::TVDocumentEventHighlight;
#[cfg(feature = "TVDocumentViewController")]
pub use self::__TVDocumentViewController::TVDocumentEventHoldSelect;
#[cfg(feature = "TVDocumentViewController")]
pub use self::__TVDocumentViewController::TVDocumentEventLoad;
#[cfg(feature = "TVDocumentViewController")]
pub use self::__TVDocumentViewController::TVDocumentEventPlay;
#[cfg(feature = "TVDocumentViewController")]
pub use self::__TVDocumentViewController::TVDocumentEventSelect;
#[cfg(feature = "TVDocumentViewController")]
pub use self::__TVDocumentViewController::TVDocumentEventUnload;
#[cfg(all(feature = "TVDocumentViewController", feature = "objc2-ui-kit"))]
pub use self::__TVDocumentViewController::TVDocumentViewController;
#[cfg(feature = "TVDocumentViewController")]
pub use self::__TVDocumentViewController::TVDocumentViewControllerDelegate;
#[cfg(feature = "TVElementFactory")]
pub use self::__TVElementFactory::TVElementFactory;
#[cfg(all(feature = "TVImageElement", feature = "TVViewElement"))]
pub use self::__TVImageElement::TVImageElement;
#[cfg(feature = "TVImageElement")]
pub use self::__TVImageElement::TVImageType;
#[cfg(feature = "TVInterfaceFactory")]
pub use self::__TVInterfaceFactory::TVInterfaceCreating;
#[cfg(feature = "TVInterfaceFactory")]
pub use self::__TVInterfaceFactory::TVInterfaceFactory;
#[cfg(feature = "TVMLKitErrors")]
pub use self::__TVMLKitErrors::TVMLKitError;
#[cfg(feature = "TVMLKitErrors")]
pub use self::__TVMLKitErrors::TVMLKitErrorDomain;
#[cfg(feature = "TVPlayback")]
pub use self::__TVPlayback::TVHighlight;
#[cfg(feature = "TVPlayback")]
pub use self::__TVPlayback::TVHighlightGroup;
#[cfg(feature = "TVPlayback")]
pub use self::__TVPlayback::TVMediaItem;
#[cfg(feature = "TVPlayback")]
pub use self::__TVPlayback::TVMediaItemContentRatingDomain;
#[cfg(feature = "TVPlayback")]
pub use self::__TVPlayback::TVMediaItemContentRatingDomainMovie;
#[cfg(feature = "TVPlayback")]
pub use self::__TVPlayback::TVMediaItemContentRatingDomainMusic;
#[cfg(feature = "TVPlayback")]
pub use self::__TVPlayback::TVMediaItemContentRatingDomainTVShow;
#[cfg(feature = "TVPlayback")]
pub use self::__TVPlayback::TVMediaItemType;
#[cfg(feature = "TVPlayback")]
pub use self::__TVPlayback::TVMediaItemTypeAudio;
#[cfg(feature = "TVPlayback")]
pub use self::__TVPlayback::TVMediaItemTypeVideo;
#[cfg(feature = "TVPlayback")]
pub use self::__TVPlayback::TVPlaybackCustomEventUserInfo;
#[cfg(feature = "TVPlayback")]
pub use self::__TVPlayback::TVPlaybackEvent;
#[cfg(feature = "TVPlayback")]
pub use self::__TVPlayback::TVPlaybackEventMarshaling;
#[cfg(feature = "TVPlayback")]
pub use self::__TVPlayback::TVPlaybackEventProperty;
#[cfg(feature = "TVPlayback")]
pub use self::__TVPlayback::TVPlaybackState;
#[cfg(feature = "TVPlayback")]
pub use self::__TVPlayback::TVPlayer;
#[cfg(feature = "TVPlayback")]
pub use self::__TVPlayback::TVPlaylist;
#[cfg(feature = "TVPlayback")]
pub use self::__TVPlayback::TVPlaylistEndAction;
#[cfg(feature = "TVPlayback")]
pub use self::__TVPlayback::TVPlaylistRepeatMode;
#[cfg(feature = "TVPlayback")]
pub use self::__TVPlayback::TVTimeRange;
#[cfg(feature = "TVStyleFactory")]
pub use self::__TVStyleFactory::TVStyleFactory;
#[cfg(feature = "TVStyleFactory")]
pub use self::__TVStyleFactory::TVViewElementStyleType;
#[cfg(all(feature = "TVTextElement", feature = "TVViewElement"))]
pub use self::__TVTextElement::TVTextElement;
#[cfg(feature = "TVTextElement")]
pub use self::__TVTextElement::TVTextElementStyle;
#[cfg(feature = "TVViewElement")]
pub use self::__TVViewElement::TVElementEventType;
#[cfg(feature = "TVViewElement")]
pub use self::__TVViewElement::TVElementResettableProperty;
#[cfg(feature = "TVViewElement")]
pub use self::__TVViewElement::TVElementUpdateType;
#[cfg(feature = "TVViewElement")]
pub use self::__TVViewElement::TVViewElement;
#[cfg(feature = "TVViewElementStyle")]
pub use self::__TVViewElementStyle::TVElementAlignment;
#[cfg(feature = "TVViewElementStyle")]
pub use self::__TVViewElementStyle::TVElementContentAlignment;
#[cfg(feature = "TVViewElementStyle")]
pub use self::__TVViewElementStyle::TVElementPosition;
#[cfg(feature = "TVViewElementStyle")]
pub use self::__TVViewElementStyle::TVViewElementStyle;
