// This file has been automatically generated by `objc2`'s `header-translator`.
// DO NOT EDIT

#![allow(unused_imports)]
#![allow(deprecated)]
#![allow(non_snake_case)]
#![allow(non_camel_case_types)]
#![allow(non_upper_case_globals)]
#![allow(missing_docs)]
#![allow(clippy::too_many_arguments)]
#![allow(clippy::type_complexity)]
#![allow(clippy::upper_case_acronyms)]
#![allow(clippy::identity_op)]
#![allow(clippy::missing_safety_doc)]
#![allow(clippy::doc_lazy_continuation)]
#![allow(rustdoc::broken_intra_doc_links)]
#![allow(rustdoc::bare_urls)]
#![allow(rustdoc::invalid_html_tags)]

#[link(name = "ExposureNotification", kind = "framework")]
extern "C" {}

#[cfg(feature = "ENCommon")]
#[path = "ENCommon.rs"]
mod __ENCommon;
#[cfg(feature = "ENManager")]
#[path = "ENManager.rs"]
mod __ENManager;

#[cfg(feature = "ENCommon")]
pub use self::__ENCommon::ENAttenuation;
#[cfg(feature = "ENCommon")]
pub use self::__ENCommon::ENAttenuationMax;
#[cfg(feature = "ENCommon")]
pub use self::__ENCommon::ENAttenuationMin;
#[cfg(feature = "ENCommon")]
pub use self::__ENCommon::ENAuthorizationStatus;
#[cfg(feature = "ENCommon")]
pub use self::__ENCommon::ENCalibrationConfidence;
#[cfg(feature = "ENCommon")]
pub use self::__ENCommon::ENDaysSinceOnsetOfSymptomsUnknown;
#[cfg(feature = "ENCommon")]
pub use self::__ENCommon::ENDiagnosisReportType;
#[cfg(feature = "ENCommon")]
pub use self::__ENCommon::ENErrorCode;
#[cfg(feature = "ENCommon")]
pub use self::__ENCommon::ENErrorDomain;
#[cfg(all(feature = "ENCommon", feature = "block2"))]
pub use self::__ENCommon::ENErrorHandler;
#[cfg(feature = "ENCommon")]
pub use self::__ENCommon::ENErrorOutType;
#[cfg(feature = "ENCommon")]
pub use self::__ENCommon::ENExposureConfiguration;
#[cfg(feature = "ENCommon")]
pub use self::__ENCommon::ENExposureDaySummary;
#[cfg(feature = "ENCommon")]
pub use self::__ENCommon::ENExposureDetectionSummary;
#[cfg(feature = "ENCommon")]
pub use self::__ENCommon::ENExposureInfo;
#[cfg(feature = "ENCommon")]
pub use self::__ENCommon::ENExposureSummaryItem;
#[cfg(feature = "ENCommon")]
pub use self::__ENCommon::ENExposureWindow;
#[cfg(feature = "ENCommon")]
pub use self::__ENCommon::ENInfectiousness;
#[cfg(feature = "ENCommon")]
pub use self::__ENCommon::ENIntervalNumber;
#[cfg(feature = "ENCommon")]
pub use self::__ENCommon::ENRiskLevel;
#[cfg(feature = "ENCommon")]
pub use self::__ENCommon::ENRiskLevelMax;
#[cfg(feature = "ENCommon")]
pub use self::__ENCommon::ENRiskLevelMin;
#[cfg(feature = "ENCommon")]
pub use self::__ENCommon::ENRiskLevelValue;
#[cfg(feature = "ENCommon")]
pub use self::__ENCommon::ENRiskLevelValueMax;
#[cfg(feature = "ENCommon")]
pub use self::__ENCommon::ENRiskLevelValueMin;
#[cfg(feature = "ENCommon")]
pub use self::__ENCommon::ENRiskScore;
#[cfg(feature = "ENCommon")]
pub use self::__ENCommon::ENRiskScoreMax;
#[cfg(feature = "ENCommon")]
pub use self::__ENCommon::ENRiskScoreMin;
#[cfg(feature = "ENCommon")]
pub use self::__ENCommon::ENRiskWeightDefault;
#[cfg(feature = "ENCommon")]
pub use self::__ENCommon::ENRiskWeightDefaultV2;
#[cfg(feature = "ENCommon")]
pub use self::__ENCommon::ENRiskWeightMax;
#[cfg(feature = "ENCommon")]
pub use self::__ENCommon::ENRiskWeightMaxV2;
#[cfg(feature = "ENCommon")]
pub use self::__ENCommon::ENRiskWeightMin;
#[cfg(feature = "ENCommon")]
pub use self::__ENCommon::ENScanInstance;
#[cfg(feature = "ENCommon")]
pub use self::__ENCommon::ENTemporaryExposureKey;
#[cfg(feature = "ENCommon")]
pub use self::__ENCommon::ENVariantOfConcernType;
#[cfg(feature = "ENManager")]
pub use self::__ENManager::ENActivityFlags;
#[cfg(all(feature = "ENManager", feature = "block2"))]
pub use self::__ENManager::ENActivityHandler;
#[cfg(all(feature = "ENCommon", feature = "ENManager", feature = "block2"))]
pub use self::__ENManager::ENDetectExposuresHandler;
#[cfg(all(feature = "ENCommon", feature = "ENManager", feature = "block2"))]
pub use self::__ENManager::ENDiagnosisKeysAvailableHandler;
#[cfg(all(feature = "ENCommon", feature = "ENManager", feature = "block2"))]
pub use self::__ENManager::ENGetDiagnosisKeysHandler;
#[cfg(all(feature = "ENCommon", feature = "ENManager", feature = "block2"))]
pub use self::__ENManager::ENGetExposureInfoHandler;
#[cfg(all(feature = "ENCommon", feature = "ENManager", feature = "block2"))]
pub use self::__ENManager::ENGetExposureWindowsHandler;
#[cfg(all(feature = "ENManager", feature = "block2"))]
pub use self::__ENManager::ENGetUserTraveledHandler;
#[cfg(feature = "ENManager")]
pub use self::__ENManager::ENManager;
#[cfg(feature = "ENManager")]
pub use self::__ENManager::ENStatus;
