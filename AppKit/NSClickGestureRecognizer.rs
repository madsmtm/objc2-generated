//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use core::ffi::*;
use core::ptr::NonNull;
use objc2::__framework_prelude::*;
use objc2_foundation::*;

use crate::*;

extern_class!(
    /// [Apple's documentation](https://developer.apple.com/documentation/appkit/nsclickgesturerecognizer?language=objc)
    #[unsafe(super(NSGestureRecognizer, NSObject))]
    #[derive(Debug, PartialEq, Eq, Hash)]
    #[cfg(feature = "NSGestureRecognizer")]
    pub struct NSClickGestureRecognizer;
);

#[cfg(feature = "NSGestureRecognizer")]
extern_conformance!(
    unsafe impl NSCoding for NSClickGestureRecognizer {}
);

#[cfg(feature = "NSGestureRecognizer")]
extern_conformance!(
    unsafe impl NSObjectProtocol for NSClickGestureRecognizer {}
);

#[cfg(feature = "NSGestureRecognizer")]
impl NSClickGestureRecognizer {
    extern_methods!(
        #[unsafe(method(buttonMask))]
        #[unsafe(method_family = none)]
        pub fn buttonMask(&self) -> NSUInteger;

        /// Setter for [`buttonMask`][Self::buttonMask].
        #[unsafe(method(setButtonMask:))]
        #[unsafe(method_family = none)]
        pub fn setButtonMask(&self, button_mask: NSUInteger);

        #[unsafe(method(numberOfClicksRequired))]
        #[unsafe(method_family = none)]
        pub fn numberOfClicksRequired(&self) -> NSInteger;

        /// Setter for [`numberOfClicksRequired`][Self::numberOfClicksRequired].
        #[unsafe(method(setNumberOfClicksRequired:))]
        #[unsafe(method_family = none)]
        pub fn setNumberOfClicksRequired(&self, number_of_clicks_required: NSInteger);

        #[unsafe(method(numberOfTouchesRequired))]
        #[unsafe(method_family = none)]
        pub fn numberOfTouchesRequired(&self) -> NSInteger;

        /// Setter for [`numberOfTouchesRequired`][Self::numberOfTouchesRequired].
        #[unsafe(method(setNumberOfTouchesRequired:))]
        #[unsafe(method_family = none)]
        pub fn setNumberOfTouchesRequired(&self, number_of_touches_required: NSInteger);
    );
}

/// Methods declared on superclass `NSGestureRecognizer`.
#[cfg(feature = "NSGestureRecognizer")]
impl NSClickGestureRecognizer {
    extern_methods!(
        /// # Safety
        ///
        /// - `target` should be of the correct type.
        /// - `action` must be a valid selector.
        #[unsafe(method(initWithTarget:action:))]
        #[unsafe(method_family = init)]
        pub unsafe fn initWithTarget_action(
            this: Allocated<Self>,
            target: Option<&AnyObject>,
            action: Option<Sel>,
        ) -> Retained<Self>;

        /// # Safety
        ///
        /// `coder` possibly has further requirements.
        #[unsafe(method(initWithCoder:))]
        #[unsafe(method_family = init)]
        pub unsafe fn initWithCoder(
            this: Allocated<Self>,
            coder: &NSCoder,
        ) -> Option<Retained<Self>>;
    );
}

/// Methods declared on superclass `NSObject`.
#[cfg(feature = "NSGestureRecognizer")]
impl NSClickGestureRecognizer {
    extern_methods!(
        #[unsafe(method(init))]
        #[unsafe(method_family = init)]
        pub fn init(this: Allocated<Self>) -> Retained<Self>;

        #[unsafe(method(new))]
        #[unsafe(method_family = new)]
        pub fn new(mtm: MainThreadMarker) -> Retained<Self>;
    );
}
