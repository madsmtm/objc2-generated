//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use core::ffi::*;
use core::ptr::NonNull;
use objc2::__framework_prelude::*;
#[cfg(feature = "objc2-core-foundation")]
use objc2_core_foundation::*;
use objc2_foundation::*;

use crate::*;

/// [Apple's documentation](https://developer.apple.com/documentation/appkit/nspaperorientation?language=objc)
// NS_ENUM
#[repr(transparent)]
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash, PartialOrd, Ord)]
pub struct NSPaperOrientation(pub NSInteger);
impl NSPaperOrientation {
    #[doc(alias = "NSPaperOrientationPortrait")]
    pub const Portrait: Self = Self(0);
    #[doc(alias = "NSPaperOrientationLandscape")]
    pub const Landscape: Self = Self(1);
}

unsafe impl Encode for NSPaperOrientation {
    const ENCODING: Encoding = NSInteger::ENCODING;
}

unsafe impl RefEncode for NSPaperOrientation {
    const ENCODING_REF: Encoding = Encoding::Pointer(&Self::ENCODING);
}

/// [Apple's documentation](https://developer.apple.com/documentation/appkit/nsprintingpaginationmode?language=objc)
// NS_ENUM
#[repr(transparent)]
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash, PartialOrd, Ord)]
pub struct NSPrintingPaginationMode(pub NSUInteger);
impl NSPrintingPaginationMode {
    #[doc(alias = "NSPrintingPaginationModeAutomatic")]
    pub const Automatic: Self = Self(0);
    #[doc(alias = "NSPrintingPaginationModeFit")]
    pub const Fit: Self = Self(1);
    #[doc(alias = "NSPrintingPaginationModeClip")]
    pub const Clip: Self = Self(2);
}

unsafe impl Encode for NSPrintingPaginationMode {
    const ENCODING: Encoding = NSUInteger::ENCODING;
}

unsafe impl RefEncode for NSPrintingPaginationMode {
    const ENCODING_REF: Encoding = Encoding::Pointer(&Self::ENCODING);
}

/// [Apple's documentation](https://developer.apple.com/documentation/appkit/nsprintinfoattributekey?language=objc)
// NS_TYPED_EXTENSIBLE_ENUM
pub type NSPrintInfoAttributeKey = NSString;

extern "C" {
    /// [Apple's documentation](https://developer.apple.com/documentation/appkit/nsprintpapername?language=objc)
    pub static NSPrintPaperName: &'static NSPrintInfoAttributeKey;
}

extern "C" {
    /// [Apple's documentation](https://developer.apple.com/documentation/appkit/nsprintpapersize?language=objc)
    pub static NSPrintPaperSize: &'static NSPrintInfoAttributeKey;
}

extern "C" {
    /// [Apple's documentation](https://developer.apple.com/documentation/appkit/nsprintorientation?language=objc)
    pub static NSPrintOrientation: &'static NSPrintInfoAttributeKey;
}

extern "C" {
    /// [Apple's documentation](https://developer.apple.com/documentation/appkit/nsprintscalingfactor?language=objc)
    pub static NSPrintScalingFactor: &'static NSPrintInfoAttributeKey;
}

extern "C" {
    /// [Apple's documentation](https://developer.apple.com/documentation/appkit/nsprintleftmargin?language=objc)
    pub static NSPrintLeftMargin: &'static NSPrintInfoAttributeKey;
}

extern "C" {
    /// [Apple's documentation](https://developer.apple.com/documentation/appkit/nsprintrightmargin?language=objc)
    pub static NSPrintRightMargin: &'static NSPrintInfoAttributeKey;
}

extern "C" {
    /// [Apple's documentation](https://developer.apple.com/documentation/appkit/nsprinttopmargin?language=objc)
    pub static NSPrintTopMargin: &'static NSPrintInfoAttributeKey;
}

extern "C" {
    /// [Apple's documentation](https://developer.apple.com/documentation/appkit/nsprintbottommargin?language=objc)
    pub static NSPrintBottomMargin: &'static NSPrintInfoAttributeKey;
}

extern "C" {
    /// [Apple's documentation](https://developer.apple.com/documentation/appkit/nsprinthorizontallycentered?language=objc)
    pub static NSPrintHorizontallyCentered: &'static NSPrintInfoAttributeKey;
}

extern "C" {
    /// [Apple's documentation](https://developer.apple.com/documentation/appkit/nsprintverticallycentered?language=objc)
    pub static NSPrintVerticallyCentered: &'static NSPrintInfoAttributeKey;
}

extern "C" {
    /// [Apple's documentation](https://developer.apple.com/documentation/appkit/nsprinthorizontalpagination?language=objc)
    pub static NSPrintHorizontalPagination: &'static NSPrintInfoAttributeKey;
}

extern "C" {
    /// [Apple's documentation](https://developer.apple.com/documentation/appkit/nsprintverticalpagination?language=objc)
    pub static NSPrintVerticalPagination: &'static NSPrintInfoAttributeKey;
}

extern "C" {
    /// [Apple's documentation](https://developer.apple.com/documentation/appkit/nsprintprinter?language=objc)
    pub static NSPrintPrinter: &'static NSPrintInfoAttributeKey;
}

extern "C" {
    /// [Apple's documentation](https://developer.apple.com/documentation/appkit/nsprintcopies?language=objc)
    pub static NSPrintCopies: &'static NSPrintInfoAttributeKey;
}

extern "C" {
    /// [Apple's documentation](https://developer.apple.com/documentation/appkit/nsprintallpages?language=objc)
    pub static NSPrintAllPages: &'static NSPrintInfoAttributeKey;
}

extern "C" {
    /// [Apple's documentation](https://developer.apple.com/documentation/appkit/nsprintfirstpage?language=objc)
    pub static NSPrintFirstPage: &'static NSPrintInfoAttributeKey;
}

extern "C" {
    /// [Apple's documentation](https://developer.apple.com/documentation/appkit/nsprintlastpage?language=objc)
    pub static NSPrintLastPage: &'static NSPrintInfoAttributeKey;
}

extern "C" {
    /// [Apple's documentation](https://developer.apple.com/documentation/appkit/nsprintmustcollate?language=objc)
    pub static NSPrintMustCollate: &'static NSPrintInfoAttributeKey;
}

extern "C" {
    /// [Apple's documentation](https://developer.apple.com/documentation/appkit/nsprintreversepageorder?language=objc)
    pub static NSPrintReversePageOrder: &'static NSPrintInfoAttributeKey;
}

extern "C" {
    /// [Apple's documentation](https://developer.apple.com/documentation/appkit/nsprintjobdisposition?language=objc)
    pub static NSPrintJobDisposition: &'static NSPrintInfoAttributeKey;
}

extern "C" {
    /// [Apple's documentation](https://developer.apple.com/documentation/appkit/nsprintpagesacross?language=objc)
    pub static NSPrintPagesAcross: &'static NSPrintInfoAttributeKey;
}

extern "C" {
    /// [Apple's documentation](https://developer.apple.com/documentation/appkit/nsprintpagesdown?language=objc)
    pub static NSPrintPagesDown: &'static NSPrintInfoAttributeKey;
}

extern "C" {
    /// [Apple's documentation](https://developer.apple.com/documentation/appkit/nsprinttime?language=objc)
    pub static NSPrintTime: &'static NSPrintInfoAttributeKey;
}

extern "C" {
    /// [Apple's documentation](https://developer.apple.com/documentation/appkit/nsprintdetailederrorreporting?language=objc)
    pub static NSPrintDetailedErrorReporting: &'static NSPrintInfoAttributeKey;
}

extern "C" {
    /// [Apple's documentation](https://developer.apple.com/documentation/appkit/nsprintfaxnumber?language=objc)
    pub static NSPrintFaxNumber: &'static NSPrintInfoAttributeKey;
}

extern "C" {
    /// [Apple's documentation](https://developer.apple.com/documentation/appkit/nsprintprintername?language=objc)
    pub static NSPrintPrinterName: &'static NSPrintInfoAttributeKey;
}

extern "C" {
    /// [Apple's documentation](https://developer.apple.com/documentation/appkit/nsprintselectiononly?language=objc)
    pub static NSPrintSelectionOnly: &'static NSPrintInfoAttributeKey;
}

extern "C" {
    /// [Apple's documentation](https://developer.apple.com/documentation/appkit/nsprintjobsavingurl?language=objc)
    pub static NSPrintJobSavingURL: &'static NSPrintInfoAttributeKey;
}

extern "C" {
    /// [Apple's documentation](https://developer.apple.com/documentation/appkit/nsprintjobsavingfilenameextensionhidden?language=objc)
    pub static NSPrintJobSavingFileNameExtensionHidden: &'static NSPrintInfoAttributeKey;
}

extern "C" {
    /// [Apple's documentation](https://developer.apple.com/documentation/appkit/nsprintheaderandfooter?language=objc)
    pub static NSPrintHeaderAndFooter: &'static NSPrintInfoAttributeKey;
}

/// [Apple's documentation](https://developer.apple.com/documentation/appkit/nsprintjobdispositionvalue?language=objc)
// NS_TYPED_ENUM
pub type NSPrintJobDispositionValue = NSString;

extern "C" {
    /// [Apple's documentation](https://developer.apple.com/documentation/appkit/nsprintspooljob?language=objc)
    pub static NSPrintSpoolJob: &'static NSPrintJobDispositionValue;
}

extern "C" {
    /// [Apple's documentation](https://developer.apple.com/documentation/appkit/nsprintpreviewjob?language=objc)
    pub static NSPrintPreviewJob: &'static NSPrintJobDispositionValue;
}

extern "C" {
    /// [Apple's documentation](https://developer.apple.com/documentation/appkit/nsprintsavejob?language=objc)
    pub static NSPrintSaveJob: &'static NSPrintJobDispositionValue;
}

extern "C" {
    /// [Apple's documentation](https://developer.apple.com/documentation/appkit/nsprintcanceljob?language=objc)
    pub static NSPrintCancelJob: &'static NSPrintJobDispositionValue;
}

/// [Apple's documentation](https://developer.apple.com/documentation/appkit/nsprintinfosettingkey?language=objc)
pub type NSPrintInfoSettingKey = NSString;

extern_class!(
    /// [Apple's documentation](https://developer.apple.com/documentation/appkit/nsprintinfo?language=objc)
    #[unsafe(super(NSObject))]
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub struct NSPrintInfo;
);

extern_conformance!(
    unsafe impl NSCoding for NSPrintInfo {}
);

extern_conformance!(
    unsafe impl NSCopying for NSPrintInfo {}
);

unsafe impl CopyingHelper for NSPrintInfo {
    type Result = Self;
}

extern_conformance!(
    unsafe impl NSObjectProtocol for NSPrintInfo {}
);

impl NSPrintInfo {
    extern_methods!(
        #[unsafe(method(sharedPrintInfo))]
        #[unsafe(method_family = none)]
        pub unsafe fn sharedPrintInfo() -> Retained<NSPrintInfo>;

        /// Setter for [`sharedPrintInfo`][Self::sharedPrintInfo].
        #[unsafe(method(setSharedPrintInfo:))]
        #[unsafe(method_family = none)]
        pub unsafe fn setSharedPrintInfo(shared_print_info: &NSPrintInfo);

        /// # Safety
        ///
        /// `attributes` generic should be of the correct type.
        #[unsafe(method(initWithDictionary:))]
        #[unsafe(method_family = init)]
        pub unsafe fn initWithDictionary(
            this: Allocated<Self>,
            attributes: &NSDictionary<NSPrintInfoAttributeKey, AnyObject>,
        ) -> Retained<Self>;

        /// # Safety
        ///
        /// `coder` possibly has further requirements.
        #[unsafe(method(initWithCoder:))]
        #[unsafe(method_family = init)]
        pub unsafe fn initWithCoder(this: Allocated<Self>, coder: &NSCoder) -> Retained<Self>;

        #[unsafe(method(init))]
        #[unsafe(method_family = init)]
        pub unsafe fn init(this: Allocated<Self>) -> Retained<Self>;

        /// # Safety
        ///
        /// The returned generic should be of the correct type.
        #[unsafe(method(dictionary))]
        #[unsafe(method_family = none)]
        pub unsafe fn dictionary(
            &self,
        ) -> Retained<NSMutableDictionary<NSPrintInfoAttributeKey, AnyObject>>;

        #[cfg(feature = "NSPrinter")]
        #[unsafe(method(paperName))]
        #[unsafe(method_family = none)]
        pub unsafe fn paperName(&self) -> Option<Retained<NSPrinterPaperName>>;

        #[cfg(feature = "NSPrinter")]
        /// Setter for [`paperName`][Self::paperName].
        ///
        /// This is [copied][objc2_foundation::NSCopying::copy] when set.
        #[unsafe(method(setPaperName:))]
        #[unsafe(method_family = none)]
        pub unsafe fn setPaperName(&self, paper_name: Option<&NSPrinterPaperName>);

        #[unsafe(method(paperSize))]
        #[unsafe(method_family = none)]
        pub unsafe fn paperSize(&self) -> NSSize;

        /// Setter for [`paperSize`][Self::paperSize].
        #[unsafe(method(setPaperSize:))]
        #[unsafe(method_family = none)]
        pub unsafe fn setPaperSize(&self, paper_size: NSSize);

        #[unsafe(method(orientation))]
        #[unsafe(method_family = none)]
        pub unsafe fn orientation(&self) -> NSPaperOrientation;

        /// Setter for [`orientation`][Self::orientation].
        #[unsafe(method(setOrientation:))]
        #[unsafe(method_family = none)]
        pub unsafe fn setOrientation(&self, orientation: NSPaperOrientation);

        #[cfg(feature = "objc2-core-foundation")]
        #[unsafe(method(scalingFactor))]
        #[unsafe(method_family = none)]
        pub unsafe fn scalingFactor(&self) -> CGFloat;

        #[cfg(feature = "objc2-core-foundation")]
        /// Setter for [`scalingFactor`][Self::scalingFactor].
        #[unsafe(method(setScalingFactor:))]
        #[unsafe(method_family = none)]
        pub unsafe fn setScalingFactor(&self, scaling_factor: CGFloat);

        #[cfg(feature = "objc2-core-foundation")]
        #[unsafe(method(leftMargin))]
        #[unsafe(method_family = none)]
        pub unsafe fn leftMargin(&self) -> CGFloat;

        #[cfg(feature = "objc2-core-foundation")]
        /// Setter for [`leftMargin`][Self::leftMargin].
        #[unsafe(method(setLeftMargin:))]
        #[unsafe(method_family = none)]
        pub unsafe fn setLeftMargin(&self, left_margin: CGFloat);

        #[cfg(feature = "objc2-core-foundation")]
        #[unsafe(method(rightMargin))]
        #[unsafe(method_family = none)]
        pub unsafe fn rightMargin(&self) -> CGFloat;

        #[cfg(feature = "objc2-core-foundation")]
        /// Setter for [`rightMargin`][Self::rightMargin].
        #[unsafe(method(setRightMargin:))]
        #[unsafe(method_family = none)]
        pub unsafe fn setRightMargin(&self, right_margin: CGFloat);

        #[cfg(feature = "objc2-core-foundation")]
        #[unsafe(method(topMargin))]
        #[unsafe(method_family = none)]
        pub unsafe fn topMargin(&self) -> CGFloat;

        #[cfg(feature = "objc2-core-foundation")]
        /// Setter for [`topMargin`][Self::topMargin].
        #[unsafe(method(setTopMargin:))]
        #[unsafe(method_family = none)]
        pub unsafe fn setTopMargin(&self, top_margin: CGFloat);

        #[cfg(feature = "objc2-core-foundation")]
        #[unsafe(method(bottomMargin))]
        #[unsafe(method_family = none)]
        pub unsafe fn bottomMargin(&self) -> CGFloat;

        #[cfg(feature = "objc2-core-foundation")]
        /// Setter for [`bottomMargin`][Self::bottomMargin].
        #[unsafe(method(setBottomMargin:))]
        #[unsafe(method_family = none)]
        pub unsafe fn setBottomMargin(&self, bottom_margin: CGFloat);

        #[unsafe(method(isHorizontallyCentered))]
        #[unsafe(method_family = none)]
        pub unsafe fn isHorizontallyCentered(&self) -> bool;

        /// Setter for [`isHorizontallyCentered`][Self::isHorizontallyCentered].
        #[unsafe(method(setHorizontallyCentered:))]
        #[unsafe(method_family = none)]
        pub unsafe fn setHorizontallyCentered(&self, horizontally_centered: bool);

        #[unsafe(method(isVerticallyCentered))]
        #[unsafe(method_family = none)]
        pub unsafe fn isVerticallyCentered(&self) -> bool;

        /// Setter for [`isVerticallyCentered`][Self::isVerticallyCentered].
        #[unsafe(method(setVerticallyCentered:))]
        #[unsafe(method_family = none)]
        pub unsafe fn setVerticallyCentered(&self, vertically_centered: bool);

        #[unsafe(method(horizontalPagination))]
        #[unsafe(method_family = none)]
        pub unsafe fn horizontalPagination(&self) -> NSPrintingPaginationMode;

        /// Setter for [`horizontalPagination`][Self::horizontalPagination].
        #[unsafe(method(setHorizontalPagination:))]
        #[unsafe(method_family = none)]
        pub unsafe fn setHorizontalPagination(
            &self,
            horizontal_pagination: NSPrintingPaginationMode,
        );

        #[unsafe(method(verticalPagination))]
        #[unsafe(method_family = none)]
        pub unsafe fn verticalPagination(&self) -> NSPrintingPaginationMode;

        /// Setter for [`verticalPagination`][Self::verticalPagination].
        #[unsafe(method(setVerticalPagination:))]
        #[unsafe(method_family = none)]
        pub unsafe fn setVerticalPagination(&self, vertical_pagination: NSPrintingPaginationMode);

        #[unsafe(method(jobDisposition))]
        #[unsafe(method_family = none)]
        pub unsafe fn jobDisposition(&self) -> Retained<NSPrintJobDispositionValue>;

        /// Setter for [`jobDisposition`][Self::jobDisposition].
        ///
        /// This is [copied][objc2_foundation::NSCopying::copy] when set.
        #[unsafe(method(setJobDisposition:))]
        #[unsafe(method_family = none)]
        pub unsafe fn setJobDisposition(&self, job_disposition: &NSPrintJobDispositionValue);

        #[cfg(feature = "NSPrinter")]
        #[unsafe(method(printer))]
        #[unsafe(method_family = none)]
        pub unsafe fn printer(&self) -> Retained<NSPrinter>;

        #[cfg(feature = "NSPrinter")]
        /// Setter for [`printer`][Self::printer].
        ///
        /// This is [copied][objc2_foundation::NSCopying::copy] when set.
        #[unsafe(method(setPrinter:))]
        #[unsafe(method_family = none)]
        pub unsafe fn setPrinter(&self, printer: &NSPrinter);

        #[unsafe(method(setUpPrintOperationDefaultValues))]
        #[unsafe(method_family = none)]
        pub unsafe fn setUpPrintOperationDefaultValues(&self);

        #[unsafe(method(imageablePageBounds))]
        #[unsafe(method_family = none)]
        pub unsafe fn imageablePageBounds(&self) -> NSRect;

        #[unsafe(method(localizedPaperName))]
        #[unsafe(method_family = none)]
        pub unsafe fn localizedPaperName(&self) -> Option<Retained<NSString>>;

        #[cfg(feature = "NSPrinter")]
        #[unsafe(method(defaultPrinter))]
        #[unsafe(method_family = none)]
        pub unsafe fn defaultPrinter() -> Option<Retained<NSPrinter>>;

        /// # Safety
        ///
        /// The returned generic should be of the correct type.
        #[unsafe(method(printSettings))]
        #[unsafe(method_family = none)]
        pub unsafe fn printSettings(
            &self,
        ) -> Retained<NSMutableDictionary<NSPrintInfoSettingKey, AnyObject>>;

        #[unsafe(method(PMPrintSession))]
        #[unsafe(method_family = none)]
        pub unsafe fn PMPrintSession(&self) -> NonNull<c_void>;

        #[unsafe(method(PMPageFormat))]
        #[unsafe(method_family = none)]
        pub unsafe fn PMPageFormat(&self) -> NonNull<c_void>;

        #[unsafe(method(PMPrintSettings))]
        #[unsafe(method_family = none)]
        pub unsafe fn PMPrintSettings(&self) -> NonNull<c_void>;

        #[unsafe(method(updateFromPMPageFormat))]
        #[unsafe(method_family = none)]
        pub unsafe fn updateFromPMPageFormat(&self);

        #[unsafe(method(updateFromPMPrintSettings))]
        #[unsafe(method_family = none)]
        pub unsafe fn updateFromPMPrintSettings(&self);

        #[unsafe(method(isSelectionOnly))]
        #[unsafe(method_family = none)]
        pub unsafe fn isSelectionOnly(&self) -> bool;

        /// Setter for [`isSelectionOnly`][Self::isSelectionOnly].
        #[unsafe(method(setSelectionOnly:))]
        #[unsafe(method_family = none)]
        pub unsafe fn setSelectionOnly(&self, selection_only: bool);

        #[cfg(feature = "NSPDFInfo")]
        #[unsafe(method(takeSettingsFromPDFInfo:))]
        #[unsafe(method_family = none)]
        pub unsafe fn takeSettingsFromPDFInfo(&self, in_pdf_info: &NSPDFInfo);
    );
}

/// Methods declared on superclass `NSObject`.
impl NSPrintInfo {
    extern_methods!(
        #[unsafe(method(new))]
        #[unsafe(method_family = new)]
        pub unsafe fn new() -> Retained<Self>;
    );
}

/// NSDeprecated.
impl NSPrintInfo {
    extern_methods!(
        #[cfg(feature = "NSPrinter")]
        #[deprecated = "NSPrintInfo's implementation has no effect"]
        #[unsafe(method(setDefaultPrinter:))]
        #[unsafe(method_family = none)]
        pub unsafe fn setDefaultPrinter(printer: Option<&NSPrinter>);

        #[cfg(feature = "NSPrinter")]
        #[deprecated = "Use -[NSPrinter pageSizeForPaper:] instead"]
        #[unsafe(method(sizeForPaperName:))]
        #[unsafe(method_family = none)]
        pub unsafe fn sizeForPaperName(name: Option<&NSPrinterPaperName>) -> NSSize;
    );
}

extern "C" {
    /// [Apple's documentation](https://developer.apple.com/documentation/appkit/nsprintformname?language=objc)
    #[deprecated = "NSPrintInfo does not recognize this attribute"]
    pub static NSPrintFormName: &'static NSString;
}

extern "C" {
    /// [Apple's documentation](https://developer.apple.com/documentation/appkit/nsprintjobfeatures?language=objc)
    #[deprecated = "NSPrintInfo does not recognize this attribute. -[NSPrintInfo setUpPrintOperationDefaultValues] sets a default value of an empty dictionary"]
    pub static NSPrintJobFeatures: &'static NSString;
}

extern "C" {
    /// [Apple's documentation](https://developer.apple.com/documentation/appkit/nsprintmanualfeed?language=objc)
    #[deprecated = "NSPrintInfo does not recognize this attribute"]
    pub static NSPrintManualFeed: &'static NSString;
}

extern "C" {
    /// [Apple's documentation](https://developer.apple.com/documentation/appkit/nsprintpagespersheet?language=objc)
    #[deprecated = "NSPrintInfo does not recognize this attribute. -[NSPrintInfo setUpPrintOperationDefaultValues] sets a default value of 1"]
    pub static NSPrintPagesPerSheet: &'static NSString;
}

extern "C" {
    /// [Apple's documentation](https://developer.apple.com/documentation/appkit/nsprintpaperfeed?language=objc)
    #[deprecated = "NSPrintInfo does not recognize this attribute"]
    pub static NSPrintPaperFeed: &'static NSString;
}

extern "C" {
    /// [Apple's documentation](https://developer.apple.com/documentation/appkit/nsprintsavepath?language=objc)
    #[deprecated = "Use NSPrintJobSavingURL instead"]
    pub static NSPrintSavePath: &'static NSString;
}

/// [Apple's documentation](https://developer.apple.com/documentation/appkit/nsprintingorientation?language=objc)
// NS_ENUM
#[deprecated]
#[repr(transparent)]
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash, PartialOrd, Ord)]
pub struct NSPrintingOrientation(pub NSUInteger);
impl NSPrintingOrientation {
    #[doc(alias = "NSPortraitOrientation")]
    #[deprecated]
    pub const PortraitOrientation: Self = Self(0);
    #[doc(alias = "NSLandscapeOrientation")]
    #[deprecated]
    pub const LandscapeOrientation: Self = Self(1);
}

unsafe impl Encode for NSPrintingOrientation {
    const ENCODING: Encoding = NSUInteger::ENCODING;
}

unsafe impl RefEncode for NSPrintingOrientation {
    const ENCODING_REF: Encoding = Encoding::Pointer(&Self::ENCODING);
}

/// [Apple's documentation](https://developer.apple.com/documentation/appkit/nsautopagination?language=objc)
#[deprecated]
pub static NSAutoPagination: NSPrintingPaginationMode =
    NSPrintingPaginationMode(NSPrintingPaginationMode::Automatic.0);

/// [Apple's documentation](https://developer.apple.com/documentation/appkit/nsfitpagination?language=objc)
#[deprecated]
pub static NSFitPagination: NSPrintingPaginationMode =
    NSPrintingPaginationMode(NSPrintingPaginationMode::Fit.0);

/// [Apple's documentation](https://developer.apple.com/documentation/appkit/nsclippagination?language=objc)
#[deprecated]
pub static NSClipPagination: NSPrintingPaginationMode =
    NSPrintingPaginationMode(NSPrintingPaginationMode::Clip.0);
