//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use core::ptr::NonNull;
use objc2::__framework_prelude::*;

use crate::*;

extern_class!(
    /// [Apple's documentation](https://developer.apple.com/documentation/foundation/nsinflectionrule?language=objc)
    #[unsafe(super(NSObject))]
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub struct NSInflectionRule;
);

#[cfg(feature = "NSObject")]
extern_conformance!(
    unsafe impl NSCoding for NSInflectionRule {}
);

#[cfg(feature = "NSObject")]
extern_conformance!(
    unsafe impl NSCopying for NSInflectionRule {}
);

#[cfg(feature = "NSObject")]
unsafe impl CopyingHelper for NSInflectionRule {
    type Result = Self;
}

extern_conformance!(
    unsafe impl NSObjectProtocol for NSInflectionRule {}
);

#[cfg(feature = "NSObject")]
extern_conformance!(
    unsafe impl NSSecureCoding for NSInflectionRule {}
);

impl NSInflectionRule {
    extern_methods!(
        #[unsafe(method(init))]
        #[unsafe(method_family = init)]
        pub unsafe fn init(this: Allocated<Self>) -> Retained<Self>;

        #[unsafe(method(automaticRule))]
        #[unsafe(method_family = none)]
        pub fn automaticRule() -> Retained<NSInflectionRule>;
    );
}

/// Methods declared on superclass `NSObject`.
impl NSInflectionRule {
    extern_methods!(
        #[unsafe(method(new))]
        #[unsafe(method_family = new)]
        pub fn new() -> Retained<Self>;
    );
}

impl DefaultRetained for NSInflectionRule {
    #[inline]
    fn default_retained() -> Retained<Self> {
        Self::new()
    }
}

extern_class!(
    /// [Apple's documentation](https://developer.apple.com/documentation/foundation/nsinflectionruleexplicit?language=objc)
    #[unsafe(super(NSInflectionRule, NSObject))]
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub struct NSInflectionRuleExplicit;
);

#[cfg(feature = "NSObject")]
extern_conformance!(
    unsafe impl NSCoding for NSInflectionRuleExplicit {}
);

#[cfg(feature = "NSObject")]
extern_conformance!(
    unsafe impl NSCopying for NSInflectionRuleExplicit {}
);

#[cfg(feature = "NSObject")]
unsafe impl CopyingHelper for NSInflectionRuleExplicit {
    type Result = Self;
}

extern_conformance!(
    unsafe impl NSObjectProtocol for NSInflectionRuleExplicit {}
);

#[cfg(feature = "NSObject")]
extern_conformance!(
    unsafe impl NSSecureCoding for NSInflectionRuleExplicit {}
);

impl NSInflectionRuleExplicit {
    extern_methods!(
        #[cfg(feature = "NSMorphology")]
        #[unsafe(method(initWithMorphology:))]
        #[unsafe(method_family = init)]
        pub fn initWithMorphology(
            this: Allocated<Self>,
            morphology: &NSMorphology,
        ) -> Retained<Self>;

        #[cfg(feature = "NSMorphology")]
        #[unsafe(method(morphology))]
        #[unsafe(method_family = none)]
        pub fn morphology(&self) -> Retained<NSMorphology>;
    );
}

/// Methods declared on superclass `NSInflectionRule`.
impl NSInflectionRuleExplicit {
    extern_methods!(
        #[unsafe(method(init))]
        #[unsafe(method_family = init)]
        pub unsafe fn init(this: Allocated<Self>) -> Retained<Self>;
    );
}

/// Methods declared on superclass `NSObject`.
impl NSInflectionRuleExplicit {
    extern_methods!(
        #[unsafe(method(new))]
        #[unsafe(method_family = new)]
        pub fn new() -> Retained<Self>;
    );
}

impl DefaultRetained for NSInflectionRuleExplicit {
    #[inline]
    fn default_retained() -> Retained<Self> {
        Self::new()
    }
}

/// NSInflectionAvailability.
impl NSInflectionRule {
    extern_methods!(
        #[cfg(feature = "NSString")]
        #[unsafe(method(canInflectLanguage:))]
        #[unsafe(method_family = none)]
        pub fn canInflectLanguage(language: &NSString) -> bool;

        #[unsafe(method(canInflectPreferredLocalization))]
        #[unsafe(method_family = none)]
        pub fn canInflectPreferredLocalization() -> bool;
    );
}
