// This file has been automatically generated by `objc2`'s `header-translator`.
// DO NOT EDIT

#![allow(unused_imports)]
#![allow(deprecated)]
#![allow(non_snake_case)]
#![allow(non_camel_case_types)]
#![allow(non_upper_case_globals)]
#![allow(missing_docs)]
#![allow(clippy::too_many_arguments)]
#![allow(clippy::type_complexity)]
#![allow(clippy::upper_case_acronyms)]
#![allow(clippy::identity_op)]
#![allow(clippy::missing_safety_doc)]
#![allow(clippy::doc_lazy_continuation)]
#![allow(rustdoc::broken_intra_doc_links)]
#![allow(rustdoc::bare_urls)]
#![allow(rustdoc::invalid_html_tags)]

#[link(name = "CoreMIDI", kind = "framework")]
extern "C" {}

#[cfg(feature = "MIDIBluetoothConnection")]
#[path = "MIDIBluetoothConnection.rs"]
mod __MIDIBluetoothConnection;
#[cfg(feature = "MIDICIDevice")]
#[path = "MIDICIDevice.rs"]
mod __MIDICIDevice;
#[cfg(feature = "MIDICIDeviceManager")]
#[path = "MIDICIDeviceManager.rs"]
mod __MIDICIDeviceManager;
#[cfg(feature = "MIDICapabilityInquiry")]
#[path = "MIDICapabilityInquiry.rs"]
mod __MIDICapabilityInquiry;
#[cfg(feature = "MIDIDriver")]
#[path = "MIDIDriver.rs"]
mod __MIDIDriver;
#[cfg(feature = "MIDIMessages")]
#[path = "MIDIMessages.rs"]
mod __MIDIMessages;
#[cfg(feature = "MIDINetworkSession")]
#[path = "MIDINetworkSession.rs"]
mod __MIDINetworkSession;
#[cfg(feature = "MIDIServices")]
#[path = "MIDIServices.rs"]
mod __MIDIServices;
#[cfg(feature = "MIDISetup")]
#[path = "MIDISetup.rs"]
mod __MIDISetup;
#[cfg(feature = "MIDIThruConnection")]
#[path = "MIDIThruConnection.rs"]
mod __MIDIThruConnection;
#[cfg(feature = "MIDIUMPCI")]
#[path = "MIDIUMPCI.rs"]
mod __MIDIUMPCI;
#[cfg(feature = "MIDIUMPCIProfile")]
#[path = "MIDIUMPCIProfile.rs"]
mod __MIDIUMPCIProfile;
#[cfg(feature = "MIDIUMPEndpoint")]
#[path = "MIDIUMPEndpoint.rs"]
mod __MIDIUMPEndpoint;
#[cfg(feature = "MIDIUMPEndpointManager")]
#[path = "MIDIUMPEndpointManager.rs"]
mod __MIDIUMPEndpointManager;
#[cfg(feature = "MIDIUMPFunctionBlock")]
#[path = "MIDIUMPFunctionBlock.rs"]
mod __MIDIUMPFunctionBlock;
#[cfg(feature = "MIDIUMPMutableEndpoint")]
#[path = "MIDIUMPMutableEndpoint.rs"]
mod __MIDIUMPMutableEndpoint;
#[cfg(feature = "MIDIUMPMutableFunctionBlock")]
#[path = "MIDIUMPMutableFunctionBlock.rs"]
mod __MIDIUMPMutableFunctionBlock;

#[cfg(feature = "MIDIBluetoothConnection")]
pub use self::__MIDIBluetoothConnection::MIDIBluetoothDriverActivateAllConnections;
#[cfg(all(feature = "MIDIBluetoothConnection", feature = "objc2-core-foundation"))]
pub use self::__MIDIBluetoothConnection::MIDIBluetoothDriverDisconnect;
#[cfg(all(feature = "MIDICIDevice", feature = "objc2"))]
pub use self::__MIDICIDevice::MIDICIDevice;
#[cfg(all(feature = "MIDICIDeviceManager", feature = "objc2"))]
pub use self::__MIDICIDeviceManager::MIDICIDeviceManager;
#[cfg(all(feature = "MIDICIDeviceManager", feature = "objc2-foundation"))]
pub use self::__MIDICIDeviceManager::MIDICIDeviceManagerDictionaryKey;
#[cfg(all(feature = "MIDICIDeviceManager", feature = "objc2-foundation"))]
pub use self::__MIDICIDeviceManager::MIDICIDeviceObjectKey;
#[cfg(all(feature = "MIDICIDeviceManager", feature = "objc2-foundation"))]
pub use self::__MIDICIDeviceManager::MIDICIDeviceWasAddedNotification;
#[cfg(all(feature = "MIDICIDeviceManager", feature = "objc2-foundation"))]
pub use self::__MIDICIDeviceManager::MIDICIDeviceWasRemovedNotification;
#[cfg(all(feature = "MIDICIDeviceManager", feature = "objc2-foundation"))]
pub use self::__MIDICIDeviceManager::MIDICIProfileObjectKey;
#[cfg(all(feature = "MIDICIDeviceManager", feature = "objc2-foundation"))]
pub use self::__MIDICIDeviceManager::MIDICIProfileWasRemovedNotification;
#[cfg(all(feature = "MIDICIDeviceManager", feature = "objc2-foundation"))]
pub use self::__MIDICIDeviceManager::MIDICIProfileWasUpdatedNotification;
#[cfg(feature = "MIDICapabilityInquiry")]
pub use self::__MIDICapabilityInquiry::MIDICIDeviceIdentification;
#[cfg(all(feature = "MIDICapabilityInquiry", feature = "objc2"))]
pub use self::__MIDICapabilityInquiry::MIDICIDeviceInfo;
#[cfg(all(feature = "MIDICapabilityInquiry", feature = "objc2"))]
pub use self::__MIDICapabilityInquiry::MIDICIDiscoveredNode;
#[cfg(all(feature = "MIDICapabilityInquiry", feature = "objc2"))]
pub use self::__MIDICapabilityInquiry::MIDICIDiscoveryManager;
#[cfg(all(
    feature = "MIDICapabilityInquiry",
    feature = "block2",
    feature = "objc2",
    feature = "objc2-foundation"
))]
pub use self::__MIDICapabilityInquiry::MIDICIDiscoveryResponseBlock;
#[cfg(all(feature = "MIDICapabilityInquiry", feature = "objc2-foundation"))]
pub use self::__MIDICapabilityInquiry::MIDICIInitiatiorMUID;
#[cfg(all(feature = "MIDICapabilityInquiry", feature = "objc2"))]
pub use self::__MIDICapabilityInquiry::MIDICIProfile;
#[cfg(all(
    feature = "MIDICapabilityInquiry",
    feature = "MIDIMessages",
    feature = "block2",
    feature = "objc2"
))]
pub use self::__MIDICapabilityInquiry::MIDICIProfileChangedBlock;
#[cfg(all(feature = "MIDICapabilityInquiry", feature = "objc2"))]
pub use self::__MIDICapabilityInquiry::MIDICIProfileResponderDelegate;
#[cfg(all(
    feature = "MIDICapabilityInquiry",
    feature = "MIDIMessages",
    feature = "block2",
    feature = "objc2",
    feature = "objc2-foundation"
))]
pub use self::__MIDICapabilityInquiry::MIDICIProfileSpecificDataBlock;
#[cfg(all(feature = "MIDICapabilityInquiry", feature = "objc2"))]
pub use self::__MIDICapabilityInquiry::MIDICIProfileState;
#[cfg(all(
    feature = "MIDICapabilityInquiry",
    feature = "objc2",
    feature = "objc2-foundation"
))]
pub use self::__MIDICapabilityInquiry::MIDICIProfileStateList;
#[cfg(all(feature = "MIDICapabilityInquiry", feature = "objc2"))]
pub use self::__MIDICapabilityInquiry::MIDICIResponder;
#[cfg(all(feature = "MIDICapabilityInquiry", feature = "objc2"))]
pub use self::__MIDICapabilityInquiry::MIDICISession;
#[cfg(all(
    feature = "MIDICapabilityInquiry",
    feature = "block2",
    feature = "objc2",
    feature = "objc2-foundation"
))]
pub use self::__MIDICapabilityInquiry::MIDICISessionDisconnectBlock;
#[cfg(all(feature = "MIDICapabilityInquiry", feature = "MIDIMessages"))]
pub use self::__MIDICapabilityInquiry::MIDIChannelsWholePort;
#[cfg(all(feature = "MIDIDriver", feature = "objc2-core-foundation"))]
pub use self::__MIDIDriver::kMIDIDriverPropertyUsesSerial;
#[cfg(all(
    feature = "MIDIDriver",
    feature = "MIDIServices",
    feature = "objc2-core-foundation"
))]
pub use self::__MIDIDriver::MIDIDeviceCreate;
#[cfg(all(feature = "MIDIDriver", feature = "MIDIServices"))]
pub use self::__MIDIDriver::MIDIDeviceDispose;
#[cfg(all(feature = "MIDIDriver", feature = "MIDIServices"))]
pub use self::__MIDIDriver::MIDIDeviceListAddDevice;
#[cfg(all(feature = "MIDIDriver", feature = "MIDIServices"))]
pub use self::__MIDIDriver::MIDIDeviceListDispose;
#[cfg(all(feature = "MIDIDriver", feature = "MIDIServices"))]
pub use self::__MIDIDriver::MIDIDeviceListGetDevice;
#[cfg(all(feature = "MIDIDriver", feature = "MIDIServices"))]
pub use self::__MIDIDriver::MIDIDeviceListGetNumberOfDevices;
#[cfg(all(feature = "MIDIDriver", feature = "MIDIServices"))]
pub use self::__MIDIDriver::MIDIDeviceListRef;
#[cfg(feature = "MIDIDriver")]
pub use self::__MIDIDriver::MIDIDriverEnableMonitoring;
#[cfg(all(
    feature = "MIDIDriver",
    feature = "MIDIServices",
    feature = "objc2-core-foundation"
))]
pub use self::__MIDIDriver::MIDIDriverInterface;
#[cfg(feature = "MIDIDriver")]
pub use self::__MIDIDriver::MIDIDriverRef;
#[cfg(all(feature = "MIDIDriver", feature = "MIDIServices"))]
pub use self::__MIDIDriver::MIDIEndpointGetRefCons;
#[cfg(all(feature = "MIDIDriver", feature = "MIDIServices"))]
pub use self::__MIDIDriver::MIDIEndpointSetRefCons;
#[cfg(all(feature = "MIDIDriver", feature = "MIDIServices"))]
pub use self::__MIDIDriver::MIDIGetDriverDeviceList;
#[cfg(all(feature = "MIDIDriver", feature = "objc2-core-foundation"))]
pub use self::__MIDIDriver::MIDIGetDriverIORunLoop;
#[cfg(feature = "MIDIMessages")]
pub use self::__MIDIMessages::kMIDI1UPMaxSysexSize;
#[cfg(feature = "MIDIMessages")]
pub use self::__MIDIMessages::kMIDIDeviceIDFunctionBlock;
#[cfg(feature = "MIDIMessages")]
pub use self::__MIDIMessages::kMIDIDeviceIDUMPGroup;
#[cfg(feature = "MIDIMessages")]
pub use self::__MIDIMessages::kMIDIUInteger14Max;
#[cfg(feature = "MIDIMessages")]
pub use self::__MIDIMessages::kMIDIUInteger28Max;
#[cfg(feature = "MIDIMessages")]
pub use self::__MIDIMessages::kMIDIUInteger2Max;
#[cfg(feature = "MIDIMessages")]
pub use self::__MIDIMessages::kMIDIUInteger4Max;
#[cfg(feature = "MIDIMessages")]
pub use self::__MIDIMessages::kMIDIUInteger7Max;
#[cfg(feature = "MIDIMessages")]
pub use self::__MIDIMessages::MIDICIDeviceID;
#[cfg(feature = "MIDIMessages")]
pub use self::__MIDIMessages::MIDICVStatus;
#[cfg(feature = "MIDIMessages")]
pub use self::__MIDIMessages::MIDIChannelNumber;
#[cfg(all(feature = "MIDIMessages", feature = "MIDIServices"))]
pub use self::__MIDIMessages::MIDIEventListForEachEvent;
#[cfg(all(feature = "MIDIMessages", feature = "MIDIServices"))]
pub use self::__MIDIMessages::MIDIEventVisitor;
#[cfg(feature = "MIDIMessages")]
pub use self::__MIDIMessages::MIDIMessageType;
#[cfg(feature = "MIDIMessages")]
pub use self::__MIDIMessages::MIDIMessage_128;
#[cfg(feature = "MIDIMessages")]
pub use self::__MIDIMessages::MIDIMessage_32;
#[cfg(feature = "MIDIMessages")]
pub use self::__MIDIMessages::MIDIMessage_64;
#[cfg(feature = "MIDIMessages")]
pub use self::__MIDIMessages::MIDIMessage_96;
#[cfg(feature = "MIDIMessages")]
pub use self::__MIDIMessages::MIDINoteAttribute;
#[cfg(feature = "MIDIMessages")]
pub use self::__MIDIMessages::MIDIPerNoteManagementOptions;
#[cfg(feature = "MIDIMessages")]
pub use self::__MIDIMessages::MIDIProgramChangeOptions;
#[cfg(feature = "MIDIMessages")]
pub use self::__MIDIMessages::MIDISysExStatus;
#[cfg(feature = "MIDIMessages")]
pub use self::__MIDIMessages::MIDISystemStatus;
#[cfg(feature = "MIDIMessages")]
pub use self::__MIDIMessages::MIDIUInteger14;
#[cfg(feature = "MIDIMessages")]
pub use self::__MIDIMessages::MIDIUInteger2;
#[cfg(feature = "MIDIMessages")]
pub use self::__MIDIMessages::MIDIUInteger28;
#[cfg(feature = "MIDIMessages")]
pub use self::__MIDIMessages::MIDIUInteger4;
#[cfg(feature = "MIDIMessages")]
pub use self::__MIDIMessages::MIDIUInteger7;
#[cfg(feature = "MIDIMessages")]
pub use self::__MIDIMessages::MIDIUMPFunctionBlockDirection;
#[cfg(feature = "MIDIMessages")]
pub use self::__MIDIMessages::MIDIUMPFunctionBlockMIDI1Info;
#[cfg(feature = "MIDIMessages")]
pub use self::__MIDIMessages::MIDIUMPFunctionBlockUIHint;
#[cfg(feature = "MIDIMessages")]
pub use self::__MIDIMessages::MIDIUMPGroupNumber;
#[cfg(feature = "MIDIMessages")]
pub use self::__MIDIMessages::MIDIUniversalMessage;
#[cfg(feature = "MIDIMessages")]
pub use self::__MIDIMessages::MIDIUtilityStatus;
#[cfg(feature = "MIDIMessages")]
pub use self::__MIDIMessages::UMPStreamMessageFormat;
#[cfg(feature = "MIDIMessages")]
pub use self::__MIDIMessages::UMPStreamMessageStatus;
#[cfg(feature = "MIDIMessages")]
pub use self::__MIDIMessages::MIDICIMUID;
#[cfg(all(feature = "MIDINetworkSession", feature = "objc2-foundation"))]
pub use self::__MIDINetworkSession::MIDINetworkBonjourServiceType;
#[cfg(all(feature = "MIDINetworkSession", feature = "objc2"))]
pub use self::__MIDINetworkSession::MIDINetworkConnection;
#[cfg(all(feature = "MIDINetworkSession", feature = "objc2"))]
pub use self::__MIDINetworkSession::MIDINetworkConnectionPolicy;
#[cfg(all(feature = "MIDINetworkSession", feature = "objc2"))]
pub use self::__MIDINetworkSession::MIDINetworkHost;
#[cfg(all(feature = "MIDINetworkSession", feature = "objc2-foundation"))]
pub use self::__MIDINetworkSession::MIDINetworkNotificationContactsDidChange;
#[cfg(all(feature = "MIDINetworkSession", feature = "objc2-foundation"))]
pub use self::__MIDINetworkSession::MIDINetworkNotificationSessionDidChange;
#[cfg(all(feature = "MIDINetworkSession", feature = "objc2"))]
pub use self::__MIDINetworkSession::MIDINetworkSession;
#[cfg(feature = "MIDIServices")]
pub use self::__MIDIServices::kMIDIIDNotUnique;
#[cfg(feature = "MIDIServices")]
pub use self::__MIDIServices::kMIDIInvalidClient;
#[cfg(feature = "MIDIServices")]
pub use self::__MIDIServices::kMIDIInvalidPort;
#[cfg(feature = "MIDIServices")]
pub use self::__MIDIServices::kMIDIInvalidUniqueID;
#[cfg(feature = "MIDIServices")]
pub use self::__MIDIServices::kMIDIMessageSendErr;
#[cfg(feature = "MIDIServices")]
pub use self::__MIDIServices::kMIDINoConnection;
#[cfg(feature = "MIDIServices")]
pub use self::__MIDIServices::kMIDINoCurrentSetup;
#[cfg(feature = "MIDIServices")]
pub use self::__MIDIServices::kMIDINotPermitted;
#[cfg(feature = "MIDIServices")]
pub use self::__MIDIServices::kMIDIObjectNotFound;
#[cfg(feature = "MIDIServices")]
pub use self::__MIDIServices::kMIDIObjectType_ExternalMask;
#[cfg(all(feature = "MIDIServices", feature = "objc2-core-foundation"))]
pub use self::__MIDIServices::kMIDIPropertyAdvanceScheduleTimeMuSec;
#[cfg(all(feature = "MIDIServices", feature = "objc2-core-foundation"))]
pub use self::__MIDIServices::kMIDIPropertyAssociatedEndpoint;
#[cfg(all(feature = "MIDIServices", feature = "objc2-core-foundation"))]
pub use self::__MIDIServices::kMIDIPropertyCanRoute;
#[cfg(all(feature = "MIDIServices", feature = "objc2-core-foundation"))]
pub use self::__MIDIServices::kMIDIPropertyConnectionUniqueID;
#[cfg(all(feature = "MIDIServices", feature = "objc2-core-foundation"))]
pub use self::__MIDIServices::kMIDIPropertyDeviceID;
#[cfg(all(feature = "MIDIServices", feature = "objc2-core-foundation"))]
pub use self::__MIDIServices::kMIDIPropertyDisplayName;
#[cfg(all(feature = "MIDIServices", feature = "objc2-core-foundation"))]
pub use self::__MIDIServices::kMIDIPropertyDriverDeviceEditorApp;
#[cfg(all(feature = "MIDIServices", feature = "objc2-core-foundation"))]
pub use self::__MIDIServices::kMIDIPropertyDriverOwner;
#[cfg(all(feature = "MIDIServices", feature = "objc2-core-foundation"))]
pub use self::__MIDIServices::kMIDIPropertyDriverVersion;
#[cfg(all(feature = "MIDIServices", feature = "objc2-core-foundation"))]
pub use self::__MIDIServices::kMIDIPropertyFactoryPatchNameFile;
#[cfg(all(feature = "MIDIServices", feature = "objc2-core-foundation"))]
pub use self::__MIDIServices::kMIDIPropertyImage;
#[cfg(all(feature = "MIDIServices", feature = "objc2-core-foundation"))]
pub use self::__MIDIServices::kMIDIPropertyIsBroadcast;
#[cfg(all(feature = "MIDIServices", feature = "objc2-core-foundation"))]
pub use self::__MIDIServices::kMIDIPropertyIsDrumMachine;
#[cfg(all(feature = "MIDIServices", feature = "objc2-core-foundation"))]
pub use self::__MIDIServices::kMIDIPropertyIsEffectUnit;
#[cfg(all(feature = "MIDIServices", feature = "objc2-core-foundation"))]
pub use self::__MIDIServices::kMIDIPropertyIsEmbeddedEntity;
#[cfg(all(feature = "MIDIServices", feature = "objc2-core-foundation"))]
pub use self::__MIDIServices::kMIDIPropertyIsMixer;
#[cfg(all(feature = "MIDIServices", feature = "objc2-core-foundation"))]
pub use self::__MIDIServices::kMIDIPropertyIsSampler;
#[cfg(all(feature = "MIDIServices", feature = "objc2-core-foundation"))]
pub use self::__MIDIServices::kMIDIPropertyManufacturer;
#[cfg(all(feature = "MIDIServices", feature = "objc2-core-foundation"))]
pub use self::__MIDIServices::kMIDIPropertyMaxReceiveChannels;
#[cfg(all(feature = "MIDIServices", feature = "objc2-core-foundation"))]
pub use self::__MIDIServices::kMIDIPropertyMaxSysExSpeed;
#[cfg(all(feature = "MIDIServices", feature = "objc2-core-foundation"))]
pub use self::__MIDIServices::kMIDIPropertyMaxTransmitChannels;
#[cfg(all(feature = "MIDIServices", feature = "objc2-core-foundation"))]
pub use self::__MIDIServices::kMIDIPropertyModel;
#[cfg(all(feature = "MIDIServices", feature = "objc2-core-foundation"))]
pub use self::__MIDIServices::kMIDIPropertyName;
#[cfg(all(feature = "MIDIServices", feature = "objc2-core-foundation"))]
pub use self::__MIDIServices::kMIDIPropertyNameConfiguration;
#[cfg(all(feature = "MIDIServices", feature = "objc2-core-foundation"))]
pub use self::__MIDIServices::kMIDIPropertyNameConfigurationDictionary;
#[cfg(all(feature = "MIDIServices", feature = "objc2-core-foundation"))]
pub use self::__MIDIServices::kMIDIPropertyOffline;
#[cfg(all(feature = "MIDIServices", feature = "objc2-core-foundation"))]
pub use self::__MIDIServices::kMIDIPropertyPanDisruptsStereo;
#[cfg(all(feature = "MIDIServices", feature = "objc2-core-foundation"))]
pub use self::__MIDIServices::kMIDIPropertyPrivate;
#[cfg(all(feature = "MIDIServices", feature = "objc2-core-foundation"))]
pub use self::__MIDIServices::kMIDIPropertyProtocolID;
#[cfg(all(feature = "MIDIServices", feature = "objc2-core-foundation"))]
pub use self::__MIDIServices::kMIDIPropertyReceiveChannels;
#[cfg(all(feature = "MIDIServices", feature = "objc2-core-foundation"))]
pub use self::__MIDIServices::kMIDIPropertyReceivesBankSelectLSB;
#[cfg(all(feature = "MIDIServices", feature = "objc2-core-foundation"))]
pub use self::__MIDIServices::kMIDIPropertyReceivesBankSelectMSB;
#[cfg(all(feature = "MIDIServices", feature = "objc2-core-foundation"))]
pub use self::__MIDIServices::kMIDIPropertyReceivesClock;
#[cfg(all(feature = "MIDIServices", feature = "objc2-core-foundation"))]
pub use self::__MIDIServices::kMIDIPropertyReceivesMTC;
#[cfg(all(feature = "MIDIServices", feature = "objc2-core-foundation"))]
pub use self::__MIDIServices::kMIDIPropertyReceivesNotes;
#[cfg(all(feature = "MIDIServices", feature = "objc2-core-foundation"))]
pub use self::__MIDIServices::kMIDIPropertyReceivesProgramChanges;
#[cfg(all(feature = "MIDIServices", feature = "objc2-core-foundation"))]
pub use self::__MIDIServices::kMIDIPropertySingleRealtimeEntity;
#[cfg(all(feature = "MIDIServices", feature = "objc2-core-foundation"))]
pub use self::__MIDIServices::kMIDIPropertySupportsGeneralMIDI;
#[cfg(all(feature = "MIDIServices", feature = "objc2-core-foundation"))]
pub use self::__MIDIServices::kMIDIPropertySupportsMMC;
#[cfg(all(feature = "MIDIServices", feature = "objc2-core-foundation"))]
pub use self::__MIDIServices::kMIDIPropertySupportsShowControl;
#[cfg(all(feature = "MIDIServices", feature = "objc2-core-foundation"))]
pub use self::__MIDIServices::kMIDIPropertyTransmitChannels;
#[cfg(all(feature = "MIDIServices", feature = "objc2-core-foundation"))]
pub use self::__MIDIServices::kMIDIPropertyTransmitsBankSelectLSB;
#[cfg(all(feature = "MIDIServices", feature = "objc2-core-foundation"))]
pub use self::__MIDIServices::kMIDIPropertyTransmitsBankSelectMSB;
#[cfg(all(feature = "MIDIServices", feature = "objc2-core-foundation"))]
pub use self::__MIDIServices::kMIDIPropertyTransmitsClock;
#[cfg(all(feature = "MIDIServices", feature = "objc2-core-foundation"))]
pub use self::__MIDIServices::kMIDIPropertyTransmitsMTC;
#[cfg(all(feature = "MIDIServices", feature = "objc2-core-foundation"))]
pub use self::__MIDIServices::kMIDIPropertyTransmitsNotes;
#[cfg(all(feature = "MIDIServices", feature = "objc2-core-foundation"))]
pub use self::__MIDIServices::kMIDIPropertyTransmitsProgramChanges;
#[cfg(all(feature = "MIDIServices", feature = "objc2-core-foundation"))]
pub use self::__MIDIServices::kMIDIPropertyUMPActiveGroupBitmap;
#[cfg(all(feature = "MIDIServices", feature = "objc2-core-foundation"))]
pub use self::__MIDIServices::kMIDIPropertyUMPCanTransmitGroupless;
#[cfg(all(feature = "MIDIServices", feature = "objc2-core-foundation"))]
pub use self::__MIDIServices::kMIDIPropertyUniqueID;
#[cfg(all(feature = "MIDIServices", feature = "objc2-core-foundation"))]
pub use self::__MIDIServices::kMIDIPropertyUserPatchNameFile;
#[cfg(feature = "MIDIServices")]
pub use self::__MIDIServices::kMIDIServerStartErr;
#[cfg(feature = "MIDIServices")]
pub use self::__MIDIServices::kMIDISetupFormatErr;
#[cfg(feature = "MIDIServices")]
pub use self::__MIDIServices::kMIDIUnknownEndpoint;
#[cfg(feature = "MIDIServices")]
pub use self::__MIDIServices::kMIDIUnknownError;
#[cfg(feature = "MIDIServices")]
pub use self::__MIDIServices::kMIDIUnknownProperty;
#[cfg(feature = "MIDIServices")]
pub use self::__MIDIServices::kMIDIWrongEndpointType;
#[cfg(feature = "MIDIServices")]
pub use self::__MIDIServices::kMIDIWrongPropertyType;
#[cfg(feature = "MIDIServices")]
pub use self::__MIDIServices::kMIDIWrongThread;
#[cfg(all(feature = "MIDIServices", feature = "objc2-core-foundation"))]
pub use self::__MIDIServices::MIDIClientCreate;
#[cfg(all(
    feature = "MIDIServices",
    feature = "block2",
    feature = "objc2-core-foundation"
))]
pub use self::__MIDIServices::MIDIClientCreateWithBlock;
#[cfg(feature = "MIDIServices")]
pub use self::__MIDIServices::MIDIClientDispose;
#[cfg(feature = "MIDIServices")]
pub use self::__MIDIServices::MIDIClientRef;
#[cfg(feature = "MIDIServices")]
pub use self::__MIDIServices::MIDICompletionProc;
#[cfg(feature = "MIDIServices")]
pub use self::__MIDIServices::MIDICompletionProcUMP;
#[cfg(all(feature = "MIDIServices", feature = "objc2-core-foundation"))]
pub use self::__MIDIServices::MIDIDestinationCreate;
#[cfg(all(
    feature = "MIDIServices",
    feature = "block2",
    feature = "objc2-core-foundation"
))]
pub use self::__MIDIServices::MIDIDestinationCreateWithBlock;
#[cfg(all(
    feature = "MIDIServices",
    feature = "block2",
    feature = "objc2-core-foundation"
))]
pub use self::__MIDIServices::MIDIDestinationCreateWithProtocol;
#[cfg(feature = "MIDIServices")]
pub use self::__MIDIServices::MIDIDeviceGetEntity;
#[cfg(feature = "MIDIServices")]
pub use self::__MIDIServices::MIDIDeviceGetNumberOfEntities;
#[cfg(feature = "MIDIServices")]
pub use self::__MIDIServices::MIDIDeviceRef;
#[cfg(feature = "MIDIServices")]
pub use self::__MIDIServices::MIDIEndpointDispose;
#[cfg(feature = "MIDIServices")]
pub use self::__MIDIServices::MIDIEndpointGetEntity;
#[cfg(feature = "MIDIServices")]
pub use self::__MIDIServices::MIDIEndpointRef;
#[cfg(feature = "MIDIServices")]
pub use self::__MIDIServices::MIDIEntityGetDestination;
#[cfg(feature = "MIDIServices")]
pub use self::__MIDIServices::MIDIEntityGetDevice;
#[cfg(feature = "MIDIServices")]
pub use self::__MIDIServices::MIDIEntityGetNumberOfDestinations;
#[cfg(feature = "MIDIServices")]
pub use self::__MIDIServices::MIDIEntityGetNumberOfSources;
#[cfg(feature = "MIDIServices")]
pub use self::__MIDIServices::MIDIEntityGetSource;
#[cfg(feature = "MIDIServices")]
pub use self::__MIDIServices::MIDIEntityRef;
#[cfg(feature = "MIDIServices")]
pub use self::__MIDIServices::MIDIEventList;
#[cfg(feature = "MIDIServices")]
pub use self::__MIDIServices::MIDIEventListAdd;
#[cfg(feature = "MIDIServices")]
pub use self::__MIDIServices::MIDIEventListInit;
#[cfg(feature = "MIDIServices")]
pub use self::__MIDIServices::MIDIEventPacket;
#[cfg(all(feature = "MIDIServices", feature = "objc2-core-foundation"))]
pub use self::__MIDIServices::MIDIEventPacketSysexBytesForGroup;
#[cfg(feature = "MIDIServices")]
pub use self::__MIDIServices::MIDIFlushOutput;
#[cfg(feature = "MIDIServices")]
pub use self::__MIDIServices::MIDIGetDestination;
#[cfg(feature = "MIDIServices")]
pub use self::__MIDIServices::MIDIGetDevice;
#[cfg(feature = "MIDIServices")]
pub use self::__MIDIServices::MIDIGetExternalDevice;
#[cfg(feature = "MIDIServices")]
pub use self::__MIDIServices::MIDIGetNumberOfDestinations;
#[cfg(feature = "MIDIServices")]
pub use self::__MIDIServices::MIDIGetNumberOfDevices;
#[cfg(feature = "MIDIServices")]
pub use self::__MIDIServices::MIDIGetNumberOfExternalDevices;
#[cfg(feature = "MIDIServices")]
pub use self::__MIDIServices::MIDIGetNumberOfSources;
#[cfg(feature = "MIDIServices")]
pub use self::__MIDIServices::MIDIGetSource;
#[cfg(feature = "MIDIServices")]
pub use self::__MIDIServices::MIDIIOErrorNotification;
#[cfg(all(feature = "MIDIServices", feature = "objc2-core-foundation"))]
pub use self::__MIDIServices::MIDIInputPortCreate;
#[cfg(all(
    feature = "MIDIServices",
    feature = "block2",
    feature = "objc2-core-foundation"
))]
pub use self::__MIDIServices::MIDIInputPortCreateWithBlock;
#[cfg(all(
    feature = "MIDIServices",
    feature = "block2",
    feature = "objc2-core-foundation"
))]
pub use self::__MIDIServices::MIDIInputPortCreateWithProtocol;
#[cfg(feature = "MIDIServices")]
pub use self::__MIDIServices::MIDINotification;
#[cfg(feature = "MIDIServices")]
pub use self::__MIDIServices::MIDINotificationMessageID;
#[cfg(all(feature = "MIDIServices", feature = "block2"))]
pub use self::__MIDIServices::MIDINotifyBlock;
#[cfg(feature = "MIDIServices")]
pub use self::__MIDIServices::MIDINotifyProc;
#[cfg(feature = "MIDIServices")]
pub use self::__MIDIServices::MIDIObjectAddRemoveNotification;
#[cfg(feature = "MIDIServices")]
pub use self::__MIDIServices::MIDIObjectFindByUniqueID;
#[cfg(all(feature = "MIDIServices", feature = "objc2-core-foundation"))]
pub use self::__MIDIServices::MIDIObjectGetDataProperty;
#[cfg(all(feature = "MIDIServices", feature = "objc2-core-foundation"))]
pub use self::__MIDIServices::MIDIObjectGetDictionaryProperty;
#[cfg(all(feature = "MIDIServices", feature = "objc2-core-foundation"))]
pub use self::__MIDIServices::MIDIObjectGetIntegerProperty;
#[cfg(all(feature = "MIDIServices", feature = "objc2-core-foundation"))]
pub use self::__MIDIServices::MIDIObjectGetProperties;
#[cfg(all(feature = "MIDIServices", feature = "objc2-core-foundation"))]
pub use self::__MIDIServices::MIDIObjectGetStringProperty;
#[cfg(all(feature = "MIDIServices", feature = "objc2-core-foundation"))]
pub use self::__MIDIServices::MIDIObjectPropertyChangeNotification;
#[cfg(feature = "MIDIServices")]
pub use self::__MIDIServices::MIDIObjectRef;
#[cfg(all(feature = "MIDIServices", feature = "objc2-core-foundation"))]
pub use self::__MIDIServices::MIDIObjectRemoveProperty;
#[cfg(all(feature = "MIDIServices", feature = "objc2-core-foundation"))]
pub use self::__MIDIServices::MIDIObjectSetDataProperty;
#[cfg(all(feature = "MIDIServices", feature = "objc2-core-foundation"))]
pub use self::__MIDIServices::MIDIObjectSetDictionaryProperty;
#[cfg(all(feature = "MIDIServices", feature = "objc2-core-foundation"))]
pub use self::__MIDIServices::MIDIObjectSetIntegerProperty;
#[cfg(all(feature = "MIDIServices", feature = "objc2-core-foundation"))]
pub use self::__MIDIServices::MIDIObjectSetStringProperty;
#[cfg(feature = "MIDIServices")]
pub use self::__MIDIServices::MIDIObjectType;
#[cfg(all(feature = "MIDIServices", feature = "objc2-core-foundation"))]
pub use self::__MIDIServices::MIDIOutputPortCreate;
#[cfg(feature = "MIDIServices")]
pub use self::__MIDIServices::MIDIPacket;
#[cfg(feature = "MIDIServices")]
pub use self::__MIDIServices::MIDIPacketList;
#[cfg(feature = "MIDIServices")]
pub use self::__MIDIServices::MIDIPacketListAdd;
#[cfg(feature = "MIDIServices")]
pub use self::__MIDIServices::MIDIPacketListInit;
#[cfg(feature = "MIDIServices")]
pub use self::__MIDIServices::MIDIPortConnectSource;
#[cfg(feature = "MIDIServices")]
pub use self::__MIDIServices::MIDIPortDisconnectSource;
#[cfg(feature = "MIDIServices")]
pub use self::__MIDIServices::MIDIPortDispose;
#[cfg(feature = "MIDIServices")]
pub use self::__MIDIServices::MIDIPortRef;
#[cfg(feature = "MIDIServices")]
pub use self::__MIDIServices::MIDIProtocolID;
#[cfg(all(feature = "MIDIServices", feature = "block2"))]
pub use self::__MIDIServices::MIDIReadBlock;
#[cfg(feature = "MIDIServices")]
pub use self::__MIDIServices::MIDIReadProc;
#[cfg(all(feature = "MIDIServices", feature = "block2"))]
pub use self::__MIDIServices::MIDIReceiveBlock;
#[cfg(feature = "MIDIServices")]
pub use self::__MIDIServices::MIDIReceived;
#[cfg(feature = "MIDIServices")]
pub use self::__MIDIServices::MIDIReceivedEventList;
#[cfg(feature = "MIDIServices")]
pub use self::__MIDIServices::MIDIRestart;
#[cfg(feature = "MIDIServices")]
pub use self::__MIDIServices::MIDISend;
#[cfg(feature = "MIDIServices")]
pub use self::__MIDIServices::MIDISendEventList;
#[cfg(feature = "MIDIServices")]
pub use self::__MIDIServices::MIDISendSysex;
#[cfg(feature = "MIDIServices")]
pub use self::__MIDIServices::MIDISendUMPSysex;
#[cfg(feature = "MIDIServices")]
pub use self::__MIDIServices::MIDISendUMPSysex8;
#[cfg(all(feature = "MIDIServices", feature = "objc2-core-foundation"))]
pub use self::__MIDIServices::MIDISourceCreate;
#[cfg(all(feature = "MIDIServices", feature = "objc2-core-foundation"))]
pub use self::__MIDIServices::MIDISourceCreateWithProtocol;
#[cfg(feature = "MIDIServices")]
pub use self::__MIDIServices::MIDISysexSendRequest;
#[cfg(feature = "MIDIServices")]
pub use self::__MIDIServices::MIDISysexSendRequestUMP;
#[cfg(feature = "MIDIServices")]
pub use self::__MIDIServices::MIDITimeStamp;
#[cfg(feature = "MIDIServices")]
pub use self::__MIDIServices::MIDIUniqueID;
#[cfg(all(
    feature = "MIDIServices",
    feature = "MIDISetup",
    feature = "objc2-core-foundation"
))]
pub use self::__MIDISetup::MIDIDeviceAddEntity;
#[cfg(all(
    feature = "MIDIServices",
    feature = "MIDISetup",
    feature = "objc2-core-foundation"
))]
pub use self::__MIDISetup::MIDIDeviceNewEntity;
#[cfg(all(feature = "MIDIServices", feature = "MIDISetup"))]
pub use self::__MIDISetup::MIDIDeviceRemoveEntity;
#[cfg(all(feature = "MIDIServices", feature = "MIDISetup"))]
pub use self::__MIDISetup::MIDIEntityAddOrRemoveEndpoints;
#[cfg(all(
    feature = "MIDIServices",
    feature = "MIDISetup",
    feature = "objc2-core-foundation"
))]
pub use self::__MIDISetup::MIDIExternalDeviceCreate;
#[cfg(all(feature = "MIDISetup", feature = "objc2-core-foundation"))]
pub use self::__MIDISetup::MIDIGetSerialPortDrivers;
#[cfg(all(feature = "MIDISetup", feature = "objc2-core-foundation"))]
pub use self::__MIDISetup::MIDIGetSerialPortOwner;
#[cfg(all(feature = "MIDISetup", feature = "objc2-core-foundation"))]
pub use self::__MIDISetup::MIDISetSerialPortOwner;
#[cfg(all(feature = "MIDIServices", feature = "MIDISetup"))]
pub use self::__MIDISetup::MIDISetupAddDevice;
#[cfg(all(feature = "MIDIServices", feature = "MIDISetup"))]
pub use self::__MIDISetup::MIDISetupAddExternalDevice;
#[cfg(all(feature = "MIDIServices", feature = "MIDISetup"))]
pub use self::__MIDISetup::MIDISetupCreate;
#[cfg(all(feature = "MIDIServices", feature = "MIDISetup"))]
pub use self::__MIDISetup::MIDISetupDispose;
#[cfg(all(
    feature = "MIDIServices",
    feature = "MIDISetup",
    feature = "objc2-core-foundation"
))]
pub use self::__MIDISetup::MIDISetupFromData;
#[cfg(all(feature = "MIDIServices", feature = "MIDISetup"))]
pub use self::__MIDISetup::MIDISetupGetCurrent;
#[cfg(all(feature = "MIDIServices", feature = "MIDISetup"))]
pub use self::__MIDISetup::MIDISetupInstall;
#[cfg(all(feature = "MIDIServices", feature = "MIDISetup"))]
pub use self::__MIDISetup::MIDISetupRef;
#[cfg(all(feature = "MIDIServices", feature = "MIDISetup"))]
pub use self::__MIDISetup::MIDISetupRemoveDevice;
#[cfg(all(feature = "MIDIServices", feature = "MIDISetup"))]
pub use self::__MIDISetup::MIDISetupRemoveExternalDevice;
#[cfg(all(
    feature = "MIDIServices",
    feature = "MIDISetup",
    feature = "objc2-core-foundation"
))]
pub use self::__MIDISetup::MIDISetupToData;
#[cfg(feature = "MIDIThruConnection")]
pub use self::__MIDIThruConnection::kMIDIThruConnection_MaxEndpoints;
#[cfg(feature = "MIDIThruConnection")]
pub use self::__MIDIThruConnection::MIDIControlTransform;
#[cfg(all(
    feature = "MIDIServices",
    feature = "MIDIThruConnection",
    feature = "objc2-core-foundation"
))]
pub use self::__MIDIThruConnection::MIDIThruConnectionCreate;
#[cfg(all(feature = "MIDIServices", feature = "MIDIThruConnection"))]
pub use self::__MIDIThruConnection::MIDIThruConnectionDispose;
#[cfg(all(feature = "MIDIServices", feature = "MIDIThruConnection"))]
pub use self::__MIDIThruConnection::MIDIThruConnectionEndpoint;
#[cfg(all(feature = "MIDIThruConnection", feature = "objc2-core-foundation"))]
pub use self::__MIDIThruConnection::MIDIThruConnectionFind;
#[cfg(all(
    feature = "MIDIServices",
    feature = "MIDIThruConnection",
    feature = "objc2-core-foundation"
))]
pub use self::__MIDIThruConnection::MIDIThruConnectionGetParams;
#[cfg(all(feature = "MIDIServices", feature = "MIDIThruConnection"))]
pub use self::__MIDIThruConnection::MIDIThruConnectionParams;
#[cfg(all(feature = "MIDIServices", feature = "MIDIThruConnection"))]
pub use self::__MIDIThruConnection::MIDIThruConnectionParamsInitialize;
#[cfg(all(feature = "MIDIServices", feature = "MIDIThruConnection"))]
pub use self::__MIDIThruConnection::MIDIThruConnectionRef;
#[cfg(all(
    feature = "MIDIServices",
    feature = "MIDIThruConnection",
    feature = "objc2-core-foundation"
))]
pub use self::__MIDIThruConnection::MIDIThruConnectionSetParams;
#[cfg(feature = "MIDIThruConnection")]
pub use self::__MIDIThruConnection::MIDITransform;
#[cfg(feature = "MIDIThruConnection")]
pub use self::__MIDIThruConnection::MIDITransformControlType;
#[cfg(feature = "MIDIThruConnection")]
pub use self::__MIDIThruConnection::MIDITransformType;
#[cfg(feature = "MIDIThruConnection")]
pub use self::__MIDIThruConnection::MIDIValueMap;
#[cfg(all(feature = "MIDIUMPCIProfile", feature = "objc2"))]
pub use self::__MIDIUMPCIProfile::MIDIUMPCIProfile;
#[cfg(all(feature = "MIDIUMPEndpoint", feature = "objc2"))]
pub use self::__MIDIUMPEndpoint::MIDI2DeviceInfo;
#[cfg(all(feature = "MIDIUMPEndpoint", feature = "objc2"))]
pub use self::__MIDIUMPEndpoint::MIDIUMPEndpoint;
#[cfg(all(feature = "MIDIMessages", feature = "MIDIUMPEndpoint"))]
pub use self::__MIDIUMPEndpoint::MIDIUMPProtocolOptions;
#[cfg(all(feature = "MIDIUMPEndpointManager", feature = "objc2"))]
pub use self::__MIDIUMPEndpointManager::MIDIUMPEndpointManager;
#[cfg(all(feature = "MIDIUMPEndpointManager", feature = "objc2-foundation"))]
pub use self::__MIDIUMPEndpointManager::MIDIUMPEndpointManagerDictionaryKey;
#[cfg(all(feature = "MIDIUMPEndpointManager", feature = "objc2-foundation"))]
pub use self::__MIDIUMPEndpointManager::MIDIUMPEndpointObjectKey;
#[cfg(all(feature = "MIDIUMPEndpointManager", feature = "objc2-foundation"))]
pub use self::__MIDIUMPEndpointManager::MIDIUMPEndpointWasAddedNotification;
#[cfg(all(feature = "MIDIUMPEndpointManager", feature = "objc2-foundation"))]
pub use self::__MIDIUMPEndpointManager::MIDIUMPEndpointWasRemovedNotification;
#[cfg(all(feature = "MIDIUMPEndpointManager", feature = "objc2-foundation"))]
pub use self::__MIDIUMPEndpointManager::MIDIUMPEndpointWasUpdatedNotification;
#[cfg(all(feature = "MIDIUMPEndpointManager", feature = "objc2-foundation"))]
pub use self::__MIDIUMPEndpointManager::MIDIUMPFunctionBlockObjectKey;
#[cfg(all(feature = "MIDIUMPEndpointManager", feature = "objc2-foundation"))]
pub use self::__MIDIUMPEndpointManager::MIDIUMPFunctionBlockWasUpdatedNotification;
#[cfg(all(feature = "MIDIUMPFunctionBlock", feature = "objc2"))]
pub use self::__MIDIUMPFunctionBlock::MIDIUMPFunctionBlock;
#[cfg(all(
    feature = "MIDIUMPEndpoint",
    feature = "MIDIUMPMutableEndpoint",
    feature = "objc2"
))]
pub use self::__MIDIUMPMutableEndpoint::MIDIUMPMutableEndpoint;
#[cfg(all(
    feature = "MIDIUMPFunctionBlock",
    feature = "MIDIUMPMutableFunctionBlock",
    feature = "objc2"
))]
pub use self::__MIDIUMPMutableFunctionBlock::MIDIUMPMutableFunctionBlock;
#[cfg(feature = "MIDIUMPCI")]
pub use self::__MIDIUMPCI::kMIDICIPropertyExchangeBadRequestID;
#[cfg(feature = "MIDIUMPCI")]
pub use self::__MIDIUMPCI::MIDI2DeviceManufacturer;
#[cfg(feature = "MIDIUMPCI")]
pub use self::__MIDIUMPCI::MIDI2DeviceRevisionLevel;
#[cfg(all(feature = "MIDIMessages", feature = "MIDIUMPCI"))]
pub use self::__MIDIUMPCI::MIDICICategoryOptions;
#[cfg(feature = "MIDIUMPCI")]
pub use self::__MIDIUMPCI::MIDICIDeviceType;
#[cfg(all(feature = "MIDIMessages", feature = "MIDIUMPCI"))]
pub use self::__MIDIUMPCI::MIDICIManagementMessageType;
#[cfg(all(feature = "MIDIMessages", feature = "MIDIUMPCI"))]
pub use self::__MIDIUMPCI::MIDICIProcessInquiryMessageType;
#[cfg(all(feature = "MIDIMessages", feature = "MIDIUMPCI"))]
pub use self::__MIDIUMPCI::MIDICIProfileID;
#[cfg(all(feature = "MIDIMessages", feature = "MIDIUMPCI"))]
pub use self::__MIDIUMPCI::MIDICIProfileIDManufacturerSpecific;
#[cfg(all(feature = "MIDIMessages", feature = "MIDIUMPCI"))]
pub use self::__MIDIUMPCI::MIDICIProfileIDStandard;
#[cfg(all(feature = "MIDIMessages", feature = "MIDIUMPCI"))]
pub use self::__MIDIUMPCI::MIDICIProfileMessageType;
#[cfg(feature = "MIDIUMPCI")]
pub use self::__MIDIUMPCI::MIDICIProfileType;
#[cfg(all(feature = "MIDIMessages", feature = "MIDIUMPCI"))]
pub use self::__MIDIUMPCI::MIDICIPropertyExchangeMessageType;
#[cfg(feature = "MIDIUMPCI")]
pub use self::__MIDIUMPCI::MIDICIPropertyExchangeRequestID;
#[cfg(feature = "MIDIUMPCI")]
pub use self::__MIDIUMPCI::MIDIUMPCIObjectBackingType;
#[cfg(all(feature = "MIDIMessages", feature = "MIDIUMPCI"))]
pub use self::__MIDIUMPCI::MIDIUMPFunctionBlockID;
