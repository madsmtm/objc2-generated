// This file has been automatically generated by `objc2`'s `header-translator`.
// DO NOT EDIT

#![allow(unused_imports)]
#![allow(deprecated)]
#![allow(non_snake_case)]
#![allow(non_camel_case_types)]
#![allow(non_upper_case_globals)]
#![allow(missing_docs)]
#![allow(clippy::too_many_arguments)]
#![allow(clippy::type_complexity)]
#![allow(clippy::upper_case_acronyms)]
#![allow(clippy::identity_op)]
#![allow(clippy::missing_safety_doc)]
#![allow(clippy::doc_lazy_continuation)]
#![allow(rustdoc::broken_intra_doc_links)]
#![allow(rustdoc::bare_urls)]
#![allow(rustdoc::unportable_markdown)]
#![allow(rustdoc::invalid_html_tags)]

#[link(name = "IOBluetooth", kind = "framework")]
extern "C" {}

#[cfg(feature = "Bluetooth")]
#[path = "Bluetooth.rs"]
mod __Bluetooth;
#[cfg(feature = "BluetoothAssignedNumbers")]
#[path = "BluetoothAssignedNumbers.rs"]
mod __BluetoothAssignedNumbers;
#[cfg(feature = "IOBluetoothTypes")]
#[path = "IOBluetoothTypes.rs"]
mod __IOBluetoothTypes;
#[cfg(feature = "IOBluetoothUserLib")]
#[path = "IOBluetoothUserLib.rs"]
mod __IOBluetoothUserLib;
#[cfg(feature = "IOBluetoothUtilities")]
#[path = "IOBluetoothUtilities.rs"]
mod __IOBluetoothUtilities;
#[cfg(feature = "OBEX")]
#[path = "OBEX.rs"]
mod __OBEX;
#[cfg(feature = "OBEXBluetooth")]
#[path = "OBEXBluetooth.rs"]
mod __OBEXBluetooth;
#[cfg(feature = "objc2")]
#[path = "objc2/mod.rs"]
mod __objc2;

#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothACLLogicalChannelL2CAPContinue;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothACLLogicalChannelL2CAPStart;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothACLLogicalChannelLMP;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothACLLogicalChannelReserved;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothAirModeALawLog;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothAirModeCVSD;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothAirModeTransparentData;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothAirModeULawLog;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothAllowRoleSwitch;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothConnectionHandleNone;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothConnectionHandleSerialDeviceReserved;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothDeviceNameMaxLength;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothDontAllowRoleSwitch;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothEncryptionEnableBREDRAESCCM;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothEncryptionEnableBREDRE0;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothEncryptionEnableLEAESCCM;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothEncryptionEnableOff;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothEncryptionEnableOn;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothGeneralInquiryAccessCodeIndex;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothGeneralInquiryAccessCodeLAPValue;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothHCICommandAMPTest;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothHCICommandAMPTestEnd;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothHCICommandAcceptConnectionRequest;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothHCICommandAcceptSniffRequest;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothHCICommandAcceptSynchronousConnectionRequest;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothHCICommandAddSCOConnection;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothHCICommandAuthenticationRequested;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothHCICommandChangeConnectionLinkKey;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothHCICommandChangeConnectionPacketType;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothHCICommandChangeLocalName;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothHCICommandCreateConnection;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothHCICommandCreateConnectionCancel;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothHCICommandCreateNewUnitKey;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothHCICommandDeleteReservedLTADDR;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothHCICommandDeleteStoredLinkKey;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothHCICommandDisconnect;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothHCICommandEnableAMPReceiverReports;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothHCICommandEnableDeviceUnderTestMode;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothHCICommandEnhancedAcceptSynchronousConnectionRequest;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothHCICommandEnhancedFlush;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothHCICommandEnhancedSetupSynchronousConnection;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothHCICommandExitParkMode;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothHCICommandExitPeriodicInquiryMode;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothHCICommandExitSniffMode;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothHCICommandFlowSpecification;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothHCICommandFlush;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothHCICommandGetLinkQuality;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothHCICommandGetMWSTransportLayerConfiguration;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothHCICommandGroupHostController;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothHCICommandGroupInformational;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothHCICommandGroupLinkControl;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothHCICommandGroupLinkPolicy;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothHCICommandGroupLogoTesting;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothHCICommandGroupLowEnergy;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothHCICommandGroupMax;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothHCICommandGroupNoOp;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothHCICommandGroupStatus;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothHCICommandGroupTesting;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothHCICommandGroupVendorSpecific;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothHCICommandHoldMode;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothHCICommandHostBufferSize;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothHCICommandHostNumberOfCompletedPackets;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothHCICommandIOCapabilityRequestNegativeReply;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothHCICommandIOCapabilityRequestReply;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothHCICommandInquiry;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothHCICommandInquiryCancel;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothHCICommandLEAddDeviceToPeriodicAdvertiserList;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothHCICommandLEAddDeviceToResolvingList;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothHCICommandLEAddDeviceToWhiteList;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothHCICommandLEClearAdvertisingSets;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothHCICommandLEClearPeriodicAdvertiserList;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothHCICommandLEClearResolvingList;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothHCICommandLEClearWhiteList;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothHCICommandLEConnectionUpdate;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothHCICommandLECreateConnection;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothHCICommandLECreateConnectionCancel;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothHCICommandLEEncrypt;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothHCICommandLEEnhancedReceiverTest;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothHCICommandLEEnhancedTransmitterTest;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothHCICommandLEExtendedCreateConnection;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothHCICommandLEGenerateDHKey;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothHCICommandLELongTermKeyRequestNegativeReply;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothHCICommandLELongTermKeyRequestReply;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothHCICommandLEPeriodicAdvertisingCreateSync;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothHCICommandLEPeriodicAdvertisingCreateSyncCancel;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothHCICommandLEPeriodicAdvertisingTerminateSync;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothHCICommandLERand;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothHCICommandLEReadAdvertisingChannelTxPower;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothHCICommandLEReadBufferSize;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothHCICommandLEReadChannelMap;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothHCICommandLEReadLocalP256PublicKey;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothHCICommandLEReadLocalResolvableAddress;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothHCICommandLEReadLocalSupportedFeatures;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothHCICommandLEReadMaximumAdvertisingDataLength;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothHCICommandLEReadMaximumDataLength;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothHCICommandLEReadNumberofSupportedAdvertisingSets;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothHCICommandLEReadPeerResolvableAddress;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothHCICommandLEReadPeriodicAdvertiserListSize;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothHCICommandLEReadPhy;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothHCICommandLEReadRFPathCompensation;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothHCICommandLEReadRemoteUsedFeatures;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothHCICommandLEReadResolvingListSize;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothHCICommandLEReadSuggestedDefaultDataLength;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothHCICommandLEReadSupportedStates;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothHCICommandLEReadTransmitPower;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothHCICommandLEReadWhiteListSize;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothHCICommandLEReceiverTest;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothHCICommandLERemoteConnectionParameterRequestNegativeReply;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothHCICommandLERemoteConnectionParameterRequestReply;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothHCICommandLERemoveAdvertisingSet;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothHCICommandLERemoveDeviceFromPeriodicAdvertiserList;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothHCICommandLERemoveDeviceFromResolvingList;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothHCICommandLERemoveDeviceFromWhiteList;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothHCICommandLESetAddressResolutionEnable;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothHCICommandLESetAdvertiseEnable;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothHCICommandLESetAdvertisingData;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothHCICommandLESetAdvertisingParameters;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothHCICommandLESetAdvertisingSetRandomAddress;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothHCICommandLESetDataLength;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothHCICommandLESetDefaultPhy;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothHCICommandLESetEventMask;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothHCICommandLESetExtendedAdvertisingData;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothHCICommandLESetExtendedAdvertisingEnableCommand;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothHCICommandLESetExtendedAdvertisingParameters;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothHCICommandLESetExtendedScanEnable;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothHCICommandLESetExtendedScanParameters;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothHCICommandLESetExtendedScanResponseData;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothHCICommandLESetHostChannelClassification;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothHCICommandLESetPeriodicAdvertisingData;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothHCICommandLESetPeriodicAdvertisingEnable;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothHCICommandLESetPeriodicAdvertisingParameters;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothHCICommandLESetPhy;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothHCICommandLESetPrivacyMode;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothHCICommandLESetRandomAddress;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothHCICommandLESetResolvablePrivateAddressTimeout;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothHCICommandLESetScanEnable;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothHCICommandLESetScanParameters;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothHCICommandLESetScanResponseData;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothHCICommandLEStartEncryption;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothHCICommandLETestEnd;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothHCICommandLETransmitterTest;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothHCICommandLEWriteRFPathCompensation;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothHCICommandLEWriteSuggestedDefaultDataLength;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothHCICommandLinkKeyRequestNegativeReply;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothHCICommandLinkKeyRequestReply;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothHCICommandMasterLinkKey;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothHCICommandMax;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothHCICommandNoOp;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothHCICommandPINCodeRequestNegativeReply;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothHCICommandPINCodeRequestReply;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothHCICommandPacketHeaderSize;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothHCICommandPacketMaxDataSize;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothHCICommandParkMode;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothHCICommandPeriodicInquiryMode;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothHCICommandQoSSetup;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothHCICommandReadAFHChannelAssessmentMode;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothHCICommandReadAFHMappings;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothHCICommandReadAuthenticatedPayloadTimeout;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothHCICommandReadAuthenticationEnable;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothHCICommandReadAutomaticFlushTimeout;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothHCICommandReadBestEffortFlushTimeout;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothHCICommandReadBufferSize;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothHCICommandReadClassOfDevice;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothHCICommandReadClock;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothHCICommandReadClockOffset;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothHCICommandReadConnectionAcceptTimeout;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothHCICommandReadCountryCode;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothHCICommandReadCurrentIACLAP;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothHCICommandReadDataBlockSize;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothHCICommandReadDefaultErroneousDataReporting;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothHCICommandReadDefaultLinkPolicySettings;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothHCICommandReadDeviceAddress;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothHCICommandReadEncryptionKeySize;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothHCICommandReadEncryptionMode;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothHCICommandReadEnhancedTransmitPowerLevel;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothHCICommandReadExtendedInquiryLength;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothHCICommandReadExtendedInquiryResponse;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothHCICommandReadExtendedPageTimeout;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothHCICommandReadFailedContactCounter;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothHCICommandReadFlowControlMode;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothHCICommandReadHoldModeActivity;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothHCICommandReadInquiryMode;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothHCICommandReadInquiryResponseTransmitPower;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothHCICommandReadInquiryScanActivity;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothHCICommandReadInquiryScanType;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothHCICommandReadLEHostSupported;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothHCICommandReadLMPHandle;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothHCICommandReadLinkPolicySettings;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothHCICommandReadLinkSupervisionTimeout;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothHCICommandReadLocalAMPASSOC;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothHCICommandReadLocalAMPInfo;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothHCICommandReadLocalExtendedFeatures;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothHCICommandReadLocalName;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothHCICommandReadLocalOOBData;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothHCICommandReadLocalOOBExtendedData;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothHCICommandReadLocalSupportedCodecs;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothHCICommandReadLocalSupportedCommands;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothHCICommandReadLocalSupportedFeatures;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothHCICommandReadLocalVersionInformation;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothHCICommandReadLocationData;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothHCICommandReadLogicalLinkAcceptTimeout;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothHCICommandReadLoopbackMode;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothHCICommandReadNumberOfBroadcastRetransmissions;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothHCICommandReadNumberOfSupportedIAC;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothHCICommandReadPINType;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothHCICommandReadPageScanActivity;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothHCICommandReadPageScanMode;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothHCICommandReadPageScanPeriodMode;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothHCICommandReadPageScanType;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothHCICommandReadPageTimeout;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothHCICommandReadRSSI;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothHCICommandReadRemoteExtendedFeatures;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothHCICommandReadRemoteSupportedFeatures;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothHCICommandReadRemoteVersionInformation;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothHCICommandReadSCOFlowControlEnable;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothHCICommandReadScanEnable;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothHCICommandReadSecureConnectionsHostSupport;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothHCICommandReadSimplePairingMode;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothHCICommandReadStoredLinkKey;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothHCICommandReadSynchronizationTrainParameters;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothHCICommandReadTransmitPowerLevel;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothHCICommandReadVoiceSetting;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothHCICommandReceiveSynchronizationTrain;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothHCICommandRefreshEncryptionKey;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothHCICommandRejectConnectionRequest;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothHCICommandRejectSniffRequest;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothHCICommandRejectSynchronousConnectionRequest;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothHCICommandRemoteNameRequest;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothHCICommandRemoteNameRequestCancel;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothHCICommandRemoteOOBDataRequestNegativeReply;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothHCICommandRemoteOOBDataRequestReply;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothHCICommandRemoteOOBExtendedDataRequestReply;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothHCICommandReset;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothHCICommandResetFailedContactCounter;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothHCICommandRoleDiscovery;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothHCICommandSendKeypressNotification;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothHCICommandSetAFHClassification;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothHCICommandSetConnectionEncryption;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothHCICommandSetConnectionlessPeripheralBroadcast;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothHCICommandSetConnectionlessPeripheralBroadcastData;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothHCICommandSetConnectionlessPeripheralBroadcastReceive;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothHCICommandSetConnectionlessSlaveBroadcast;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothHCICommandSetConnectionlessSlaveBroadcastData;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothHCICommandSetConnectionlessSlaveBroadcastReceive;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothHCICommandSetEventFilter;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothHCICommandSetEventMask;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothHCICommandSetEventMaskPageTwo;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothHCICommandSetExternalFrameConfiguration;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothHCICommandSetHostControllerToHostFlowControl;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothHCICommandSetMWSChannelParameters;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothHCICommandSetMWSPATTERNConfiguration;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothHCICommandSetMWSScanFrequencyTable;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothHCICommandSetMWSSignaling;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothHCICommandSetMWSTransportLayer;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothHCICommandSetReservedLTADDR;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothHCICommandSetTriggeredClockCapture;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothHCICommandSetupSynchronousConnection;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothHCICommandShortRangeMode;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothHCICommandSniffMode;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothHCICommandSniffSubrating;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothHCICommandStartSynchronizationTrain;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothHCICommandSwitchRole;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothHCICommandTruncatedPage;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothHCICommandTruncatedPageCancel;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothHCICommandUserConfirmationRequestNegativeReply;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothHCICommandUserConfirmationRequestReply;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothHCICommandUserPasskeyRequestNegativeReply;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothHCICommandUserPasskeyRequestReply;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothHCICommandWriteAFHChannelAssessmentMode;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothHCICommandWriteAuthenticatedPayloadTimeout;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothHCICommandWriteAuthenticationEnable;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothHCICommandWriteAutomaticFlushTimeout;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothHCICommandWriteBestEffortFlushTimeout;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothHCICommandWriteClassOfDevice;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothHCICommandWriteConnectionAcceptTimeout;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothHCICommandWriteCurrentIACLAP;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothHCICommandWriteDefaultErroneousDataReporting;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothHCICommandWriteDefaultLinkPolicySettings;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothHCICommandWriteEncryptionMode;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothHCICommandWriteExtendedInquiryLength;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothHCICommandWriteExtendedInquiryResponse;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothHCICommandWriteExtendedPageTimeout;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothHCICommandWriteFlowControlMode;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothHCICommandWriteHoldModeActivity;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothHCICommandWriteInquiryMode;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothHCICommandWriteInquiryResponseTransmitPower;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothHCICommandWriteInquiryScanActivity;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothHCICommandWriteInquiryScanType;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothHCICommandWriteLEHostSupported;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothHCICommandWriteLinkPolicySettings;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothHCICommandWriteLinkSupervisionTimeout;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothHCICommandWriteLocationData;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothHCICommandWriteLogicalLinkAcceptTimeout;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothHCICommandWriteLoopbackMode;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothHCICommandWriteNumberOfBroadcastRetransmissions;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothHCICommandWritePINType;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothHCICommandWritePageScanActivity;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothHCICommandWritePageScanMode;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothHCICommandWritePageScanPeriodMode;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothHCICommandWritePageScanType;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothHCICommandWritePageTimeout;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothHCICommandWriteRemoteAMPASSOC;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothHCICommandWriteSCOFlowControlEnable;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothHCICommandWriteScanEnable;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothHCICommandWriteSecureConnectionsHostSupport;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothHCICommandWriteSimplePairingDebugMode;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothHCICommandWriteSimplePairingMode;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothHCICommandWriteStoredLinkKey;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothHCICommandWriteSynchronizationTrainParameters;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothHCICommandWriteVoiceSetting;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothHCIDataPacketHeaderSize;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothHCIDataPacketMaxDataSize;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothHCIErroneousDataReportingDisabled;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothHCIErroneousDataReportingEnabled;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothHCIErroneousDataReportingReservedEnd;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothHCIErroneousDataReportingReservedStart;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothHCIErrorACLConnectionAlreadyExists;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothHCIErrorAuthenticationFailure;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothHCIErrorChannelClassificationNotSupported;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothHCIErrorCoarseClockAdjustmentRejected;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothHCIErrorCommandDisallowed;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothHCIErrorConnectionFailedToBeEstablished;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothHCIErrorConnectionRejectedDueToNoSuitableChannelFound;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothHCIErrorConnectionTerminatedByLocalHost;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothHCIErrorConnectionTerminatedDueToMICFailure;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothHCIErrorConnectionTimeout;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothHCIErrorControllerBusy;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothHCIErrorDifferentTransactionCollision;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothHCIErrorDirectedAdvertisingTimeout;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothHCIErrorEncryptionModeNotAcceptable;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothHCIErrorExtendedInquiryResponseTooLarge;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothHCIErrorHardwareFailure;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothHCIErrorHostBusyPairing;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothHCIErrorHostRejectedLimitedResources;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothHCIErrorHostRejectedRemoteDeviceIsPersonal;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothHCIErrorHostRejectedSecurityReasons;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothHCIErrorHostRejectedUnacceptableDeviceAddress;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothHCIErrorHostTimeout;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothHCIErrorInstantPassed;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothHCIErrorInsufficientSecurity;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothHCIErrorInvalidHCICommandParameters;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothHCIErrorInvalidLMPParameters;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothHCIErrorKeyMissing;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothHCIErrorLMPErrorTransactionCollision;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothHCIErrorLMPPDUNotAllowed;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothHCIErrorLMPResponseTimeout;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothHCIErrorMACConnectionFailed;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothHCIErrorMax;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothHCIErrorMaxNumberOfConnections;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothHCIErrorMaxNumberOfSCOConnectionsToADevice;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothHCIErrorMemoryFull;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothHCIErrorNoConnection;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothHCIErrorOtherEndTerminatedConnectionAboutToPowerOff;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothHCIErrorOtherEndTerminatedConnectionLowResources;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothHCIErrorOtherEndTerminatedConnectionUserEnded;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothHCIErrorPageTimeout;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothHCIErrorPairingNotAllowed;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothHCIErrorPairingWithUnitKeyNotSupported;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothHCIErrorParameterOutOfMandatoryRange;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothHCIErrorPowerIsOFF;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothHCIErrorQoSNotSupported;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothHCIErrorQoSRejected;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothHCIErrorQoSUnacceptableParameter;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothHCIErrorRepeatedAttempts;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothHCIErrorReservedSlotViolation;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothHCIErrorRoleChangeNotAllowed;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothHCIErrorRoleSwitchFailed;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothHCIErrorRoleSwitchPending;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothHCIErrorSCOAirModeRejected;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothHCIErrorSCOIntervalRejected;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothHCIErrorSCOOffsetRejected;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothHCIErrorSecureSimplePairingNotSupportedByHost;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothHCIErrorSuccess;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothHCIErrorUnacceptableConnectionInterval;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothHCIErrorUnitKeyUsed;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothHCIErrorUnknownHCICommand;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothHCIErrorUnknownLMPPDU;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothHCIErrorUnspecifiedError;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothHCIErrorUnsupportedFeatureOrParameterValue;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothHCIErrorUnsupportedLMPParameterValue;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothHCIErrorUnsupportedRemoteFeature;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothHCIEventAMPReceiverReport;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothHCIEventAMPStartTest;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothHCIEventAMPStatusChange;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothHCIEventAMPTestEnd;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothHCIEventAuthenticationComplete;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothHCIEventChangeConnectionLinkKeyComplete;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothHCIEventChannelSelected;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothHCIEventCommandComplete;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothHCIEventCommandStatus;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothHCIEventConnectionComplete;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothHCIEventConnectionPacketType;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothHCIEventConnectionRequest;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothHCIEventDataBufferOverflow;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothHCIEventDisconnectionComplete;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothHCIEventDisconnectionLogicalLinkComplete;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothHCIEventDisconnectionPhysicalLinkComplete;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothHCIEventEncryptionChange;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothHCIEventEncryptionKeyRefreshComplete;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothHCIEventEnhancedFlushComplete;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothHCIEventExtendedInquiryResult;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothHCIEventFlowSpecModifyComplete;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothHCIEventFlowSpecificationComplete;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothHCIEventFlushOccurred;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothHCIEventHardwareError;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothHCIEventIOCapabilityRequest;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothHCIEventIOCapabilityResponse;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothHCIEventInquiryComplete;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothHCIEventInquiryResult;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothHCIEventInquiryResultWithRSSI;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothHCIEventKeypressNotification;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothHCIEventLEMetaEvent;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothHCIEventLinkKeyNotification;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothHCIEventLinkKeyRequest;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothHCIEventLinkSupervisionTimeoutChanged;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothHCIEventLogicalLinkComplete;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothHCIEventLogoTesting;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothHCIEventLoopbackCommand;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothHCIEventMaskAll;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothHCIEventMaskAuthenticationComplete;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothHCIEventMaskChangeConnectionLinkKeyComplete;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothHCIEventMaskCommandComplete;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothHCIEventMaskCommandStatus;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothHCIEventMaskConnectionComplete;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothHCIEventMaskConnectionPacketTypeChanged;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothHCIEventMaskConnectionRequest;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothHCIEventMaskDataBufferOverflow;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothHCIEventMaskDefault;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothHCIEventMaskDisconnectionComplete;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothHCIEventMaskEncryptionChange;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothHCIEventMaskFlushOccurred;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothHCIEventMaskHardwareError;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothHCIEventMaskInquiryComplete;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothHCIEventMaskInquiryResult;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothHCIEventMaskLinkKeyNotification;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothHCIEventMaskLinkKeyRequest;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothHCIEventMaskLoopbackCommand;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothHCIEventMaskMasterLinkKeyComplete;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothHCIEventMaskMaxSlotsChange;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothHCIEventMaskModeChange;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothHCIEventMaskNone;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothHCIEventMaskNumberOfCompletedPackets;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothHCIEventMaskPINCodeRequest;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothHCIEventMaskPageScanModeChange;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothHCIEventMaskPageScanRepetitionModeChange;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothHCIEventMaskQoSSetupComplete;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothHCIEventMaskQoSViolation;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothHCIEventMaskReadClockOffsetComplete;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothHCIEventMaskReadRemoteSupportedFeaturesComplete;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothHCIEventMaskReadRemoteVersionInformationComplete;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothHCIEventMaskRemoteNameRequestComplete;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothHCIEventMaskReturnLinkKeys;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothHCIEventMaskRoleChange;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothHCIEventMasterLinkKeyComplete;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothHCIEventMaxSlotsChange;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothHCIEventModeChange;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothHCIEventNumberOfCompletedDataBlocks;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothHCIEventNumberOfCompletedPackets;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothHCIEventPINCodeRequest;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothHCIEventPacketHeaderSize;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothHCIEventPacketMaxDataSize;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothHCIEventPageScanModeChange;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothHCIEventPageScanRepetitionModeChange;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothHCIEventPhysicalLinkComplete;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothHCIEventPhysicalLinkLossEarlyWarning;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothHCIEventPhysicalLinkRecovery;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothHCIEventQoSSetupComplete;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothHCIEventQoSViolation;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothHCIEventReadClockOffsetComplete;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothHCIEventReadRemoteExtendedFeaturesComplete;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothHCIEventReadRemoteSupportedFeaturesComplete;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothHCIEventReadRemoteVersionInformationComplete;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothHCIEventRemoteHostSupportedFeaturesNotification;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothHCIEventRemoteNameRequestComplete;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothHCIEventRemoteOOBDataRequest;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothHCIEventReturnLinkKeys;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothHCIEventRoleChange;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothHCIEventShortRangeModeChangeComplete;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothHCIEventSimplePairingComplete;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothHCIEventSniffSubrating;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothHCIEventSynchronousConnectionChanged;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothHCIEventSynchronousConnectionComplete;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothHCIEventUserConfirmationRequest;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothHCIEventUserPasskeyNotification;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothHCIEventUserPasskeyRequest;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothHCIEventVendorSpecific;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothHCIInquiryResultsMaxResults;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothHCILoopbackModeLocal;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothHCILoopbackModeOff;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothHCILoopbackModeRemote;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothHCIMaxCommandPacketSize;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothHCIMaxDataPacketSize;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothHCIMaxEventPacketSize;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothHCIOpCodeNoOp;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothHCISubEventLEAdvertisingReport;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothHCISubEventLEAdvertisingSetTerminated;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothHCISubEventLEChannelSelectionAlgorithm;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothHCISubEventLEConnectionComplete;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothHCISubEventLEConnectionUpdateComplete;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothHCISubEventLEDataLengthChange;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothHCISubEventLEDirectAdvertisingReport;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothHCISubEventLEEnhancedConnectionComplete;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothHCISubEventLEExtendedAdvertising;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothHCISubEventLEGenerateDHKeyComplete;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothHCISubEventLELongTermKeyRequest;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothHCISubEventLEPeriodicAdvertisingReport;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothHCISubEventLEPeriodicAdvertisingSyncEstablished;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothHCISubEventLEPeriodicAdvertisingSyncLost;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothHCISubEventLEPhyUpdateComplete;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothHCISubEventLEReadLocalP256PublicKeyComplete;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothHCISubEventLEReadRemoteUsedFeaturesComplete;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothHCISubEventLERemoteConnectionParameterRequest;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothHCISubEventLEScanRequestReceived;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothHCISubEventLEScanTimeout;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothHCITransportUSBClassCode;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothHCITransportUSBProtocolCode;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothHCITransportUSBSubClassCode;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothKeyFlagSemiPermanent;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothKeyFlagTemporary;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothKeyTypeAuthenticatedCombination;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothKeyTypeAuthenticatedCombinationP256;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothKeyTypeChangedCombination;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothKeyTypeCombination;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothKeyTypeDebugCombination;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothKeyTypeLocalUnit;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothKeyTypeRemoteUnit;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothKeyTypeUnauthenticatedCombination;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothKeyTypeUnauthenticatedCombinationP256;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothL2CAPChannelAMPManagerProtocol;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothL2CAPChannelAMPTestManager;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothL2CAPChannelAttributeProtocol;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothL2CAPChannelBREDRSecurityManager;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothL2CAPChannelConnectionLessData;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothL2CAPChannelDynamicEnd;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothL2CAPChannelDynamicStart;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothL2CAPChannelEnd;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothL2CAPChannelLEAP;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothL2CAPChannelLEAS;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothL2CAPChannelLESignalling;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothL2CAPChannelMagicPairing;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothL2CAPChannelMagnet;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothL2CAPChannelNull;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothL2CAPChannelReservedEnd;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothL2CAPChannelReservedStart;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothL2CAPChannelSecurityManager;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothL2CAPChannelSignalling;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothL2CAPConfigurationOptionFlushTimeoutLength;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothL2CAPConfigurationOptionMTULength;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothL2CAPConfigurationOptionQoSLength;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothL2CAPConfigurationOptionRetransmissionAndFlowControlLength;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothL2CAPFlushTimeoutDefault;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothL2CAPFlushTimeoutEnd;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothL2CAPFlushTimeoutForever;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothL2CAPFlushTimeoutImmediate;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothL2CAPFlushTimeoutUseExisting;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothL2CAPInfoTypeMaxConnectionlessMTUSize;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothL2CAPMTUDefault;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothL2CAPMTULowEnergyDefault;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothL2CAPMTULowEnergyMax;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothL2CAPMTUMaximum;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothL2CAPMTUMinimum;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothL2CAPMTUSIG;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothL2CAPMTUStart;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothL2CAPMaxPacketSize;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothL2CAPPacketHeaderSize;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothL2CAPQoSDelayVariationDefault;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothL2CAPQoSFlagsDefault;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothL2CAPQoSLatencyDefault;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothL2CAPQoSPeakBandwidthDefault;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothL2CAPQoSTokenBucketSizeDefault;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothL2CAPQoSTokenRateDefault;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothL2CAPQoSTypeDefault;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothL2CAPTCICommandL2CA_ConfigReq;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothL2CAPTCICommandL2CA_ConfigResp;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothL2CAPTCICommandL2CA_ConnectReq;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothL2CAPTCICommandL2CA_ConnectResp;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothL2CAPTCICommandL2CA_DisableCLT;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothL2CAPTCICommandL2CA_DisconnectReq;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothL2CAPTCICommandL2CA_DisconnectResp;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothL2CAPTCICommandL2CA_EnableCLT;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothL2CAPTCICommandL2CA_GetInfo;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothL2CAPTCICommandL2CA_GroupAddMember;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothL2CAPTCICommandL2CA_GroupClose;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothL2CAPTCICommandL2CA_GroupCreate;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothL2CAPTCICommandL2CA_GroupMembership;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothL2CAPTCICommandL2CA_GroupRemoveMember;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothL2CAPTCICommandL2CA_Ping;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothL2CAPTCICommandL2CA_ReadData;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothL2CAPTCICommandL2CA_Reserved1;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothL2CAPTCICommandL2CA_Reserved2;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothL2CAPTCICommandL2CA_WriteData;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothL2CAPTCICommandReserved;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothL2CAPTCIEventIDL2CA_ConfigInd;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothL2CAPTCIEventIDL2CA_ConnectInd;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothL2CAPTCIEventIDL2CA_DisconnectInd;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothL2CAPTCIEventIDL2CA_QoSViolationInd;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothL2CAPTCIEventIDL2CA_TimeOutInd;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothL2CAPTCIEventIDReserved;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothLEMaxTXOctetsDefault;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothLEMaxTXOctetsMax;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothLEMaxTXOctetsMin;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothLEMaxTXTimeDefault;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothLEMaxTXTimeMax;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothLEMaxTXTimeMin;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothLESMPMaxEncryptionKeySize;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothLESMPMinEncryptionKeySize;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothLESMPTimeout;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothLESecurityManagerBonding;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothLESecurityManagerNoBonding;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothLESecurityManagerReservedEnd;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothLESecurityManagerReservedStart;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothLETXOctetsDefault;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothLETXOctetsMax;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothLETXOctetsMin;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothLETXTimeDefault;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothLETXTimeMax;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothLETXTimeMin;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothLimitedInquiryAccessCodeEnd;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothLimitedInquiryAccessCodeIndex;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothLimitedInquiryAccessCodeLAPValue;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothPacketType2DH1Omit;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothPacketType2DH3Omit;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothPacketType2DH5Omit;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothPacketType3DH1Omit;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothPacketType3DH3Omit;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothPacketType3DM5Omit;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothPacketTypeAUX;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothPacketTypeDH1;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothPacketTypeDH3;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothPacketTypeDH5;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothPacketTypeDM1;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothPacketTypeDM3;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothPacketTypeDM5;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothPacketTypeDV;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothPacketTypeEnd;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothPacketTypeHV1;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothPacketTypeHV2;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothPacketTypeHV3;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothPacketTypeReserved1;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothPageScanModeMandatory;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothPageScanModeOptional1;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothPageScanModeOptional2;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothPageScanModeOptional3;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothPageScanPeriodModeP0;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothPageScanPeriodModeP1;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothPageScanPeriodModeP2;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothPageScanRepetitionModeR0;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothPageScanRepetitionModeR1;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothPageScanRepetitionModeR2;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothRoleBecomeCentral;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothRoleBecomeMaster;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothRoleRemainPeripheral;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothRoleRemainSlave;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothSDPDataElementTypeBoolean;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothSDPDataElementTypeDataElementAlternative;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothSDPDataElementTypeDataElementSequence;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothSDPDataElementTypeNil;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothSDPDataElementTypeReservedEnd;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothSDPDataElementTypeReservedStart;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothSDPDataElementTypeSignedInt;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothSDPDataElementTypeString;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothSDPDataElementTypeURL;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothSDPDataElementTypeUUID;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothSDPDataElementTypeUnsignedInt;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothSDPErrorCodeInsufficientResources;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothSDPErrorCodeInvalidContinuationState;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothSDPErrorCodeInvalidPDUSize;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothSDPErrorCodeInvalidRequestSyntax;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothSDPErrorCodeInvalidSDPVersion;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothSDPErrorCodeInvalidServiceRecordHandle;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothSDPErrorCodeReserved;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothSDPErrorCodeReservedEnd;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothSDPErrorCodeReservedStart;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothSDPErrorCodeSuccess;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothSDPPDUIDErrorResponse;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothSDPPDUIDReserved;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothSDPPDUIDServiceAttributeRequest;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothSDPPDUIDServiceAttributeResponse;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothSDPPDUIDServiceSearchAttributeRequest;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothSDPPDUIDServiceSearchAttributeResponse;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothSDPPDUIDServiceSearchRequest;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothSDPPDUIDServiceSearchResponse;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothSynchronousConnectionPacketType2EV3Omit;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothSynchronousConnectionPacketType2EV5Omit;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothSynchronousConnectionPacketType3EV3Omit;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothSynchronousConnectionPacketType3EV5Omit;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothSynchronousConnectionPacketTypeAll;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothSynchronousConnectionPacketTypeEV3;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothSynchronousConnectionPacketTypeEV4;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothSynchronousConnectionPacketTypeEV5;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothSynchronousConnectionPacketTypeEnd;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothSynchronousConnectionPacketTypeFutureUse;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothSynchronousConnectionPacketTypeHV1;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothSynchronousConnectionPacketTypeHV2;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothSynchronousConnectionPacketTypeHV3;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothSynchronousConnectionPacketTypeNone;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothVoiceSettingAirCodingFormatALaw;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothVoiceSettingAirCodingFormatCVSD;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothVoiceSettingAirCodingFormatMask;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothVoiceSettingAirCodingFormatTransparentData;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothVoiceSettingAirCodingFormatULaw;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothVoiceSettingInputCodingALawInputCoding;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothVoiceSettingInputCodingLinearInputCoding;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothVoiceSettingInputCodingMask;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothVoiceSettingInputCodingULawInputCoding;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothVoiceSettingInputDataFormat1sComplement;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothVoiceSettingInputDataFormat2sComplement;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothVoiceSettingInputDataFormatMask;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothVoiceSettingInputDataFormatSignMagnitude;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothVoiceSettingInputDataFormatUnsigned;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothVoiceSettingInputSampleSize16Bit;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothVoiceSettingInputSampleSize8Bit;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothVoiceSettingInputSampleSizeMask;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kBluetoothVoiceSettingPCMBitPositionMask;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kInfoStringMaxLength;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kMaxChannelIDPerSide;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::kMaximumNumberOfInquiryAccessCodes;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::BluetoothAFHHostChannelClassification;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::BluetoothAFHMode;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::BluetoothAFHResults;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::BluetoothAMPCommandRejectReason;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::BluetoothAMPCreatePhysicalLinkResponseStatus;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::BluetoothAMPDisconnectPhysicalLinkResponseStatus;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::BluetoothAMPDiscoverResponseControllerStatus;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::BluetoothAMPGetAssocResponseStatus;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::BluetoothAMPGetInfoResponseStatus;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::BluetoothAMPManagerCode;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::BluetoothAirMode;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::BluetoothAllowRoleSwitch;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::BluetoothAuthenticationRequirements;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::BluetoothAuthenticationRequirementsValues;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::BluetoothClassOfDevice;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::BluetoothClockOffset;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::BluetoothConnectionHandle;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::BluetoothDeviceAddress;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::BluetoothDeviceClassMajor;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::BluetoothDeviceClassMinor;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::BluetoothEncryptionEnable;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::BluetoothEnhancedSynchronousConnectionInfo;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::BluetoothEventFilterCondition;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::BluetoothFeatureBits;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::BluetoothHCIACLDataByteCount;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::BluetoothHCIAFHChannelAssessmentMode;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::BluetoothHCIAFHChannelAssessmentModes;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::BluetoothHCIAcceptSynchronousConnectionRequestParams;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::BluetoothHCIAuthenticationEnable;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::BluetoothHCIAuthentionEnableModes;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::BluetoothHCIAutomaticFlushTimeout;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::BluetoothHCIAutomaticFlushTimeoutInfo;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::BluetoothHCIBufferSize;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::BluetoothHCICommandOpCode;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::BluetoothHCICommandOpCodeCommand;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::BluetoothHCICommandOpCodeGroup;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::BluetoothHCIConnectionAcceptTimeout;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::BluetoothHCIConnectionMode;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::BluetoothHCIConnectionModes;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::BluetoothHCIContentFormat;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::BluetoothHCICountryCode;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::BluetoothHCICurrentInquiryAccessCodes;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::BluetoothHCICurrentInquiryAccessCodesForWrite;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::BluetoothHCIDataID;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::BluetoothHCIDeleteStoredLinkKeyFlag;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::BluetoothHCIDeleteStoredLinkKeyFlags;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::BluetoothHCIEncryptionKeySize;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::BluetoothHCIEncryptionKeySizeInfo;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::BluetoothHCIEncryptionMode;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::BluetoothHCIEncryptionModes;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::BluetoothHCIEnhancedAcceptSynchronousConnectionRequestParams;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::BluetoothHCIEnhancedSetupSynchronousConnectionParams;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::BluetoothHCIErroneousDataReporting;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::BluetoothHCIEventAuthenticationCompleteResults;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::BluetoothHCIEventChangeConnectionLinkKeyCompleteResults;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::BluetoothHCIEventCode;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::BluetoothHCIEventConnectionCompleteResults;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::BluetoothHCIEventConnectionPacketTypeResults;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::BluetoothHCIEventConnectionRequestResults;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::BluetoothHCIEventDataBufferOverflowResults;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::BluetoothHCIEventDisconnectionCompleteResults;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::BluetoothHCIEventEncryptionChangeResults;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::BluetoothHCIEventEncryptionKeyRefreshCompleteResults;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::BluetoothHCIEventFlowSpecificationData;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::BluetoothHCIEventFlushOccurredResults;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::BluetoothHCIEventHardwareErrorResults;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::BluetoothHCIEventID;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::BluetoothHCIEventLEConnectionCompleteResults;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::BluetoothHCIEventLEConnectionUpdateCompleteResults;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::BluetoothHCIEventLEEnhancedConnectionCompleteResults;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::BluetoothHCIEventLELongTermKeyRequestResults;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::BluetoothHCIEventLEMetaResults;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::BluetoothHCIEventLEReadRemoteUsedFeaturesCompleteResults;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::BluetoothHCIEventLinkKeyNotificationResults;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::BluetoothHCIEventMask;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::BluetoothHCIEventMasterLinkKeyCompleteResults;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::BluetoothHCIEventMaxSlotsChangeResults;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::BluetoothHCIEventModeChangeResults;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::BluetoothHCIEventPageScanModeChangeResults;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::BluetoothHCIEventPageScanRepetitionModeChangeResults;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::BluetoothHCIEventQoSSetupCompleteResults;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::BluetoothHCIEventQoSViolationResults;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::BluetoothHCIEventReadClockOffsetResults;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::BluetoothHCIEventReadExtendedFeaturesResults;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::BluetoothHCIEventReadRemoteExtendedFeaturesResults;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::BluetoothHCIEventReadRemoteSupportedFeaturesResults;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::BluetoothHCIEventReadRemoteVersionInfoResults;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::BluetoothHCIEventReadSupportedFeaturesResults;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::BluetoothHCIEventRemoteNameRequestResults;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::BluetoothHCIEventReturnLinkKeysResults;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::BluetoothHCIEventReturnLinkKeysResults_linkKeys;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::BluetoothHCIEventRoleChangeResults;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::BluetoothHCIEventSimplePairingCompleteResults;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::BluetoothHCIEventSniffSubratingResults;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::BluetoothHCIEventStatus;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::BluetoothHCIEventSynchronousConnectionChangedResults;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::BluetoothHCIEventSynchronousConnectionCompleteResults;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::BluetoothHCIEventVendorSpecificResults;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::BluetoothHCIExtendedFeaturesInfo;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::BluetoothHCIExtendedInquiryResponse;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::BluetoothHCIExtendedInquiryResponseDataType;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::BluetoothHCIExtendedInquiryResult;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::BluetoothHCIFECRequired;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::BluetoothHCIFECRequiredValues;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::BluetoothHCIFailedContactCount;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::BluetoothHCIFailedContactInfo;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::BluetoothHCIFlowControlState;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::BluetoothHCIGeneralFlowControlStates;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::BluetoothHCIHoldModeActivity;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::BluetoothHCIHoldModeActivityStates;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::BluetoothHCIInputBandwidth;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::BluetoothHCIInputCodedDataSize;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::BluetoothHCIInputCodingFormat;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::BluetoothHCIInputDataPath;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::BluetoothHCIInputPCMDataFormat;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::BluetoothHCIInputPCMSamplePayloadMSBPosition;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::BluetoothHCIInputTransportUnitSize;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::BluetoothHCIInquiryAccessCode;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::BluetoothHCIInquiryAccessCodeCount;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::BluetoothHCIInquiryLength;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::BluetoothHCIInquiryMode;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::BluetoothHCIInquiryModes;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::BluetoothHCIInquiryResult;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::BluetoothHCIInquiryResults;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::BluetoothHCIInquiryScanType;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::BluetoothHCIInquiryScanTypes;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::BluetoothHCIInquiryWithRSSIResult;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::BluetoothHCIInquiryWithRSSIResults;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::BluetoothHCILEBufferSize;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::BluetoothHCILESupportedFeatures;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::BluetoothHCILEUsedFeatures;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::BluetoothHCILinkPolicySettings;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::BluetoothHCILinkPolicySettingsInfo;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::BluetoothHCILinkPolicySettingsValues;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::BluetoothHCILinkQuality;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::BluetoothHCILinkQualityInfo;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::BluetoothHCILinkSupervisionTimeout;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::BluetoothHCILoopbackMode;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::BluetoothHCIMaxLatency;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::BluetoothHCIModeInterval;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::BluetoothHCINumBroadcastRetransmissions;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::BluetoothHCINumLinkKeysDeleted;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::BluetoothHCINumLinkKeysToWrite;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::BluetoothHCIOperationID;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::BluetoothHCIOutputBandwidth;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::BluetoothHCIOutputCodedDataSize;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::BluetoothHCIOutputCodingFormat;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::BluetoothHCIOutputDataPath;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::BluetoothHCIOutputPCMDataFormat;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::BluetoothHCIOutputPCMSamplePayloadMSBPosition;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::BluetoothHCIOutputTransportUnitSize;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::BluetoothHCIPageNumber;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::BluetoothHCIPageScanEnableState;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::BluetoothHCIPageScanEnableStates;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::BluetoothHCIPageScanMode;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::BluetoothHCIPageScanModes;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::BluetoothHCIPageScanPeriodMode;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::BluetoothHCIPageScanPeriodModes;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::BluetoothHCIPageScanType;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::BluetoothHCIPageScanTypes;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::BluetoothHCIPageTimeout;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::BluetoothHCIParamByteCount;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::BluetoothHCIParkModeBeaconInterval;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::BluetoothHCIPowerState;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::BluetoothHCIQoSFlags;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::BluetoothHCIQualityOfServiceSetupParams;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::BluetoothHCIRSSIInfo;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::BluetoothHCIRSSIValue;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::BluetoothHCIReadExtendedInquiryResponseResults;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::BluetoothHCIReadLMPHandleResults;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::BluetoothHCIReadLocalOOBDataResults;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::BluetoothHCIReadStoredLinkKeysFlag;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::BluetoothHCIReadStoredLinkKeysFlags;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::BluetoothHCIReceiveBandwidth;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::BluetoothHCIReceiveCodecFrameSize;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::BluetoothHCIReceiveCodingFormat;
#[cfg(all(feature = "Bluetooth", feature = "libc"))]
pub use self::__Bluetooth::BluetoothHCIRequestCallbackInfo;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::BluetoothHCIRequestID;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::BluetoothHCIResponseCount;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::BluetoothHCIRetransmissionEffort;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::BluetoothHCIRetransmissionEffortTypes;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::BluetoothHCIRole;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::BluetoothHCIRoleInfo;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::BluetoothHCIRoles;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::BluetoothHCISCODataByteCount;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::BluetoothHCISCOFlowControlStates;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::BluetoothHCIScanActivity;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::BluetoothHCISetupSynchronousConnectionParams;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::BluetoothHCISignalID;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::BluetoothHCISimplePairingMode;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::BluetoothHCISimplePairingModes;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::BluetoothHCISimplePairingOOBData;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::BluetoothHCISniffAttemptCount;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::BluetoothHCISniffTimeout;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::BluetoothHCIStatus;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::BluetoothHCIStoredLinkKeysInfo;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::BluetoothHCISupportedCommands;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::BluetoothHCISupportedFeatures;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::BluetoothHCISupportedIAC;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::BluetoothHCITimeoutValues;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::BluetoothHCITransmitBandwidth;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::BluetoothHCITransmitCodecFrameSize;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::BluetoothHCITransmitCodingFormat;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::BluetoothHCITransmitPowerLevel;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::BluetoothHCITransmitPowerLevelInfo;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::BluetoothHCITransmitPowerLevelType;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::BluetoothHCITransmitReadPowerLevelTypes;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::BluetoothHCITransportCommandID;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::BluetoothHCITransportID;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::BluetoothHCIVendorCommandSelector;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::BluetoothHCIVersionInfo;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::BluetoothHCIVoiceSetting;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::BluetoothIOCapabilities;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::BluetoothIOCapability;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::BluetoothIOCapabilityResponse;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::BluetoothIRK;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::BluetoothKey;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::BluetoothKeyFlag;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::BluetoothKeyType;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::BluetoothKeypressNotification;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::BluetoothKeypressNotificationType;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::BluetoothKeypressNotificationTypes;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::BluetoothL2CAPByteCount;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::BluetoothL2CAPChannelID;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::BluetoothL2CAPCommandByteCount;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::BluetoothL2CAPCommandCode;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::BluetoothL2CAPCommandID;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::BluetoothL2CAPCommandRejectReason;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::BluetoothL2CAPConfigurationOption;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::BluetoothL2CAPConfigurationResult;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::BluetoothL2CAPConfigurationRetransmissionAndFlowControlFlags;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::BluetoothL2CAPConnectionResult;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::BluetoothL2CAPConnectionStatus;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::BluetoothL2CAPFlushTimeout;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::BluetoothL2CAPGroupID;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::BluetoothL2CAPInformationExtendedFeaturesMask;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::BluetoothL2CAPInformationResult;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::BluetoothL2CAPInformationType;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::BluetoothL2CAPLinkTimeout;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::BluetoothL2CAPMTU;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::BluetoothL2CAPPSM;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::BluetoothL2CAPQoSType;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::BluetoothL2CAPQualityOfServiceOptions;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::BluetoothL2CAPRetransmissionAndFlowControlOptions;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::BluetoothL2CAPSegmentationAndReassembly;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::BluetoothL2CAPSupervisoryFuctionType;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::BluetoothLAP;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::BluetoothLEAddressType;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::BluetoothLEAdvertisingType;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::BluetoothLEConnectionInterval;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::BluetoothLEFeatureBits;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::BluetoothLEScan;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::BluetoothLEScanDuplicateFilter;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::BluetoothLEScanFilter;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::BluetoothLEScanType;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::BluetoothLESecurityManagerCommandCode;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::BluetoothLESecurityManagerIOCapability;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::BluetoothLESecurityManagerKeyDistributionFormat;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::BluetoothLESecurityManagerKeypressNotificationType;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::BluetoothLESecurityManagerOOBData;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::BluetoothLESecurityManagerPairingFailedReasonCode;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::BluetoothLESecurityManagerUserInputCapability;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::BluetoothLESecurityManagerUserOutputCapability;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::BluetoothLMPHandle;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::BluetoothLMPSubversion;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::BluetoothLMPVersion;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::BluetoothLinkType;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::BluetoothLinkTypes;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::BluetoothManufacturerName;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::BluetoothMaxSlots;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::BluetoothNumericValue;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::BluetoothOOBDataPresence;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::BluetoothOOBDataPresenceValues;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::BluetoothPINCode;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::BluetoothPINType;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::BluetoothPacketType;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::BluetoothPageScanMode;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::BluetoothPageScanPeriodMode;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::BluetoothPageScanRepetitionMode;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::BluetoothPasskey;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::BluetoothRFCOMMChannelID;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::BluetoothRFCOMMLineStatus;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::BluetoothRFCOMMMTU;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::BluetoothRFCOMMParityType;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::BluetoothReadClockInfo;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::BluetoothReasonCode;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::BluetoothRemoteHostSupportedFeaturesNotification;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::BluetoothRole;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::BluetoothSDPDataElementSizeDescriptor;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::BluetoothSDPDataElementTypeDescriptor;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::BluetoothSDPErrorCode;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::BluetoothSDPPDUID;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::BluetoothSDPServiceAttributeID;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::BluetoothSDPServiceRecordHandle;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::BluetoothSDPTransactionID;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::BluetoothSDPUUID16;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::BluetoothSDPUUID32;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::BluetoothServiceClassMajor;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::BluetoothSetEventMask;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::BluetoothSimplePairingDebugMode;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::BluetoothSimplePairingDebugModes;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::BluetoothSynchronousConnectionInfo;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::BluetoothTransportInfo;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::BluetoothTransportInfoPtr;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::BluetoothTransportTypes;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::BluetoothUserConfirmationRequest;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::BluetoothUserPasskeyNotification;
#[cfg(feature = "Bluetooth")]
pub use self::__Bluetooth::TransmissionPower;
#[cfg(feature = "BluetoothAssignedNumbers")]
pub use self::__BluetoothAssignedNumbers::kBluetoothDeviceClassMajorAny;
#[cfg(feature = "BluetoothAssignedNumbers")]
pub use self::__BluetoothAssignedNumbers::kBluetoothDeviceClassMajorAudio;
#[cfg(feature = "BluetoothAssignedNumbers")]
pub use self::__BluetoothAssignedNumbers::kBluetoothDeviceClassMajorComputer;
#[cfg(feature = "BluetoothAssignedNumbers")]
pub use self::__BluetoothAssignedNumbers::kBluetoothDeviceClassMajorEnd;
#[cfg(feature = "BluetoothAssignedNumbers")]
pub use self::__BluetoothAssignedNumbers::kBluetoothDeviceClassMajorHealth;
#[cfg(feature = "BluetoothAssignedNumbers")]
pub use self::__BluetoothAssignedNumbers::kBluetoothDeviceClassMajorImaging;
#[cfg(feature = "BluetoothAssignedNumbers")]
pub use self::__BluetoothAssignedNumbers::kBluetoothDeviceClassMajorLANAccessPoint;
#[cfg(feature = "BluetoothAssignedNumbers")]
pub use self::__BluetoothAssignedNumbers::kBluetoothDeviceClassMajorMiscellaneous;
#[cfg(feature = "BluetoothAssignedNumbers")]
pub use self::__BluetoothAssignedNumbers::kBluetoothDeviceClassMajorNone;
#[cfg(feature = "BluetoothAssignedNumbers")]
pub use self::__BluetoothAssignedNumbers::kBluetoothDeviceClassMajorPeripheral;
#[cfg(feature = "BluetoothAssignedNumbers")]
pub use self::__BluetoothAssignedNumbers::kBluetoothDeviceClassMajorPhone;
#[cfg(feature = "BluetoothAssignedNumbers")]
pub use self::__BluetoothAssignedNumbers::kBluetoothDeviceClassMajorToy;
#[cfg(feature = "BluetoothAssignedNumbers")]
pub use self::__BluetoothAssignedNumbers::kBluetoothDeviceClassMajorUnclassified;
#[cfg(feature = "BluetoothAssignedNumbers")]
pub use self::__BluetoothAssignedNumbers::kBluetoothDeviceClassMajorWearable;
#[cfg(feature = "BluetoothAssignedNumbers")]
pub use self::__BluetoothAssignedNumbers::kBluetoothDeviceClassMinorAny;
#[cfg(feature = "BluetoothAssignedNumbers")]
pub use self::__BluetoothAssignedNumbers::kBluetoothDeviceClassMinorAudioCamcorder;
#[cfg(feature = "BluetoothAssignedNumbers")]
pub use self::__BluetoothAssignedNumbers::kBluetoothDeviceClassMinorAudioCar;
#[cfg(feature = "BluetoothAssignedNumbers")]
pub use self::__BluetoothAssignedNumbers::kBluetoothDeviceClassMinorAudioGamingToy;
#[cfg(feature = "BluetoothAssignedNumbers")]
pub use self::__BluetoothAssignedNumbers::kBluetoothDeviceClassMinorAudioHandsFree;
#[cfg(feature = "BluetoothAssignedNumbers")]
pub use self::__BluetoothAssignedNumbers::kBluetoothDeviceClassMinorAudioHeadphones;
#[cfg(feature = "BluetoothAssignedNumbers")]
pub use self::__BluetoothAssignedNumbers::kBluetoothDeviceClassMinorAudioHeadset;
#[cfg(feature = "BluetoothAssignedNumbers")]
pub use self::__BluetoothAssignedNumbers::kBluetoothDeviceClassMinorAudioHiFi;
#[cfg(feature = "BluetoothAssignedNumbers")]
pub use self::__BluetoothAssignedNumbers::kBluetoothDeviceClassMinorAudioLoudspeaker;
#[cfg(feature = "BluetoothAssignedNumbers")]
pub use self::__BluetoothAssignedNumbers::kBluetoothDeviceClassMinorAudioMicrophone;
#[cfg(feature = "BluetoothAssignedNumbers")]
pub use self::__BluetoothAssignedNumbers::kBluetoothDeviceClassMinorAudioPortable;
#[cfg(feature = "BluetoothAssignedNumbers")]
pub use self::__BluetoothAssignedNumbers::kBluetoothDeviceClassMinorAudioReserved1;
#[cfg(feature = "BluetoothAssignedNumbers")]
pub use self::__BluetoothAssignedNumbers::kBluetoothDeviceClassMinorAudioReserved2;
#[cfg(feature = "BluetoothAssignedNumbers")]
pub use self::__BluetoothAssignedNumbers::kBluetoothDeviceClassMinorAudioSetTopBox;
#[cfg(feature = "BluetoothAssignedNumbers")]
pub use self::__BluetoothAssignedNumbers::kBluetoothDeviceClassMinorAudioUnclassified;
#[cfg(feature = "BluetoothAssignedNumbers")]
pub use self::__BluetoothAssignedNumbers::kBluetoothDeviceClassMinorAudioVCR;
#[cfg(feature = "BluetoothAssignedNumbers")]
pub use self::__BluetoothAssignedNumbers::kBluetoothDeviceClassMinorAudioVideoCamera;
#[cfg(feature = "BluetoothAssignedNumbers")]
pub use self::__BluetoothAssignedNumbers::kBluetoothDeviceClassMinorAudioVideoConferencing;
#[cfg(feature = "BluetoothAssignedNumbers")]
pub use self::__BluetoothAssignedNumbers::kBluetoothDeviceClassMinorAudioVideoDisplayAndLoudspeaker;
#[cfg(feature = "BluetoothAssignedNumbers")]
pub use self::__BluetoothAssignedNumbers::kBluetoothDeviceClassMinorAudioVideoMonitor;
#[cfg(feature = "BluetoothAssignedNumbers")]
pub use self::__BluetoothAssignedNumbers::kBluetoothDeviceClassMinorComputerDesktopWorkstation;
#[cfg(feature = "BluetoothAssignedNumbers")]
pub use self::__BluetoothAssignedNumbers::kBluetoothDeviceClassMinorComputerHandheld;
#[cfg(feature = "BluetoothAssignedNumbers")]
pub use self::__BluetoothAssignedNumbers::kBluetoothDeviceClassMinorComputerLaptop;
#[cfg(feature = "BluetoothAssignedNumbers")]
pub use self::__BluetoothAssignedNumbers::kBluetoothDeviceClassMinorComputerPalmSized;
#[cfg(feature = "BluetoothAssignedNumbers")]
pub use self::__BluetoothAssignedNumbers::kBluetoothDeviceClassMinorComputerServer;
#[cfg(feature = "BluetoothAssignedNumbers")]
pub use self::__BluetoothAssignedNumbers::kBluetoothDeviceClassMinorComputerUnclassified;
#[cfg(feature = "BluetoothAssignedNumbers")]
pub use self::__BluetoothAssignedNumbers::kBluetoothDeviceClassMinorComputerWearable;
#[cfg(feature = "BluetoothAssignedNumbers")]
pub use self::__BluetoothAssignedNumbers::kBluetoothDeviceClassMinorEnd;
#[cfg(feature = "BluetoothAssignedNumbers")]
pub use self::__BluetoothAssignedNumbers::kBluetoothDeviceClassMinorHealthBloodPressureMonitor;
#[cfg(feature = "BluetoothAssignedNumbers")]
pub use self::__BluetoothAssignedNumbers::kBluetoothDeviceClassMinorHealthDataDisplay;
#[cfg(feature = "BluetoothAssignedNumbers")]
pub use self::__BluetoothAssignedNumbers::kBluetoothDeviceClassMinorHealthGlucoseMeter;
#[cfg(feature = "BluetoothAssignedNumbers")]
pub use self::__BluetoothAssignedNumbers::kBluetoothDeviceClassMinorHealthHeartRateMonitor;
#[cfg(feature = "BluetoothAssignedNumbers")]
pub use self::__BluetoothAssignedNumbers::kBluetoothDeviceClassMinorHealthPulseOximeter;
#[cfg(feature = "BluetoothAssignedNumbers")]
pub use self::__BluetoothAssignedNumbers::kBluetoothDeviceClassMinorHealthScale;
#[cfg(feature = "BluetoothAssignedNumbers")]
pub use self::__BluetoothAssignedNumbers::kBluetoothDeviceClassMinorHealthThermometer;
#[cfg(feature = "BluetoothAssignedNumbers")]
pub use self::__BluetoothAssignedNumbers::kBluetoothDeviceClassMinorHealthUndefined;
#[cfg(feature = "BluetoothAssignedNumbers")]
pub use self::__BluetoothAssignedNumbers::kBluetoothDeviceClassMinorImaging1Camera;
#[cfg(feature = "BluetoothAssignedNumbers")]
pub use self::__BluetoothAssignedNumbers::kBluetoothDeviceClassMinorImaging1Display;
#[cfg(feature = "BluetoothAssignedNumbers")]
pub use self::__BluetoothAssignedNumbers::kBluetoothDeviceClassMinorImaging1Printer;
#[cfg(feature = "BluetoothAssignedNumbers")]
pub use self::__BluetoothAssignedNumbers::kBluetoothDeviceClassMinorImaging1Scanner;
#[cfg(feature = "BluetoothAssignedNumbers")]
pub use self::__BluetoothAssignedNumbers::kBluetoothDeviceClassMinorImaging2Unclassified;
#[cfg(feature = "BluetoothAssignedNumbers")]
pub use self::__BluetoothAssignedNumbers::kBluetoothDeviceClassMinorNone;
#[cfg(feature = "BluetoothAssignedNumbers")]
pub use self::__BluetoothAssignedNumbers::kBluetoothDeviceClassMinorPeripheral1Combo;
#[cfg(feature = "BluetoothAssignedNumbers")]
pub use self::__BluetoothAssignedNumbers::kBluetoothDeviceClassMinorPeripheral1Keyboard;
#[cfg(feature = "BluetoothAssignedNumbers")]
pub use self::__BluetoothAssignedNumbers::kBluetoothDeviceClassMinorPeripheral1Pointing;
#[cfg(feature = "BluetoothAssignedNumbers")]
pub use self::__BluetoothAssignedNumbers::kBluetoothDeviceClassMinorPeripheral2AnyPointing;
#[cfg(feature = "BluetoothAssignedNumbers")]
pub use self::__BluetoothAssignedNumbers::kBluetoothDeviceClassMinorPeripheral2CardReader;
#[cfg(feature = "BluetoothAssignedNumbers")]
pub use self::__BluetoothAssignedNumbers::kBluetoothDeviceClassMinorPeripheral2DigitalPen;
#[cfg(feature = "BluetoothAssignedNumbers")]
pub use self::__BluetoothAssignedNumbers::kBluetoothDeviceClassMinorPeripheral2DigitizerTablet;
#[cfg(feature = "BluetoothAssignedNumbers")]
pub use self::__BluetoothAssignedNumbers::kBluetoothDeviceClassMinorPeripheral2Gamepad;
#[cfg(feature = "BluetoothAssignedNumbers")]
pub use self::__BluetoothAssignedNumbers::kBluetoothDeviceClassMinorPeripheral2GesturalInputDevice;
#[cfg(feature = "BluetoothAssignedNumbers")]
pub use self::__BluetoothAssignedNumbers::kBluetoothDeviceClassMinorPeripheral2HandheldScanner;
#[cfg(feature = "BluetoothAssignedNumbers")]
pub use self::__BluetoothAssignedNumbers::kBluetoothDeviceClassMinorPeripheral2Joystick;
#[cfg(feature = "BluetoothAssignedNumbers")]
pub use self::__BluetoothAssignedNumbers::kBluetoothDeviceClassMinorPeripheral2RemoteControl;
#[cfg(feature = "BluetoothAssignedNumbers")]
pub use self::__BluetoothAssignedNumbers::kBluetoothDeviceClassMinorPeripheral2SensingDevice;
#[cfg(feature = "BluetoothAssignedNumbers")]
pub use self::__BluetoothAssignedNumbers::kBluetoothDeviceClassMinorPeripheral2Unclassified;
#[cfg(feature = "BluetoothAssignedNumbers")]
pub use self::__BluetoothAssignedNumbers::kBluetoothDeviceClassMinorPhoneCellular;
#[cfg(feature = "BluetoothAssignedNumbers")]
pub use self::__BluetoothAssignedNumbers::kBluetoothDeviceClassMinorPhoneCommonISDNAccess;
#[cfg(feature = "BluetoothAssignedNumbers")]
pub use self::__BluetoothAssignedNumbers::kBluetoothDeviceClassMinorPhoneCordless;
#[cfg(feature = "BluetoothAssignedNumbers")]
pub use self::__BluetoothAssignedNumbers::kBluetoothDeviceClassMinorPhoneSmartPhone;
#[cfg(feature = "BluetoothAssignedNumbers")]
pub use self::__BluetoothAssignedNumbers::kBluetoothDeviceClassMinorPhoneUnclassified;
#[cfg(feature = "BluetoothAssignedNumbers")]
pub use self::__BluetoothAssignedNumbers::kBluetoothDeviceClassMinorPhoneWiredModemOrVoiceGateway;
#[cfg(feature = "BluetoothAssignedNumbers")]
pub use self::__BluetoothAssignedNumbers::kBluetoothDeviceClassMinorToyController;
#[cfg(feature = "BluetoothAssignedNumbers")]
pub use self::__BluetoothAssignedNumbers::kBluetoothDeviceClassMinorToyDollActionFigure;
#[cfg(feature = "BluetoothAssignedNumbers")]
pub use self::__BluetoothAssignedNumbers::kBluetoothDeviceClassMinorToyGame;
#[cfg(feature = "BluetoothAssignedNumbers")]
pub use self::__BluetoothAssignedNumbers::kBluetoothDeviceClassMinorToyRobot;
#[cfg(feature = "BluetoothAssignedNumbers")]
pub use self::__BluetoothAssignedNumbers::kBluetoothDeviceClassMinorToyVehicle;
#[cfg(feature = "BluetoothAssignedNumbers")]
pub use self::__BluetoothAssignedNumbers::kBluetoothDeviceClassMinorWearableGlasses;
#[cfg(feature = "BluetoothAssignedNumbers")]
pub use self::__BluetoothAssignedNumbers::kBluetoothDeviceClassMinorWearableHelmet;
#[cfg(feature = "BluetoothAssignedNumbers")]
pub use self::__BluetoothAssignedNumbers::kBluetoothDeviceClassMinorWearableJacket;
#[cfg(feature = "BluetoothAssignedNumbers")]
pub use self::__BluetoothAssignedNumbers::kBluetoothDeviceClassMinorWearablePager;
#[cfg(feature = "BluetoothAssignedNumbers")]
pub use self::__BluetoothAssignedNumbers::kBluetoothDeviceClassMinorWearableWristWatch;
#[cfg(feature = "BluetoothAssignedNumbers")]
pub use self::__BluetoothAssignedNumbers::kBluetoothGAPAppearanceGenericBarcodeScanner;
#[cfg(feature = "BluetoothAssignedNumbers")]
pub use self::__BluetoothAssignedNumbers::kBluetoothGAPAppearanceGenericBloodPressure;
#[cfg(feature = "BluetoothAssignedNumbers")]
pub use self::__BluetoothAssignedNumbers::kBluetoothGAPAppearanceGenericClock;
#[cfg(feature = "BluetoothAssignedNumbers")]
pub use self::__BluetoothAssignedNumbers::kBluetoothGAPAppearanceGenericComputer;
#[cfg(feature = "BluetoothAssignedNumbers")]
pub use self::__BluetoothAssignedNumbers::kBluetoothGAPAppearanceGenericCycling;
#[cfg(feature = "BluetoothAssignedNumbers")]
pub use self::__BluetoothAssignedNumbers::kBluetoothGAPAppearanceGenericDisplay;
#[cfg(feature = "BluetoothAssignedNumbers")]
pub use self::__BluetoothAssignedNumbers::kBluetoothGAPAppearanceGenericEyeGlasses;
#[cfg(feature = "BluetoothAssignedNumbers")]
pub use self::__BluetoothAssignedNumbers::kBluetoothGAPAppearanceGenericGlucoseMeter;
#[cfg(feature = "BluetoothAssignedNumbers")]
pub use self::__BluetoothAssignedNumbers::kBluetoothGAPAppearanceGenericHeartrateSensor;
#[cfg(feature = "BluetoothAssignedNumbers")]
pub use self::__BluetoothAssignedNumbers::kBluetoothGAPAppearanceGenericHumanInterfaceDevice;
#[cfg(feature = "BluetoothAssignedNumbers")]
pub use self::__BluetoothAssignedNumbers::kBluetoothGAPAppearanceGenericKeyring;
#[cfg(feature = "BluetoothAssignedNumbers")]
pub use self::__BluetoothAssignedNumbers::kBluetoothGAPAppearanceGenericMediaPlayer;
#[cfg(feature = "BluetoothAssignedNumbers")]
pub use self::__BluetoothAssignedNumbers::kBluetoothGAPAppearanceGenericPhone;
#[cfg(feature = "BluetoothAssignedNumbers")]
pub use self::__BluetoothAssignedNumbers::kBluetoothGAPAppearanceGenericRemoteControl;
#[cfg(feature = "BluetoothAssignedNumbers")]
pub use self::__BluetoothAssignedNumbers::kBluetoothGAPAppearanceGenericRunningWalkingSensor;
#[cfg(feature = "BluetoothAssignedNumbers")]
pub use self::__BluetoothAssignedNumbers::kBluetoothGAPAppearanceGenericTag;
#[cfg(feature = "BluetoothAssignedNumbers")]
pub use self::__BluetoothAssignedNumbers::kBluetoothGAPAppearanceGenericThermometer;
#[cfg(feature = "BluetoothAssignedNumbers")]
pub use self::__BluetoothAssignedNumbers::kBluetoothGAPAppearanceGenericWatch;
#[cfg(feature = "BluetoothAssignedNumbers")]
pub use self::__BluetoothAssignedNumbers::kBluetoothGAPAppearanceHumanInterfaceDeviceBarcodeScanner;
#[cfg(feature = "BluetoothAssignedNumbers")]
pub use self::__BluetoothAssignedNumbers::kBluetoothGAPAppearanceHumanInterfaceDeviceCardReader;
#[cfg(feature = "BluetoothAssignedNumbers")]
pub use self::__BluetoothAssignedNumbers::kBluetoothGAPAppearanceHumanInterfaceDeviceDigitalPen;
#[cfg(feature = "BluetoothAssignedNumbers")]
pub use self::__BluetoothAssignedNumbers::kBluetoothGAPAppearanceHumanInterfaceDeviceDigitizerTablet;
#[cfg(feature = "BluetoothAssignedNumbers")]
pub use self::__BluetoothAssignedNumbers::kBluetoothGAPAppearanceHumanInterfaceDeviceGamepad;
#[cfg(feature = "BluetoothAssignedNumbers")]
pub use self::__BluetoothAssignedNumbers::kBluetoothGAPAppearanceHumanInterfaceDeviceJoystick;
#[cfg(feature = "BluetoothAssignedNumbers")]
pub use self::__BluetoothAssignedNumbers::kBluetoothGAPAppearanceHumanInterfaceDeviceKeyboard;
#[cfg(feature = "BluetoothAssignedNumbers")]
pub use self::__BluetoothAssignedNumbers::kBluetoothGAPAppearanceHumanInterfaceDeviceMouse;
#[cfg(feature = "BluetoothAssignedNumbers")]
pub use self::__BluetoothAssignedNumbers::kBluetoothGAPAppearanceUnknown;
#[cfg(feature = "BluetoothAssignedNumbers")]
pub use self::__BluetoothAssignedNumbers::kBluetoothL2CAPPSMAACP;
#[cfg(feature = "BluetoothAssignedNumbers")]
pub use self::__BluetoothAssignedNumbers::kBluetoothL2CAPPSMATT;
#[cfg(feature = "BluetoothAssignedNumbers")]
pub use self::__BluetoothAssignedNumbers::kBluetoothL2CAPPSMAVCTP;
#[cfg(feature = "BluetoothAssignedNumbers")]
pub use self::__BluetoothAssignedNumbers::kBluetoothL2CAPPSMAVCTP_Browsing;
#[cfg(feature = "BluetoothAssignedNumbers")]
pub use self::__BluetoothAssignedNumbers::kBluetoothL2CAPPSMAVDTP;
#[cfg(feature = "BluetoothAssignedNumbers")]
pub use self::__BluetoothAssignedNumbers::kBluetoothL2CAPPSMBNEP;
#[cfg(feature = "BluetoothAssignedNumbers")]
pub use self::__BluetoothAssignedNumbers::kBluetoothL2CAPPSMD2D;
#[cfg(feature = "BluetoothAssignedNumbers")]
pub use self::__BluetoothAssignedNumbers::kBluetoothL2CAPPSMDynamicEnd;
#[cfg(feature = "BluetoothAssignedNumbers")]
pub use self::__BluetoothAssignedNumbers::kBluetoothL2CAPPSMDynamicStart;
#[cfg(feature = "BluetoothAssignedNumbers")]
pub use self::__BluetoothAssignedNumbers::kBluetoothL2CAPPSMHIDControl;
#[cfg(feature = "BluetoothAssignedNumbers")]
pub use self::__BluetoothAssignedNumbers::kBluetoothL2CAPPSMHIDInterrupt;
#[cfg(feature = "BluetoothAssignedNumbers")]
pub use self::__BluetoothAssignedNumbers::kBluetoothL2CAPPSMNone;
#[cfg(feature = "BluetoothAssignedNumbers")]
pub use self::__BluetoothAssignedNumbers::kBluetoothL2CAPPSMRFCOMM;
#[cfg(feature = "BluetoothAssignedNumbers")]
pub use self::__BluetoothAssignedNumbers::kBluetoothL2CAPPSMReservedEnd;
#[cfg(feature = "BluetoothAssignedNumbers")]
pub use self::__BluetoothAssignedNumbers::kBluetoothL2CAPPSMReservedStart;
#[cfg(feature = "BluetoothAssignedNumbers")]
pub use self::__BluetoothAssignedNumbers::kBluetoothL2CAPPSMSDP;
#[cfg(feature = "BluetoothAssignedNumbers")]
pub use self::__BluetoothAssignedNumbers::kBluetoothL2CAPPSMTCS_BIN;
#[cfg(feature = "BluetoothAssignedNumbers")]
pub use self::__BluetoothAssignedNumbers::kBluetoothL2CAPPSMTCS_BIN_Cordless;
#[cfg(feature = "BluetoothAssignedNumbers")]
pub use self::__BluetoothAssignedNumbers::kBluetoothL2CAPPSMUID_C_Plane;
#[cfg(feature = "BluetoothAssignedNumbers")]
pub use self::__BluetoothAssignedNumbers::kBluetoothSDPUUID16ATT;
#[cfg(feature = "BluetoothAssignedNumbers")]
pub use self::__BluetoothAssignedNumbers::kBluetoothSDPUUID16AVCTP;
#[cfg(feature = "BluetoothAssignedNumbers")]
pub use self::__BluetoothAssignedNumbers::kBluetoothSDPUUID16AVDTP;
#[cfg(feature = "BluetoothAssignedNumbers")]
pub use self::__BluetoothAssignedNumbers::kBluetoothSDPUUID16BNEP;
#[cfg(feature = "BluetoothAssignedNumbers")]
pub use self::__BluetoothAssignedNumbers::kBluetoothSDPUUID16Base;
#[cfg(feature = "BluetoothAssignedNumbers")]
pub use self::__BluetoothAssignedNumbers::kBluetoothSDPUUID16CMPT;
#[cfg(feature = "BluetoothAssignedNumbers")]
pub use self::__BluetoothAssignedNumbers::kBluetoothSDPUUID16FTP;
#[cfg(feature = "BluetoothAssignedNumbers")]
pub use self::__BluetoothAssignedNumbers::kBluetoothSDPUUID16HIDP;
#[cfg(feature = "BluetoothAssignedNumbers")]
pub use self::__BluetoothAssignedNumbers::kBluetoothSDPUUID16HTTP;
#[cfg(feature = "BluetoothAssignedNumbers")]
pub use self::__BluetoothAssignedNumbers::kBluetoothSDPUUID16HardcopyControlChannel;
#[cfg(feature = "BluetoothAssignedNumbers")]
pub use self::__BluetoothAssignedNumbers::kBluetoothSDPUUID16HardcopyDataChannel;
#[cfg(feature = "BluetoothAssignedNumbers")]
pub use self::__BluetoothAssignedNumbers::kBluetoothSDPUUID16HardcopyNotification;
#[cfg(feature = "BluetoothAssignedNumbers")]
pub use self::__BluetoothAssignedNumbers::kBluetoothSDPUUID16IP;
#[cfg(feature = "BluetoothAssignedNumbers")]
pub use self::__BluetoothAssignedNumbers::kBluetoothSDPUUID16L2CAP;
#[cfg(feature = "BluetoothAssignedNumbers")]
pub use self::__BluetoothAssignedNumbers::kBluetoothSDPUUID16MCAPControlChannel;
#[cfg(feature = "BluetoothAssignedNumbers")]
pub use self::__BluetoothAssignedNumbers::kBluetoothSDPUUID16MCAPDataChannel;
#[cfg(feature = "BluetoothAssignedNumbers")]
pub use self::__BluetoothAssignedNumbers::kBluetoothSDPUUID16OBEX;
#[cfg(feature = "BluetoothAssignedNumbers")]
pub use self::__BluetoothAssignedNumbers::kBluetoothSDPUUID16RFCOMM;
#[cfg(feature = "BluetoothAssignedNumbers")]
pub use self::__BluetoothAssignedNumbers::kBluetoothSDPUUID16SDP;
#[cfg(feature = "BluetoothAssignedNumbers")]
pub use self::__BluetoothAssignedNumbers::kBluetoothSDPUUID16TCP;
#[cfg(feature = "BluetoothAssignedNumbers")]
pub use self::__BluetoothAssignedNumbers::kBluetoothSDPUUID16TCSAT;
#[cfg(feature = "BluetoothAssignedNumbers")]
pub use self::__BluetoothAssignedNumbers::kBluetoothSDPUUID16TCSBIN;
#[cfg(feature = "BluetoothAssignedNumbers")]
pub use self::__BluetoothAssignedNumbers::kBluetoothSDPUUID16UDI_C_Plane;
#[cfg(feature = "BluetoothAssignedNumbers")]
pub use self::__BluetoothAssignedNumbers::kBluetoothSDPUUID16UDP;
#[cfg(feature = "BluetoothAssignedNumbers")]
pub use self::__BluetoothAssignedNumbers::kBluetoothSDPUUID16UPNP;
#[cfg(feature = "BluetoothAssignedNumbers")]
pub use self::__BluetoothAssignedNumbers::kBluetoothSDPUUID16WSP;
#[cfg(feature = "BluetoothAssignedNumbers")]
pub use self::__BluetoothAssignedNumbers::kBluetoothServiceClassMajorAny;
#[cfg(feature = "BluetoothAssignedNumbers")]
pub use self::__BluetoothAssignedNumbers::kBluetoothServiceClassMajorAudio;
#[cfg(feature = "BluetoothAssignedNumbers")]
pub use self::__BluetoothAssignedNumbers::kBluetoothServiceClassMajorCapturing;
#[cfg(feature = "BluetoothAssignedNumbers")]
pub use self::__BluetoothAssignedNumbers::kBluetoothServiceClassMajorEnd;
#[cfg(feature = "BluetoothAssignedNumbers")]
pub use self::__BluetoothAssignedNumbers::kBluetoothServiceClassMajorInformation;
#[cfg(feature = "BluetoothAssignedNumbers")]
pub use self::__BluetoothAssignedNumbers::kBluetoothServiceClassMajorLimitedDiscoverableMode;
#[cfg(feature = "BluetoothAssignedNumbers")]
pub use self::__BluetoothAssignedNumbers::kBluetoothServiceClassMajorNetworking;
#[cfg(feature = "BluetoothAssignedNumbers")]
pub use self::__BluetoothAssignedNumbers::kBluetoothServiceClassMajorNone;
#[cfg(feature = "BluetoothAssignedNumbers")]
pub use self::__BluetoothAssignedNumbers::kBluetoothServiceClassMajorObjectTransfer;
#[cfg(feature = "BluetoothAssignedNumbers")]
pub use self::__BluetoothAssignedNumbers::kBluetoothServiceClassMajorPositioning;
#[cfg(feature = "BluetoothAssignedNumbers")]
pub use self::__BluetoothAssignedNumbers::kBluetoothServiceClassMajorRendering;
#[cfg(feature = "BluetoothAssignedNumbers")]
pub use self::__BluetoothAssignedNumbers::kBluetoothServiceClassMajorReserved1;
#[cfg(feature = "BluetoothAssignedNumbers")]
pub use self::__BluetoothAssignedNumbers::kBluetoothServiceClassMajorReserved2;
#[cfg(feature = "BluetoothAssignedNumbers")]
pub use self::__BluetoothAssignedNumbers::kBluetoothServiceClassMajorTelephony;
#[cfg(feature = "BluetoothAssignedNumbers")]
pub use self::__BluetoothAssignedNumbers::BluetoothCompanyIdentifers;
#[cfg(feature = "BluetoothAssignedNumbers")]
pub use self::__BluetoothAssignedNumbers::BluetoothHCIExtendedInquiryResponseDataTypes;
#[cfg(feature = "BluetoothAssignedNumbers")]
pub use self::__BluetoothAssignedNumbers::BluetoothHCIVersions;
#[cfg(feature = "BluetoothAssignedNumbers")]
pub use self::__BluetoothAssignedNumbers::BluetoothLMPVersions;
#[cfg(feature = "BluetoothAssignedNumbers")]
pub use self::__BluetoothAssignedNumbers::ProtocolParameters;
#[cfg(feature = "BluetoothAssignedNumbers")]
pub use self::__BluetoothAssignedNumbers::SDPAttributeDeviceIdentificationRecord;
#[cfg(feature = "BluetoothAssignedNumbers")]
pub use self::__BluetoothAssignedNumbers::SDPAttributeIdentifierCodes;
#[cfg(feature = "BluetoothAssignedNumbers")]
pub use self::__BluetoothAssignedNumbers::SDPServiceClasses;
#[cfg(feature = "IOBluetoothTypes")]
pub use self::__IOBluetoothTypes::kIOBluetoothConnectionAlreadyExists;
#[cfg(feature = "IOBluetoothTypes")]
pub use self::__IOBluetoothTypes::kIOBluetoothDeviceResetError;
#[cfg(feature = "IOBluetoothTypes")]
pub use self::__IOBluetoothTypes::kIOBluetoothHCIPowerStatesNotSupported;
#[cfg(feature = "IOBluetoothTypes")]
pub use self::__IOBluetoothTypes::kIOBluetoothNoHCIController;
#[cfg(feature = "IOBluetoothUserLib")]
pub use self::__IOBluetoothUserLib::kIOBluetoothObjectIDNULL;
#[cfg(all(feature = "IOBluetoothUserLib", feature = "objc2-core-foundation"))]
pub use self::__IOBluetoothUserLib::IOBluetoothAddSCOAudioDevice;
#[cfg(feature = "IOBluetoothUserLib")]
pub use self::__IOBluetoothUserLib::IOBluetoothDeviceRef;
#[cfg(all(feature = "Bluetooth", feature = "IOBluetoothUserLib"))]
pub use self::__IOBluetoothUserLib::IOBluetoothDeviceSearchAttributes;
#[cfg(all(feature = "Bluetooth", feature = "IOBluetoothUserLib"))]
pub use self::__IOBluetoothUserLib::IOBluetoothDeviceSearchDeviceAttributes;
#[cfg(feature = "IOBluetoothUserLib")]
pub use self::__IOBluetoothUserLib::IOBluetoothDeviceSearchOptions;
#[cfg(feature = "IOBluetoothUserLib")]
pub use self::__IOBluetoothUserLib::IOBluetoothDeviceSearchOptionsBits;
#[cfg(feature = "IOBluetoothUserLib")]
pub use self::__IOBluetoothUserLib::IOBluetoothDeviceSearchTypes;
#[cfg(feature = "IOBluetoothUserLib")]
pub use self::__IOBluetoothUserLib::IOBluetoothDeviceSearchTypesBits;
#[cfg(feature = "IOBluetoothUserLib")]
pub use self::__IOBluetoothUserLib::IOBluetoothIgnoreHIDDevice;
#[cfg(feature = "IOBluetoothUserLib")]
pub use self::__IOBluetoothUserLib::IOBluetoothL2CAPChannelRef;
#[cfg(all(feature = "IOBluetoothUserLib", feature = "objc2-core-foundation"))]
pub use self::__IOBluetoothUserLib::IOBluetoothL2CAPChannelRegisterForChannelCloseNotification;
#[cfg(feature = "IOBluetoothUserLib")]
pub use self::__IOBluetoothUserLib::IOBluetoothObjectID;
#[cfg(feature = "IOBluetoothUserLib")]
pub use self::__IOBluetoothUserLib::IOBluetoothObjectRef;
#[cfg(feature = "IOBluetoothUserLib")]
pub use self::__IOBluetoothUserLib::IOBluetoothRFCOMMChannelRef;
#[cfg(feature = "IOBluetoothUserLib")]
pub use self::__IOBluetoothUserLib::IOBluetoothRemoveIgnoredHIDDevice;
#[cfg(feature = "IOBluetoothUserLib")]
pub use self::__IOBluetoothUserLib::IOBluetoothRemoveSCOAudioDevice;
#[cfg(feature = "IOBluetoothUserLib")]
pub use self::__IOBluetoothUserLib::IOBluetoothSDPDataElementRef;
#[cfg(feature = "IOBluetoothUserLib")]
pub use self::__IOBluetoothUserLib::IOBluetoothSDPServiceRecordRef;
#[cfg(feature = "IOBluetoothUserLib")]
pub use self::__IOBluetoothUserLib::IOBluetoothSDPUUIDRef;
#[cfg(feature = "IOBluetoothUserLib")]
pub use self::__IOBluetoothUserLib::IOBluetoothUserNotificationCallback;
#[cfg(feature = "IOBluetoothUserLib")]
pub use self::__IOBluetoothUserLib::IOBluetoothUserNotificationChannelDirection;
#[cfg(feature = "IOBluetoothUserLib")]
pub use self::__IOBluetoothUserLib::IOBluetoothUserNotificationRef;
#[cfg(feature = "IOBluetoothUserLib")]
pub use self::__IOBluetoothUserLib::IOBluetoothUserNotificationUnregister;
#[cfg(feature = "IOBluetoothUtilities")]
pub use self::__IOBluetoothUtilities::IOBluetoothFindNumberOfRegistryEntriesOfClassName;
#[cfg(all(
    feature = "IOBluetoothUtilities",
    feature = "objc2",
    feature = "objc2-foundation"
))]
pub use self::__IOBluetoothUtilities::IOBluetoothGetUniqueFileNameAndPath;
#[cfg(all(feature = "IOBluetoothUtilities", feature = "objc2-foundation"))]
pub use self::__IOBluetoothUtilities::IOBluetoothIsFileAppleDesignatedPIMData;
#[cfg(all(
    feature = "Bluetooth",
    feature = "IOBluetoothUtilities",
    feature = "objc2",
    feature = "objc2-foundation"
))]
pub use self::__IOBluetoothUtilities::IOBluetoothNSStringFromDeviceAddress;
#[cfg(all(
    feature = "Bluetooth",
    feature = "IOBluetoothUtilities",
    feature = "objc2",
    feature = "objc2-foundation"
))]
pub use self::__IOBluetoothUtilities::IOBluetoothNSStringFromDeviceAddressColon;
#[cfg(all(
    feature = "Bluetooth",
    feature = "IOBluetoothUtilities",
    feature = "objc2-foundation"
))]
pub use self::__IOBluetoothUtilities::IOBluetoothNSStringToDeviceAddress;
#[cfg(feature = "IOBluetoothUtilities")]
pub use self::__IOBluetoothUtilities::IOBluetoothNumberOfAvailableHIDDevices;
#[cfg(feature = "IOBluetoothUtilities")]
pub use self::__IOBluetoothUtilities::IOBluetoothNumberOfKeyboardHIDDevices;
#[cfg(feature = "IOBluetoothUtilities")]
pub use self::__IOBluetoothUtilities::IOBluetoothNumberOfPointingHIDDevices;
#[cfg(feature = "IOBluetoothUtilities")]
pub use self::__IOBluetoothUtilities::IOBluetoothNumberOfTabletHIDDevices;
#[cfg(all(
    feature = "Bluetooth",
    feature = "IOBluetoothUserLib",
    feature = "OBEX",
    feature = "OBEXBluetooth"
))]
pub use self::__OBEXBluetooth::IOBluetoothOBEXSessionCreateWithIOBluetoothDeviceRefAndChannelNumber;
#[cfg(all(
    feature = "IOBluetoothUserLib",
    feature = "OBEX",
    feature = "OBEXBluetooth"
))]
pub use self::__OBEXBluetooth::IOBluetoothOBEXSessionCreateWithIOBluetoothSDPServiceRecordRef;
#[cfg(all(
    feature = "IOBluetoothUserLib",
    feature = "OBEX",
    feature = "OBEXBluetooth"
))]
pub use self::__OBEXBluetooth::IOBluetoothOBEXSessionCreateWithIncomingIOBluetoothRFCOMMChannel;
#[cfg(all(feature = "OBEX", feature = "OBEXBluetooth"))]
pub use self::__OBEXBluetooth::IOBluetoothOBEXSessionOpenConnectionCallback;
#[cfg(all(feature = "OBEX", feature = "OBEXBluetooth"))]
pub use self::__OBEXBluetooth::IOBluetoothOBEXSessionOpenTransportConnection;
#[cfg(feature = "objc2")]
pub use self::__objc2::*;
#[cfg(feature = "OBEX")]
pub use self::__OBEX::kCharsetStringISO88591;
#[cfg(feature = "OBEX")]
pub use self::__OBEX::kCharsetStringUTF8;
#[cfg(feature = "OBEX")]
pub use self::__OBEX::kEncodingString8Bit;
#[cfg(feature = "OBEX")]
pub use self::__OBEX::kEncodingStringBase64;
#[cfg(feature = "OBEX")]
pub use self::__OBEX::kEncodingStringQuotedPrintable;
#[cfg(all(feature = "OBEX", feature = "objc2-core-foundation"))]
pub use self::__OBEX::kOBEXHeaderIDKeyAppParameters;
#[cfg(all(feature = "OBEX", feature = "objc2-core-foundation"))]
pub use self::__OBEX::kOBEXHeaderIDKeyAuthorizationChallenge;
#[cfg(all(feature = "OBEX", feature = "objc2-core-foundation"))]
pub use self::__OBEX::kOBEXHeaderIDKeyAuthorizationResponse;
#[cfg(all(feature = "OBEX", feature = "objc2-core-foundation"))]
pub use self::__OBEX::kOBEXHeaderIDKeyBody;
#[cfg(all(feature = "OBEX", feature = "objc2-core-foundation"))]
pub use self::__OBEX::kOBEXHeaderIDKeyByteSequence;
#[cfg(all(feature = "OBEX", feature = "objc2-core-foundation"))]
pub use self::__OBEX::kOBEXHeaderIDKeyConnectionID;
#[cfg(all(feature = "OBEX", feature = "objc2-core-foundation"))]
pub use self::__OBEX::kOBEXHeaderIDKeyCount;
#[cfg(all(feature = "OBEX", feature = "objc2-core-foundation"))]
pub use self::__OBEX::kOBEXHeaderIDKeyDescription;
#[cfg(all(feature = "OBEX", feature = "objc2-core-foundation"))]
pub use self::__OBEX::kOBEXHeaderIDKeyEndOfBody;
#[cfg(all(feature = "OBEX", feature = "objc2-core-foundation"))]
pub use self::__OBEX::kOBEXHeaderIDKeyHTTP;
#[cfg(all(feature = "OBEX", feature = "objc2-core-foundation"))]
pub use self::__OBEX::kOBEXHeaderIDKeyLength;
#[cfg(all(feature = "OBEX", feature = "objc2-core-foundation"))]
pub use self::__OBEX::kOBEXHeaderIDKeyName;
#[cfg(all(feature = "OBEX", feature = "objc2-core-foundation"))]
pub use self::__OBEX::kOBEXHeaderIDKeyObjectClass;
#[cfg(all(feature = "OBEX", feature = "objc2-core-foundation"))]
pub use self::__OBEX::kOBEXHeaderIDKeyTarget;
#[cfg(all(feature = "OBEX", feature = "objc2-core-foundation"))]
pub use self::__OBEX::kOBEXHeaderIDKeyTime4Byte;
#[cfg(all(feature = "OBEX", feature = "objc2-core-foundation"))]
pub use self::__OBEX::kOBEXHeaderIDKeyTimeISO;
#[cfg(all(feature = "OBEX", feature = "objc2-core-foundation"))]
pub use self::__OBEX::kOBEXHeaderIDKeyType;
#[cfg(all(feature = "OBEX", feature = "objc2-core-foundation"))]
pub use self::__OBEX::kOBEXHeaderIDKeyUnknown1ByteQuantity;
#[cfg(all(feature = "OBEX", feature = "objc2-core-foundation"))]
pub use self::__OBEX::kOBEXHeaderIDKeyUnknown4ByteQuantity;
#[cfg(all(feature = "OBEX", feature = "objc2-core-foundation"))]
pub use self::__OBEX::kOBEXHeaderIDKeyUnknownByteSequence;
#[cfg(all(feature = "OBEX", feature = "objc2-core-foundation"))]
pub use self::__OBEX::kOBEXHeaderIDKeyUnknownUnicodeText;
#[cfg(all(feature = "OBEX", feature = "objc2-core-foundation"))]
pub use self::__OBEX::kOBEXHeaderIDKeyUserDefined;
#[cfg(all(feature = "OBEX", feature = "objc2-core-foundation"))]
pub use self::__OBEX::kOBEXHeaderIDKeyWho;
#[cfg(feature = "OBEX")]
pub use self::__OBEX::OBEXAbortCommandData;
#[cfg(feature = "OBEX")]
pub use self::__OBEX::OBEXAbortCommandResponseData;
#[cfg(all(feature = "OBEX", feature = "objc2-core-foundation"))]
pub use self::__OBEX::OBEXAddApplicationParameterHeader;
#[cfg(all(feature = "OBEX", feature = "objc2-core-foundation"))]
pub use self::__OBEX::OBEXAddAuthorizationChallengeHeader;
#[cfg(all(feature = "OBEX", feature = "objc2-core-foundation"))]
pub use self::__OBEX::OBEXAddAuthorizationResponseHeader;
#[cfg(all(feature = "OBEX", feature = "objc2-core-foundation"))]
pub use self::__OBEX::OBEXAddBodyHeader;
#[cfg(all(feature = "OBEX", feature = "objc2-core-foundation"))]
pub use self::__OBEX::OBEXAddByteSequenceHeader;
#[cfg(all(feature = "OBEX", feature = "objc2-core-foundation"))]
pub use self::__OBEX::OBEXAddConnectionIDHeader;
#[cfg(all(feature = "OBEX", feature = "objc2-core-foundation"))]
pub use self::__OBEX::OBEXAddCountHeader;
#[cfg(all(feature = "OBEX", feature = "objc2-core-foundation"))]
pub use self::__OBEX::OBEXAddDescriptionHeader;
#[cfg(all(feature = "OBEX", feature = "objc2-core-foundation"))]
pub use self::__OBEX::OBEXAddHTTPHeader;
#[cfg(all(feature = "OBEX", feature = "objc2-core-foundation"))]
pub use self::__OBEX::OBEXAddLengthHeader;
#[cfg(all(feature = "OBEX", feature = "objc2-core-foundation"))]
pub use self::__OBEX::OBEXAddNameHeader;
#[cfg(all(feature = "OBEX", feature = "objc2-core-foundation"))]
pub use self::__OBEX::OBEXAddObjectClassHeader;
#[cfg(all(feature = "OBEX", feature = "objc2-core-foundation"))]
pub use self::__OBEX::OBEXAddTargetHeader;
#[cfg(all(feature = "OBEX", feature = "objc2-core-foundation"))]
pub use self::__OBEX::OBEXAddTime4ByteHeader;
#[cfg(all(feature = "OBEX", feature = "objc2-core-foundation"))]
pub use self::__OBEX::OBEXAddTimeISOHeader;
#[cfg(all(feature = "OBEX", feature = "objc2-core-foundation"))]
pub use self::__OBEX::OBEXAddTypeHeader;
#[cfg(all(feature = "OBEX", feature = "objc2-core-foundation"))]
pub use self::__OBEX::OBEXAddUserDefinedHeader;
#[cfg(all(feature = "OBEX", feature = "objc2-core-foundation"))]
pub use self::__OBEX::OBEXAddWhoHeader;
#[cfg(feature = "OBEX")]
pub use self::__OBEX::OBEXConnectCommandData;
#[cfg(feature = "OBEX")]
pub use self::__OBEX::OBEXConnectCommandResponseData;
#[cfg(feature = "OBEX")]
pub use self::__OBEX::OBEXConnectFlagValues;
#[cfg(feature = "OBEX")]
pub use self::__OBEX::OBEXConstants;
#[cfg(all(feature = "OBEX", feature = "objc2-core-foundation"))]
pub use self::__OBEX::OBEXCreateVCard;
#[cfg(all(feature = "OBEX", feature = "objc2-core-foundation"))]
pub use self::__OBEX::OBEXCreateVEvent;
#[cfg(feature = "OBEX")]
pub use self::__OBEX::OBEXDisconnectCommandData;
#[cfg(feature = "OBEX")]
pub use self::__OBEX::OBEXDisconnectCommandResponseData;
#[cfg(feature = "OBEX")]
pub use self::__OBEX::OBEXError;
#[cfg(feature = "OBEX")]
pub use self::__OBEX::OBEXErrorCodes;
#[cfg(feature = "OBEX")]
pub use self::__OBEX::OBEXErrorData;
#[cfg(feature = "OBEX")]
pub use self::__OBEX::OBEXFlags;
#[cfg(feature = "OBEX")]
pub use self::__OBEX::OBEXGetCommandData;
#[cfg(feature = "OBEX")]
pub use self::__OBEX::OBEXGetCommandResponseData;
#[cfg(all(feature = "OBEX", feature = "objc2-core-foundation"))]
pub use self::__OBEX::OBEXGetHeaders;
#[cfg(feature = "OBEX")]
pub use self::__OBEX::OBEXHeaderIdentifier;
#[cfg(feature = "OBEX")]
pub use self::__OBEX::OBEXHeaderIdentifiers;
#[cfg(all(feature = "OBEX", feature = "objc2-core-foundation"))]
pub use self::__OBEX::OBEXHeadersToBytes;
#[cfg(feature = "OBEX")]
pub use self::__OBEX::OBEXMaxPacketLength;
#[cfg(feature = "OBEX")]
pub use self::__OBEX::OBEXNonceFlagValues;
#[cfg(feature = "OBEX")]
pub use self::__OBEX::OBEXOpCode;
#[cfg(feature = "OBEX")]
pub use self::__OBEX::OBEXOpCodeCommandValues;
#[cfg(feature = "OBEX")]
pub use self::__OBEX::OBEXOpCodeResponseValues;
#[cfg(feature = "OBEX")]
pub use self::__OBEX::OBEXOpCodeSessionValues;
#[cfg(feature = "OBEX")]
pub use self::__OBEX::OBEXPutCommandData;
#[cfg(feature = "OBEX")]
pub use self::__OBEX::OBEXPutCommandResponseData;
#[cfg(feature = "OBEX")]
pub use self::__OBEX::OBEXPutFlagValues;
#[cfg(feature = "OBEX")]
pub use self::__OBEX::OBEXRealmValues;
#[cfg(feature = "OBEX")]
pub use self::__OBEX::OBEXSessionAbort;
#[cfg(feature = "OBEX")]
pub use self::__OBEX::OBEXSessionAbortResponse;
#[cfg(feature = "OBEX")]
pub use self::__OBEX::OBEXSessionConnect;
#[cfg(feature = "OBEX")]
pub use self::__OBEX::OBEXSessionConnectResponse;
#[cfg(feature = "OBEX")]
pub use self::__OBEX::OBEXSessionDelete;
#[cfg(feature = "OBEX")]
pub use self::__OBEX::OBEXSessionDisconnect;
#[cfg(feature = "OBEX")]
pub use self::__OBEX::OBEXSessionDisconnectResponse;
#[cfg(feature = "OBEX")]
pub use self::__OBEX::OBEXSessionEvent;
#[cfg(feature = "OBEX")]
pub use self::__OBEX::OBEXSessionEventCallback;
#[cfg(feature = "OBEX")]
pub use self::__OBEX::OBEXSessionEventType;
#[cfg(feature = "OBEX")]
pub use self::__OBEX::OBEXSessionEventTypes;
#[cfg(feature = "OBEX")]
pub use self::__OBEX::OBEXSessionEvent_u;
#[cfg(feature = "OBEX")]
pub use self::__OBEX::OBEXSessionGet;
#[cfg(feature = "OBEX")]
pub use self::__OBEX::OBEXSessionGetAvailableCommandPayloadLength;
#[cfg(feature = "OBEX")]
pub use self::__OBEX::OBEXSessionGetAvailableCommandResponsePayloadLength;
#[cfg(feature = "OBEX")]
pub use self::__OBEX::OBEXSessionGetMaxPacketLength;
#[cfg(feature = "OBEX")]
pub use self::__OBEX::OBEXSessionGetResponse;
#[cfg(feature = "OBEX")]
pub use self::__OBEX::OBEXSessionHasOpenOBEXConnection;
#[cfg(feature = "OBEX")]
pub use self::__OBEX::OBEXSessionParameterTags;
#[cfg(feature = "OBEX")]
pub use self::__OBEX::OBEXSessionPut;
#[cfg(feature = "OBEX")]
pub use self::__OBEX::OBEXSessionPutResponse;
#[cfg(feature = "OBEX")]
pub use self::__OBEX::OBEXSessionRef;
#[cfg(feature = "OBEX")]
pub use self::__OBEX::OBEXSessionSetPath;
#[cfg(feature = "OBEX")]
pub use self::__OBEX::OBEXSessionSetPathResponse;
#[cfg(feature = "OBEX")]
pub use self::__OBEX::OBEXSessionSetServerCallback;
#[cfg(feature = "OBEX")]
pub use self::__OBEX::OBEXSetPathCommandData;
#[cfg(feature = "OBEX")]
pub use self::__OBEX::OBEXSetPathCommandResponseData;
#[cfg(feature = "OBEX")]
pub use self::__OBEX::OBEXVersion;
#[cfg(feature = "OBEX")]
pub use self::__OBEX::OBEXVersions;
#[cfg(feature = "OBEX")]
pub use self::__OBEX::OpaqueOBEXSessionRef;
