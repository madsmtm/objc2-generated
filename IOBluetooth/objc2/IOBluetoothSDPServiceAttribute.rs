//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use core::ptr::NonNull;
use objc2::__framework_prelude::*;
#[cfg(feature = "objc2-foundation")]
use objc2_foundation::*;

use crate::*;

extern_class!(
    /// IOBluetoothSDPServiceAttribute represents a single SDP service attribute.
    ///
    /// A service attribute contains two components: an attribute ID and a data element.
    ///
    /// See also [Apple's documentation](https://developer.apple.com/documentation/iobluetooth/iobluetoothsdpserviceattribute?language=objc)
    #[unsafe(super(NSObject))]
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub struct IOBluetoothSDPServiceAttribute;
);

#[cfg(feature = "objc2-foundation")]
extern_conformance!(
    unsafe impl NSCoding for IOBluetoothSDPServiceAttribute {}
);

extern_conformance!(
    unsafe impl NSObjectProtocol for IOBluetoothSDPServiceAttribute {}
);

#[cfg(feature = "objc2-foundation")]
extern_conformance!(
    unsafe impl NSSecureCoding for IOBluetoothSDPServiceAttribute {}
);

impl IOBluetoothSDPServiceAttribute {
    extern_methods!(
        #[cfg(feature = "Bluetooth")]
        /// Creates a new service attribute with the given ID and element value.
        ///
        /// See +[IOBluetoothSDPDataElement withElementValue:] for a description of the types that
        /// may be passed in as the attributeElementValue.
        ///
        /// Parameter `attributeID`: The attribute ID of the new service attribute.
        ///
        /// Parameter `attributeElementValue`: The data element value of the new service attribute
        ///
        /// Returns: Returns the newly allocated service attribute object.  Returns nil if there was an error parsing the                 element value.  The returned IOBluetoothSDPDataElement object has been autoreleased, so it is not
        /// necessary for the caller to release it.  If the object is to be referenced and kept around, retain
        /// should be called.
        ///
        /// # Safety
        ///
        /// - `attribute_element_value` should be of the correct type.
        /// - `attribute_element_value` might not allow `None`.
        #[unsafe(method(withID:attributeElementValue:))]
        #[unsafe(method_family = none)]
        pub unsafe fn withID_attributeElementValue(
            new_attribute_id: BluetoothSDPServiceAttributeID,
            attribute_element_value: Option<&NSObject>,
        ) -> Option<Retained<Self>>;

        #[cfg(all(feature = "Bluetooth", feature = "IOBluetoothSDPDataElement"))]
        /// Creates a new service attribute with the given ID and data element.
        ///
        /// Parameter `attributeID`: The attribute ID of the new service attribute.
        ///
        /// Parameter `attributeElement`: The data element of the new service attribute.
        ///
        /// Returns: Returns the newly allocated service attribute object.  Returns nil if there was an error.
        /// The returned IOBluetoothSDPDataElement object has been autoreleased, so it is not
        /// necessary for the caller to release it.  If the object is to be referenced and kept around, retain
        /// should be called.
        ///
        /// # Safety
        ///
        /// `attribute_element` might not allow `None`.
        #[unsafe(method(withID:attributeElement:))]
        #[unsafe(method_family = none)]
        pub unsafe fn withID_attributeElement(
            new_attribute_id: BluetoothSDPServiceAttributeID,
            attribute_element: Option<&IOBluetoothSDPDataElement>,
        ) -> Option<Retained<Self>>;

        #[cfg(feature = "Bluetooth")]
        /// Initializes a new service attribute with the given ID and element value.
        ///
        /// See +[IOBluetoothSDPDataElement withElementValue:] for a description of the types that
        /// may be passed in as the attributeElementValue.
        ///
        /// Parameter `attributeID`: The attribute ID of the new service attribute.
        ///
        /// Parameter `attributeElementValue`: The data element value of the new service attribute
        ///
        /// Returns: Returns self if successful.  Returns nil if there was an error parsing the element value.
        ///
        /// # Safety
        ///
        /// - `attribute_element_value` should be of the correct type.
        /// - `attribute_element_value` might not allow `None`.
        #[unsafe(method(initWithID:attributeElementValue:))]
        #[unsafe(method_family = init)]
        pub unsafe fn initWithID_attributeElementValue(
            this: Allocated<Self>,
            new_attribute_id: BluetoothSDPServiceAttributeID,
            attribute_element_value: Option<&NSObject>,
        ) -> Option<Retained<Self>>;

        #[cfg(all(feature = "Bluetooth", feature = "IOBluetoothSDPDataElement"))]
        /// Initializes a new service attribute with the given ID and data element.
        ///
        /// Parameter `attributeID`: The attribute ID of the new service attribute.
        ///
        /// Parameter `attributeElement`: The data element of the new service attribute.
        ///
        /// Returns: Returns self if successful.  Returns nil if there was an error.
        ///
        /// # Safety
        ///
        /// `attribute_element` might not allow `None`.
        #[unsafe(method(initWithID:attributeElement:))]
        #[unsafe(method_family = init)]
        pub unsafe fn initWithID_attributeElement(
            this: Allocated<Self>,
            new_attribute_id: BluetoothSDPServiceAttributeID,
            attribute_element: Option<&IOBluetoothSDPDataElement>,
        ) -> Option<Retained<Self>>;

        #[cfg(feature = "Bluetooth")]
        /// Returns the attribute ID for the target service attribute.
        ///
        /// Returns: Returns the attribute ID for the target service attribute.
        #[unsafe(method(getAttributeID))]
        #[unsafe(method_family = none)]
        pub unsafe fn getAttributeID(&self) -> BluetoothSDPServiceAttributeID;

        #[cfg(feature = "IOBluetoothSDPDataElement")]
        /// Returns the data element for the target service attribute.
        ///
        /// Returns: Returns the data element for the target service attribute.
        #[unsafe(method(getDataElement))]
        #[unsafe(method_family = none)]
        pub unsafe fn getDataElement(&self) -> Option<Retained<IOBluetoothSDPDataElement>>;

        #[cfg(feature = "IOBluetoothSDPDataElement")]
        /// Returns the data element representing the attribute ID for the target service attribute.
        ///
        /// Returns: Returns the data element representing the attribute ID for the target service attribute.
        #[unsafe(method(getIDDataElement))]
        #[unsafe(method_family = none)]
        pub unsafe fn getIDDataElement(&self) -> Option<Retained<IOBluetoothSDPDataElement>>;
    );
}

/// Methods declared on superclass `NSObject`.
impl IOBluetoothSDPServiceAttribute {
    extern_methods!(
        #[unsafe(method(init))]
        #[unsafe(method_family = init)]
        pub unsafe fn init(this: Allocated<Self>) -> Retained<Self>;

        #[unsafe(method(new))]
        #[unsafe(method_family = new)]
        pub unsafe fn new() -> Retained<Self>;
    );
}
