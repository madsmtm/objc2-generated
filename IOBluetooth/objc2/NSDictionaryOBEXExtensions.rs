//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use core::ffi::*;
use objc2::__framework_prelude::*;
#[cfg(feature = "objc2-foundation")]
use objc2_foundation::*;

use crate::*;

mod private_NSDictionaryOBEXExtensions {
    pub trait Sealed {}
}

/// Category on [`NSMutableDictionary`].
pub unsafe trait NSDictionaryOBEXExtensions:
    ClassType + Sized + private_NSDictionaryOBEXExtensions::Sealed
{
    extern_methods!(
        /// # Safety
        ///
        /// `in_headers_data` must be a valid pointer.
        #[unsafe(method(dictionaryWithOBEXHeadersData:headersDataSize:))]
        #[unsafe(method_family = none)]
        unsafe fn dictionaryWithOBEXHeadersData_headersDataSize(
            in_headers_data: *const c_void,
            in_data_size: usize,
        ) -> Option<Retained<Self>>;

        #[cfg(feature = "objc2-foundation")]
        /// # Safety
        ///
        /// `in_headers_data` might not allow `None`.
        #[unsafe(method(dictionaryWithOBEXHeadersData:))]
        #[unsafe(method_family = none)]
        unsafe fn dictionaryWithOBEXHeadersData(
            in_headers_data: Option<&NSData>,
        ) -> Option<Retained<Self>>;

        #[cfg(feature = "objc2-foundation")]
        #[unsafe(method(getHeaderBytes))]
        #[unsafe(method_family = none)]
        unsafe fn getHeaderBytes(&self) -> Option<Retained<NSMutableData>>;

        #[cfg(feature = "OBEX")]
        /// # Safety
        ///
        /// `in_header_data` must be a valid pointer.
        #[unsafe(method(addTargetHeader:length:))]
        #[unsafe(method_family = none)]
        unsafe fn addTargetHeader_length(
            &self,
            in_header_data: *const c_void,
            in_header_data_length: u32,
        ) -> OBEXError;

        #[cfg(feature = "OBEX")]
        /// # Safety
        ///
        /// `in_header_data` must be a valid pointer.
        #[unsafe(method(addHTTPHeader:length:))]
        #[unsafe(method_family = none)]
        unsafe fn addHTTPHeader_length(
            &self,
            in_header_data: *const c_void,
            in_header_data_length: u32,
        ) -> OBEXError;

        #[cfg(feature = "OBEX")]
        /// # Safety
        ///
        /// `in_header_data` must be a valid pointer.
        #[unsafe(method(addBodyHeader:length:endOfBody:))]
        #[unsafe(method_family = none)]
        unsafe fn addBodyHeader_length_endOfBody(
            &self,
            in_header_data: *const c_void,
            in_header_data_length: u32,
            is_end_of_body: bool,
        ) -> OBEXError;

        #[cfg(feature = "OBEX")]
        /// # Safety
        ///
        /// `in_header_data` must be a valid pointer.
        #[unsafe(method(addWhoHeader:length:))]
        #[unsafe(method_family = none)]
        unsafe fn addWhoHeader_length(
            &self,
            in_header_data: *const c_void,
            in_header_data_length: u32,
        ) -> OBEXError;

        #[cfg(feature = "OBEX")]
        /// # Safety
        ///
        /// `in_header_data` must be a valid pointer.
        #[unsafe(method(addConnectionIDHeader:length:))]
        #[unsafe(method_family = none)]
        unsafe fn addConnectionIDHeader_length(
            &self,
            in_header_data: *const c_void,
            in_header_data_length: u32,
        ) -> OBEXError;

        #[cfg(feature = "OBEX")]
        /// # Safety
        ///
        /// `in_header_data` must be a valid pointer.
        #[unsafe(method(addApplicationParameterHeader:length:))]
        #[unsafe(method_family = none)]
        unsafe fn addApplicationParameterHeader_length(
            &self,
            in_header_data: *const c_void,
            in_header_data_length: u32,
        ) -> OBEXError;

        #[cfg(feature = "OBEX")]
        /// # Safety
        ///
        /// `in_header_data` must be a valid pointer.
        #[unsafe(method(addByteSequenceHeader:length:))]
        #[unsafe(method_family = none)]
        unsafe fn addByteSequenceHeader_length(
            &self,
            in_header_data: *const c_void,
            in_header_data_length: u32,
        ) -> OBEXError;

        #[cfg(feature = "OBEX")]
        /// # Safety
        ///
        /// `in_header_data` must be a valid pointer.
        #[unsafe(method(addObjectClassHeader:length:))]
        #[unsafe(method_family = none)]
        unsafe fn addObjectClassHeader_length(
            &self,
            in_header_data: *const c_void,
            in_header_data_length: u32,
        ) -> OBEXError;

        #[cfg(feature = "OBEX")]
        /// # Safety
        ///
        /// `in_header_data` must be a valid pointer.
        #[unsafe(method(addAuthorizationChallengeHeader:length:))]
        #[unsafe(method_family = none)]
        unsafe fn addAuthorizationChallengeHeader_length(
            &self,
            in_header_data: *const c_void,
            in_header_data_length: u32,
        ) -> OBEXError;

        #[cfg(feature = "OBEX")]
        /// # Safety
        ///
        /// `in_header_data` must be a valid pointer.
        #[unsafe(method(addAuthorizationResponseHeader:length:))]
        #[unsafe(method_family = none)]
        unsafe fn addAuthorizationResponseHeader_length(
            &self,
            in_header_data: *const c_void,
            in_header_data_length: u32,
        ) -> OBEXError;

        #[cfg(feature = "OBEX")]
        /// # Safety
        ///
        /// `in_header_data` must be a valid pointer.
        #[unsafe(method(addTimeISOHeader:length:))]
        #[unsafe(method_family = none)]
        unsafe fn addTimeISOHeader_length(
            &self,
            in_header_data: *const c_void,
            in_header_data_length: u32,
        ) -> OBEXError;

        #[cfg(all(feature = "OBEX", feature = "objc2-foundation"))]
        /// # Safety
        ///
        /// `type` might not allow `None`.
        #[unsafe(method(addTypeHeader:))]
        #[unsafe(method_family = none)]
        unsafe fn addTypeHeader(&self, r#type: Option<&NSString>) -> OBEXError;

        #[cfg(feature = "OBEX")]
        #[unsafe(method(addLengthHeader:))]
        #[unsafe(method_family = none)]
        unsafe fn addLengthHeader(&self, length: u32) -> OBEXError;

        #[cfg(feature = "OBEX")]
        #[unsafe(method(addTime4ByteHeader:))]
        #[unsafe(method_family = none)]
        unsafe fn addTime4ByteHeader(&self, time4_byte: u32) -> OBEXError;

        #[cfg(feature = "OBEX")]
        #[unsafe(method(addCountHeader:))]
        #[unsafe(method_family = none)]
        unsafe fn addCountHeader(&self, in_count: u32) -> OBEXError;

        #[cfg(all(feature = "OBEX", feature = "objc2-foundation"))]
        /// # Safety
        ///
        /// `in_description_string` might not allow `None`.
        #[unsafe(method(addDescriptionHeader:))]
        #[unsafe(method_family = none)]
        unsafe fn addDescriptionHeader(
            &self,
            in_description_string: Option<&NSString>,
        ) -> OBEXError;

        #[cfg(all(feature = "OBEX", feature = "objc2-foundation"))]
        /// # Safety
        ///
        /// `in_name_string` might not allow `None`.
        #[unsafe(method(addNameHeader:))]
        #[unsafe(method_family = none)]
        unsafe fn addNameHeader(&self, in_name_string: Option<&NSString>) -> OBEXError;

        #[cfg(feature = "OBEX")]
        /// # Safety
        ///
        /// `in_header_data` must be a valid pointer.
        #[unsafe(method(addUserDefinedHeader:length:))]
        #[unsafe(method_family = none)]
        unsafe fn addUserDefinedHeader_length(
            &self,
            in_header_data: *const c_void,
            in_header_data_length: u32,
        ) -> OBEXError;

        #[cfg(all(feature = "OBEX", feature = "objc2-foundation"))]
        /// # Safety
        ///
        /// `type` might not allow `None`.
        #[unsafe(method(addImageHandleHeader:))]
        #[unsafe(method_family = none)]
        unsafe fn addImageHandleHeader(&self, r#type: Option<&NSString>) -> OBEXError;

        #[cfg(feature = "OBEX")]
        /// # Safety
        ///
        /// `in_header_data` must be a valid pointer.
        #[unsafe(method(addImageDescriptorHeader:length:))]
        #[unsafe(method_family = none)]
        unsafe fn addImageDescriptorHeader_length(
            &self,
            in_header_data: *const c_void,
            in_header_data_length: u32,
        ) -> OBEXError;

        /// # Safety
        ///
        /// `in_headers_data` must be a valid pointer.
        #[deprecated = "No longer supported"]
        #[unsafe(method(withOBEXHeadersData:headersDataSize:))]
        #[unsafe(method_family = none)]
        unsafe fn withOBEXHeadersData_headersDataSize(
            in_headers_data: *const c_void,
            in_data_size: usize,
        ) -> Option<Retained<Self>>;
    );
}

#[cfg(feature = "objc2-foundation")]
impl private_NSDictionaryOBEXExtensions::Sealed for NSMutableDictionary {}
#[cfg(feature = "objc2-foundation")]
unsafe impl NSDictionaryOBEXExtensions for NSMutableDictionary {}
