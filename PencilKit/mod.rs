// This file has been automatically generated by `objc2`'s `header-translator`.
// DO NOT EDIT

#![allow(unused_imports)]
#![allow(deprecated)]
#![allow(non_snake_case)]
#![allow(non_camel_case_types)]
#![allow(non_upper_case_globals)]
#![allow(missing_docs)]
#![allow(clippy::too_many_arguments)]
#![allow(clippy::type_complexity)]
#![allow(clippy::upper_case_acronyms)]
#![allow(clippy::identity_op)]
#![allow(clippy::missing_safety_doc)]
#![allow(clippy::doc_lazy_continuation)]
#![allow(rustdoc::broken_intra_doc_links)]
#![allow(rustdoc::bare_urls)]
#![allow(rustdoc::unportable_markdown)]
#![allow(rustdoc::invalid_html_tags)]

#[link(name = "PencilKit", kind = "framework")]
extern "C" {}

#[cfg(feature = "PKContentVersion")]
#[path = "PKContentVersion.rs"]
mod __PKContentVersion;
#[cfg(feature = "PKDrawing")]
#[path = "PKDrawing.rs"]
mod __PKDrawing;
#[cfg(feature = "PKEraserTool")]
#[path = "PKEraserTool.rs"]
mod __PKEraserTool;
#[cfg(feature = "PKFloatRange")]
#[path = "PKFloatRange.rs"]
mod __PKFloatRange;
#[cfg(feature = "PKInk")]
#[path = "PKInk.rs"]
mod __PKInk;
#[cfg(feature = "PKInkType")]
#[path = "PKInkType.rs"]
mod __PKInkType;
#[cfg(feature = "PKInkingTool")]
#[path = "PKInkingTool.rs"]
mod __PKInkingTool;
#[cfg(feature = "PKLassoTool")]
#[path = "PKLassoTool.rs"]
mod __PKLassoTool;
#[cfg(feature = "PKStroke")]
#[path = "PKStroke.rs"]
mod __PKStroke;
#[cfg(feature = "PKStrokePath")]
#[path = "PKStrokePath.rs"]
mod __PKStrokePath;
#[cfg(feature = "PKStrokePoint")]
#[path = "PKStrokePoint.rs"]
mod __PKStrokePoint;
#[cfg(feature = "PKTool")]
#[path = "PKTool.rs"]
mod __PKTool;
#[cfg(feature = "PKToolPickerEraserItem")]
#[path = "PKToolPickerEraserItem.rs"]
mod __PKToolPickerEraserItem;
#[cfg(feature = "PKToolPickerInkingItem")]
#[path = "PKToolPickerInkingItem.rs"]
mod __PKToolPickerInkingItem;
#[cfg(feature = "PKToolPickerItem")]
#[path = "PKToolPickerItem.rs"]
mod __PKToolPickerItem;

#[cfg(feature = "PKContentVersion")]
pub use self::__PKContentVersion::PKContentVersion;
#[cfg(all(feature = "PKDrawing", feature = "objc2-core-foundation"))]
pub use self::__PKDrawing::PKAppleDrawingTypeIdentifier;
#[cfg(feature = "PKDrawing")]
pub use self::__PKDrawing::PKDrawing;
#[cfg(all(feature = "PKEraserTool", feature = "PKTool"))]
pub use self::__PKEraserTool::PKEraserTool;
#[cfg(feature = "PKEraserTool")]
pub use self::__PKEraserTool::PKEraserType;
#[cfg(feature = "PKFloatRange")]
pub use self::__PKFloatRange::PKFloatRange;
#[cfg(feature = "PKInk")]
pub use self::__PKInk::PKInk;
#[cfg(feature = "PKInkType")]
pub use self::__PKInkType::PKInkType;
#[cfg(feature = "PKInkType")]
pub use self::__PKInkType::PKInkTypeCrayon;
#[cfg(feature = "PKInkType")]
pub use self::__PKInkType::PKInkTypeFountainPen;
#[cfg(feature = "PKInkType")]
pub use self::__PKInkType::PKInkTypeMarker;
#[cfg(feature = "PKInkType")]
pub use self::__PKInkType::PKInkTypeMonoline;
#[cfg(feature = "PKInkType")]
pub use self::__PKInkType::PKInkTypePen;
#[cfg(feature = "PKInkType")]
pub use self::__PKInkType::PKInkTypePencil;
#[cfg(feature = "PKInkType")]
pub use self::__PKInkType::PKInkTypeReed;
#[cfg(feature = "PKInkType")]
pub use self::__PKInkType::PKInkTypeReedCalligraphyPen;
#[cfg(feature = "PKInkType")]
pub use self::__PKInkType::PKInkTypeWatercolor;
#[cfg(all(feature = "PKInkingTool", feature = "PKTool"))]
pub use self::__PKInkingTool::PKInkingTool;
#[cfg(all(feature = "PKLassoTool", feature = "PKTool"))]
pub use self::__PKLassoTool::PKLassoTool;
#[cfg(feature = "PKStroke")]
pub use self::__PKStroke::PKStroke;
#[cfg(feature = "PKStrokePath")]
pub use self::__PKStrokePath::PKStrokePath;
#[cfg(feature = "PKStrokePoint")]
pub use self::__PKStrokePoint::PKStrokePoint;
#[cfg(feature = "PKTool")]
pub use self::__PKTool::PKTool;
#[cfg(all(feature = "PKToolPickerEraserItem", feature = "PKToolPickerItem"))]
pub use self::__PKToolPickerEraserItem::PKToolPickerEraserItem;
#[cfg(all(feature = "PKToolPickerInkingItem", feature = "PKToolPickerItem"))]
pub use self::__PKToolPickerInkingItem::PKToolPickerInkingItem;
#[cfg(feature = "PKToolPickerItem")]
pub use self::__PKToolPickerItem::PKToolPickerItem;
