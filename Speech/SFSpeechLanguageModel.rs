//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use core::ffi::*;
use core::ptr::NonNull;
use objc2::__framework_prelude::*;
use objc2_foundation::*;

use crate::*;

extern_class!(
    /// [Apple's documentation](https://developer.apple.com/documentation/speech/sfspeechlanguagemodelconfiguration?language=objc)
    #[unsafe(super(NSObject))]
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub struct SFSpeechLanguageModelConfiguration;
);

unsafe impl Send for SFSpeechLanguageModelConfiguration {}

unsafe impl Sync for SFSpeechLanguageModelConfiguration {}

extern_conformance!(
    unsafe impl NSCopying for SFSpeechLanguageModelConfiguration {}
);

unsafe impl CopyingHelper for SFSpeechLanguageModelConfiguration {
    type Result = Self;
}

extern_conformance!(
    unsafe impl NSObjectProtocol for SFSpeechLanguageModelConfiguration {}
);

impl SFSpeechLanguageModelConfiguration {
    extern_methods!(
        /// This property is not atomic.
        ///
        /// # Safety
        ///
        /// This might not be thread-safe.
        #[unsafe(method(languageModel))]
        #[unsafe(method_family = none)]
        pub unsafe fn languageModel(&self) -> Retained<NSURL>;

        /// This property is not atomic.
        ///
        /// # Safety
        ///
        /// This might not be thread-safe.
        #[unsafe(method(vocabulary))]
        #[unsafe(method_family = none)]
        pub unsafe fn vocabulary(&self) -> Option<Retained<NSURL>>;

        #[unsafe(method(initWithLanguageModel:))]
        #[unsafe(method_family = init)]
        pub unsafe fn initWithLanguageModel(
            this: Allocated<Self>,
            language_model: &NSURL,
        ) -> Retained<Self>;

        #[unsafe(method(initWithLanguageModel:vocabulary:))]
        #[unsafe(method_family = init)]
        pub unsafe fn initWithLanguageModel_vocabulary(
            this: Allocated<Self>,
            language_model: &NSURL,
            vocabulary: Option<&NSURL>,
        ) -> Retained<Self>;
    );
}

/// Methods declared on superclass `NSObject`.
impl SFSpeechLanguageModelConfiguration {
    extern_methods!(
        #[unsafe(method(init))]
        #[unsafe(method_family = init)]
        pub unsafe fn init(this: Allocated<Self>) -> Retained<Self>;

        #[unsafe(method(new))]
        #[unsafe(method_family = new)]
        pub unsafe fn new() -> Retained<Self>;
    );
}

extern_class!(
    /// [Apple's documentation](https://developer.apple.com/documentation/speech/sfspeechlanguagemodel?language=objc)
    #[unsafe(super(NSObject))]
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub struct SFSpeechLanguageModel;
);

extern_conformance!(
    unsafe impl NSObjectProtocol for SFSpeechLanguageModel {}
);

impl SFSpeechLanguageModel {
    extern_methods!(
        #[cfg(feature = "block2")]
        #[unsafe(method(prepareCustomLanguageModelForUrl:clientIdentifier:configuration:completion:))]
        #[unsafe(method_family = none)]
        pub unsafe fn prepareCustomLanguageModelForUrl_clientIdentifier_configuration_completion(
            asset: &NSURL,
            client_identifier: &NSString,
            configuration: &SFSpeechLanguageModelConfiguration,
            completion: &block2::DynBlock<dyn Fn(*mut NSError)>,
        );

        #[cfg(feature = "block2")]
        #[unsafe(method(prepareCustomLanguageModelForUrl:clientIdentifier:configuration:ignoresCache:completion:))]
        #[unsafe(method_family = none)]
        pub unsafe fn prepareCustomLanguageModelForUrl_clientIdentifier_configuration_ignoresCache_completion(
            asset: &NSURL,
            client_identifier: &NSString,
            configuration: &SFSpeechLanguageModelConfiguration,
            ignores_cache: bool,
            completion: &block2::DynBlock<dyn Fn(*mut NSError)>,
        );
    );
}

/// Methods declared on superclass `NSObject`.
impl SFSpeechLanguageModel {
    extern_methods!(
        #[unsafe(method(init))]
        #[unsafe(method_family = init)]
        pub unsafe fn init(this: Allocated<Self>) -> Retained<Self>;

        #[unsafe(method(new))]
        #[unsafe(method_family = new)]
        pub unsafe fn new() -> Retained<Self>;
    );
}
