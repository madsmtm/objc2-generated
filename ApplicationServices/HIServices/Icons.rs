//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use core::ffi::*;
use core::ptr::NonNull;
use objc2_core_foundation::*;
#[cfg(feature = "objc2-core-services")]
use objc2_core_services::*;

use crate::*;

/// [Apple's documentation](https://developer.apple.com/documentation/applicationservices/kalignnone?language=objc)
pub const kAlignNone: c_uint = 0x00;
/// [Apple's documentation](https://developer.apple.com/documentation/applicationservices/kalignverticalcenter?language=objc)
pub const kAlignVerticalCenter: c_uint = 0x01;
/// [Apple's documentation](https://developer.apple.com/documentation/applicationservices/kaligntop?language=objc)
pub const kAlignTop: c_uint = 0x02;
/// [Apple's documentation](https://developer.apple.com/documentation/applicationservices/kalignbottom?language=objc)
pub const kAlignBottom: c_uint = 0x03;
/// [Apple's documentation](https://developer.apple.com/documentation/applicationservices/kalignhorizontalcenter?language=objc)
pub const kAlignHorizontalCenter: c_uint = 0x04;
/// [Apple's documentation](https://developer.apple.com/documentation/applicationservices/kalignabsolutecenter?language=objc)
pub const kAlignAbsoluteCenter: c_uint = kAlignVerticalCenter | kAlignHorizontalCenter;
/// [Apple's documentation](https://developer.apple.com/documentation/applicationservices/kaligncentertop?language=objc)
pub const kAlignCenterTop: c_uint = kAlignTop | kAlignHorizontalCenter;
/// [Apple's documentation](https://developer.apple.com/documentation/applicationservices/kaligncenterbottom?language=objc)
pub const kAlignCenterBottom: c_uint = kAlignBottom | kAlignHorizontalCenter;
/// [Apple's documentation](https://developer.apple.com/documentation/applicationservices/kalignleft?language=objc)
pub const kAlignLeft: c_uint = 0x08;
/// [Apple's documentation](https://developer.apple.com/documentation/applicationservices/kaligncenterleft?language=objc)
pub const kAlignCenterLeft: c_uint = kAlignVerticalCenter | kAlignLeft;
/// [Apple's documentation](https://developer.apple.com/documentation/applicationservices/kaligntopleft?language=objc)
pub const kAlignTopLeft: c_uint = kAlignTop | kAlignLeft;
/// [Apple's documentation](https://developer.apple.com/documentation/applicationservices/kalignbottomleft?language=objc)
pub const kAlignBottomLeft: c_uint = kAlignBottom | kAlignLeft;
/// [Apple's documentation](https://developer.apple.com/documentation/applicationservices/kalignright?language=objc)
pub const kAlignRight: c_uint = 0x0C;
/// [Apple's documentation](https://developer.apple.com/documentation/applicationservices/kaligncenterright?language=objc)
pub const kAlignCenterRight: c_uint = kAlignVerticalCenter | kAlignRight;
/// [Apple's documentation](https://developer.apple.com/documentation/applicationservices/kaligntopright?language=objc)
pub const kAlignTopRight: c_uint = kAlignTop | kAlignRight;
/// [Apple's documentation](https://developer.apple.com/documentation/applicationservices/kalignbottomright?language=objc)
pub const kAlignBottomRight: c_uint = kAlignBottom | kAlignRight;

/// [Apple's documentation](https://developer.apple.com/documentation/applicationservices/atnone?language=objc)
pub const atNone: c_uint = kAlignNone;
/// [Apple's documentation](https://developer.apple.com/documentation/applicationservices/atverticalcenter?language=objc)
pub const atVerticalCenter: c_uint = kAlignVerticalCenter;
/// [Apple's documentation](https://developer.apple.com/documentation/applicationservices/attop?language=objc)
pub const atTop: c_uint = kAlignTop;
/// [Apple's documentation](https://developer.apple.com/documentation/applicationservices/atbottom?language=objc)
pub const atBottom: c_uint = kAlignBottom;
/// [Apple's documentation](https://developer.apple.com/documentation/applicationservices/athorizontalcenter?language=objc)
pub const atHorizontalCenter: c_uint = kAlignHorizontalCenter;
/// [Apple's documentation](https://developer.apple.com/documentation/applicationservices/atabsolutecenter?language=objc)
pub const atAbsoluteCenter: c_uint = kAlignAbsoluteCenter;
/// [Apple's documentation](https://developer.apple.com/documentation/applicationservices/atcentertop?language=objc)
pub const atCenterTop: c_uint = kAlignCenterTop;
/// [Apple's documentation](https://developer.apple.com/documentation/applicationservices/atcenterbottom?language=objc)
pub const atCenterBottom: c_uint = kAlignCenterBottom;
/// [Apple's documentation](https://developer.apple.com/documentation/applicationservices/atleft?language=objc)
pub const atLeft: c_uint = kAlignLeft;
/// [Apple's documentation](https://developer.apple.com/documentation/applicationservices/atcenterleft?language=objc)
pub const atCenterLeft: c_uint = kAlignCenterLeft;
/// [Apple's documentation](https://developer.apple.com/documentation/applicationservices/attopleft?language=objc)
pub const atTopLeft: c_uint = kAlignTopLeft;
/// [Apple's documentation](https://developer.apple.com/documentation/applicationservices/atbottomleft?language=objc)
pub const atBottomLeft: c_uint = kAlignBottomLeft;
/// [Apple's documentation](https://developer.apple.com/documentation/applicationservices/atright?language=objc)
pub const atRight: c_uint = kAlignRight;
/// [Apple's documentation](https://developer.apple.com/documentation/applicationservices/atcenterright?language=objc)
pub const atCenterRight: c_uint = kAlignCenterRight;
/// [Apple's documentation](https://developer.apple.com/documentation/applicationservices/attopright?language=objc)
pub const atTopRight: c_uint = kAlignTopRight;
/// [Apple's documentation](https://developer.apple.com/documentation/applicationservices/atbottomright?language=objc)
pub const atBottomRight: c_uint = kAlignBottomRight;

/// [Apple's documentation](https://developer.apple.com/documentation/applicationservices/iconalignmenttype?language=objc)
pub type IconAlignmentType = i16;

/// [Apple's documentation](https://developer.apple.com/documentation/applicationservices/ktransformnone?language=objc)
pub const kTransformNone: c_uint = 0x00;
/// [Apple's documentation](https://developer.apple.com/documentation/applicationservices/ktransformdisabled?language=objc)
pub const kTransformDisabled: c_uint = 0x01;
/// [Apple's documentation](https://developer.apple.com/documentation/applicationservices/ktransformoffline?language=objc)
pub const kTransformOffline: c_uint = 0x02;
/// [Apple's documentation](https://developer.apple.com/documentation/applicationservices/ktransformopen?language=objc)
pub const kTransformOpen: c_uint = 0x03;
/// [Apple's documentation](https://developer.apple.com/documentation/applicationservices/ktransformlabel1?language=objc)
pub const kTransformLabel1: c_uint = 0x0100;
/// [Apple's documentation](https://developer.apple.com/documentation/applicationservices/ktransformlabel2?language=objc)
pub const kTransformLabel2: c_uint = 0x0200;
/// [Apple's documentation](https://developer.apple.com/documentation/applicationservices/ktransformlabel3?language=objc)
pub const kTransformLabel3: c_uint = 0x0300;
/// [Apple's documentation](https://developer.apple.com/documentation/applicationservices/ktransformlabel4?language=objc)
pub const kTransformLabel4: c_uint = 0x0400;
/// [Apple's documentation](https://developer.apple.com/documentation/applicationservices/ktransformlabel5?language=objc)
pub const kTransformLabel5: c_uint = 0x0500;
/// [Apple's documentation](https://developer.apple.com/documentation/applicationservices/ktransformlabel6?language=objc)
pub const kTransformLabel6: c_uint = 0x0600;
/// [Apple's documentation](https://developer.apple.com/documentation/applicationservices/ktransformlabel7?language=objc)
pub const kTransformLabel7: c_uint = 0x0700;
/// [Apple's documentation](https://developer.apple.com/documentation/applicationservices/ktransformselected?language=objc)
pub const kTransformSelected: c_uint = 0x4000;
/// [Apple's documentation](https://developer.apple.com/documentation/applicationservices/ktransformselecteddisabled?language=objc)
pub const kTransformSelectedDisabled: c_uint = kTransformSelected | kTransformDisabled;
/// [Apple's documentation](https://developer.apple.com/documentation/applicationservices/ktransformselectedoffline?language=objc)
pub const kTransformSelectedOffline: c_uint = kTransformSelected | kTransformOffline;
/// [Apple's documentation](https://developer.apple.com/documentation/applicationservices/ktransformselectedopen?language=objc)
pub const kTransformSelectedOpen: c_uint = kTransformSelected | kTransformOpen;

/// [Apple's documentation](https://developer.apple.com/documentation/applicationservices/ttnone?language=objc)
pub const ttNone: c_uint = kTransformNone;
/// [Apple's documentation](https://developer.apple.com/documentation/applicationservices/ttdisabled?language=objc)
pub const ttDisabled: c_uint = kTransformDisabled;
/// [Apple's documentation](https://developer.apple.com/documentation/applicationservices/ttoffline?language=objc)
pub const ttOffline: c_uint = kTransformOffline;
/// [Apple's documentation](https://developer.apple.com/documentation/applicationservices/ttopen?language=objc)
pub const ttOpen: c_uint = kTransformOpen;
/// [Apple's documentation](https://developer.apple.com/documentation/applicationservices/ttlabel1?language=objc)
pub const ttLabel1: c_uint = kTransformLabel1;
/// [Apple's documentation](https://developer.apple.com/documentation/applicationservices/ttlabel2?language=objc)
pub const ttLabel2: c_uint = kTransformLabel2;
/// [Apple's documentation](https://developer.apple.com/documentation/applicationservices/ttlabel3?language=objc)
pub const ttLabel3: c_uint = kTransformLabel3;
/// [Apple's documentation](https://developer.apple.com/documentation/applicationservices/ttlabel4?language=objc)
pub const ttLabel4: c_uint = kTransformLabel4;
/// [Apple's documentation](https://developer.apple.com/documentation/applicationservices/ttlabel5?language=objc)
pub const ttLabel5: c_uint = kTransformLabel5;
/// [Apple's documentation](https://developer.apple.com/documentation/applicationservices/ttlabel6?language=objc)
pub const ttLabel6: c_uint = kTransformLabel6;
/// [Apple's documentation](https://developer.apple.com/documentation/applicationservices/ttlabel7?language=objc)
pub const ttLabel7: c_uint = kTransformLabel7;
/// [Apple's documentation](https://developer.apple.com/documentation/applicationservices/ttselected?language=objc)
pub const ttSelected: c_uint = kTransformSelected;
/// [Apple's documentation](https://developer.apple.com/documentation/applicationservices/ttselecteddisabled?language=objc)
pub const ttSelectedDisabled: c_uint = kTransformSelectedDisabled;
/// [Apple's documentation](https://developer.apple.com/documentation/applicationservices/ttselectedoffline?language=objc)
pub const ttSelectedOffline: c_uint = kTransformSelectedOffline;
/// [Apple's documentation](https://developer.apple.com/documentation/applicationservices/ttselectedopen?language=objc)
pub const ttSelectedOpen: c_uint = kTransformSelectedOpen;

/// [Apple's documentation](https://developer.apple.com/documentation/applicationservices/icontransformtype?language=objc)
pub type IconTransformType = i16;

/// [Apple's documentation](https://developer.apple.com/documentation/applicationservices/kselectorlarge1bit?language=objc)
pub const kSelectorLarge1Bit: c_uint = 0x00000001;
/// [Apple's documentation](https://developer.apple.com/documentation/applicationservices/kselectorlarge4bit?language=objc)
pub const kSelectorLarge4Bit: c_uint = 0x00000002;
/// [Apple's documentation](https://developer.apple.com/documentation/applicationservices/kselectorlarge8bit?language=objc)
pub const kSelectorLarge8Bit: c_uint = 0x00000004;
/// [Apple's documentation](https://developer.apple.com/documentation/applicationservices/kselectorlarge32bit?language=objc)
pub const kSelectorLarge32Bit: c_uint = 0x00000008;
/// [Apple's documentation](https://developer.apple.com/documentation/applicationservices/kselectorlarge8bitmask?language=objc)
pub const kSelectorLarge8BitMask: c_uint = 0x00000010;
/// [Apple's documentation](https://developer.apple.com/documentation/applicationservices/kselectorsmall1bit?language=objc)
pub const kSelectorSmall1Bit: c_uint = 0x00000100;
/// [Apple's documentation](https://developer.apple.com/documentation/applicationservices/kselectorsmall4bit?language=objc)
pub const kSelectorSmall4Bit: c_uint = 0x00000200;
/// [Apple's documentation](https://developer.apple.com/documentation/applicationservices/kselectorsmall8bit?language=objc)
pub const kSelectorSmall8Bit: c_uint = 0x00000400;
/// [Apple's documentation](https://developer.apple.com/documentation/applicationservices/kselectorsmall32bit?language=objc)
pub const kSelectorSmall32Bit: c_uint = 0x00000800;
/// [Apple's documentation](https://developer.apple.com/documentation/applicationservices/kselectorsmall8bitmask?language=objc)
pub const kSelectorSmall8BitMask: c_uint = 0x00001000;
/// [Apple's documentation](https://developer.apple.com/documentation/applicationservices/kselectormini1bit?language=objc)
pub const kSelectorMini1Bit: c_uint = 0x00010000;
/// [Apple's documentation](https://developer.apple.com/documentation/applicationservices/kselectormini4bit?language=objc)
pub const kSelectorMini4Bit: c_uint = 0x00020000;
/// [Apple's documentation](https://developer.apple.com/documentation/applicationservices/kselectormini8bit?language=objc)
pub const kSelectorMini8Bit: c_uint = 0x00040000;
/// [Apple's documentation](https://developer.apple.com/documentation/applicationservices/kselectorhuge1bit?language=objc)
pub const kSelectorHuge1Bit: c_uint = 0x01000000;
/// [Apple's documentation](https://developer.apple.com/documentation/applicationservices/kselectorhuge4bit?language=objc)
pub const kSelectorHuge4Bit: c_uint = 0x02000000;
/// [Apple's documentation](https://developer.apple.com/documentation/applicationservices/kselectorhuge8bit?language=objc)
pub const kSelectorHuge8Bit: c_uint = 0x04000000;
/// [Apple's documentation](https://developer.apple.com/documentation/applicationservices/kselectorhuge32bit?language=objc)
pub const kSelectorHuge32Bit: c_uint = 0x08000000;
/// [Apple's documentation](https://developer.apple.com/documentation/applicationservices/kselectorhuge8bitmask?language=objc)
pub const kSelectorHuge8BitMask: c_uint = 0x10000000;
/// [Apple's documentation](https://developer.apple.com/documentation/applicationservices/kselectoralllargedata?language=objc)
pub const kSelectorAllLargeData: c_uint = 0x000000FF;
/// [Apple's documentation](https://developer.apple.com/documentation/applicationservices/kselectorallsmalldata?language=objc)
pub const kSelectorAllSmallData: c_uint = 0x0000FF00;
/// [Apple's documentation](https://developer.apple.com/documentation/applicationservices/kselectorallminidata?language=objc)
pub const kSelectorAllMiniData: c_uint = 0x00FF0000;
/// [Apple's documentation](https://developer.apple.com/documentation/applicationservices/kselectorallhugedata?language=objc)
pub const kSelectorAllHugeData: c_uint = 0xFF000000;
/// [Apple's documentation](https://developer.apple.com/documentation/applicationservices/kselectorall1bitdata?language=objc)
pub const kSelectorAll1BitData: c_uint =
    kSelectorLarge1Bit | kSelectorSmall1Bit | kSelectorMini1Bit | kSelectorHuge1Bit;
/// [Apple's documentation](https://developer.apple.com/documentation/applicationservices/kselectorall4bitdata?language=objc)
pub const kSelectorAll4BitData: c_uint =
    kSelectorLarge4Bit | kSelectorSmall4Bit | kSelectorMini4Bit | kSelectorHuge4Bit;
/// [Apple's documentation](https://developer.apple.com/documentation/applicationservices/kselectorall8bitdata?language=objc)
pub const kSelectorAll8BitData: c_uint =
    kSelectorLarge8Bit | kSelectorSmall8Bit | kSelectorMini8Bit | kSelectorHuge8Bit;
/// [Apple's documentation](https://developer.apple.com/documentation/applicationservices/kselectorall32bitdata?language=objc)
pub const kSelectorAll32BitData: c_uint =
    kSelectorLarge32Bit | kSelectorSmall32Bit | kSelectorHuge32Bit;
/// [Apple's documentation](https://developer.apple.com/documentation/applicationservices/kselectorallavailabledata?language=objc)
pub const kSelectorAllAvailableData: c_uint = 0xFFFFFFFF;

/// [Apple's documentation](https://developer.apple.com/documentation/applicationservices/iconselectorvalue?language=objc)
pub type IconSelectorValue = u32;

/// [Apple's documentation](https://developer.apple.com/documentation/applicationservices/svlarge1bit?language=objc)
pub const svLarge1Bit: c_uint = kSelectorLarge1Bit;
/// [Apple's documentation](https://developer.apple.com/documentation/applicationservices/svlarge4bit?language=objc)
pub const svLarge4Bit: c_uint = kSelectorLarge4Bit;
/// [Apple's documentation](https://developer.apple.com/documentation/applicationservices/svlarge8bit?language=objc)
pub const svLarge8Bit: c_uint = kSelectorLarge8Bit;
/// [Apple's documentation](https://developer.apple.com/documentation/applicationservices/svsmall1bit?language=objc)
pub const svSmall1Bit: c_uint = kSelectorSmall1Bit;
/// [Apple's documentation](https://developer.apple.com/documentation/applicationservices/svsmall4bit?language=objc)
pub const svSmall4Bit: c_uint = kSelectorSmall4Bit;
/// [Apple's documentation](https://developer.apple.com/documentation/applicationservices/svsmall8bit?language=objc)
pub const svSmall8Bit: c_uint = kSelectorSmall8Bit;
/// [Apple's documentation](https://developer.apple.com/documentation/applicationservices/svmini1bit?language=objc)
pub const svMini1Bit: c_uint = kSelectorMini1Bit;
/// [Apple's documentation](https://developer.apple.com/documentation/applicationservices/svmini4bit?language=objc)
pub const svMini4Bit: c_uint = kSelectorMini4Bit;
/// [Apple's documentation](https://developer.apple.com/documentation/applicationservices/svmini8bit?language=objc)
pub const svMini8Bit: c_uint = kSelectorMini8Bit;
/// [Apple's documentation](https://developer.apple.com/documentation/applicationservices/svalllargedata?language=objc)
pub const svAllLargeData: c_uint = kSelectorAllLargeData;
/// [Apple's documentation](https://developer.apple.com/documentation/applicationservices/svallsmalldata?language=objc)
pub const svAllSmallData: c_uint = kSelectorAllSmallData;
/// [Apple's documentation](https://developer.apple.com/documentation/applicationservices/svallminidata?language=objc)
pub const svAllMiniData: c_uint = kSelectorAllMiniData;
/// [Apple's documentation](https://developer.apple.com/documentation/applicationservices/svall1bitdata?language=objc)
pub const svAll1BitData: c_uint = kSelectorAll1BitData;
/// [Apple's documentation](https://developer.apple.com/documentation/applicationservices/svall4bitdata?language=objc)
pub const svAll4BitData: c_uint = kSelectorAll4BitData;
/// [Apple's documentation](https://developer.apple.com/documentation/applicationservices/svall8bitdata?language=objc)
pub const svAll8BitData: c_uint = kSelectorAll8BitData;
/// [Apple's documentation](https://developer.apple.com/documentation/applicationservices/svallavailabledata?language=objc)
pub const svAllAvailableData: c_uint = kSelectorAllAvailableData;

/// [Apple's documentation](https://developer.apple.com/documentation/applicationservices/iconactionprocptr?language=objc)
pub type IconActionProcPtr =
    Option<unsafe extern "C-unwind" fn(ResType, *mut Handle, *mut c_void) -> OSErr>;

/// [Apple's documentation](https://developer.apple.com/documentation/applicationservices/icongetterprocptr?language=objc)
pub type IconGetterProcPtr = Option<unsafe extern "C-unwind" fn(ResType, *mut c_void) -> Handle>;

/// [Apple's documentation](https://developer.apple.com/documentation/applicationservices/iconactionupp?language=objc)
pub type IconActionUPP = IconActionProcPtr;

/// [Apple's documentation](https://developer.apple.com/documentation/applicationservices/icongetterupp?language=objc)
pub type IconGetterUPP = IconGetterProcPtr;

extern "C-unwind" {
    /// # Safety
    ///
    /// `user_routine` must be implemented correctly.
    pub fn NewIconActionUPP(user_routine: IconActionProcPtr) -> IconActionUPP;
}

extern "C-unwind" {
    /// # Safety
    ///
    /// `user_routine` must be implemented correctly.
    pub fn NewIconGetterUPP(user_routine: IconGetterProcPtr) -> IconGetterUPP;
}

extern "C-unwind" {
    /// # Safety
    ///
    /// `user_upp` must be implemented correctly.
    pub fn DisposeIconActionUPP(user_upp: IconActionUPP);
}

extern "C-unwind" {
    /// # Safety
    ///
    /// `user_upp` must be implemented correctly.
    pub fn DisposeIconGetterUPP(user_upp: IconGetterUPP);
}

extern "C-unwind" {
    /// # Safety
    ///
    /// - `the_icon` must be a valid pointer.
    /// - `your_data_ptr` must be a valid pointer.
    /// - `user_upp` must be implemented correctly.
    pub fn InvokeIconActionUPP(
        the_type: ResType,
        the_icon: *mut Handle,
        your_data_ptr: *mut c_void,
        user_upp: IconActionUPP,
    ) -> OSErr;
}

extern "C-unwind" {
    /// # Safety
    ///
    /// - `your_data_ptr` must be a valid pointer.
    /// - `user_upp` must be implemented correctly.
    pub fn InvokeIconGetterUPP(
        the_type: ResType,
        your_data_ptr: *mut c_void,
        user_upp: IconGetterUPP,
    ) -> Handle;
}

/// [Apple's documentation](https://developer.apple.com/documentation/applicationservices/ploticonrefflags?language=objc)
pub type PlotIconRefFlags = u32;

/// [Apple's documentation](https://developer.apple.com/documentation/applicationservices/kploticonrefnormalflags?language=objc)
pub const kPlotIconRefNormalFlags: c_uint = 0;
/// [Apple's documentation](https://developer.apple.com/documentation/applicationservices/kploticonrefnoimage?language=objc)
pub const kPlotIconRefNoImage: c_uint = 1 << 1;
/// [Apple's documentation](https://developer.apple.com/documentation/applicationservices/kploticonrefnomask?language=objc)
pub const kPlotIconRefNoMask: c_uint = 1 << 2;

extern "C-unwind" {
    /// # Safety
    ///
    /// - `the_icon_ref` must be a valid pointer.
    /// - `icon_family` must be a valid pointer.
    #[cfg(feature = "objc2-core-services")]
    pub fn IconRefToIconFamily(
        the_icon_ref: IconRef,
        which_icons: IconSelectorValue,
        icon_family: *mut IconFamilyHandle,
    ) -> OSErr;
}

extern "C-unwind" {
    /// # Safety
    ///
    /// - `icon_family` must be a valid pointer.
    /// - `h` must be a valid pointer.
    #[cfg(feature = "objc2-core-services")]
    pub fn SetIconFamilyData(icon_family: IconFamilyHandle, icon_type: OSType, h: Handle) -> OSErr;
}

extern "C-unwind" {
    /// # Safety
    ///
    /// - `icon_family` must be a valid pointer.
    /// - `h` must be a valid pointer.
    #[cfg(feature = "objc2-core-services")]
    pub fn GetIconFamilyData(icon_family: IconFamilyHandle, icon_type: OSType, h: Handle) -> OSErr;
}

/// # Safety
///
/// - `test_pt` must be a valid pointer.
/// - `icon_rect` must be a valid pointer.
/// - `the_icon_ref` must be a valid pointer.
#[cfg(feature = "objc2-core-services")]
#[inline]
pub unsafe extern "C-unwind" fn IconRefContainsCGPoint(
    test_pt: *const CGPoint,
    icon_rect: *const CGRect,
    align: IconAlignmentType,
    icon_services_usage_flags: IconServicesUsageFlags,
    the_icon_ref: IconRef,
) -> bool {
    extern "C-unwind" {
        fn IconRefContainsCGPoint(
            test_pt: *const CGPoint,
            icon_rect: *const CGRect,
            align: IconAlignmentType,
            icon_services_usage_flags: IconServicesUsageFlags,
            the_icon_ref: IconRef,
        ) -> Boolean;
    }
    let ret = unsafe {
        IconRefContainsCGPoint(
            test_pt,
            icon_rect,
            align,
            icon_services_usage_flags,
            the_icon_ref,
        )
    };
    ret != 0
}

/// # Safety
///
/// - `test_rect` must be a valid pointer.
/// - `icon_rect` must be a valid pointer.
/// - `the_icon_ref` must be a valid pointer.
#[cfg(feature = "objc2-core-services")]
#[inline]
pub unsafe extern "C-unwind" fn IconRefIntersectsCGRect(
    test_rect: *const CGRect,
    icon_rect: *const CGRect,
    align: IconAlignmentType,
    icon_services_usage_flags: IconServicesUsageFlags,
    the_icon_ref: IconRef,
) -> bool {
    extern "C-unwind" {
        fn IconRefIntersectsCGRect(
            test_rect: *const CGRect,
            icon_rect: *const CGRect,
            align: IconAlignmentType,
            icon_services_usage_flags: IconServicesUsageFlags,
            the_icon_ref: IconRef,
        ) -> Boolean;
    }
    let ret = unsafe {
        IconRefIntersectsCGRect(
            test_rect,
            icon_rect,
            align,
            icon_services_usage_flags,
            the_icon_ref,
        )
    };
    ret != 0
}

/// # Safety
///
/// - `icon_rect` must be a valid pointer.
/// - `the_icon_ref` must be a valid pointer.
#[cfg(all(feature = "HIShape", feature = "objc2-core-services"))]
#[inline]
pub unsafe extern "C-unwind" fn IconRefToHIShape(
    icon_rect: *const CGRect,
    align: IconAlignmentType,
    icon_services_usage_flags: IconServicesUsageFlags,
    the_icon_ref: IconRef,
) -> Option<CFRetained<HIShape>> {
    extern "C-unwind" {
        fn IconRefToHIShape(
            icon_rect: *const CGRect,
            align: IconAlignmentType,
            icon_services_usage_flags: IconServicesUsageFlags,
            the_icon_ref: IconRef,
        ) -> Option<NonNull<HIShape>>;
    }
    let ret =
        unsafe { IconRefToHIShape(icon_rect, align, icon_services_usage_flags, the_icon_ref) };
    ret.map(|ret| unsafe { CFRetained::retain(ret) })
}

/// # Safety
///
/// `icon_ref` must be a valid pointer.
#[cfg(feature = "objc2-core-services")]
#[inline]
pub unsafe extern "C-unwind" fn IsIconRefMaskEmpty(icon_ref: IconRef) -> bool {
    extern "C-unwind" {
        fn IsIconRefMaskEmpty(icon_ref: IconRef) -> Boolean;
    }
    let ret = unsafe { IsIconRefMaskEmpty(icon_ref) };
    ret != 0
}

extern "C-unwind" {
    /// # Safety
    ///
    /// - `in_icon_ref` must be a valid pointer.
    /// - `out_transform` must be a valid pointer.
    #[cfg(feature = "objc2-core-services")]
    pub fn GetIconRefVariant(
        in_icon_ref: IconRef,
        in_variant: OSType,
        out_transform: *mut IconTransformType,
    ) -> IconRef;
}
