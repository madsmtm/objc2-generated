//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
#[cfg(feature = "AXActionConstants")]
#[path = "AXActionConstants.rs"]
mod __AXActionConstants;
#[cfg(feature = "AXAttributeConstants")]
#[path = "AXAttributeConstants.rs"]
mod __AXAttributeConstants;
#[cfg(feature = "AXConstants")]
#[path = "AXConstants.rs"]
mod __AXConstants;
#[cfg(feature = "AXError")]
#[path = "AXError.rs"]
mod __AXError;
#[cfg(feature = "AXNotificationConstants")]
#[path = "AXNotificationConstants.rs"]
mod __AXNotificationConstants;
#[cfg(feature = "AXRoleConstants")]
#[path = "AXRoleConstants.rs"]
mod __AXRoleConstants;
#[cfg(feature = "AXTextAttributedString")]
#[path = "AXTextAttributedString.rs"]
mod __AXTextAttributedString;
#[cfg(feature = "AXUIElement")]
#[path = "AXUIElement.rs"]
mod __AXUIElement;
#[cfg(feature = "AXValue")]
#[path = "AXValue.rs"]
mod __AXValue;
#[cfg(feature = "AXValueConstants")]
#[path = "AXValueConstants.rs"]
mod __AXValueConstants;
#[cfg(feature = "AXWebConstants")]
#[path = "AXWebConstants.rs"]
mod __AXWebConstants;
#[cfg(feature = "Accessibility")]
#[path = "Accessibility.rs"]
mod __Accessibility;
#[cfg(feature = "HIShape")]
#[path = "HIShape.rs"]
mod __HIShape;
#[cfg(feature = "Icons")]
#[path = "Icons.rs"]
mod __Icons;
#[cfg(feature = "InternetConfig")]
#[path = "InternetConfig.rs"]
mod __InternetConfig;
#[cfg(feature = "Pasteboard")]
#[path = "Pasteboard.rs"]
mod __Pasteboard;
#[cfg(feature = "Processes")]
#[path = "Processes.rs"]
mod __Processes;
#[cfg(feature = "TranslationServices")]
#[path = "TranslationServices.rs"]
mod __TranslationServices;
#[cfg(feature = "UniversalAccess")]
#[path = "UniversalAccess.rs"]
mod __UniversalAccess;

#[cfg(feature = "AXAttributeConstants")]
pub use self::__AXAttributeConstants::AXMenuItemModifiers;
#[cfg(feature = "AXError")]
pub use self::__AXError::AXError;
#[cfg(feature = "AXNotificationConstants")]
pub use self::__AXNotificationConstants::AXPriority;
#[cfg(feature = "AXTextAttributedString")]
pub use self::__AXTextAttributedString::kAXAttachmentTextAttribute;
#[cfg(feature = "AXTextAttributedString")]
pub use self::__AXTextAttributedString::kAXAutocorrectedTextAttribute;
#[cfg(feature = "AXTextAttributedString")]
pub use self::__AXTextAttributedString::kAXBackgroundColorTextAttribute;
#[cfg(feature = "AXTextAttributedString")]
pub use self::__AXTextAttributedString::kAXFontFamilyKey;
#[cfg(feature = "AXTextAttributedString")]
pub use self::__AXTextAttributedString::kAXFontNameKey;
#[cfg(feature = "AXTextAttributedString")]
pub use self::__AXTextAttributedString::kAXFontSizeKey;
#[cfg(feature = "AXTextAttributedString")]
pub use self::__AXTextAttributedString::kAXFontTextAttribute;
#[cfg(feature = "AXTextAttributedString")]
pub use self::__AXTextAttributedString::kAXForegoundColorTextAttribute;
#[cfg(feature = "AXTextAttributedString")]
pub use self::__AXTextAttributedString::kAXForegroundColorTextAttribute;
#[cfg(feature = "AXTextAttributedString")]
pub use self::__AXTextAttributedString::kAXLinkTextAttribute;
#[cfg(feature = "AXTextAttributedString")]
pub use self::__AXTextAttributedString::kAXListItemIndexTextAttribute;
#[cfg(feature = "AXTextAttributedString")]
pub use self::__AXTextAttributedString::kAXListItemLevelTextAttribute;
#[cfg(feature = "AXTextAttributedString")]
pub use self::__AXTextAttributedString::kAXListItemPrefixTextAttribute;
#[cfg(feature = "AXTextAttributedString")]
pub use self::__AXTextAttributedString::kAXMarkedMisspelledTextAttribute;
#[cfg(feature = "AXTextAttributedString")]
pub use self::__AXTextAttributedString::kAXMisspelledTextAttribute;
#[cfg(feature = "AXTextAttributedString")]
pub use self::__AXTextAttributedString::kAXNaturalLanguageTextAttribute;
#[cfg(feature = "AXTextAttributedString")]
pub use self::__AXTextAttributedString::kAXReplacementStringTextAttribute;
#[cfg(feature = "AXTextAttributedString")]
pub use self::__AXTextAttributedString::kAXShadowTextAttribute;
#[cfg(feature = "AXTextAttributedString")]
pub use self::__AXTextAttributedString::kAXStrikethroughColorTextAttribute;
#[cfg(feature = "AXTextAttributedString")]
pub use self::__AXTextAttributedString::kAXStrikethroughTextAttribute;
#[cfg(feature = "AXTextAttributedString")]
pub use self::__AXTextAttributedString::kAXSuperscriptTextAttribute;
#[cfg(feature = "AXTextAttributedString")]
pub use self::__AXTextAttributedString::kAXUnderlineColorTextAttribute;
#[cfg(feature = "AXTextAttributedString")]
pub use self::__AXTextAttributedString::kAXUnderlineTextAttribute;
#[cfg(feature = "AXTextAttributedString")]
pub use self::__AXTextAttributedString::kAXVisibleNameKey;
#[cfg(feature = "AXTextAttributedString")]
pub use self::__AXTextAttributedString::AXUnderlineStyle;
#[cfg(feature = "AXUIElement")]
pub use self::__AXUIElement::kAXTrustedCheckOptionPrompt;
#[cfg(feature = "AXUIElement")]
pub use self::__AXUIElement::AXAPIEnabled;
#[cfg(feature = "AXUIElement")]
pub use self::__AXUIElement::AXCopyMultipleAttributeOptions;
#[cfg(feature = "AXUIElement")]
pub use self::__AXUIElement::AXIsProcessTrusted;
#[cfg(feature = "AXUIElement")]
pub use self::__AXUIElement::AXIsProcessTrustedWithOptions;
#[cfg(all(feature = "AXError", feature = "AXUIElement"))]
pub use self::__AXUIElement::AXMakeProcessTrusted;
#[cfg(feature = "AXUIElement")]
pub use self::__AXUIElement::AXObserver;
#[cfg(all(feature = "AXError", feature = "AXUIElement"))]
pub use self::__AXUIElement::AXObserverAddNotification;
#[cfg(feature = "AXUIElement")]
pub use self::__AXUIElement::AXObserverCallback;
#[cfg(feature = "AXUIElement")]
pub use self::__AXUIElement::AXObserverCallbackWithInfo;
#[cfg(all(feature = "AXError", feature = "AXUIElement", feature = "libc"))]
pub use self::__AXUIElement::AXObserverCreate;
#[cfg(all(feature = "AXError", feature = "AXUIElement", feature = "libc"))]
pub use self::__AXUIElement::AXObserverCreateWithInfoCallback;
#[cfg(feature = "AXUIElement")]
pub use self::__AXUIElement::AXObserverGetRunLoopSource;
#[cfg(all(feature = "AXError", feature = "AXUIElement"))]
pub use self::__AXUIElement::AXObserverRemoveNotification;
#[cfg(feature = "AXUIElement")]
pub use self::__AXUIElement::AXTextMarker;
#[cfg(feature = "AXUIElement")]
pub use self::__AXUIElement::AXTextMarkerCreate;
#[cfg(feature = "AXUIElement")]
pub use self::__AXUIElement::AXTextMarkerGetBytePtr;
#[cfg(feature = "AXUIElement")]
pub use self::__AXUIElement::AXTextMarkerGetLength;
#[cfg(feature = "AXUIElement")]
pub use self::__AXUIElement::AXTextMarkerRange;
#[cfg(feature = "AXUIElement")]
pub use self::__AXUIElement::AXTextMarkerRangeCopyEndMarker;
#[cfg(feature = "AXUIElement")]
pub use self::__AXUIElement::AXTextMarkerRangeCopyStartMarker;
#[cfg(feature = "AXUIElement")]
pub use self::__AXUIElement::AXTextMarkerRangeCreate;
#[cfg(feature = "AXUIElement")]
pub use self::__AXUIElement::AXTextMarkerRangeCreateWithBytes;
#[cfg(feature = "AXUIElement")]
pub use self::__AXUIElement::AXUIElement;
#[cfg(all(feature = "AXError", feature = "AXUIElement"))]
pub use self::__AXUIElement::AXUIElementCopyActionDescription;
#[cfg(all(feature = "AXError", feature = "AXUIElement"))]
pub use self::__AXUIElement::AXUIElementCopyActionNames;
#[cfg(all(feature = "AXError", feature = "AXUIElement"))]
pub use self::__AXUIElement::AXUIElementCopyAttributeNames;
#[cfg(all(feature = "AXError", feature = "AXUIElement"))]
pub use self::__AXUIElement::AXUIElementCopyAttributeValue;
#[cfg(all(feature = "AXError", feature = "AXUIElement"))]
pub use self::__AXUIElement::AXUIElementCopyAttributeValues;
#[cfg(all(feature = "AXError", feature = "AXUIElement"))]
pub use self::__AXUIElement::AXUIElementCopyElementAtPosition;
#[cfg(all(feature = "AXError", feature = "AXUIElement"))]
pub use self::__AXUIElement::AXUIElementCopyMultipleAttributeValues;
#[cfg(all(feature = "AXError", feature = "AXUIElement"))]
pub use self::__AXUIElement::AXUIElementCopyParameterizedAttributeNames;
#[cfg(all(feature = "AXError", feature = "AXUIElement"))]
pub use self::__AXUIElement::AXUIElementCopyParameterizedAttributeValue;
#[cfg(all(feature = "AXUIElement", feature = "libc"))]
pub use self::__AXUIElement::AXUIElementCreateApplication;
#[cfg(feature = "AXUIElement")]
pub use self::__AXUIElement::AXUIElementCreateSystemWide;
#[cfg(all(feature = "AXError", feature = "AXUIElement"))]
pub use self::__AXUIElement::AXUIElementGetAttributeValueCount;
#[cfg(all(feature = "AXError", feature = "AXUIElement", feature = "libc"))]
pub use self::__AXUIElement::AXUIElementGetPid;
#[cfg(all(feature = "AXError", feature = "AXUIElement"))]
pub use self::__AXUIElement::AXUIElementIsAttributeSettable;
#[cfg(all(feature = "AXError", feature = "AXUIElement"))]
pub use self::__AXUIElement::AXUIElementPerformAction;
#[cfg(all(
    feature = "AXError",
    feature = "AXUIElement",
    feature = "objc2-core-graphics"
))]
pub use self::__AXUIElement::AXUIElementPostKeyboardEvent;
#[cfg(all(feature = "AXError", feature = "AXUIElement"))]
pub use self::__AXUIElement::AXUIElementSetAttributeValue;
#[cfg(all(feature = "AXError", feature = "AXUIElement"))]
pub use self::__AXUIElement::AXUIElementSetMessagingTimeout;
#[cfg(feature = "AXValue")]
pub use self::__AXValue::kAXValueAXErrorType;
#[cfg(feature = "AXValue")]
pub use self::__AXValue::kAXValueCFRangeType;
#[cfg(feature = "AXValue")]
pub use self::__AXValue::kAXValueCGPointType;
#[cfg(feature = "AXValue")]
pub use self::__AXValue::kAXValueCGRectType;
#[cfg(feature = "AXValue")]
pub use self::__AXValue::kAXValueCGSizeType;
#[cfg(feature = "AXValue")]
pub use self::__AXValue::kAXValueIllegalType;
#[cfg(feature = "AXValue")]
pub use self::__AXValue::AXValue;
#[cfg(feature = "AXValue")]
pub use self::__AXValue::AXValueCreate;
#[cfg(feature = "AXValue")]
pub use self::__AXValue::AXValueGetType;
#[cfg(feature = "AXValue")]
pub use self::__AXValue::AXValueGetValue;
#[cfg(feature = "AXValue")]
pub use self::__AXValue::AXValueType;
#[cfg(feature = "HIShape")]
pub use self::__HIShape::kHIShapeEnumerateInit;
#[cfg(feature = "HIShape")]
pub use self::__HIShape::kHIShapeEnumerateRect;
#[cfg(feature = "HIShape")]
pub use self::__HIShape::kHIShapeEnumerateTerminate;
#[cfg(feature = "HIShape")]
pub use self::__HIShape::kHIShapeParseFromBottom;
#[cfg(feature = "HIShape")]
pub use self::__HIShape::kHIShapeParseFromBottomRight;
#[cfg(feature = "HIShape")]
pub use self::__HIShape::kHIShapeParseFromLeft;
#[cfg(feature = "HIShape")]
pub use self::__HIShape::kHIShapeParseFromRight;
#[cfg(feature = "HIShape")]
pub use self::__HIShape::kHIShapeParseFromTop;
#[cfg(feature = "HIShape")]
pub use self::__HIShape::kHIShapeParseFromTopLeft;
#[cfg(feature = "HIShape")]
pub use self::__HIShape::HIMutableShape;
#[cfg(feature = "HIShape")]
pub use self::__HIShape::HIShape;
#[cfg(feature = "HIShape")]
pub use self::__HIShape::HIShapeContainsPoint;
#[cfg(feature = "HIShape")]
pub use self::__HIShape::HIShapeCreateCopy;
#[cfg(feature = "HIShape")]
pub use self::__HIShape::HIShapeCreateDifference;
#[cfg(feature = "HIShape")]
pub use self::__HIShape::HIShapeCreateEmpty;
#[cfg(feature = "HIShape")]
pub use self::__HIShape::HIShapeCreateIntersection;
#[cfg(feature = "HIShape")]
pub use self::__HIShape::HIShapeCreateMutable;
#[cfg(feature = "HIShape")]
pub use self::__HIShape::HIShapeCreateMutableCopy;
#[cfg(feature = "HIShape")]
pub use self::__HIShape::HIShapeCreateMutableWithRect;
#[cfg(feature = "HIShape")]
pub use self::__HIShape::HIShapeCreateUnion;
#[cfg(feature = "HIShape")]
pub use self::__HIShape::HIShapeCreateWithRect;
#[cfg(feature = "HIShape")]
pub use self::__HIShape::HIShapeCreateXor;
#[cfg(feature = "HIShape")]
pub use self::__HIShape::HIShapeDifference;
#[cfg(feature = "HIShape")]
pub use self::__HIShape::HIShapeEnumerate;
#[cfg(feature = "HIShape")]
pub use self::__HIShape::HIShapeEnumerateProcPtr;
#[cfg(feature = "HIShape")]
pub use self::__HIShape::HIShapeGetBounds;
#[cfg(feature = "HIShape")]
pub use self::__HIShape::HIShapeInset;
#[cfg(feature = "HIShape")]
pub use self::__HIShape::HIShapeIntersect;
#[cfg(feature = "HIShape")]
pub use self::__HIShape::HIShapeIntersectsRect;
#[cfg(feature = "HIShape")]
pub use self::__HIShape::HIShapeIsEmpty;
#[cfg(feature = "HIShape")]
pub use self::__HIShape::HIShapeIsRectangular;
#[cfg(feature = "HIShape")]
pub use self::__HIShape::HIShapeOffset;
#[cfg(all(feature = "HIShape", feature = "objc2-core-graphics"))]
pub use self::__HIShape::HIShapeReplacePathInCGContext;
#[cfg(feature = "HIShape")]
pub use self::__HIShape::HIShapeSetEmpty;
#[cfg(feature = "HIShape")]
pub use self::__HIShape::HIShapeSetWithShape;
#[cfg(feature = "HIShape")]
pub use self::__HIShape::HIShapeUnion;
#[cfg(feature = "HIShape")]
pub use self::__HIShape::HIShapeUnionWithRect;
#[cfg(feature = "HIShape")]
pub use self::__HIShape::HIShapeXor;
#[cfg(feature = "Icons")]
pub use self::__Icons::atAbsoluteCenter;
#[cfg(feature = "Icons")]
pub use self::__Icons::atBottom;
#[cfg(feature = "Icons")]
pub use self::__Icons::atBottomLeft;
#[cfg(feature = "Icons")]
pub use self::__Icons::atBottomRight;
#[cfg(feature = "Icons")]
pub use self::__Icons::atCenterBottom;
#[cfg(feature = "Icons")]
pub use self::__Icons::atCenterLeft;
#[cfg(feature = "Icons")]
pub use self::__Icons::atCenterRight;
#[cfg(feature = "Icons")]
pub use self::__Icons::atCenterTop;
#[cfg(feature = "Icons")]
pub use self::__Icons::atHorizontalCenter;
#[cfg(feature = "Icons")]
pub use self::__Icons::atLeft;
#[cfg(feature = "Icons")]
pub use self::__Icons::atNone;
#[cfg(feature = "Icons")]
pub use self::__Icons::atRight;
#[cfg(feature = "Icons")]
pub use self::__Icons::atTop;
#[cfg(feature = "Icons")]
pub use self::__Icons::atTopLeft;
#[cfg(feature = "Icons")]
pub use self::__Icons::atTopRight;
#[cfg(feature = "Icons")]
pub use self::__Icons::atVerticalCenter;
#[cfg(feature = "Icons")]
pub use self::__Icons::kAlignAbsoluteCenter;
#[cfg(feature = "Icons")]
pub use self::__Icons::kAlignBottom;
#[cfg(feature = "Icons")]
pub use self::__Icons::kAlignBottomLeft;
#[cfg(feature = "Icons")]
pub use self::__Icons::kAlignBottomRight;
#[cfg(feature = "Icons")]
pub use self::__Icons::kAlignCenterBottom;
#[cfg(feature = "Icons")]
pub use self::__Icons::kAlignCenterLeft;
#[cfg(feature = "Icons")]
pub use self::__Icons::kAlignCenterRight;
#[cfg(feature = "Icons")]
pub use self::__Icons::kAlignCenterTop;
#[cfg(feature = "Icons")]
pub use self::__Icons::kAlignHorizontalCenter;
#[cfg(feature = "Icons")]
pub use self::__Icons::kAlignLeft;
#[cfg(feature = "Icons")]
pub use self::__Icons::kAlignNone;
#[cfg(feature = "Icons")]
pub use self::__Icons::kAlignRight;
#[cfg(feature = "Icons")]
pub use self::__Icons::kAlignTop;
#[cfg(feature = "Icons")]
pub use self::__Icons::kAlignTopLeft;
#[cfg(feature = "Icons")]
pub use self::__Icons::kAlignTopRight;
#[cfg(feature = "Icons")]
pub use self::__Icons::kAlignVerticalCenter;
#[cfg(feature = "Icons")]
pub use self::__Icons::kPlotIconRefNoImage;
#[cfg(feature = "Icons")]
pub use self::__Icons::kPlotIconRefNoMask;
#[cfg(feature = "Icons")]
pub use self::__Icons::kPlotIconRefNormalFlags;
#[cfg(feature = "Icons")]
pub use self::__Icons::kSelectorAll1BitData;
#[cfg(feature = "Icons")]
pub use self::__Icons::kSelectorAll32BitData;
#[cfg(feature = "Icons")]
pub use self::__Icons::kSelectorAll4BitData;
#[cfg(feature = "Icons")]
pub use self::__Icons::kSelectorAll8BitData;
#[cfg(feature = "Icons")]
pub use self::__Icons::kSelectorAllAvailableData;
#[cfg(feature = "Icons")]
pub use self::__Icons::kSelectorAllHugeData;
#[cfg(feature = "Icons")]
pub use self::__Icons::kSelectorAllLargeData;
#[cfg(feature = "Icons")]
pub use self::__Icons::kSelectorAllMiniData;
#[cfg(feature = "Icons")]
pub use self::__Icons::kSelectorAllSmallData;
#[cfg(feature = "Icons")]
pub use self::__Icons::kSelectorHuge1Bit;
#[cfg(feature = "Icons")]
pub use self::__Icons::kSelectorHuge32Bit;
#[cfg(feature = "Icons")]
pub use self::__Icons::kSelectorHuge4Bit;
#[cfg(feature = "Icons")]
pub use self::__Icons::kSelectorHuge8Bit;
#[cfg(feature = "Icons")]
pub use self::__Icons::kSelectorHuge8BitMask;
#[cfg(feature = "Icons")]
pub use self::__Icons::kSelectorLarge1Bit;
#[cfg(feature = "Icons")]
pub use self::__Icons::kSelectorLarge32Bit;
#[cfg(feature = "Icons")]
pub use self::__Icons::kSelectorLarge4Bit;
#[cfg(feature = "Icons")]
pub use self::__Icons::kSelectorLarge8Bit;
#[cfg(feature = "Icons")]
pub use self::__Icons::kSelectorLarge8BitMask;
#[cfg(feature = "Icons")]
pub use self::__Icons::kSelectorMini1Bit;
#[cfg(feature = "Icons")]
pub use self::__Icons::kSelectorMini4Bit;
#[cfg(feature = "Icons")]
pub use self::__Icons::kSelectorMini8Bit;
#[cfg(feature = "Icons")]
pub use self::__Icons::kSelectorSmall1Bit;
#[cfg(feature = "Icons")]
pub use self::__Icons::kSelectorSmall32Bit;
#[cfg(feature = "Icons")]
pub use self::__Icons::kSelectorSmall4Bit;
#[cfg(feature = "Icons")]
pub use self::__Icons::kSelectorSmall8Bit;
#[cfg(feature = "Icons")]
pub use self::__Icons::kSelectorSmall8BitMask;
#[cfg(feature = "Icons")]
pub use self::__Icons::kTransformDisabled;
#[cfg(feature = "Icons")]
pub use self::__Icons::kTransformLabel1;
#[cfg(feature = "Icons")]
pub use self::__Icons::kTransformLabel2;
#[cfg(feature = "Icons")]
pub use self::__Icons::kTransformLabel3;
#[cfg(feature = "Icons")]
pub use self::__Icons::kTransformLabel4;
#[cfg(feature = "Icons")]
pub use self::__Icons::kTransformLabel5;
#[cfg(feature = "Icons")]
pub use self::__Icons::kTransformLabel6;
#[cfg(feature = "Icons")]
pub use self::__Icons::kTransformLabel7;
#[cfg(feature = "Icons")]
pub use self::__Icons::kTransformNone;
#[cfg(feature = "Icons")]
pub use self::__Icons::kTransformOffline;
#[cfg(feature = "Icons")]
pub use self::__Icons::kTransformOpen;
#[cfg(feature = "Icons")]
pub use self::__Icons::kTransformSelected;
#[cfg(feature = "Icons")]
pub use self::__Icons::kTransformSelectedDisabled;
#[cfg(feature = "Icons")]
pub use self::__Icons::kTransformSelectedOffline;
#[cfg(feature = "Icons")]
pub use self::__Icons::kTransformSelectedOpen;
#[cfg(feature = "Icons")]
pub use self::__Icons::svAll1BitData;
#[cfg(feature = "Icons")]
pub use self::__Icons::svAll4BitData;
#[cfg(feature = "Icons")]
pub use self::__Icons::svAll8BitData;
#[cfg(feature = "Icons")]
pub use self::__Icons::svAllAvailableData;
#[cfg(feature = "Icons")]
pub use self::__Icons::svAllLargeData;
#[cfg(feature = "Icons")]
pub use self::__Icons::svAllMiniData;
#[cfg(feature = "Icons")]
pub use self::__Icons::svAllSmallData;
#[cfg(feature = "Icons")]
pub use self::__Icons::svLarge1Bit;
#[cfg(feature = "Icons")]
pub use self::__Icons::svLarge4Bit;
#[cfg(feature = "Icons")]
pub use self::__Icons::svLarge8Bit;
#[cfg(feature = "Icons")]
pub use self::__Icons::svMini1Bit;
#[cfg(feature = "Icons")]
pub use self::__Icons::svMini4Bit;
#[cfg(feature = "Icons")]
pub use self::__Icons::svMini8Bit;
#[cfg(feature = "Icons")]
pub use self::__Icons::svSmall1Bit;
#[cfg(feature = "Icons")]
pub use self::__Icons::svSmall4Bit;
#[cfg(feature = "Icons")]
pub use self::__Icons::svSmall8Bit;
#[cfg(feature = "Icons")]
pub use self::__Icons::ttDisabled;
#[cfg(feature = "Icons")]
pub use self::__Icons::ttLabel1;
#[cfg(feature = "Icons")]
pub use self::__Icons::ttLabel2;
#[cfg(feature = "Icons")]
pub use self::__Icons::ttLabel3;
#[cfg(feature = "Icons")]
pub use self::__Icons::ttLabel4;
#[cfg(feature = "Icons")]
pub use self::__Icons::ttLabel5;
#[cfg(feature = "Icons")]
pub use self::__Icons::ttLabel6;
#[cfg(feature = "Icons")]
pub use self::__Icons::ttLabel7;
#[cfg(feature = "Icons")]
pub use self::__Icons::ttNone;
#[cfg(feature = "Icons")]
pub use self::__Icons::ttOffline;
#[cfg(feature = "Icons")]
pub use self::__Icons::ttOpen;
#[cfg(feature = "Icons")]
pub use self::__Icons::ttSelected;
#[cfg(feature = "Icons")]
pub use self::__Icons::ttSelectedDisabled;
#[cfg(feature = "Icons")]
pub use self::__Icons::ttSelectedOffline;
#[cfg(feature = "Icons")]
pub use self::__Icons::ttSelectedOpen;
#[cfg(feature = "Icons")]
pub use self::__Icons::DisposeIconActionUPP;
#[cfg(feature = "Icons")]
pub use self::__Icons::DisposeIconGetterUPP;
#[cfg(all(feature = "Icons", feature = "objc2-core-services"))]
pub use self::__Icons::GetIconFamilyData;
#[cfg(all(feature = "Icons", feature = "objc2-core-services"))]
pub use self::__Icons::GetIconRefVariant;
#[cfg(feature = "Icons")]
pub use self::__Icons::IconActionProcPtr;
#[cfg(feature = "Icons")]
pub use self::__Icons::IconActionUPP;
#[cfg(feature = "Icons")]
pub use self::__Icons::IconAlignmentType;
#[cfg(feature = "Icons")]
pub use self::__Icons::IconGetterProcPtr;
#[cfg(feature = "Icons")]
pub use self::__Icons::IconGetterUPP;
#[cfg(all(feature = "Icons", feature = "objc2-core-services"))]
pub use self::__Icons::IconRefContainsCGPoint;
#[cfg(all(feature = "Icons", feature = "objc2-core-services"))]
pub use self::__Icons::IconRefIntersectsCGRect;
#[cfg(all(
    feature = "HIShape",
    feature = "Icons",
    feature = "objc2-core-services"
))]
pub use self::__Icons::IconRefToHIShape;
#[cfg(all(feature = "Icons", feature = "objc2-core-services"))]
pub use self::__Icons::IconRefToIconFamily;
#[cfg(feature = "Icons")]
pub use self::__Icons::IconSelectorValue;
#[cfg(feature = "Icons")]
pub use self::__Icons::IconTransformType;
#[cfg(feature = "Icons")]
pub use self::__Icons::InvokeIconActionUPP;
#[cfg(feature = "Icons")]
pub use self::__Icons::InvokeIconGetterUPP;
#[cfg(all(feature = "Icons", feature = "objc2-core-services"))]
pub use self::__Icons::IsIconRefMaskEmpty;
#[cfg(feature = "Icons")]
pub use self::__Icons::NewIconActionUPP;
#[cfg(feature = "Icons")]
pub use self::__Icons::NewIconGetterUPP;
#[cfg(feature = "Icons")]
pub use self::__Icons::PlotIconRefFlags;
#[cfg(all(feature = "Icons", feature = "objc2-core-services"))]
pub use self::__Icons::SetIconFamilyData;
#[cfg(feature = "InternetConfig")]
pub use self::__InternetConfig::icConfigInappropriateErr;
#[cfg(feature = "InternetConfig")]
pub use self::__InternetConfig::icConfigNotFoundErr;
#[cfg(feature = "InternetConfig")]
pub use self::__InternetConfig::icInternalErr;
#[cfg(feature = "InternetConfig")]
pub use self::__InternetConfig::icNoMoreWritersErr;
#[cfg(feature = "InternetConfig")]
pub use self::__InternetConfig::icNoPerm;
#[cfg(feature = "InternetConfig")]
pub use self::__InternetConfig::icNoURLErr;
#[cfg(feature = "InternetConfig")]
pub use self::__InternetConfig::icNothingToOverrideErr;
#[cfg(feature = "InternetConfig")]
pub use self::__InternetConfig::icPermErr;
#[cfg(feature = "InternetConfig")]
pub use self::__InternetConfig::icPrefDataErr;
#[cfg(feature = "InternetConfig")]
pub use self::__InternetConfig::icPrefNotFoundErr;
#[cfg(feature = "InternetConfig")]
pub use self::__InternetConfig::icProfileNotFoundErr;
#[cfg(feature = "InternetConfig")]
pub use self::__InternetConfig::icReadOnlyPerm;
#[cfg(feature = "InternetConfig")]
pub use self::__InternetConfig::icReadWritePerm;
#[cfg(feature = "InternetConfig")]
pub use self::__InternetConfig::icTooManyProfilesErr;
#[cfg(feature = "InternetConfig")]
pub use self::__InternetConfig::icTruncatedErr;
#[cfg(feature = "InternetConfig")]
pub use self::__InternetConfig::kAEFetchURL;
#[cfg(feature = "InternetConfig")]
pub use self::__InternetConfig::kAEGetURL;
#[cfg(feature = "InternetConfig")]
pub use self::__InternetConfig::kICArchieAll;
#[cfg(feature = "InternetConfig")]
pub use self::__InternetConfig::kICArchiePreferred;
#[cfg(feature = "InternetConfig")]
pub use self::__InternetConfig::kICAttrLockedBit;
#[cfg(feature = "InternetConfig")]
pub use self::__InternetConfig::kICAttrLockedMask;
#[cfg(feature = "InternetConfig")]
pub use self::__InternetConfig::kICAttrNoChange;
#[cfg(feature = "InternetConfig")]
pub use self::__InternetConfig::kICAttrVolatileBit;
#[cfg(feature = "InternetConfig")]
pub use self::__InternetConfig::kICAttrVolatileMask;
#[cfg(feature = "InternetConfig")]
pub use self::__InternetConfig::kICCharacterSet;
#[cfg(feature = "InternetConfig")]
pub use self::__InternetConfig::kICComponentInterfaceVersion;
#[cfg(feature = "InternetConfig")]
pub use self::__InternetConfig::kICComponentInterfaceVersion0;
#[cfg(feature = "InternetConfig")]
pub use self::__InternetConfig::kICComponentInterfaceVersion1;
#[cfg(feature = "InternetConfig")]
pub use self::__InternetConfig::kICComponentInterfaceVersion2;
#[cfg(feature = "InternetConfig")]
pub use self::__InternetConfig::kICComponentInterfaceVersion3;
#[cfg(feature = "InternetConfig")]
pub use self::__InternetConfig::kICComponentInterfaceVersion4;
#[cfg(feature = "InternetConfig")]
pub use self::__InternetConfig::kICComponentVersion;
#[cfg(feature = "InternetConfig")]
pub use self::__InternetConfig::kICCreator;
#[cfg(feature = "InternetConfig")]
pub use self::__InternetConfig::kICDocumentFont;
#[cfg(feature = "InternetConfig")]
pub use self::__InternetConfig::kICDownloadFolder;
#[cfg(feature = "InternetConfig")]
pub use self::__InternetConfig::kICEditPreferenceEvent;
#[cfg(feature = "InternetConfig")]
pub use self::__InternetConfig::kICEditPreferenceEventClass;
#[cfg(feature = "InternetConfig")]
pub use self::__InternetConfig::kICEmail;
#[cfg(feature = "InternetConfig")]
pub use self::__InternetConfig::kICFTPHost;
#[cfg(feature = "InternetConfig")]
pub use self::__InternetConfig::kICFTPProxyAccount;
#[cfg(feature = "InternetConfig")]
pub use self::__InternetConfig::kICFTPProxyHost;
#[cfg(feature = "InternetConfig")]
pub use self::__InternetConfig::kICFTPProxyPassword;
#[cfg(feature = "InternetConfig")]
pub use self::__InternetConfig::kICFTPProxyUser;
#[cfg(feature = "InternetConfig")]
pub use self::__InternetConfig::kICFileType;
#[cfg(feature = "InternetConfig")]
pub use self::__InternetConfig::kICFingerHost;
#[cfg(feature = "InternetConfig")]
pub use self::__InternetConfig::kICGopherHost;
#[cfg(feature = "InternetConfig")]
pub use self::__InternetConfig::kICGopherProxy;
#[cfg(feature = "InternetConfig")]
pub use self::__InternetConfig::kICHTTPProxyHost;
#[cfg(feature = "InternetConfig")]
pub use self::__InternetConfig::kICHelper;
#[cfg(feature = "InternetConfig")]
pub use self::__InternetConfig::kICHelperDesc;
#[cfg(feature = "InternetConfig")]
pub use self::__InternetConfig::kICHelperList;
#[cfg(feature = "InternetConfig")]
pub use self::__InternetConfig::kICIRCHost;
#[cfg(feature = "InternetConfig")]
pub use self::__InternetConfig::kICInfoMacAll;
#[cfg(feature = "InternetConfig")]
pub use self::__InternetConfig::kICInfoMacPreferred;
#[cfg(feature = "InternetConfig")]
pub use self::__InternetConfig::kICLDAPSearchbase;
#[cfg(feature = "InternetConfig")]
pub use self::__InternetConfig::kICLDAPServer;
#[cfg(feature = "InternetConfig")]
pub use self::__InternetConfig::kICListFont;
#[cfg(feature = "InternetConfig")]
pub use self::__InternetConfig::kICMacSearchHost;
#[cfg(feature = "InternetConfig")]
pub use self::__InternetConfig::kICMailAccount;
#[cfg(feature = "InternetConfig")]
pub use self::__InternetConfig::kICMailHeaders;
#[cfg(feature = "InternetConfig")]
pub use self::__InternetConfig::kICMailPassword;
#[cfg(feature = "InternetConfig")]
pub use self::__InternetConfig::kICMapBinaryBit;
#[cfg(feature = "InternetConfig")]
pub use self::__InternetConfig::kICMapBinaryMask;
#[cfg(feature = "InternetConfig")]
pub use self::__InternetConfig::kICMapDataForkBit;
#[cfg(feature = "InternetConfig")]
pub use self::__InternetConfig::kICMapDataForkMask;
#[cfg(feature = "InternetConfig")]
pub use self::__InternetConfig::kICMapFixedLength;
#[cfg(feature = "InternetConfig")]
pub use self::__InternetConfig::kICMapNotIncomingBit;
#[cfg(feature = "InternetConfig")]
pub use self::__InternetConfig::kICMapNotIncomingMask;
#[cfg(feature = "InternetConfig")]
pub use self::__InternetConfig::kICMapNotOutgoingBit;
#[cfg(feature = "InternetConfig")]
pub use self::__InternetConfig::kICMapNotOutgoingMask;
#[cfg(feature = "InternetConfig")]
pub use self::__InternetConfig::kICMapPostBit;
#[cfg(feature = "InternetConfig")]
pub use self::__InternetConfig::kICMapPostMask;
#[cfg(feature = "InternetConfig")]
pub use self::__InternetConfig::kICMapResourceForkBit;
#[cfg(feature = "InternetConfig")]
pub use self::__InternetConfig::kICMapResourceForkMask;
#[cfg(feature = "InternetConfig")]
pub use self::__InternetConfig::kICMapping;
#[cfg(feature = "InternetConfig")]
pub use self::__InternetConfig::kICNNTPHost;
#[cfg(feature = "InternetConfig")]
pub use self::__InternetConfig::kICNTPHost;
#[cfg(feature = "InternetConfig")]
pub use self::__InternetConfig::kICNewMailDialog;
#[cfg(feature = "InternetConfig")]
pub use self::__InternetConfig::kICNewMailFlashIcon;
#[cfg(feature = "InternetConfig")]
pub use self::__InternetConfig::kICNewMailPlaySound;
#[cfg(feature = "InternetConfig")]
pub use self::__InternetConfig::kICNewMailSoundName;
#[cfg(feature = "InternetConfig")]
pub use self::__InternetConfig::kICNewsAuthPassword;
#[cfg(feature = "InternetConfig")]
pub use self::__InternetConfig::kICNewsAuthUsername;
#[cfg(feature = "InternetConfig")]
pub use self::__InternetConfig::kICNewsHeaders;
#[cfg(feature = "InternetConfig")]
pub use self::__InternetConfig::kICNilProfileID;
#[cfg(feature = "InternetConfig")]
pub use self::__InternetConfig::kICNoProxyDomains;
#[cfg(feature = "InternetConfig")]
pub use self::__InternetConfig::kICNoUserInteractionBit;
#[cfg(feature = "InternetConfig")]
pub use self::__InternetConfig::kICNoUserInteractionMask;
#[cfg(feature = "InternetConfig")]
pub use self::__InternetConfig::kICNumVersion;
#[cfg(feature = "InternetConfig")]
pub use self::__InternetConfig::kICOrganization;
#[cfg(feature = "InternetConfig")]
pub use self::__InternetConfig::kICPhHost;
#[cfg(feature = "InternetConfig")]
pub use self::__InternetConfig::kICPlan;
#[cfg(feature = "InternetConfig")]
pub use self::__InternetConfig::kICPrinterFont;
#[cfg(feature = "InternetConfig")]
pub use self::__InternetConfig::kICQuotingString;
#[cfg(feature = "InternetConfig")]
pub use self::__InternetConfig::kICRTSPProxyHost;
#[cfg(feature = "InternetConfig")]
pub use self::__InternetConfig::kICRealName;
#[cfg(feature = "InternetConfig")]
pub use self::__InternetConfig::kICReservedKey;
#[cfg(feature = "InternetConfig")]
pub use self::__InternetConfig::kICSMTPHost;
#[cfg(feature = "InternetConfig")]
pub use self::__InternetConfig::kICScreenFont;
#[cfg(feature = "InternetConfig")]
pub use self::__InternetConfig::kICServices;
#[cfg(feature = "InternetConfig")]
pub use self::__InternetConfig::kICServicesTCPBit;
#[cfg(feature = "InternetConfig")]
pub use self::__InternetConfig::kICServicesTCPMask;
#[cfg(feature = "InternetConfig")]
pub use self::__InternetConfig::kICServicesUDPBit;
#[cfg(feature = "InternetConfig")]
pub use self::__InternetConfig::kICServicesUDPMask;
#[cfg(feature = "InternetConfig")]
pub use self::__InternetConfig::kICSignature;
#[cfg(feature = "InternetConfig")]
pub use self::__InternetConfig::kICSnailMailAddress;
#[cfg(feature = "InternetConfig")]
pub use self::__InternetConfig::kICSocksHost;
#[cfg(feature = "InternetConfig")]
pub use self::__InternetConfig::kICTelnetHost;
#[cfg(feature = "InternetConfig")]
pub use self::__InternetConfig::kICUMichAll;
#[cfg(feature = "InternetConfig")]
pub use self::__InternetConfig::kICUMichPreferred;
#[cfg(feature = "InternetConfig")]
pub use self::__InternetConfig::kICUseFTPProxy;
#[cfg(feature = "InternetConfig")]
pub use self::__InternetConfig::kICUseGopherProxy;
#[cfg(feature = "InternetConfig")]
pub use self::__InternetConfig::kICUseHTTPProxy;
#[cfg(feature = "InternetConfig")]
pub use self::__InternetConfig::kICUsePassiveFTP;
#[cfg(feature = "InternetConfig")]
pub use self::__InternetConfig::kICUseRTSPProxy;
#[cfg(feature = "InternetConfig")]
pub use self::__InternetConfig::kICUseSocks;
#[cfg(feature = "InternetConfig")]
pub use self::__InternetConfig::kICWAISGateway;
#[cfg(feature = "InternetConfig")]
pub use self::__InternetConfig::kICWWWHomePage;
#[cfg(feature = "InternetConfig")]
pub use self::__InternetConfig::kICWebBackgroundColour;
#[cfg(feature = "InternetConfig")]
pub use self::__InternetConfig::kICWebReadColor;
#[cfg(feature = "InternetConfig")]
pub use self::__InternetConfig::kICWebSearchPagePrefs;
#[cfg(feature = "InternetConfig")]
pub use self::__InternetConfig::kICWebTextColor;
#[cfg(feature = "InternetConfig")]
pub use self::__InternetConfig::kICWebUnderlineLinks;
#[cfg(feature = "InternetConfig")]
pub use self::__InternetConfig::kICWebUnreadColor;
#[cfg(feature = "InternetConfig")]
pub use self::__InternetConfig::kICWhoisHost;
#[cfg(feature = "InternetConfig")]
pub use self::__InternetConfig::kInternetEventClass;
#[cfg(feature = "InternetConfig")]
pub use self::__InternetConfig::keyAEAttaching;
#[cfg(feature = "InternetConfig")]
pub use self::__InternetConfig::keyICEditPreferenceDestination;
#[cfg(feature = "InternetConfig")]
pub use self::__InternetConfig::ICAddMapEntry;
#[cfg(feature = "InternetConfig")]
pub use self::__InternetConfig::ICAddProfile;
#[cfg(feature = "InternetConfig")]
pub use self::__InternetConfig::ICAppSpec;
#[cfg(feature = "InternetConfig")]
pub use self::__InternetConfig::ICAppSpecHandle;
#[cfg(feature = "InternetConfig")]
pub use self::__InternetConfig::ICAppSpecList;
#[cfg(feature = "InternetConfig")]
pub use self::__InternetConfig::ICAppSpecListHandle;
#[cfg(feature = "InternetConfig")]
pub use self::__InternetConfig::ICAppSpecListPtr;
#[cfg(feature = "InternetConfig")]
pub use self::__InternetConfig::ICAppSpecPtr;
#[cfg(feature = "InternetConfig")]
pub use self::__InternetConfig::ICAttr;
#[cfg(feature = "InternetConfig")]
pub use self::__InternetConfig::ICBegin;
#[cfg(feature = "InternetConfig")]
pub use self::__InternetConfig::ICCharTable;
#[cfg(feature = "InternetConfig")]
pub use self::__InternetConfig::ICCharTableHandle;
#[cfg(feature = "InternetConfig")]
pub use self::__InternetConfig::ICCharTablePtr;
#[cfg(feature = "InternetConfig")]
pub use self::__InternetConfig::ICCountMapEntries;
#[cfg(feature = "InternetConfig")]
pub use self::__InternetConfig::ICCountPref;
#[cfg(feature = "InternetConfig")]
pub use self::__InternetConfig::ICCountProfiles;
#[cfg(all(feature = "InternetConfig", feature = "objc2-core-services"))]
pub use self::__InternetConfig::ICCreateGURLEvent;
#[cfg(feature = "InternetConfig")]
pub use self::__InternetConfig::ICDeleteMapEntry;
#[cfg(feature = "InternetConfig")]
pub use self::__InternetConfig::ICDeletePref;
#[cfg(feature = "InternetConfig")]
pub use self::__InternetConfig::ICDeleteProfile;
#[cfg(feature = "InternetConfig")]
pub use self::__InternetConfig::ICEditPreferences;
#[cfg(feature = "InternetConfig")]
pub use self::__InternetConfig::ICEnd;
#[cfg(feature = "InternetConfig")]
pub use self::__InternetConfig::ICFindPrefHandle;
#[cfg(feature = "InternetConfig")]
pub use self::__InternetConfig::ICFixedLength;
#[cfg(feature = "InternetConfig")]
pub use self::__InternetConfig::ICFontRecord;
#[cfg(feature = "InternetConfig")]
pub use self::__InternetConfig::ICFontRecordHandle;
#[cfg(feature = "InternetConfig")]
pub use self::__InternetConfig::ICFontRecordPtr;
#[cfg(feature = "InternetConfig")]
pub use self::__InternetConfig::ICGetCurrentProfile;
#[cfg(feature = "InternetConfig")]
pub use self::__InternetConfig::ICGetDefaultPref;
#[cfg(feature = "InternetConfig")]
pub use self::__InternetConfig::ICGetIndMapEntry;
#[cfg(feature = "InternetConfig")]
pub use self::__InternetConfig::ICGetIndProfile;
#[cfg(feature = "InternetConfig")]
pub use self::__InternetConfig::ICGetMapEntry;
#[cfg(feature = "InternetConfig")]
pub use self::__InternetConfig::ICGetPerm;
#[cfg(feature = "InternetConfig")]
pub use self::__InternetConfig::ICGetPref;
#[cfg(feature = "InternetConfig")]
pub use self::__InternetConfig::ICGetPrefHandle;
#[cfg(feature = "InternetConfig")]
pub use self::__InternetConfig::ICGetSeed;
#[cfg(feature = "InternetConfig")]
pub use self::__InternetConfig::ICGetVersion;
#[cfg(feature = "InternetConfig")]
pub use self::__InternetConfig::ICInstance;
#[cfg(feature = "InternetConfig")]
pub use self::__InternetConfig::ICLaunchURL;
#[cfg(feature = "InternetConfig")]
pub use self::__InternetConfig::ICMapEntriesFilename;
#[cfg(feature = "InternetConfig")]
pub use self::__InternetConfig::ICMapEntriesTypeCreator;
#[cfg(feature = "InternetConfig")]
pub use self::__InternetConfig::ICMapEntry;
#[cfg(feature = "InternetConfig")]
pub use self::__InternetConfig::ICMapEntryFlags;
#[cfg(feature = "InternetConfig")]
pub use self::__InternetConfig::ICMapEntryHandle;
#[cfg(feature = "InternetConfig")]
pub use self::__InternetConfig::ICMapEntryPtr;
#[cfg(feature = "InternetConfig")]
pub use self::__InternetConfig::ICMapFilename;
#[cfg(feature = "InternetConfig")]
pub use self::__InternetConfig::ICMapTypeCreator;
#[cfg(feature = "InternetConfig")]
pub use self::__InternetConfig::ICParseURL;
#[cfg(feature = "InternetConfig")]
pub use self::__InternetConfig::ICPerm;
#[cfg(feature = "InternetConfig")]
pub use self::__InternetConfig::ICProfileID;
#[cfg(feature = "InternetConfig")]
pub use self::__InternetConfig::ICProfileIDPtr;
#[cfg(all(feature = "InternetConfig", feature = "objc2-core-services"))]
pub use self::__InternetConfig::ICSendGURLEvent;
#[cfg(feature = "InternetConfig")]
pub use self::__InternetConfig::ICServiceEntry;
#[cfg(feature = "InternetConfig")]
pub use self::__InternetConfig::ICServiceEntryFlags;
#[cfg(feature = "InternetConfig")]
pub use self::__InternetConfig::ICServiceEntryHandle;
#[cfg(feature = "InternetConfig")]
pub use self::__InternetConfig::ICServiceEntryPtr;
#[cfg(feature = "InternetConfig")]
pub use self::__InternetConfig::ICServices;
#[cfg(feature = "InternetConfig")]
pub use self::__InternetConfig::ICServicesHandle;
#[cfg(feature = "InternetConfig")]
pub use self::__InternetConfig::ICServicesPtr;
#[cfg(feature = "InternetConfig")]
pub use self::__InternetConfig::ICSetCurrentProfile;
#[cfg(feature = "InternetConfig")]
pub use self::__InternetConfig::ICSetMapEntry;
#[cfg(feature = "InternetConfig")]
pub use self::__InternetConfig::ICSetPref;
#[cfg(feature = "InternetConfig")]
pub use self::__InternetConfig::ICSetPrefHandle;
#[cfg(feature = "InternetConfig")]
pub use self::__InternetConfig::ICSetProfileName;
#[cfg(feature = "InternetConfig")]
pub use self::__InternetConfig::ICStart;
#[cfg(feature = "InternetConfig")]
pub use self::__InternetConfig::ICStop;
#[cfg(feature = "InternetConfig")]
pub use self::__InternetConfig::OpaqueICInstance;
#[cfg(feature = "Pasteboard")]
pub use self::__Pasteboard::badPasteboardFlavorErr;
#[cfg(feature = "Pasteboard")]
pub use self::__Pasteboard::badPasteboardIndexErr;
#[cfg(feature = "Pasteboard")]
pub use self::__Pasteboard::badPasteboardItemErr;
#[cfg(feature = "Pasteboard")]
pub use self::__Pasteboard::badPasteboardSyncErr;
#[cfg(feature = "Pasteboard")]
pub use self::__Pasteboard::duplicatePasteboardFlavorErr;
#[cfg(feature = "Pasteboard")]
pub use self::__Pasteboard::noPasteboardPromiseKeeperErr;
#[cfg(feature = "Pasteboard")]
pub use self::__Pasteboard::notPasteboardOwnerErr;
#[cfg(feature = "Pasteboard")]
pub use self::__Pasteboard::Pasteboard;
#[cfg(feature = "Pasteboard")]
pub use self::__Pasteboard::PasteboardClear;
#[cfg(feature = "Pasteboard")]
pub use self::__Pasteboard::PasteboardCopyItemFlavorData;
#[cfg(feature = "Pasteboard")]
pub use self::__Pasteboard::PasteboardCopyItemFlavors;
#[cfg(feature = "Pasteboard")]
pub use self::__Pasteboard::PasteboardCopyName;
#[cfg(feature = "Pasteboard")]
pub use self::__Pasteboard::PasteboardCopyPasteLocation;
#[cfg(feature = "Pasteboard")]
pub use self::__Pasteboard::PasteboardCreate;
#[cfg(feature = "Pasteboard")]
pub use self::__Pasteboard::PasteboardFlavorFlags;
#[cfg(feature = "Pasteboard")]
pub use self::__Pasteboard::PasteboardGetItemCount;
#[cfg(feature = "Pasteboard")]
pub use self::__Pasteboard::PasteboardGetItemFlavorFlags;
#[cfg(feature = "Pasteboard")]
pub use self::__Pasteboard::PasteboardGetItemIdentifier;
#[cfg(feature = "Pasteboard")]
pub use self::__Pasteboard::PasteboardItemID;
#[cfg(feature = "Pasteboard")]
pub use self::__Pasteboard::PasteboardPromiseKeeperProcPtr;
#[cfg(feature = "Pasteboard")]
pub use self::__Pasteboard::PasteboardPutItemFlavor;
#[cfg(feature = "Pasteboard")]
pub use self::__Pasteboard::PasteboardResolvePromises;
#[cfg(feature = "Pasteboard")]
pub use self::__Pasteboard::PasteboardSetPasteLocation;
#[cfg(feature = "Pasteboard")]
pub use self::__Pasteboard::PasteboardSetPromiseKeeper;
#[cfg(feature = "Pasteboard")]
pub use self::__Pasteboard::PasteboardStandardLocation;
#[cfg(feature = "Pasteboard")]
pub use self::__Pasteboard::PasteboardSyncFlags;
#[cfg(feature = "Pasteboard")]
pub use self::__Pasteboard::PasteboardSynchronize;
#[cfg(feature = "Processes")]
pub use self::__Processes::activDev;
#[cfg(feature = "Processes")]
pub use self::__Processes::cdevGenErr;
#[cfg(feature = "Processes")]
pub use self::__Processes::cdevMemErr;
#[cfg(feature = "Processes")]
pub use self::__Processes::cdevResErr;
#[cfg(feature = "Processes")]
pub use self::__Processes::cdevUnset;
#[cfg(feature = "Processes")]
pub use self::__Processes::clearDev;
#[cfg(feature = "Processes")]
pub use self::__Processes::closeDev;
#[cfg(feature = "Processes")]
pub use self::__Processes::copyDev;
#[cfg(feature = "Processes")]
pub use self::__Processes::cursorDev;
#[cfg(feature = "Processes")]
pub use self::__Processes::cutDev;
#[cfg(feature = "Processes")]
pub use self::__Processes::deactivDev;
#[cfg(feature = "Processes")]
pub use self::__Processes::extendedBlock;
#[cfg(feature = "Processes")]
pub use self::__Processes::hitDev;
#[cfg(feature = "Processes")]
pub use self::__Processes::initDev;
#[cfg(feature = "Processes")]
pub use self::__Processes::kCurrentProcess;
#[cfg(feature = "Processes")]
pub use self::__Processes::kNoProcess;
#[cfg(feature = "Processes")]
pub use self::__Processes::kProcessTransformToBackgroundApplication;
#[cfg(feature = "Processes")]
pub use self::__Processes::kProcessTransformToForegroundApplication;
#[cfg(feature = "Processes")]
pub use self::__Processes::kProcessTransformToUIElementApplication;
#[cfg(feature = "Processes")]
pub use self::__Processes::kQuitAtNormalTimeMask;
#[cfg(feature = "Processes")]
pub use self::__Processes::kQuitBeforeFBAsQuitMask;
#[cfg(feature = "Processes")]
pub use self::__Processes::kQuitBeforeNormalTimeMask;
#[cfg(feature = "Processes")]
pub use self::__Processes::kQuitBeforeShellQuitsMask;
#[cfg(feature = "Processes")]
pub use self::__Processes::kQuitBeforeTerminatorAppQuitsMask;
#[cfg(feature = "Processes")]
pub use self::__Processes::kQuitNeverMask;
#[cfg(feature = "Processes")]
pub use self::__Processes::kQuitNotQuitDuringInstallMask;
#[cfg(feature = "Processes")]
pub use self::__Processes::kQuitNotQuitDuringLogoutMask;
#[cfg(feature = "Processes")]
pub use self::__Processes::kQuitOptionsMask;
#[cfg(feature = "Processes")]
pub use self::__Processes::kSetFrontProcessCausedByUser;
#[cfg(feature = "Processes")]
pub use self::__Processes::kSetFrontProcessFrontWindowOnly;
#[cfg(feature = "Processes")]
pub use self::__Processes::kSystemProcess;
#[cfg(feature = "Processes")]
pub use self::__Processes::keyEvtDev;
#[cfg(feature = "Processes")]
pub use self::__Processes::launchAllow24Bit;
#[cfg(feature = "Processes")]
pub use self::__Processes::launchContinue;
#[cfg(feature = "Processes")]
pub use self::__Processes::launchDontSwitch;
#[cfg(feature = "Processes")]
pub use self::__Processes::launchInhibitDaemon;
#[cfg(feature = "Processes")]
pub use self::__Processes::launchNoFileFlags;
#[cfg(feature = "Processes")]
pub use self::__Processes::launchUseMinimum;
#[cfg(feature = "Processes")]
pub use self::__Processes::macDev;
#[cfg(feature = "Processes")]
pub use self::__Processes::mode32BitCompatible;
#[cfg(feature = "Processes")]
pub use self::__Processes::modeCanBackground;
#[cfg(feature = "Processes")]
pub use self::__Processes::modeControlPanel;
#[cfg(feature = "Processes")]
pub use self::__Processes::modeDeskAccessory;
#[cfg(feature = "Processes")]
pub use self::__Processes::modeDisplayManagerAware;
#[cfg(feature = "Processes")]
pub use self::__Processes::modeDoesActivateOnFGSwitch;
#[cfg(feature = "Processes")]
pub use self::__Processes::modeGetAppDiedMsg;
#[cfg(feature = "Processes")]
pub use self::__Processes::modeGetFrontClicks;
#[cfg(feature = "Processes")]
pub use self::__Processes::modeHighLevelEventAware;
#[cfg(feature = "Processes")]
pub use self::__Processes::modeLaunchDontSwitch;
#[cfg(feature = "Processes")]
pub use self::__Processes::modeLocalAndRemoteHLEvents;
#[cfg(feature = "Processes")]
pub use self::__Processes::modeMultiLaunch;
#[cfg(feature = "Processes")]
pub use self::__Processes::modeNeedSuspendResume;
#[cfg(feature = "Processes")]
pub use self::__Processes::modeOnlyBackground;
#[cfg(feature = "Processes")]
pub use self::__Processes::modeReserved;
#[cfg(feature = "Processes")]
pub use self::__Processes::modeStationeryAware;
#[cfg(feature = "Processes")]
pub use self::__Processes::modeUseTextEditServices;
#[cfg(feature = "Processes")]
pub use self::__Processes::nulDev;
#[cfg(feature = "Processes")]
pub use self::__Processes::pasteDev;
#[cfg(feature = "Processes")]
pub use self::__Processes::undoDev;
#[cfg(feature = "Processes")]
pub use self::__Processes::updateDev;
#[cfg(feature = "Processes")]
pub use self::__Processes::AppParameters;
#[cfg(feature = "Processes")]
pub use self::__Processes::AppParametersPtr;
#[cfg(feature = "Processes")]
pub use self::__Processes::AppParameters_theMsgEvent;
#[cfg(feature = "Processes")]
pub use self::__Processes::CopyProcessName;
#[cfg(feature = "Processes")]
pub use self::__Processes::ExitToShell;
#[cfg(feature = "Processes")]
pub use self::__Processes::GetCurrentProcess;
#[cfg(feature = "Processes")]
pub use self::__Processes::GetFrontProcess;
#[cfg(feature = "Processes")]
pub use self::__Processes::GetNextProcess;
#[cfg(all(feature = "Processes", feature = "libc"))]
pub use self::__Processes::GetProcessForPID;
#[cfg(all(feature = "Processes", feature = "libc"))]
pub use self::__Processes::GetProcessPID;
#[cfg(feature = "Processes")]
pub use self::__Processes::IsProcessVisible;
#[cfg(feature = "Processes")]
pub use self::__Processes::KillProcess;
#[cfg(feature = "Processes")]
pub use self::__Processes::LaunchFlags;
#[cfg(feature = "Processes")]
pub use self::__Processes::ProcessApplicationTransformState;
#[cfg(feature = "Processes")]
pub use self::__Processes::ProcessInformationCopyDictionary;
#[cfg(feature = "Processes")]
pub use self::__Processes::SameProcess;
#[cfg(feature = "Processes")]
pub use self::__Processes::SetFrontProcess;
#[cfg(feature = "Processes")]
pub use self::__Processes::SetFrontProcessWithOptions;
#[cfg(feature = "Processes")]
pub use self::__Processes::ShowHideProcess;
#[cfg(feature = "Processes")]
pub use self::__Processes::SizeResourceRec;
#[cfg(feature = "Processes")]
pub use self::__Processes::SizeResourceRecHandle;
#[cfg(feature = "Processes")]
pub use self::__Processes::SizeResourceRecPtr;
#[cfg(feature = "Processes")]
pub use self::__Processes::TransformProcessType;
#[cfg(feature = "Processes")]
pub use self::__Processes::WakeUpProcess;
#[cfg(feature = "TranslationServices")]
pub use self::__TranslationServices::badTranslationRefErr;
#[cfg(feature = "TranslationServices")]
pub use self::__TranslationServices::kTranslationDataTranslation;
#[cfg(feature = "TranslationServices")]
pub use self::__TranslationServices::kTranslationFileTranslation;
#[cfg(feature = "TranslationServices")]
pub use self::__TranslationServices::Translation;
#[cfg(feature = "TranslationServices")]
pub use self::__TranslationServices::TranslationCopyDestinationType;
#[cfg(feature = "TranslationServices")]
pub use self::__TranslationServices::TranslationCopySourceType;
#[cfg(feature = "TranslationServices")]
pub use self::__TranslationServices::TranslationCreate;
#[cfg(feature = "TranslationServices")]
pub use self::__TranslationServices::TranslationCreateWithSourceArray;
#[cfg(feature = "TranslationServices")]
pub use self::__TranslationServices::TranslationFlags;
#[cfg(feature = "TranslationServices")]
pub use self::__TranslationServices::TranslationGetTranslationFlags;
#[cfg(feature = "TranslationServices")]
pub use self::__TranslationServices::TranslationPerformForData;
#[cfg(feature = "TranslationServices")]
pub use self::__TranslationServices::TranslationPerformForURL;
#[cfg(feature = "UniversalAccess")]
pub use self::__UniversalAccess::kUAZoomFocusTypeInsertionPoint;
#[cfg(feature = "UniversalAccess")]
pub use self::__UniversalAccess::kUAZoomFocusTypeOther;
#[cfg(feature = "UniversalAccess")]
pub use self::__UniversalAccess::UAZoomChangeFocus;
#[cfg(feature = "UniversalAccess")]
pub use self::__UniversalAccess::UAZoomChangeFocusType;
#[cfg(feature = "UniversalAccess")]
pub use self::__UniversalAccess::UAZoomEnabled;
