//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use core::ffi::*;
use core::ptr::NonNull;
use objc2::__framework_prelude::*;
use objc2_foundation::*;

use crate::*;

#[cfg(feature = "INInteraction")]
impl INInteraction {
    extern_methods!(
        #[unsafe(method(parameterValueForParameter:))]
        #[unsafe(method_family = none)]
        pub unsafe fn parameterValueForParameter(
            &self,
            parameter: &INParameter,
        ) -> Option<Retained<AnyObject>>;
    );
}

extern_class!(
    /// [Apple's documentation](https://developer.apple.com/documentation/intents/inparameter?language=objc)
    #[unsafe(super(NSObject))]
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub struct INParameter;
);

extern_conformance!(
    unsafe impl NSCoding for INParameter {}
);

extern_conformance!(
    unsafe impl NSCopying for INParameter {}
);

unsafe impl CopyingHelper for INParameter {
    type Result = Self;
}

extern_conformance!(
    unsafe impl NSObjectProtocol for INParameter {}
);

extern_conformance!(
    unsafe impl NSSecureCoding for INParameter {}
);

impl INParameter {
    extern_methods!(
        /// # Safety
        ///
        /// `a_class` probably has further requirements.
        #[unsafe(method(parameterForClass:keyPath:))]
        #[unsafe(method_family = none)]
        pub unsafe fn parameterForClass_keyPath(
            a_class: &AnyClass,
            key_path: &NSString,
        ) -> Retained<Self>;

        #[unsafe(method(parameterClass))]
        #[unsafe(method_family = none)]
        pub unsafe fn parameterClass(&self) -> &'static AnyClass;

        #[unsafe(method(parameterKeyPath))]
        #[unsafe(method_family = none)]
        pub unsafe fn parameterKeyPath(&self) -> Retained<NSString>;

        #[unsafe(method(isEqualToParameter:))]
        #[unsafe(method_family = none)]
        pub unsafe fn isEqualToParameter(&self, parameter: &INParameter) -> bool;

        #[unsafe(method(setIndex:forSubKeyPath:))]
        #[unsafe(method_family = none)]
        pub unsafe fn setIndex_forSubKeyPath(&self, index: NSUInteger, sub_key_path: &NSString);

        #[unsafe(method(indexForSubKeyPath:))]
        #[unsafe(method_family = none)]
        pub unsafe fn indexForSubKeyPath(&self, sub_key_path: &NSString) -> NSUInteger;
    );
}

/// Methods declared on superclass `NSObject`.
impl INParameter {
    extern_methods!(
        #[unsafe(method(init))]
        #[unsafe(method_family = init)]
        pub unsafe fn init(this: Allocated<Self>) -> Retained<Self>;

        #[unsafe(method(new))]
        #[unsafe(method_family = new)]
        pub unsafe fn new() -> Retained<Self>;
    );
}
