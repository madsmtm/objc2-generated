//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use core::ptr::NonNull;
use objc2::__framework_prelude::*;
#[cfg(feature = "objc2-contacts")]
#[cfg(not(target_os = "tvos"))]
use objc2_contacts::*;
#[cfg(feature = "objc2-core-location")]
use objc2_core_location::*;
use objc2_foundation::*;

use crate::*;

mod private_CLPlacemarkINIntentsAdditions {
    pub trait Sealed {}
}

/// Category "INIntentsAdditions" on [`CLPlacemark`].
#[doc(alias = "INIntentsAdditions")]
#[deprecated = "Use either GeoToolbox.PlaceDescriptor or MapKit"]
pub unsafe trait CLPlacemarkINIntentsAdditions:
    ClassType + Sized + private_CLPlacemarkINIntentsAdditions::Sealed
{
    extern_methods!(
        #[cfg(all(feature = "objc2-contacts", feature = "objc2-core-location"))]
        #[cfg(not(target_os = "tvos"))]
        #[unsafe(method(placemarkWithLocation:name:postalAddress:))]
        #[unsafe(method_family = none)]
        unsafe fn placemarkWithLocation_name_postalAddress(
            location: &CLLocation,
            name: Option<&NSString>,
            postal_address: Option<&CNPostalAddress>,
        ) -> Retained<Self>;
    );
}

#[cfg(feature = "objc2-core-location")]
impl private_CLPlacemarkINIntentsAdditions::Sealed for CLPlacemark {}
#[cfg(feature = "objc2-core-location")]
unsafe impl CLPlacemarkINIntentsAdditions for CLPlacemark {}
