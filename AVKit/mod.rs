// This file has been automatically generated by `objc2`'s `header-translator`.
// DO NOT EDIT

#![allow(unused_imports)]
#![allow(deprecated)]
#![allow(non_snake_case)]
#![allow(non_camel_case_types)]
#![allow(non_upper_case_globals)]
#![allow(missing_docs)]
#![allow(clippy::too_many_arguments)]
#![allow(clippy::type_complexity)]
#![allow(clippy::upper_case_acronyms)]
#![allow(clippy::identity_op)]
#![allow(clippy::missing_safety_doc)]
#![allow(clippy::doc_lazy_continuation)]
#![allow(rustdoc::broken_intra_doc_links)]
#![allow(rustdoc::bare_urls)]
#![allow(rustdoc::unportable_markdown)]
#![allow(rustdoc::invalid_html_tags)]

#[link(name = "AVKit", kind = "framework")]
extern "C" {}

#[cfg(feature = "AVCaptureView")]
#[path = "AVCaptureView.rs"]
mod __AVCaptureView;
#[cfg(feature = "AVKitCore")]
#[path = "AVKitCore.rs"]
mod __AVKitCore;
#[cfg(feature = "AVKitDefines")]
#[path = "AVKitDefines.rs"]
mod __AVKitDefines;
#[cfg(feature = "AVKitTypes")]
#[path = "AVKitTypes.rs"]
mod __AVKitTypes;
#[cfg(feature = "AVPictureInPictureController")]
#[path = "AVPictureInPictureController.rs"]
mod __AVPictureInPictureController;
#[cfg(feature = "AVPictureInPictureController_AVSampleBufferDisplayLayerSupport")]
#[path = "AVPictureInPictureController_AVSampleBufferDisplayLayerSupport.rs"]
mod __AVPictureInPictureController_AVSampleBufferDisplayLayerSupport;
#[cfg(feature = "AVPlaybackSpeed")]
#[path = "AVPlaybackSpeed.rs"]
mod __AVPlaybackSpeed;
#[cfg(feature = "AVPlayerView")]
#[path = "AVPlayerView.rs"]
mod __AVPlayerView;
#[cfg(feature = "AVRoutePickerView")]
#[path = "AVRoutePickerView.rs"]
mod __AVRoutePickerView;

#[cfg(all(feature = "AVCaptureView", feature = "objc2-app-kit"))]
#[cfg(target_os = "macos")]
pub use self::__AVCaptureView::AVCaptureView;
#[cfg(feature = "AVCaptureView")]
pub use self::__AVCaptureView::AVCaptureViewControlsStyle;
#[cfg(feature = "AVCaptureView")]
pub use self::__AVCaptureView::AVCaptureViewDelegate;
#[cfg(feature = "AVKitTypes")]
pub use self::__AVKitTypes::AVDisplayDynamicRange;
#[cfg(feature = "AVKitTypes")]
pub use self::__AVKitTypes::AVVideoFrameAnalysisType;
#[cfg(feature = "AVPictureInPictureController")]
pub use self::__AVPictureInPictureController::AVPictureInPictureController;
#[cfg(feature = "AVPictureInPictureController")]
pub use self::__AVPictureInPictureController::AVPictureInPictureControllerContentSource;
#[cfg(feature = "AVPictureInPictureController")]
pub use self::__AVPictureInPictureController::AVPictureInPictureControllerDelegate;
#[cfg(feature = "AVPictureInPictureController_AVSampleBufferDisplayLayerSupport")]
pub use self::__AVPictureInPictureController_AVSampleBufferDisplayLayerSupport::AVPictureInPictureSampleBufferPlaybackDelegate;
#[cfg(feature = "AVPlaybackSpeed")]
pub use self::__AVPlaybackSpeed::AVPlaybackSpeed;
#[cfg(all(feature = "AVPlayerView", feature = "objc2-app-kit"))]
#[cfg(target_os = "macos")]
pub use self::__AVPlayerView::AVPlayerView;
#[cfg(feature = "AVPlayerView")]
pub use self::__AVPlayerView::AVPlayerViewControlsStyle;
#[cfg(feature = "AVPlayerView")]
pub use self::__AVPlayerView::AVPlayerViewDelegate;
#[cfg(feature = "AVPlayerView")]
pub use self::__AVPlayerView::AVPlayerViewPictureInPictureDelegate;
#[cfg(feature = "AVPlayerView")]
pub use self::__AVPlayerView::AVPlayerViewTrimResult;
#[cfg(all(feature = "AVRoutePickerView", feature = "objc2-app-kit"))]
#[cfg(target_os = "macos")]
pub use self::__AVRoutePickerView::AVRoutePickerView;
#[cfg(feature = "AVRoutePickerView")]
pub use self::__AVRoutePickerView::AVRoutePickerViewButtonState;
#[cfg(feature = "AVRoutePickerView")]
pub use self::__AVRoutePickerView::AVRoutePickerViewButtonStyle;
#[cfg(feature = "AVRoutePickerView")]
pub use self::__AVRoutePickerView::AVRoutePickerViewDelegate;
