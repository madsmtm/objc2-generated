//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use core::ffi::*;
use core::ptr::NonNull;
use objc2::__framework_prelude::*;
use objc2_foundation::*;

use crate::*;

/// [Apple's documentation](https://developer.apple.com/documentation/accessibility/axcustomcontentimportance?language=objc)
// NS_ENUM
#[repr(transparent)]
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash, PartialOrd, Ord)]
pub struct AXCustomContentImportance(pub NSUInteger);
impl AXCustomContentImportance {
    #[doc(alias = "AXCustomContentImportanceDefault")]
    pub const Default: Self = Self(0);
    #[doc(alias = "AXCustomContentImportanceHigh")]
    pub const High: Self = Self(1);
}

unsafe impl Encode for AXCustomContentImportance {
    const ENCODING: Encoding = NSUInteger::ENCODING;
}

unsafe impl RefEncode for AXCustomContentImportance {
    const ENCODING_REF: Encoding = Encoding::Pointer(&Self::ENCODING);
}

extern_class!(
    /// [Apple's documentation](https://developer.apple.com/documentation/accessibility/axcustomcontent?language=objc)
    #[unsafe(super(NSObject))]
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub struct AXCustomContent;
);

extern_conformance!(
    unsafe impl NSCoding for AXCustomContent {}
);

extern_conformance!(
    unsafe impl NSCopying for AXCustomContent {}
);

unsafe impl CopyingHelper for AXCustomContent {
    type Result = Self;
}

extern_conformance!(
    unsafe impl NSObjectProtocol for AXCustomContent {}
);

extern_conformance!(
    unsafe impl NSSecureCoding for AXCustomContent {}
);

impl AXCustomContent {
    extern_methods!(
        #[unsafe(method(customContentWithLabel:value:))]
        #[unsafe(method_family = none)]
        pub unsafe fn customContentWithLabel_value(
            label: &NSString,
            value: &NSString,
        ) -> Retained<Self>;

        #[unsafe(method(customContentWithAttributedLabel:attributedValue:))]
        #[unsafe(method_family = none)]
        pub unsafe fn customContentWithAttributedLabel_attributedValue(
            label: &NSAttributedString,
            value: &NSAttributedString,
        ) -> Retained<Self>;

        #[unsafe(method(label))]
        #[unsafe(method_family = none)]
        pub unsafe fn label(&self) -> Retained<NSString>;

        #[unsafe(method(attributedLabel))]
        #[unsafe(method_family = none)]
        pub unsafe fn attributedLabel(&self) -> Retained<NSAttributedString>;

        #[unsafe(method(value))]
        #[unsafe(method_family = none)]
        pub unsafe fn value(&self) -> Retained<NSString>;

        #[unsafe(method(attributedValue))]
        #[unsafe(method_family = none)]
        pub unsafe fn attributedValue(&self) -> Retained<NSAttributedString>;

        #[unsafe(method(importance))]
        #[unsafe(method_family = none)]
        pub unsafe fn importance(&self) -> AXCustomContentImportance;

        /// Setter for [`importance`][Self::importance].
        #[unsafe(method(setImportance:))]
        #[unsafe(method_family = none)]
        pub unsafe fn setImportance(&self, importance: AXCustomContentImportance);

        #[unsafe(method(init))]
        #[unsafe(method_family = init)]
        pub unsafe fn init(this: Allocated<Self>) -> Retained<Self>;

        #[unsafe(method(new))]
        #[unsafe(method_family = new)]
        pub unsafe fn new() -> Retained<Self>;
    );
}

/// [Apple's documentation](https://developer.apple.com/documentation/accessibility/axcustomcontentreturnblock?language=objc)
#[cfg(feature = "block2")]
pub type AXCustomContentReturnBlock =
    *mut block2::DynBlock<dyn Fn() -> *mut NSArray<AXCustomContent>>;

extern_protocol!(
    /// [Apple's documentation](https://developer.apple.com/documentation/accessibility/axcustomcontentprovider?language=objc)
    pub unsafe trait AXCustomContentProvider: NSObjectProtocol {
        #[unsafe(method(accessibilityCustomContent))]
        #[unsafe(method_family = none)]
        unsafe fn accessibilityCustomContent(&self) -> Retained<NSArray<AXCustomContent>>;

        /// Setter for [`accessibilityCustomContent`][Self::accessibilityCustomContent].
        ///
        /// This is [copied][objc2_foundation::NSCopying::copy] when set.
        #[unsafe(method(setAccessibilityCustomContent:))]
        #[unsafe(method_family = none)]
        unsafe fn setAccessibilityCustomContent(
            &self,
            accessibility_custom_content: Option<&NSArray<AXCustomContent>>,
        );

        #[cfg(feature = "block2")]
        #[optional]
        #[unsafe(method(accessibilityCustomContentBlock))]
        #[unsafe(method_family = none)]
        unsafe fn accessibilityCustomContentBlock(&self) -> AXCustomContentReturnBlock;

        #[cfg(feature = "block2")]
        /// Setter for [`accessibilityCustomContentBlock`][Self::accessibilityCustomContentBlock].
        ///
        /// This is [copied][objc2_foundation::NSCopying::copy] when set.
        ///
        /// # Safety
        ///
        /// `accessibility_custom_content_block` must be a valid pointer or null.
        #[optional]
        #[unsafe(method(setAccessibilityCustomContentBlock:))]
        #[unsafe(method_family = none)]
        unsafe fn setAccessibilityCustomContentBlock(
            &self,
            accessibility_custom_content_block: AXCustomContentReturnBlock,
        );
    }
);
