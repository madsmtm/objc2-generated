// This file has been automatically generated by `objc2`'s `header-translator`.
// DO NOT EDIT

#![allow(unused_imports)]
#![allow(deprecated)]
#![allow(non_snake_case)]
#![allow(non_camel_case_types)]
#![allow(non_upper_case_globals)]
#![allow(missing_docs)]
#![allow(clippy::too_many_arguments)]
#![allow(clippy::type_complexity)]
#![allow(clippy::upper_case_acronyms)]
#![allow(clippy::identity_op)]
#![allow(clippy::missing_safety_doc)]
#![allow(clippy::doc_lazy_continuation)]
#![allow(rustdoc::broken_intra_doc_links)]
#![allow(rustdoc::bare_urls)]
#![allow(rustdoc::invalid_html_tags)]

#[link(name = "Vision", kind = "framework")]
extern "C" {}

#[cfg(feature = "VNCalculateImageAestheticsScoresRequest")]
#[path = "VNCalculateImageAestheticsScoresRequest.rs"]
mod __VNCalculateImageAestheticsScoresRequest;
#[cfg(feature = "VNClassifyImageRequest")]
#[path = "VNClassifyImageRequest.rs"]
mod __VNClassifyImageRequest;
#[cfg(feature = "VNCoreMLRequest")]
#[path = "VNCoreMLRequest.rs"]
mod __VNCoreMLRequest;
#[cfg(feature = "VNDefines")]
#[path = "VNDefines.rs"]
mod __VNDefines;
#[cfg(feature = "VNDetectAnimalBodyPoseRequest")]
#[path = "VNDetectAnimalBodyPoseRequest.rs"]
mod __VNDetectAnimalBodyPoseRequest;
#[cfg(feature = "VNDetectBarcodesRequest")]
#[path = "VNDetectBarcodesRequest.rs"]
mod __VNDetectBarcodesRequest;
#[cfg(feature = "VNDetectContoursRequest")]
#[path = "VNDetectContoursRequest.rs"]
mod __VNDetectContoursRequest;
#[cfg(feature = "VNDetectDocumentSegmentationRequest")]
#[path = "VNDetectDocumentSegmentationRequest.rs"]
mod __VNDetectDocumentSegmentationRequest;
#[cfg(feature = "VNDetectFaceCaptureQualityRequest")]
#[path = "VNDetectFaceCaptureQualityRequest.rs"]
mod __VNDetectFaceCaptureQualityRequest;
#[cfg(feature = "VNDetectFaceLandmarksRequest")]
#[path = "VNDetectFaceLandmarksRequest.rs"]
mod __VNDetectFaceLandmarksRequest;
#[cfg(feature = "VNDetectFaceRectanglesRequest")]
#[path = "VNDetectFaceRectanglesRequest.rs"]
mod __VNDetectFaceRectanglesRequest;
#[cfg(feature = "VNDetectHorizonRequest")]
#[path = "VNDetectHorizonRequest.rs"]
mod __VNDetectHorizonRequest;
#[cfg(feature = "VNDetectHumanBodyPose3DRequest")]
#[path = "VNDetectHumanBodyPose3DRequest.rs"]
mod __VNDetectHumanBodyPose3DRequest;
#[cfg(feature = "VNDetectHumanBodyPoseRequest")]
#[path = "VNDetectHumanBodyPoseRequest.rs"]
mod __VNDetectHumanBodyPoseRequest;
#[cfg(feature = "VNDetectHumanHandPoseRequest")]
#[path = "VNDetectHumanHandPoseRequest.rs"]
mod __VNDetectHumanHandPoseRequest;
#[cfg(feature = "VNDetectHumanRectanglesRequest")]
#[path = "VNDetectHumanRectanglesRequest.rs"]
mod __VNDetectHumanRectanglesRequest;
#[cfg(feature = "VNDetectRectanglesRequest")]
#[path = "VNDetectRectanglesRequest.rs"]
mod __VNDetectRectanglesRequest;
#[cfg(feature = "VNDetectTextRectanglesRequest")]
#[path = "VNDetectTextRectanglesRequest.rs"]
mod __VNDetectTextRectanglesRequest;
#[cfg(feature = "VNDetectTrajectoriesRequest")]
#[path = "VNDetectTrajectoriesRequest.rs"]
mod __VNDetectTrajectoriesRequest;
#[cfg(feature = "VNDetectedPoint")]
#[path = "VNDetectedPoint.rs"]
mod __VNDetectedPoint;
#[cfg(feature = "VNError")]
#[path = "VNError.rs"]
mod __VNError;
#[cfg(feature = "VNFaceLandmarks")]
#[path = "VNFaceLandmarks.rs"]
mod __VNFaceLandmarks;
#[cfg(feature = "VNFaceObservationAccepting")]
#[path = "VNFaceObservationAccepting.rs"]
mod __VNFaceObservationAccepting;
#[cfg(feature = "VNGenerateAttentionBasedSaliencyImageRequest")]
#[path = "VNGenerateAttentionBasedSaliencyImageRequest.rs"]
mod __VNGenerateAttentionBasedSaliencyImageRequest;
#[cfg(feature = "VNGenerateForegroundInstanceMaskRequest")]
#[path = "VNGenerateForegroundInstanceMaskRequest.rs"]
mod __VNGenerateForegroundInstanceMaskRequest;
#[cfg(feature = "VNGenerateImageFeaturePrintRequest")]
#[path = "VNGenerateImageFeaturePrintRequest.rs"]
mod __VNGenerateImageFeaturePrintRequest;
#[cfg(feature = "VNGenerateObjectnessBasedSaliencyImageRequest")]
#[path = "VNGenerateObjectnessBasedSaliencyImageRequest.rs"]
mod __VNGenerateObjectnessBasedSaliencyImageRequest;
#[cfg(feature = "VNGenerateOpticalFlowRequest")]
#[path = "VNGenerateOpticalFlowRequest.rs"]
mod __VNGenerateOpticalFlowRequest;
#[cfg(feature = "VNGeneratePersonInstanceMaskRequest")]
#[path = "VNGeneratePersonInstanceMaskRequest.rs"]
mod __VNGeneratePersonInstanceMaskRequest;
#[cfg(feature = "VNGeneratePersonSegmentationRequest")]
#[path = "VNGeneratePersonSegmentationRequest.rs"]
mod __VNGeneratePersonSegmentationRequest;
#[cfg(feature = "VNGeometry")]
#[path = "VNGeometry.rs"]
mod __VNGeometry;
#[cfg(feature = "VNGeometryUtils")]
#[path = "VNGeometryUtils.rs"]
mod __VNGeometryUtils;
#[cfg(feature = "VNHumanBodyRecognizedPoint3D")]
#[path = "VNHumanBodyRecognizedPoint3D.rs"]
mod __VNHumanBodyRecognizedPoint3D;
#[cfg(feature = "VNImageRegistrationRequest")]
#[path = "VNImageRegistrationRequest.rs"]
mod __VNImageRegistrationRequest;
#[cfg(feature = "VNObservation")]
#[path = "VNObservation.rs"]
mod __VNObservation;
#[cfg(feature = "VNRecognizeAnimalsRequest")]
#[path = "VNRecognizeAnimalsRequest.rs"]
mod __VNRecognizeAnimalsRequest;
#[cfg(feature = "VNRecognizeTextRequest")]
#[path = "VNRecognizeTextRequest.rs"]
mod __VNRecognizeTextRequest;
#[cfg(feature = "VNRecognizedPoint3D")]
#[path = "VNRecognizedPoint3D.rs"]
mod __VNRecognizedPoint3D;
#[cfg(feature = "VNRequest")]
#[path = "VNRequest.rs"]
mod __VNRequest;
#[cfg(feature = "VNRequestHandler")]
#[path = "VNRequestHandler.rs"]
mod __VNRequestHandler;
#[cfg(feature = "VNRequestRevisionProviding")]
#[path = "VNRequestRevisionProviding.rs"]
mod __VNRequestRevisionProviding;
#[cfg(feature = "VNStatefulRequest")]
#[path = "VNStatefulRequest.rs"]
mod __VNStatefulRequest;
#[cfg(feature = "VNTargetedImageRequest")]
#[path = "VNTargetedImageRequest.rs"]
mod __VNTargetedImageRequest;
#[cfg(feature = "VNTrackHomographicImageRegistrationRequest")]
#[path = "VNTrackHomographicImageRegistrationRequest.rs"]
mod __VNTrackHomographicImageRegistrationRequest;
#[cfg(feature = "VNTrackObjectRequest")]
#[path = "VNTrackObjectRequest.rs"]
mod __VNTrackObjectRequest;
#[cfg(feature = "VNTrackOpticalFlowRequest")]
#[path = "VNTrackOpticalFlowRequest.rs"]
mod __VNTrackOpticalFlowRequest;
#[cfg(feature = "VNTrackRectangleRequest")]
#[path = "VNTrackRectangleRequest.rs"]
mod __VNTrackRectangleRequest;
#[cfg(feature = "VNTrackTranslationalImageRegistrationRequest")]
#[path = "VNTrackTranslationalImageRegistrationRequest.rs"]
mod __VNTrackTranslationalImageRegistrationRequest;
#[cfg(feature = "VNTrackingRequest")]
#[path = "VNTrackingRequest.rs"]
mod __VNTrackingRequest;
#[cfg(feature = "VNTypes")]
#[path = "VNTypes.rs"]
mod __VNTypes;
#[cfg(feature = "VNUtils")]
#[path = "VNUtils.rs"]
mod __VNUtils;
#[cfg(feature = "VNVideoProcessor")]
#[path = "VNVideoProcessor.rs"]
mod __VNVideoProcessor;

#[cfg(all(
    feature = "VNCalculateImageAestheticsScoresRequest",
    feature = "VNRequest"
))]
pub use self::__VNCalculateImageAestheticsScoresRequest::VNCalculateImageAestheticsScoresRequest;
#[cfg(feature = "VNCalculateImageAestheticsScoresRequest")]
pub use self::__VNCalculateImageAestheticsScoresRequest::VNCalculateImageAestheticsScoresRequestRevision1;
#[cfg(all(feature = "VNClassifyImageRequest", feature = "VNRequest"))]
pub use self::__VNClassifyImageRequest::VNClassifyImageRequest;
#[cfg(feature = "VNClassifyImageRequest")]
pub use self::__VNClassifyImageRequest::VNClassifyImageRequestRevision1;
#[cfg(feature = "VNClassifyImageRequest")]
pub use self::__VNClassifyImageRequest::VNClassifyImageRequestRevision2;
#[cfg(feature = "VNCoreMLRequest")]
pub use self::__VNCoreMLRequest::VNCoreMLModel;
#[cfg(all(feature = "VNCoreMLRequest", feature = "VNRequest"))]
pub use self::__VNCoreMLRequest::VNCoreMLRequest;
#[cfg(feature = "VNCoreMLRequest")]
pub use self::__VNCoreMLRequest::VNCoreMLRequestRevision1;
#[cfg(all(feature = "VNDetectAnimalBodyPoseRequest", feature = "VNRequest"))]
pub use self::__VNDetectAnimalBodyPoseRequest::VNDetectAnimalBodyPoseRequest;
#[cfg(feature = "VNDetectAnimalBodyPoseRequest")]
pub use self::__VNDetectAnimalBodyPoseRequest::VNDetectAnimalBodyPoseRequestRevision1;
#[cfg(all(feature = "VNDetectBarcodesRequest", feature = "VNRequest"))]
pub use self::__VNDetectBarcodesRequest::VNDetectBarcodesRequest;
#[cfg(feature = "VNDetectBarcodesRequest")]
pub use self::__VNDetectBarcodesRequest::VNDetectBarcodesRequestRevision1;
#[cfg(feature = "VNDetectBarcodesRequest")]
pub use self::__VNDetectBarcodesRequest::VNDetectBarcodesRequestRevision2;
#[cfg(feature = "VNDetectBarcodesRequest")]
pub use self::__VNDetectBarcodesRequest::VNDetectBarcodesRequestRevision3;
#[cfg(feature = "VNDetectBarcodesRequest")]
pub use self::__VNDetectBarcodesRequest::VNDetectBarcodesRequestRevision4;
#[cfg(feature = "VNDetectContoursRequest")]
pub use self::__VNDetectContoursRequest::VNDetectContourRequestRevision1;
#[cfg(all(feature = "VNDetectContoursRequest", feature = "VNRequest"))]
pub use self::__VNDetectContoursRequest::VNDetectContoursRequest;
#[cfg(all(feature = "VNDetectDocumentSegmentationRequest", feature = "VNRequest"))]
pub use self::__VNDetectDocumentSegmentationRequest::VNDetectDocumentSegmentationRequest;
#[cfg(feature = "VNDetectDocumentSegmentationRequest")]
pub use self::__VNDetectDocumentSegmentationRequest::VNDetectDocumentSegmentationRequestRevision1;
#[cfg(all(feature = "VNDetectFaceCaptureQualityRequest", feature = "VNRequest"))]
pub use self::__VNDetectFaceCaptureQualityRequest::VNDetectFaceCaptureQualityRequest;
#[cfg(feature = "VNDetectFaceCaptureQualityRequest")]
pub use self::__VNDetectFaceCaptureQualityRequest::VNDetectFaceCaptureQualityRequestRevision1;
#[cfg(feature = "VNDetectFaceCaptureQualityRequest")]
pub use self::__VNDetectFaceCaptureQualityRequest::VNDetectFaceCaptureQualityRequestRevision2;
#[cfg(feature = "VNDetectFaceCaptureQualityRequest")]
pub use self::__VNDetectFaceCaptureQualityRequest::VNDetectFaceCaptureQualityRequestRevision3;
#[cfg(all(feature = "VNDetectFaceLandmarksRequest", feature = "VNRequest"))]
pub use self::__VNDetectFaceLandmarksRequest::VNDetectFaceLandmarksRequest;
#[cfg(feature = "VNDetectFaceLandmarksRequest")]
pub use self::__VNDetectFaceLandmarksRequest::VNDetectFaceLandmarksRequestRevision1;
#[cfg(feature = "VNDetectFaceLandmarksRequest")]
pub use self::__VNDetectFaceLandmarksRequest::VNDetectFaceLandmarksRequestRevision2;
#[cfg(feature = "VNDetectFaceLandmarksRequest")]
pub use self::__VNDetectFaceLandmarksRequest::VNDetectFaceLandmarksRequestRevision3;
#[cfg(feature = "VNDetectFaceLandmarksRequest")]
pub use self::__VNDetectFaceLandmarksRequest::VNRequestFaceLandmarksConstellation;
#[cfg(all(feature = "VNDetectFaceRectanglesRequest", feature = "VNRequest"))]
pub use self::__VNDetectFaceRectanglesRequest::VNDetectFaceRectanglesRequest;
#[cfg(feature = "VNDetectFaceRectanglesRequest")]
pub use self::__VNDetectFaceRectanglesRequest::VNDetectFaceRectanglesRequestRevision1;
#[cfg(feature = "VNDetectFaceRectanglesRequest")]
pub use self::__VNDetectFaceRectanglesRequest::VNDetectFaceRectanglesRequestRevision2;
#[cfg(feature = "VNDetectFaceRectanglesRequest")]
pub use self::__VNDetectFaceRectanglesRequest::VNDetectFaceRectanglesRequestRevision3;
#[cfg(all(feature = "VNDetectHorizonRequest", feature = "VNRequest"))]
pub use self::__VNDetectHorizonRequest::VNDetectHorizonRequest;
#[cfg(feature = "VNDetectHorizonRequest")]
pub use self::__VNDetectHorizonRequest::VNDetectHorizonRequestRevision1;
#[cfg(all(
    feature = "VNDetectHumanBodyPose3DRequest",
    feature = "VNRequest",
    feature = "VNStatefulRequest"
))]
pub use self::__VNDetectHumanBodyPose3DRequest::VNDetectHumanBodyPose3DRequest;
#[cfg(feature = "VNDetectHumanBodyPose3DRequest")]
pub use self::__VNDetectHumanBodyPose3DRequest::VNDetectHumanBodyPose3DRequestRevision1;
#[cfg(all(feature = "VNDetectHumanBodyPoseRequest", feature = "VNTypes"))]
pub use self::__VNDetectHumanBodyPoseRequest::VNBodyLandmarkKeyLeftAnkle;
#[cfg(all(feature = "VNDetectHumanBodyPoseRequest", feature = "VNTypes"))]
pub use self::__VNDetectHumanBodyPoseRequest::VNBodyLandmarkKeyLeftEar;
#[cfg(all(feature = "VNDetectHumanBodyPoseRequest", feature = "VNTypes"))]
pub use self::__VNDetectHumanBodyPoseRequest::VNBodyLandmarkKeyLeftElbow;
#[cfg(all(feature = "VNDetectHumanBodyPoseRequest", feature = "VNTypes"))]
pub use self::__VNDetectHumanBodyPoseRequest::VNBodyLandmarkKeyLeftEye;
#[cfg(all(feature = "VNDetectHumanBodyPoseRequest", feature = "VNTypes"))]
pub use self::__VNDetectHumanBodyPoseRequest::VNBodyLandmarkKeyLeftHip;
#[cfg(all(feature = "VNDetectHumanBodyPoseRequest", feature = "VNTypes"))]
pub use self::__VNDetectHumanBodyPoseRequest::VNBodyLandmarkKeyLeftKnee;
#[cfg(all(feature = "VNDetectHumanBodyPoseRequest", feature = "VNTypes"))]
pub use self::__VNDetectHumanBodyPoseRequest::VNBodyLandmarkKeyLeftShoulder;
#[cfg(all(feature = "VNDetectHumanBodyPoseRequest", feature = "VNTypes"))]
pub use self::__VNDetectHumanBodyPoseRequest::VNBodyLandmarkKeyLeftWrist;
#[cfg(all(feature = "VNDetectHumanBodyPoseRequest", feature = "VNTypes"))]
pub use self::__VNDetectHumanBodyPoseRequest::VNBodyLandmarkKeyNeck;
#[cfg(all(feature = "VNDetectHumanBodyPoseRequest", feature = "VNTypes"))]
pub use self::__VNDetectHumanBodyPoseRequest::VNBodyLandmarkKeyNose;
#[cfg(all(feature = "VNDetectHumanBodyPoseRequest", feature = "VNTypes"))]
pub use self::__VNDetectHumanBodyPoseRequest::VNBodyLandmarkKeyRightAnkle;
#[cfg(all(feature = "VNDetectHumanBodyPoseRequest", feature = "VNTypes"))]
pub use self::__VNDetectHumanBodyPoseRequest::VNBodyLandmarkKeyRightEar;
#[cfg(all(feature = "VNDetectHumanBodyPoseRequest", feature = "VNTypes"))]
pub use self::__VNDetectHumanBodyPoseRequest::VNBodyLandmarkKeyRightElbow;
#[cfg(all(feature = "VNDetectHumanBodyPoseRequest", feature = "VNTypes"))]
pub use self::__VNDetectHumanBodyPoseRequest::VNBodyLandmarkKeyRightEye;
#[cfg(all(feature = "VNDetectHumanBodyPoseRequest", feature = "VNTypes"))]
pub use self::__VNDetectHumanBodyPoseRequest::VNBodyLandmarkKeyRightHip;
#[cfg(all(feature = "VNDetectHumanBodyPoseRequest", feature = "VNTypes"))]
pub use self::__VNDetectHumanBodyPoseRequest::VNBodyLandmarkKeyRightKnee;
#[cfg(all(feature = "VNDetectHumanBodyPoseRequest", feature = "VNTypes"))]
pub use self::__VNDetectHumanBodyPoseRequest::VNBodyLandmarkKeyRightShoulder;
#[cfg(all(feature = "VNDetectHumanBodyPoseRequest", feature = "VNTypes"))]
pub use self::__VNDetectHumanBodyPoseRequest::VNBodyLandmarkKeyRightWrist;
#[cfg(all(feature = "VNDetectHumanBodyPoseRequest", feature = "VNTypes"))]
pub use self::__VNDetectHumanBodyPoseRequest::VNBodyLandmarkKeyRoot;
#[cfg(all(feature = "VNDetectHumanBodyPoseRequest", feature = "VNTypes"))]
pub use self::__VNDetectHumanBodyPoseRequest::VNBodyLandmarkRegionKeyFace;
#[cfg(all(feature = "VNDetectHumanBodyPoseRequest", feature = "VNTypes"))]
pub use self::__VNDetectHumanBodyPoseRequest::VNBodyLandmarkRegionKeyLeftArm;
#[cfg(all(feature = "VNDetectHumanBodyPoseRequest", feature = "VNTypes"))]
pub use self::__VNDetectHumanBodyPoseRequest::VNBodyLandmarkRegionKeyLeftLeg;
#[cfg(all(feature = "VNDetectHumanBodyPoseRequest", feature = "VNTypes"))]
pub use self::__VNDetectHumanBodyPoseRequest::VNBodyLandmarkRegionKeyRightArm;
#[cfg(all(feature = "VNDetectHumanBodyPoseRequest", feature = "VNTypes"))]
pub use self::__VNDetectHumanBodyPoseRequest::VNBodyLandmarkRegionKeyRightLeg;
#[cfg(all(feature = "VNDetectHumanBodyPoseRequest", feature = "VNTypes"))]
pub use self::__VNDetectHumanBodyPoseRequest::VNBodyLandmarkRegionKeyTorso;
#[cfg(all(feature = "VNDetectHumanBodyPoseRequest", feature = "VNRequest"))]
pub use self::__VNDetectHumanBodyPoseRequest::VNDetectHumanBodyPoseRequest;
#[cfg(feature = "VNDetectHumanBodyPoseRequest")]
pub use self::__VNDetectHumanBodyPoseRequest::VNDetectHumanBodyPoseRequestRevision1;
#[cfg(all(feature = "VNDetectHumanBodyPoseRequest", feature = "VNObservation"))]
pub use self::__VNDetectHumanBodyPoseRequest::VNHumanBodyPoseObservation;
#[cfg(all(feature = "VNDetectHumanBodyPoseRequest", feature = "VNTypes"))]
pub use self::__VNDetectHumanBodyPoseRequest::VNHumanBodyPoseObservationJointName;
#[cfg(all(feature = "VNDetectHumanBodyPoseRequest", feature = "VNTypes"))]
pub use self::__VNDetectHumanBodyPoseRequest::VNHumanBodyPoseObservationJointNameLeftAnkle;
#[cfg(all(feature = "VNDetectHumanBodyPoseRequest", feature = "VNTypes"))]
pub use self::__VNDetectHumanBodyPoseRequest::VNHumanBodyPoseObservationJointNameLeftEar;
#[cfg(all(feature = "VNDetectHumanBodyPoseRequest", feature = "VNTypes"))]
pub use self::__VNDetectHumanBodyPoseRequest::VNHumanBodyPoseObservationJointNameLeftElbow;
#[cfg(all(feature = "VNDetectHumanBodyPoseRequest", feature = "VNTypes"))]
pub use self::__VNDetectHumanBodyPoseRequest::VNHumanBodyPoseObservationJointNameLeftEye;
#[cfg(all(feature = "VNDetectHumanBodyPoseRequest", feature = "VNTypes"))]
pub use self::__VNDetectHumanBodyPoseRequest::VNHumanBodyPoseObservationJointNameLeftHip;
#[cfg(all(feature = "VNDetectHumanBodyPoseRequest", feature = "VNTypes"))]
pub use self::__VNDetectHumanBodyPoseRequest::VNHumanBodyPoseObservationJointNameLeftKnee;
#[cfg(all(feature = "VNDetectHumanBodyPoseRequest", feature = "VNTypes"))]
pub use self::__VNDetectHumanBodyPoseRequest::VNHumanBodyPoseObservationJointNameLeftShoulder;
#[cfg(all(feature = "VNDetectHumanBodyPoseRequest", feature = "VNTypes"))]
pub use self::__VNDetectHumanBodyPoseRequest::VNHumanBodyPoseObservationJointNameLeftWrist;
#[cfg(all(feature = "VNDetectHumanBodyPoseRequest", feature = "VNTypes"))]
pub use self::__VNDetectHumanBodyPoseRequest::VNHumanBodyPoseObservationJointNameNeck;
#[cfg(all(feature = "VNDetectHumanBodyPoseRequest", feature = "VNTypes"))]
pub use self::__VNDetectHumanBodyPoseRequest::VNHumanBodyPoseObservationJointNameNose;
#[cfg(all(feature = "VNDetectHumanBodyPoseRequest", feature = "VNTypes"))]
pub use self::__VNDetectHumanBodyPoseRequest::VNHumanBodyPoseObservationJointNameRightAnkle;
#[cfg(all(feature = "VNDetectHumanBodyPoseRequest", feature = "VNTypes"))]
pub use self::__VNDetectHumanBodyPoseRequest::VNHumanBodyPoseObservationJointNameRightEar;
#[cfg(all(feature = "VNDetectHumanBodyPoseRequest", feature = "VNTypes"))]
pub use self::__VNDetectHumanBodyPoseRequest::VNHumanBodyPoseObservationJointNameRightElbow;
#[cfg(all(feature = "VNDetectHumanBodyPoseRequest", feature = "VNTypes"))]
pub use self::__VNDetectHumanBodyPoseRequest::VNHumanBodyPoseObservationJointNameRightEye;
#[cfg(all(feature = "VNDetectHumanBodyPoseRequest", feature = "VNTypes"))]
pub use self::__VNDetectHumanBodyPoseRequest::VNHumanBodyPoseObservationJointNameRightHip;
#[cfg(all(feature = "VNDetectHumanBodyPoseRequest", feature = "VNTypes"))]
pub use self::__VNDetectHumanBodyPoseRequest::VNHumanBodyPoseObservationJointNameRightKnee;
#[cfg(all(feature = "VNDetectHumanBodyPoseRequest", feature = "VNTypes"))]
pub use self::__VNDetectHumanBodyPoseRequest::VNHumanBodyPoseObservationJointNameRightShoulder;
#[cfg(all(feature = "VNDetectHumanBodyPoseRequest", feature = "VNTypes"))]
pub use self::__VNDetectHumanBodyPoseRequest::VNHumanBodyPoseObservationJointNameRightWrist;
#[cfg(all(feature = "VNDetectHumanBodyPoseRequest", feature = "VNTypes"))]
pub use self::__VNDetectHumanBodyPoseRequest::VNHumanBodyPoseObservationJointNameRoot;
#[cfg(all(feature = "VNDetectHumanBodyPoseRequest", feature = "VNTypes"))]
pub use self::__VNDetectHumanBodyPoseRequest::VNHumanBodyPoseObservationJointsGroupName;
#[cfg(all(feature = "VNDetectHumanBodyPoseRequest", feature = "VNTypes"))]
pub use self::__VNDetectHumanBodyPoseRequest::VNHumanBodyPoseObservationJointsGroupNameAll;
#[cfg(all(feature = "VNDetectHumanBodyPoseRequest", feature = "VNTypes"))]
pub use self::__VNDetectHumanBodyPoseRequest::VNHumanBodyPoseObservationJointsGroupNameFace;
#[cfg(all(feature = "VNDetectHumanBodyPoseRequest", feature = "VNTypes"))]
pub use self::__VNDetectHumanBodyPoseRequest::VNHumanBodyPoseObservationJointsGroupNameLeftArm;
#[cfg(all(feature = "VNDetectHumanBodyPoseRequest", feature = "VNTypes"))]
pub use self::__VNDetectHumanBodyPoseRequest::VNHumanBodyPoseObservationJointsGroupNameLeftLeg;
#[cfg(all(feature = "VNDetectHumanBodyPoseRequest", feature = "VNTypes"))]
pub use self::__VNDetectHumanBodyPoseRequest::VNHumanBodyPoseObservationJointsGroupNameRightArm;
#[cfg(all(feature = "VNDetectHumanBodyPoseRequest", feature = "VNTypes"))]
pub use self::__VNDetectHumanBodyPoseRequest::VNHumanBodyPoseObservationJointsGroupNameRightLeg;
#[cfg(all(feature = "VNDetectHumanBodyPoseRequest", feature = "VNTypes"))]
pub use self::__VNDetectHumanBodyPoseRequest::VNHumanBodyPoseObservationJointsGroupNameTorso;
#[cfg(all(feature = "VNDetectHumanHandPoseRequest", feature = "VNRequest"))]
pub use self::__VNDetectHumanHandPoseRequest::VNDetectHumanHandPoseRequest;
#[cfg(feature = "VNDetectHumanHandPoseRequest")]
pub use self::__VNDetectHumanHandPoseRequest::VNDetectHumanHandPoseRequestRevision1;
#[cfg(all(feature = "VNDetectHumanHandPoseRequest", feature = "VNObservation"))]
pub use self::__VNDetectHumanHandPoseRequest::VNHumanHandPoseObservation;
#[cfg(all(feature = "VNDetectHumanHandPoseRequest", feature = "VNTypes"))]
pub use self::__VNDetectHumanHandPoseRequest::VNHumanHandPoseObservationJointName;
#[cfg(all(feature = "VNDetectHumanHandPoseRequest", feature = "VNTypes"))]
pub use self::__VNDetectHumanHandPoseRequest::VNHumanHandPoseObservationJointNameIndexDIP;
#[cfg(all(feature = "VNDetectHumanHandPoseRequest", feature = "VNTypes"))]
pub use self::__VNDetectHumanHandPoseRequest::VNHumanHandPoseObservationJointNameIndexMCP;
#[cfg(all(feature = "VNDetectHumanHandPoseRequest", feature = "VNTypes"))]
pub use self::__VNDetectHumanHandPoseRequest::VNHumanHandPoseObservationJointNameIndexPIP;
#[cfg(all(feature = "VNDetectHumanHandPoseRequest", feature = "VNTypes"))]
pub use self::__VNDetectHumanHandPoseRequest::VNHumanHandPoseObservationJointNameIndexTip;
#[cfg(all(feature = "VNDetectHumanHandPoseRequest", feature = "VNTypes"))]
pub use self::__VNDetectHumanHandPoseRequest::VNHumanHandPoseObservationJointNameLittleDIP;
#[cfg(all(feature = "VNDetectHumanHandPoseRequest", feature = "VNTypes"))]
pub use self::__VNDetectHumanHandPoseRequest::VNHumanHandPoseObservationJointNameLittleMCP;
#[cfg(all(feature = "VNDetectHumanHandPoseRequest", feature = "VNTypes"))]
pub use self::__VNDetectHumanHandPoseRequest::VNHumanHandPoseObservationJointNameLittlePIP;
#[cfg(all(feature = "VNDetectHumanHandPoseRequest", feature = "VNTypes"))]
pub use self::__VNDetectHumanHandPoseRequest::VNHumanHandPoseObservationJointNameLittleTip;
#[cfg(all(feature = "VNDetectHumanHandPoseRequest", feature = "VNTypes"))]
pub use self::__VNDetectHumanHandPoseRequest::VNHumanHandPoseObservationJointNameMiddleDIP;
#[cfg(all(feature = "VNDetectHumanHandPoseRequest", feature = "VNTypes"))]
pub use self::__VNDetectHumanHandPoseRequest::VNHumanHandPoseObservationJointNameMiddleMCP;
#[cfg(all(feature = "VNDetectHumanHandPoseRequest", feature = "VNTypes"))]
pub use self::__VNDetectHumanHandPoseRequest::VNHumanHandPoseObservationJointNameMiddlePIP;
#[cfg(all(feature = "VNDetectHumanHandPoseRequest", feature = "VNTypes"))]
pub use self::__VNDetectHumanHandPoseRequest::VNHumanHandPoseObservationJointNameMiddleTip;
#[cfg(all(feature = "VNDetectHumanHandPoseRequest", feature = "VNTypes"))]
pub use self::__VNDetectHumanHandPoseRequest::VNHumanHandPoseObservationJointNameRingDIP;
#[cfg(all(feature = "VNDetectHumanHandPoseRequest", feature = "VNTypes"))]
pub use self::__VNDetectHumanHandPoseRequest::VNHumanHandPoseObservationJointNameRingMCP;
#[cfg(all(feature = "VNDetectHumanHandPoseRequest", feature = "VNTypes"))]
pub use self::__VNDetectHumanHandPoseRequest::VNHumanHandPoseObservationJointNameRingPIP;
#[cfg(all(feature = "VNDetectHumanHandPoseRequest", feature = "VNTypes"))]
pub use self::__VNDetectHumanHandPoseRequest::VNHumanHandPoseObservationJointNameRingTip;
#[cfg(all(feature = "VNDetectHumanHandPoseRequest", feature = "VNTypes"))]
pub use self::__VNDetectHumanHandPoseRequest::VNHumanHandPoseObservationJointNameThumbCMC;
#[cfg(all(feature = "VNDetectHumanHandPoseRequest", feature = "VNTypes"))]
pub use self::__VNDetectHumanHandPoseRequest::VNHumanHandPoseObservationJointNameThumbIP;
#[cfg(all(feature = "VNDetectHumanHandPoseRequest", feature = "VNTypes"))]
pub use self::__VNDetectHumanHandPoseRequest::VNHumanHandPoseObservationJointNameThumbMP;
#[cfg(all(feature = "VNDetectHumanHandPoseRequest", feature = "VNTypes"))]
pub use self::__VNDetectHumanHandPoseRequest::VNHumanHandPoseObservationJointNameThumbTip;
#[cfg(all(feature = "VNDetectHumanHandPoseRequest", feature = "VNTypes"))]
pub use self::__VNDetectHumanHandPoseRequest::VNHumanHandPoseObservationJointNameWrist;
#[cfg(all(feature = "VNDetectHumanHandPoseRequest", feature = "VNTypes"))]
pub use self::__VNDetectHumanHandPoseRequest::VNHumanHandPoseObservationJointsGroupName;
#[cfg(all(feature = "VNDetectHumanHandPoseRequest", feature = "VNTypes"))]
pub use self::__VNDetectHumanHandPoseRequest::VNHumanHandPoseObservationJointsGroupNameAll;
#[cfg(all(feature = "VNDetectHumanHandPoseRequest", feature = "VNTypes"))]
pub use self::__VNDetectHumanHandPoseRequest::VNHumanHandPoseObservationJointsGroupNameIndexFinger;
#[cfg(all(feature = "VNDetectHumanHandPoseRequest", feature = "VNTypes"))]
pub use self::__VNDetectHumanHandPoseRequest::VNHumanHandPoseObservationJointsGroupNameLittleFinger;
#[cfg(all(feature = "VNDetectHumanHandPoseRequest", feature = "VNTypes"))]
pub use self::__VNDetectHumanHandPoseRequest::VNHumanHandPoseObservationJointsGroupNameMiddleFinger;
#[cfg(all(feature = "VNDetectHumanHandPoseRequest", feature = "VNTypes"))]
pub use self::__VNDetectHumanHandPoseRequest::VNHumanHandPoseObservationJointsGroupNameRingFinger;
#[cfg(all(feature = "VNDetectHumanHandPoseRequest", feature = "VNTypes"))]
pub use self::__VNDetectHumanHandPoseRequest::VNHumanHandPoseObservationJointsGroupNameThumb;
#[cfg(all(feature = "VNDetectHumanRectanglesRequest", feature = "VNRequest"))]
pub use self::__VNDetectHumanRectanglesRequest::VNDetectHumanRectanglesRequest;
#[cfg(feature = "VNDetectHumanRectanglesRequest")]
pub use self::__VNDetectHumanRectanglesRequest::VNDetectHumanRectanglesRequestRevision1;
#[cfg(feature = "VNDetectHumanRectanglesRequest")]
pub use self::__VNDetectHumanRectanglesRequest::VNDetectHumanRectanglesRequestRevision2;
#[cfg(all(feature = "VNDetectRectanglesRequest", feature = "VNRequest"))]
pub use self::__VNDetectRectanglesRequest::VNDetectRectanglesRequest;
#[cfg(feature = "VNDetectRectanglesRequest")]
pub use self::__VNDetectRectanglesRequest::VNDetectRectanglesRequestRevision1;
#[cfg(all(feature = "VNDetectTextRectanglesRequest", feature = "VNRequest"))]
pub use self::__VNDetectTextRectanglesRequest::VNDetectTextRectanglesRequest;
#[cfg(feature = "VNDetectTextRectanglesRequest")]
pub use self::__VNDetectTextRectanglesRequest::VNDetectTextRectanglesRequestRevision1;
#[cfg(all(
    feature = "VNDetectTrajectoriesRequest",
    feature = "VNRequest",
    feature = "VNStatefulRequest"
))]
pub use self::__VNDetectTrajectoriesRequest::VNDetectTrajectoriesRequest;
#[cfg(feature = "VNDetectTrajectoriesRequest")]
pub use self::__VNDetectTrajectoriesRequest::VNDetectTrajectoriesRequestRevision1;
#[cfg(all(feature = "VNDetectedPoint", feature = "VNGeometry"))]
pub use self::__VNDetectedPoint::VNDetectedPoint;
#[cfg(all(feature = "VNDetectedPoint", feature = "VNGeometry"))]
pub use self::__VNDetectedPoint::VNRecognizedPoint;
#[cfg(feature = "VNError")]
pub use self::__VNError::VNErrorCode;
#[cfg(feature = "VNError")]
pub use self::__VNError::VNErrorDomain;
#[cfg(feature = "VNFaceLandmarks")]
pub use self::__VNFaceLandmarks::VNFaceLandmarkRegion;
#[cfg(feature = "VNFaceLandmarks")]
pub use self::__VNFaceLandmarks::VNFaceLandmarkRegion2D;
#[cfg(feature = "VNFaceLandmarks")]
pub use self::__VNFaceLandmarks::VNFaceLandmarks;
#[cfg(feature = "VNFaceLandmarks")]
pub use self::__VNFaceLandmarks::VNFaceLandmarks2D;
#[cfg(feature = "VNFaceObservationAccepting")]
pub use self::__VNFaceObservationAccepting::VNFaceObservationAccepting;
#[cfg(all(
    feature = "VNGenerateAttentionBasedSaliencyImageRequest",
    feature = "VNRequest"
))]
pub use self::__VNGenerateAttentionBasedSaliencyImageRequest::VNGenerateAttentionBasedSaliencyImageRequest;
#[cfg(feature = "VNGenerateAttentionBasedSaliencyImageRequest")]
pub use self::__VNGenerateAttentionBasedSaliencyImageRequest::VNGenerateAttentionBasedSaliencyImageRequestRevision1;
#[cfg(feature = "VNGenerateAttentionBasedSaliencyImageRequest")]
pub use self::__VNGenerateAttentionBasedSaliencyImageRequest::VNGenerateAttentionBasedSaliencyImageRequestRevision2;
#[cfg(all(
    feature = "VNGenerateForegroundInstanceMaskRequest",
    feature = "VNRequest"
))]
pub use self::__VNGenerateForegroundInstanceMaskRequest::VNGenerateForegroundInstanceMaskRequest;
#[cfg(feature = "VNGenerateForegroundInstanceMaskRequest")]
pub use self::__VNGenerateForegroundInstanceMaskRequest::VNGenerateForegroundInstanceMaskRequestRevision1;
#[cfg(all(feature = "VNGenerateImageFeaturePrintRequest", feature = "VNRequest"))]
pub use self::__VNGenerateImageFeaturePrintRequest::VNGenerateImageFeaturePrintRequest;
#[cfg(feature = "VNGenerateImageFeaturePrintRequest")]
pub use self::__VNGenerateImageFeaturePrintRequest::VNGenerateImageFeaturePrintRequestRevision1;
#[cfg(feature = "VNGenerateImageFeaturePrintRequest")]
pub use self::__VNGenerateImageFeaturePrintRequest::VNGenerateImageFeaturePrintRequestRevision2;
#[cfg(all(
    feature = "VNGenerateObjectnessBasedSaliencyImageRequest",
    feature = "VNRequest"
))]
pub use self::__VNGenerateObjectnessBasedSaliencyImageRequest::VNGenerateObjectnessBasedSaliencyImageRequest;
#[cfg(feature = "VNGenerateObjectnessBasedSaliencyImageRequest")]
pub use self::__VNGenerateObjectnessBasedSaliencyImageRequest::VNGenerateObjectnessBasedSaliencyImageRequestRevision1;
#[cfg(feature = "VNGenerateObjectnessBasedSaliencyImageRequest")]
pub use self::__VNGenerateObjectnessBasedSaliencyImageRequest::VNGenerateObjectnessBasedSaliencyImageRequestRevision2;
#[cfg(all(
    feature = "VNGenerateOpticalFlowRequest",
    feature = "VNRequest",
    feature = "VNTargetedImageRequest"
))]
pub use self::__VNGenerateOpticalFlowRequest::VNGenerateOpticalFlowRequest;
#[cfg(feature = "VNGenerateOpticalFlowRequest")]
pub use self::__VNGenerateOpticalFlowRequest::VNGenerateOpticalFlowRequestComputationAccuracy;
#[cfg(feature = "VNGenerateOpticalFlowRequest")]
pub use self::__VNGenerateOpticalFlowRequest::VNGenerateOpticalFlowRequestRevision1;
#[cfg(feature = "VNGenerateOpticalFlowRequest")]
pub use self::__VNGenerateOpticalFlowRequest::VNGenerateOpticalFlowRequestRevision2;
#[cfg(all(feature = "VNGeneratePersonInstanceMaskRequest", feature = "VNRequest"))]
pub use self::__VNGeneratePersonInstanceMaskRequest::VNGeneratePersonInstanceMaskRequest;
#[cfg(feature = "VNGeneratePersonInstanceMaskRequest")]
pub use self::__VNGeneratePersonInstanceMaskRequest::VNGeneratePersonInstanceMaskRequestRevision1;
#[cfg(all(
    feature = "VNGeneratePersonSegmentationRequest",
    feature = "VNRequest",
    feature = "VNStatefulRequest"
))]
pub use self::__VNGeneratePersonSegmentationRequest::VNGeneratePersonSegmentationRequest;
#[cfg(feature = "VNGeneratePersonSegmentationRequest")]
pub use self::__VNGeneratePersonSegmentationRequest::VNGeneratePersonSegmentationRequestQualityLevel;
#[cfg(feature = "VNGeneratePersonSegmentationRequest")]
pub use self::__VNGeneratePersonSegmentationRequest::VNGeneratePersonSegmentationRequestRevision1;
#[cfg(feature = "VNGeometry")]
pub use self::__VNGeometry::VNCircle;
#[cfg(feature = "VNGeometry")]
pub use self::__VNGeometry::VNContour;
#[cfg(feature = "VNGeometry")]
pub use self::__VNGeometry::VNPoint;
#[cfg(feature = "VNGeometry")]
pub use self::__VNGeometry::VNPoint3D;
#[cfg(feature = "VNGeometry")]
pub use self::__VNGeometry::VNVector;
#[cfg(feature = "VNGeometryUtils")]
pub use self::__VNGeometryUtils::VNGeometryUtils;
#[cfg(all(
    feature = "VNGeometry",
    feature = "VNHumanBodyRecognizedPoint3D",
    feature = "VNRecognizedPoint3D"
))]
pub use self::__VNHumanBodyRecognizedPoint3D::VNHumanBodyRecognizedPoint3D;
#[cfg(all(
    feature = "VNImageRegistrationRequest",
    feature = "VNRequest",
    feature = "VNTargetedImageRequest"
))]
pub use self::__VNImageRegistrationRequest::VNHomographicImageRegistrationRequest;
#[cfg(feature = "VNImageRegistrationRequest")]
pub use self::__VNImageRegistrationRequest::VNHomographicImageRegistrationRequestRevision1;
#[cfg(all(
    feature = "VNImageRegistrationRequest",
    feature = "VNRequest",
    feature = "VNTargetedImageRequest"
))]
pub use self::__VNImageRegistrationRequest::VNImageRegistrationRequest;
#[cfg(all(
    feature = "VNImageRegistrationRequest",
    feature = "VNRequest",
    feature = "VNTargetedImageRequest"
))]
pub use self::__VNImageRegistrationRequest::VNTranslationalImageRegistrationRequest;
#[cfg(feature = "VNImageRegistrationRequest")]
pub use self::__VNImageRegistrationRequest::VNTranslationalImageRegistrationRequestRevision1;
#[cfg(feature = "VNObservation")]
pub use self::__VNObservation::VNAnimalBodyPoseObservation;
#[cfg(feature = "VNObservation")]
pub use self::__VNObservation::VNBarcodeObservation;
#[cfg(feature = "VNObservation")]
pub use self::__VNObservation::VNClassificationObservation;
#[cfg(feature = "VNObservation")]
pub use self::__VNObservation::VNContoursObservation;
#[cfg(feature = "VNObservation")]
pub use self::__VNObservation::VNCoreMLFeatureValueObservation;
#[cfg(feature = "VNObservation")]
pub use self::__VNObservation::VNDetectedObjectObservation;
#[cfg(feature = "VNObservation")]
pub use self::__VNObservation::VNFaceObservation;
#[cfg(feature = "VNObservation")]
pub use self::__VNObservation::VNFeaturePrintObservation;
#[cfg(feature = "VNObservation")]
pub use self::__VNObservation::VNHorizonObservation;
#[cfg(feature = "VNObservation")]
pub use self::__VNObservation::VNHumanBodyPose3DObservation;
#[cfg(feature = "VNObservation")]
pub use self::__VNObservation::VNHumanBodyPose3DObservationHeightEstimation;
#[cfg(feature = "VNObservation")]
pub use self::__VNObservation::VNHumanObservation;
#[cfg(feature = "VNObservation")]
pub use self::__VNObservation::VNImageAestheticsScoresObservation;
#[cfg(feature = "VNObservation")]
pub use self::__VNObservation::VNImageAlignmentObservation;
#[cfg(feature = "VNObservation")]
pub use self::__VNObservation::VNImageHomographicAlignmentObservation;
#[cfg(feature = "VNObservation")]
pub use self::__VNObservation::VNImageTranslationAlignmentObservation;
#[cfg(feature = "VNObservation")]
pub use self::__VNObservation::VNInstanceMaskObservation;
#[cfg(feature = "VNObservation")]
pub use self::__VNObservation::VNObservation;
#[cfg(feature = "VNObservation")]
pub use self::__VNObservation::VNPixelBufferObservation;
#[cfg(feature = "VNObservation")]
pub use self::__VNObservation::VNRecognizedObjectObservation;
#[cfg(all(feature = "VNObservation", feature = "VNTypes"))]
pub use self::__VNObservation::VNRecognizedPoint3DGroupKeyAll;
#[cfg(all(feature = "VNObservation", feature = "VNTypes"))]
pub use self::__VNObservation::VNRecognizedPointGroupKeyAll;
#[cfg(feature = "VNObservation")]
pub use self::__VNObservation::VNRecognizedPoints3DObservation;
#[cfg(feature = "VNObservation")]
pub use self::__VNObservation::VNRecognizedPointsObservation;
#[cfg(feature = "VNObservation")]
pub use self::__VNObservation::VNRecognizedText;
#[cfg(feature = "VNObservation")]
pub use self::__VNObservation::VNRecognizedTextObservation;
#[cfg(feature = "VNObservation")]
pub use self::__VNObservation::VNRectangleObservation;
#[cfg(feature = "VNObservation")]
pub use self::__VNObservation::VNSaliencyImageObservation;
#[cfg(feature = "VNObservation")]
pub use self::__VNObservation::VNTextObservation;
#[cfg(feature = "VNObservation")]
pub use self::__VNObservation::VNTrajectoryObservation;
#[cfg(feature = "VNRecognizeAnimalsRequest")]
pub use self::__VNRecognizeAnimalsRequest::VNAnimalIdentifier;
#[cfg(feature = "VNRecognizeAnimalsRequest")]
pub use self::__VNRecognizeAnimalsRequest::VNAnimalIdentifierCat;
#[cfg(feature = "VNRecognizeAnimalsRequest")]
pub use self::__VNRecognizeAnimalsRequest::VNAnimalIdentifierDog;
#[cfg(all(feature = "VNRecognizeAnimalsRequest", feature = "VNRequest"))]
pub use self::__VNRecognizeAnimalsRequest::VNRecognizeAnimalsRequest;
#[cfg(feature = "VNRecognizeAnimalsRequest")]
pub use self::__VNRecognizeAnimalsRequest::VNRecognizeAnimalsRequestRevision1;
#[cfg(feature = "VNRecognizeAnimalsRequest")]
pub use self::__VNRecognizeAnimalsRequest::VNRecognizeAnimalsRequestRevision2;
#[cfg(all(feature = "VNRecognizeTextRequest", feature = "VNRequest"))]
pub use self::__VNRecognizeTextRequest::VNRecognizeTextRequest;
#[cfg(feature = "VNRecognizeTextRequest")]
pub use self::__VNRecognizeTextRequest::VNRecognizeTextRequestRevision1;
#[cfg(feature = "VNRecognizeTextRequest")]
pub use self::__VNRecognizeTextRequest::VNRecognizeTextRequestRevision2;
#[cfg(feature = "VNRecognizeTextRequest")]
pub use self::__VNRecognizeTextRequest::VNRecognizeTextRequestRevision3;
#[cfg(feature = "VNRecognizeTextRequest")]
pub use self::__VNRecognizeTextRequest::VNRequestTextRecognitionLevel;
#[cfg(all(feature = "VNGeometry", feature = "VNRecognizedPoint3D"))]
pub use self::__VNRecognizedPoint3D::VNRecognizedPoint3D;
#[cfg(feature = "VNRequest")]
pub use self::__VNRequest::VNImageBasedRequest;
#[cfg(feature = "VNRequest")]
pub use self::__VNRequest::VNRequest;
#[cfg(all(feature = "VNRequest", feature = "block2"))]
pub use self::__VNRequest::VNRequestCompletionHandler;
#[cfg(all(feature = "VNRequest", feature = "block2"))]
pub use self::__VNRequest::VNRequestProgressHandler;
#[cfg(feature = "VNRequest")]
pub use self::__VNRequest::VNRequestProgressProviding;
#[cfg(feature = "VNRequest")]
pub use self::__VNRequest::VNRequestRevisionUnspecified;
#[cfg(feature = "VNRequestHandler")]
pub use self::__VNRequestHandler::VNImageOption;
#[cfg(feature = "VNRequestHandler")]
pub use self::__VNRequestHandler::VNImageOptionCIContext;
#[cfg(feature = "VNRequestHandler")]
pub use self::__VNRequestHandler::VNImageOptionCameraIntrinsics;
#[cfg(feature = "VNRequestHandler")]
pub use self::__VNRequestHandler::VNImageOptionProperties;
#[cfg(feature = "VNRequestHandler")]
pub use self::__VNRequestHandler::VNImageRequestHandler;
#[cfg(feature = "VNRequestHandler")]
pub use self::__VNRequestHandler::VNSequenceRequestHandler;
#[cfg(feature = "VNRequestRevisionProviding")]
pub use self::__VNRequestRevisionProviding::VNRequestRevisionProviding;
#[cfg(all(feature = "VNRequest", feature = "VNStatefulRequest"))]
pub use self::__VNStatefulRequest::VNStatefulRequest;
#[cfg(all(feature = "VNRequest", feature = "VNTargetedImageRequest"))]
pub use self::__VNTargetedImageRequest::VNTargetedImageRequest;
#[cfg(all(
    feature = "VNRequest",
    feature = "VNStatefulRequest",
    feature = "VNTrackHomographicImageRegistrationRequest"
))]
pub use self::__VNTrackHomographicImageRegistrationRequest::VNTrackHomographicImageRegistrationRequest;
#[cfg(feature = "VNTrackHomographicImageRegistrationRequest")]
pub use self::__VNTrackHomographicImageRegistrationRequest::VNTrackHomographicImageRegistrationRequestRevision1;
#[cfg(all(
    feature = "VNRequest",
    feature = "VNTrackObjectRequest",
    feature = "VNTrackingRequest"
))]
pub use self::__VNTrackObjectRequest::VNTrackObjectRequest;
#[cfg(feature = "VNTrackObjectRequest")]
pub use self::__VNTrackObjectRequest::VNTrackObjectRequestRevision1;
#[cfg(feature = "VNTrackObjectRequest")]
pub use self::__VNTrackObjectRequest::VNTrackObjectRequestRevision2;
#[cfg(all(
    feature = "VNRequest",
    feature = "VNStatefulRequest",
    feature = "VNTrackOpticalFlowRequest"
))]
pub use self::__VNTrackOpticalFlowRequest::VNTrackOpticalFlowRequest;
#[cfg(feature = "VNTrackOpticalFlowRequest")]
pub use self::__VNTrackOpticalFlowRequest::VNTrackOpticalFlowRequestComputationAccuracy;
#[cfg(feature = "VNTrackOpticalFlowRequest")]
pub use self::__VNTrackOpticalFlowRequest::VNTrackOpticalFlowRequestRevision1;
#[cfg(all(
    feature = "VNRequest",
    feature = "VNTrackRectangleRequest",
    feature = "VNTrackingRequest"
))]
pub use self::__VNTrackRectangleRequest::VNTrackRectangleRequest;
#[cfg(feature = "VNTrackRectangleRequest")]
pub use self::__VNTrackRectangleRequest::VNTrackRectangleRequestRevision1;
#[cfg(all(
    feature = "VNRequest",
    feature = "VNStatefulRequest",
    feature = "VNTrackTranslationalImageRegistrationRequest"
))]
pub use self::__VNTrackTranslationalImageRegistrationRequest::VNTrackTranslationalImageRegistrationRequest;
#[cfg(feature = "VNTrackTranslationalImageRegistrationRequest")]
pub use self::__VNTrackTranslationalImageRegistrationRequest::VNTrackTranslationalImageRegistrationRequestRevision1;
#[cfg(feature = "VNTrackingRequest")]
pub use self::__VNTrackingRequest::VNRequestTrackingLevel;
#[cfg(all(feature = "VNRequest", feature = "VNTrackingRequest"))]
pub use self::__VNTrackingRequest::VNTrackingRequest;
#[cfg(feature = "VNTypes")]
pub use self::__VNTypes::VNAnimalBodyPoseObservationJointName;
#[cfg(feature = "VNTypes")]
pub use self::__VNTypes::VNAnimalBodyPoseObservationJointNameLeftBackElbow;
#[cfg(feature = "VNTypes")]
pub use self::__VNTypes::VNAnimalBodyPoseObservationJointNameLeftBackKnee;
#[cfg(feature = "VNTypes")]
pub use self::__VNTypes::VNAnimalBodyPoseObservationJointNameLeftBackPaw;
#[cfg(feature = "VNTypes")]
pub use self::__VNTypes::VNAnimalBodyPoseObservationJointNameLeftEarBottom;
#[cfg(feature = "VNTypes")]
pub use self::__VNTypes::VNAnimalBodyPoseObservationJointNameLeftEarMiddle;
#[cfg(feature = "VNTypes")]
pub use self::__VNTypes::VNAnimalBodyPoseObservationJointNameLeftEarTop;
#[cfg(feature = "VNTypes")]
pub use self::__VNTypes::VNAnimalBodyPoseObservationJointNameLeftEye;
#[cfg(feature = "VNTypes")]
pub use self::__VNTypes::VNAnimalBodyPoseObservationJointNameLeftFrontElbow;
#[cfg(feature = "VNTypes")]
pub use self::__VNTypes::VNAnimalBodyPoseObservationJointNameLeftFrontKnee;
#[cfg(feature = "VNTypes")]
pub use self::__VNTypes::VNAnimalBodyPoseObservationJointNameLeftFrontPaw;
#[cfg(feature = "VNTypes")]
pub use self::__VNTypes::VNAnimalBodyPoseObservationJointNameNeck;
#[cfg(feature = "VNTypes")]
pub use self::__VNTypes::VNAnimalBodyPoseObservationJointNameNose;
#[cfg(feature = "VNTypes")]
pub use self::__VNTypes::VNAnimalBodyPoseObservationJointNameRightBackElbow;
#[cfg(feature = "VNTypes")]
pub use self::__VNTypes::VNAnimalBodyPoseObservationJointNameRightBackKnee;
#[cfg(feature = "VNTypes")]
pub use self::__VNTypes::VNAnimalBodyPoseObservationJointNameRightBackPaw;
#[cfg(feature = "VNTypes")]
pub use self::__VNTypes::VNAnimalBodyPoseObservationJointNameRightEarBottom;
#[cfg(feature = "VNTypes")]
pub use self::__VNTypes::VNAnimalBodyPoseObservationJointNameRightEarMiddle;
#[cfg(feature = "VNTypes")]
pub use self::__VNTypes::VNAnimalBodyPoseObservationJointNameRightEarTop;
#[cfg(feature = "VNTypes")]
pub use self::__VNTypes::VNAnimalBodyPoseObservationJointNameRightEye;
#[cfg(feature = "VNTypes")]
pub use self::__VNTypes::VNAnimalBodyPoseObservationJointNameRightFrontElbow;
#[cfg(feature = "VNTypes")]
pub use self::__VNTypes::VNAnimalBodyPoseObservationJointNameRightFrontKnee;
#[cfg(feature = "VNTypes")]
pub use self::__VNTypes::VNAnimalBodyPoseObservationJointNameRightFrontPaw;
#[cfg(feature = "VNTypes")]
pub use self::__VNTypes::VNAnimalBodyPoseObservationJointNameTailBottom;
#[cfg(feature = "VNTypes")]
pub use self::__VNTypes::VNAnimalBodyPoseObservationJointNameTailMiddle;
#[cfg(feature = "VNTypes")]
pub use self::__VNTypes::VNAnimalBodyPoseObservationJointNameTailTop;
#[cfg(feature = "VNTypes")]
pub use self::__VNTypes::VNAnimalBodyPoseObservationJointsGroupName;
#[cfg(feature = "VNTypes")]
pub use self::__VNTypes::VNAnimalBodyPoseObservationJointsGroupNameAll;
#[cfg(feature = "VNTypes")]
pub use self::__VNTypes::VNAnimalBodyPoseObservationJointsGroupNameForelegs;
#[cfg(feature = "VNTypes")]
pub use self::__VNTypes::VNAnimalBodyPoseObservationJointsGroupNameHead;
#[cfg(feature = "VNTypes")]
pub use self::__VNTypes::VNAnimalBodyPoseObservationJointsGroupNameHindlegs;
#[cfg(feature = "VNTypes")]
pub use self::__VNTypes::VNAnimalBodyPoseObservationJointsGroupNameTail;
#[cfg(feature = "VNTypes")]
pub use self::__VNTypes::VNAnimalBodyPoseObservationJointsGroupNameTrunk;
#[cfg(feature = "VNTypes")]
pub use self::__VNTypes::VNAspectRatio;
#[cfg(feature = "VNTypes")]
pub use self::__VNTypes::VNBarcodeCompositeType;
#[cfg(feature = "VNTypes")]
pub use self::__VNTypes::VNBarcodeSymbology;
#[cfg(feature = "VNTypes")]
pub use self::__VNTypes::VNBarcodeSymbologyAztec;
#[cfg(feature = "VNTypes")]
pub use self::__VNTypes::VNBarcodeSymbologyCodabar;
#[cfg(feature = "VNTypes")]
pub use self::__VNTypes::VNBarcodeSymbologyCode128;
#[cfg(feature = "VNTypes")]
pub use self::__VNTypes::VNBarcodeSymbologyCode39;
#[cfg(feature = "VNTypes")]
pub use self::__VNTypes::VNBarcodeSymbologyCode39Checksum;
#[cfg(feature = "VNTypes")]
pub use self::__VNTypes::VNBarcodeSymbologyCode39FullASCII;
#[cfg(feature = "VNTypes")]
pub use self::__VNTypes::VNBarcodeSymbologyCode39FullASCIIChecksum;
#[cfg(feature = "VNTypes")]
pub use self::__VNTypes::VNBarcodeSymbologyCode93;
#[cfg(feature = "VNTypes")]
pub use self::__VNTypes::VNBarcodeSymbologyCode93i;
#[cfg(feature = "VNTypes")]
pub use self::__VNTypes::VNBarcodeSymbologyDataMatrix;
#[cfg(feature = "VNTypes")]
pub use self::__VNTypes::VNBarcodeSymbologyEAN13;
#[cfg(feature = "VNTypes")]
pub use self::__VNTypes::VNBarcodeSymbologyEAN8;
#[cfg(feature = "VNTypes")]
pub use self::__VNTypes::VNBarcodeSymbologyGS1DataBar;
#[cfg(feature = "VNTypes")]
pub use self::__VNTypes::VNBarcodeSymbologyGS1DataBarExpanded;
#[cfg(feature = "VNTypes")]
pub use self::__VNTypes::VNBarcodeSymbologyGS1DataBarLimited;
#[cfg(feature = "VNTypes")]
pub use self::__VNTypes::VNBarcodeSymbologyI2of5;
#[cfg(feature = "VNTypes")]
pub use self::__VNTypes::VNBarcodeSymbologyI2of5Checksum;
#[cfg(feature = "VNTypes")]
pub use self::__VNTypes::VNBarcodeSymbologyITF14;
#[cfg(feature = "VNTypes")]
pub use self::__VNTypes::VNBarcodeSymbologyMSIPlessey;
#[cfg(feature = "VNTypes")]
pub use self::__VNTypes::VNBarcodeSymbologyMicroPDF417;
#[cfg(feature = "VNTypes")]
pub use self::__VNTypes::VNBarcodeSymbologyMicroQR;
#[cfg(feature = "VNTypes")]
pub use self::__VNTypes::VNBarcodeSymbologyPDF417;
#[cfg(feature = "VNTypes")]
pub use self::__VNTypes::VNBarcodeSymbologyQR;
#[cfg(feature = "VNTypes")]
pub use self::__VNTypes::VNBarcodeSymbologyUPCE;
#[cfg(feature = "VNTypes")]
pub use self::__VNTypes::VNChirality;
#[cfg(feature = "VNTypes")]
pub use self::__VNTypes::VNComputeStage;
#[cfg(feature = "VNTypes")]
pub use self::__VNTypes::VNComputeStageMain;
#[cfg(feature = "VNTypes")]
pub use self::__VNTypes::VNComputeStagePostProcessing;
#[cfg(feature = "VNTypes")]
pub use self::__VNTypes::VNConfidence;
#[cfg(feature = "VNTypes")]
pub use self::__VNTypes::VNDegrees;
#[cfg(feature = "VNTypes")]
pub use self::__VNTypes::VNElementType;
#[cfg(feature = "VNTypes")]
pub use self::__VNTypes::VNHumanBodyPose3DObservationJointName;
#[cfg(feature = "VNTypes")]
pub use self::__VNTypes::VNHumanBodyPose3DObservationJointNameCenterHead;
#[cfg(feature = "VNTypes")]
pub use self::__VNTypes::VNHumanBodyPose3DObservationJointNameCenterShoulder;
#[cfg(feature = "VNTypes")]
pub use self::__VNTypes::VNHumanBodyPose3DObservationJointNameLeftAnkle;
#[cfg(feature = "VNTypes")]
pub use self::__VNTypes::VNHumanBodyPose3DObservationJointNameLeftElbow;
#[cfg(feature = "VNTypes")]
pub use self::__VNTypes::VNHumanBodyPose3DObservationJointNameLeftHip;
#[cfg(feature = "VNTypes")]
pub use self::__VNTypes::VNHumanBodyPose3DObservationJointNameLeftKnee;
#[cfg(feature = "VNTypes")]
pub use self::__VNTypes::VNHumanBodyPose3DObservationJointNameLeftShoulder;
#[cfg(feature = "VNTypes")]
pub use self::__VNTypes::VNHumanBodyPose3DObservationJointNameLeftWrist;
#[cfg(feature = "VNTypes")]
pub use self::__VNTypes::VNHumanBodyPose3DObservationJointNameRightAnkle;
#[cfg(feature = "VNTypes")]
pub use self::__VNTypes::VNHumanBodyPose3DObservationJointNameRightElbow;
#[cfg(feature = "VNTypes")]
pub use self::__VNTypes::VNHumanBodyPose3DObservationJointNameRightHip;
#[cfg(feature = "VNTypes")]
pub use self::__VNTypes::VNHumanBodyPose3DObservationJointNameRightKnee;
#[cfg(feature = "VNTypes")]
pub use self::__VNTypes::VNHumanBodyPose3DObservationJointNameRightShoulder;
#[cfg(feature = "VNTypes")]
pub use self::__VNTypes::VNHumanBodyPose3DObservationJointNameRightWrist;
#[cfg(feature = "VNTypes")]
pub use self::__VNTypes::VNHumanBodyPose3DObservationJointNameRoot;
#[cfg(feature = "VNTypes")]
pub use self::__VNTypes::VNHumanBodyPose3DObservationJointNameSpine;
#[cfg(feature = "VNTypes")]
pub use self::__VNTypes::VNHumanBodyPose3DObservationJointNameTopHead;
#[cfg(feature = "VNTypes")]
pub use self::__VNTypes::VNHumanBodyPose3DObservationJointsGroupName;
#[cfg(feature = "VNTypes")]
pub use self::__VNTypes::VNHumanBodyPose3DObservationJointsGroupNameAll;
#[cfg(feature = "VNTypes")]
pub use self::__VNTypes::VNHumanBodyPose3DObservationJointsGroupNameHead;
#[cfg(feature = "VNTypes")]
pub use self::__VNTypes::VNHumanBodyPose3DObservationJointsGroupNameLeftArm;
#[cfg(feature = "VNTypes")]
pub use self::__VNTypes::VNHumanBodyPose3DObservationJointsGroupNameLeftLeg;
#[cfg(feature = "VNTypes")]
pub use self::__VNTypes::VNHumanBodyPose3DObservationJointsGroupNameRightArm;
#[cfg(feature = "VNTypes")]
pub use self::__VNTypes::VNHumanBodyPose3DObservationJointsGroupNameRightLeg;
#[cfg(feature = "VNTypes")]
pub use self::__VNTypes::VNHumanBodyPose3DObservationJointsGroupNameTorso;
#[cfg(feature = "VNTypes")]
pub use self::__VNTypes::VNImageCropAndScaleOption;
#[cfg(feature = "VNTypes")]
pub use self::__VNTypes::VNPointsClassification;
#[cfg(feature = "VNTypes")]
pub use self::__VNTypes::VNRecognizedPointGroupKey;
#[cfg(feature = "VNTypes")]
pub use self::__VNTypes::VNRecognizedPointKey;
#[cfg(feature = "VNTypes")]
pub use self::__VNTypes::VNVideoProcessingOption;
#[cfg(feature = "VNTypes")]
pub use self::__VNTypes::VNVideoProcessingOptionFrameCadence;
#[cfg(feature = "VNTypes")]
pub use self::__VNTypes::VNVideoProcessingOptionTimeInterval;
#[cfg(all(feature = "VNTypes", feature = "VNUtils"))]
pub use self::__VNUtils::VNElementTypeSize;
#[cfg(all(feature = "VNUtils", feature = "objc2-core-foundation"))]
pub use self::__VNUtils::VNImagePointForNormalizedPoint;
#[cfg(all(feature = "VNUtils", feature = "objc2-core-foundation"))]
pub use self::__VNUtils::VNImagePointForNormalizedPointUsingRegionOfInterest;
#[cfg(all(feature = "VNUtils", feature = "objc2-core-foundation"))]
pub use self::__VNUtils::VNImageRectForNormalizedRect;
#[cfg(all(feature = "VNUtils", feature = "objc2-core-foundation"))]
pub use self::__VNUtils::VNImageRectForNormalizedRectUsingRegionOfInterest;
#[cfg(all(feature = "VNUtils", feature = "objc2-core-foundation"))]
pub use self::__VNUtils::VNNormalizedIdentityRect;
#[cfg(all(feature = "VNUtils", feature = "objc2-core-foundation"))]
pub use self::__VNUtils::VNNormalizedPointForImagePoint;
#[cfg(all(feature = "VNUtils", feature = "objc2-core-foundation"))]
pub use self::__VNUtils::VNNormalizedPointForImagePointUsingRegionOfInterest;
#[cfg(all(feature = "VNUtils", feature = "objc2-core-foundation"))]
pub use self::__VNUtils::VNNormalizedRectForImageRect;
#[cfg(all(feature = "VNUtils", feature = "objc2-core-foundation"))]
pub use self::__VNUtils::VNNormalizedRectForImageRectUsingRegionOfInterest;
#[cfg(all(feature = "VNUtils", feature = "objc2-core-foundation"))]
pub use self::__VNUtils::VNNormalizedRectIsIdentityRect;
#[cfg(feature = "VNVideoProcessor")]
pub use self::__VNVideoProcessor::VNVideoProcessor;
#[cfg(feature = "VNVideoProcessor")]
pub use self::__VNVideoProcessor::VNVideoProcessorCadence;
#[cfg(feature = "VNVideoProcessor")]
pub use self::__VNVideoProcessor::VNVideoProcessorFrameRateCadence;
#[cfg(feature = "VNVideoProcessor")]
pub use self::__VNVideoProcessor::VNVideoProcessorRequestProcessingOptions;
#[cfg(feature = "VNVideoProcessor")]
pub use self::__VNVideoProcessor::VNVideoProcessorTimeIntervalCadence;
use core::ffi::*;

use crate::*;

extern "C" {
    /// [Apple's documentation](https://developer.apple.com/documentation/vision/vnvisionversionnumber?language=objc)
    pub static VNVisionVersionNumber: c_double;
}
