//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use core::ffi::*;
use core::ptr::NonNull;
use objc2::__framework_prelude::*;
use objc2_foundation::*;

use crate::*;

extern_class!(
    /// A request for generating a feature print of an image.
    ///
    ///
    /// This request will produce a `VNFeaturePrintObservation` object.
    ///
    /// See also [Apple's documentation](https://developer.apple.com/documentation/vision/vngenerateimagefeatureprintrequest?language=objc)
    #[unsafe(super(VNImageBasedRequest, VNRequest, NSObject))]
    #[derive(Debug, PartialEq, Eq, Hash)]
    #[cfg(feature = "VNRequest")]
    pub struct VNGenerateImageFeaturePrintRequest;
);

#[cfg(feature = "VNRequest")]
extern_conformance!(
    unsafe impl NSCopying for VNGenerateImageFeaturePrintRequest {}
);

#[cfg(feature = "VNRequest")]
unsafe impl CopyingHelper for VNGenerateImageFeaturePrintRequest {
    type Result = Self;
}

#[cfg(feature = "VNRequest")]
extern_conformance!(
    unsafe impl NSObjectProtocol for VNGenerateImageFeaturePrintRequest {}
);

#[cfg(feature = "VNRequest")]
impl VNGenerateImageFeaturePrintRequest {
    extern_methods!(
        #[cfg(feature = "VNTypes")]
        /// Determine what type of croping and scaling action should be applied to the image before generating the feature print.
        ///
        ///
        /// The default value for this property is `VNImageCropAndScaleOptionScaleFill`.
        #[unsafe(method(imageCropAndScaleOption))]
        #[unsafe(method_family = none)]
        pub unsafe fn imageCropAndScaleOption(&self) -> VNImageCropAndScaleOption;

        #[cfg(feature = "VNTypes")]
        /// Setter for [`imageCropAndScaleOption`][Self::imageCropAndScaleOption].
        #[unsafe(method(setImageCropAndScaleOption:))]
        #[unsafe(method_family = none)]
        pub unsafe fn setImageCropAndScaleOption(
            &self,
            image_crop_and_scale_option: VNImageCropAndScaleOption,
        );

        #[cfg(feature = "VNObservation")]
        /// `VNFeaturePrintObservation` results.
        #[unsafe(method(results))]
        #[unsafe(method_family = none)]
        pub unsafe fn results(&self) -> Option<Retained<NSArray<VNFeaturePrintObservation>>>;
    );
}

/// Methods declared on superclass `VNRequest`.
#[cfg(feature = "VNRequest")]
impl VNGenerateImageFeaturePrintRequest {
    extern_methods!(
        /// Creates a new VNRequest with no completion handler.
        #[unsafe(method(init))]
        #[unsafe(method_family = init)]
        pub unsafe fn init(this: Allocated<Self>) -> Retained<Self>;

        #[cfg(feature = "block2")]
        /// Creates a new VNRequest with an optional completion handler.
        ///
        ///
        /// Parameter `completionHandler`: The block to be invoked after the request has completed its processing. The completion handler gets executed on the same dispatch queue as the request being executed.
        ///
        /// # Safety
        ///
        /// `completion_handler` must be a valid pointer or null.
        #[unsafe(method(initWithCompletionHandler:))]
        #[unsafe(method_family = init)]
        pub unsafe fn initWithCompletionHandler(
            this: Allocated<Self>,
            completion_handler: VNRequestCompletionHandler,
        ) -> Retained<Self>;
    );
}

/// Methods declared on superclass `NSObject`.
#[cfg(feature = "VNRequest")]
impl VNGenerateImageFeaturePrintRequest {
    extern_methods!(
        #[unsafe(method(new))]
        #[unsafe(method_family = new)]
        pub unsafe fn new() -> Retained<Self>;
    );
}

/// The feature print produced by the `VNClassifyImageRequestRevision1` classifier.
///
/// See also [Apple's documentation](https://developer.apple.com/documentation/vision/vngenerateimagefeatureprintrequestrevision1?language=objc)
pub static VNGenerateImageFeaturePrintRequestRevision1: NSUInteger = 1;

/// The feature print produced by the `VNClassifyImageRequestRevision2` classifier.
///
/// See also [Apple's documentation](https://developer.apple.com/documentation/vision/vngenerateimagefeatureprintrequestrevision2?language=objc)
pub static VNGenerateImageFeaturePrintRequestRevision2: NSUInteger = 2;
