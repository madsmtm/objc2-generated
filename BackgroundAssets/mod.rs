// This file has been automatically generated by `objc2`'s `header-translator`.
// DO NOT EDIT

#![allow(unused_imports)]
#![allow(deprecated)]
#![allow(non_snake_case)]
#![allow(non_camel_case_types)]
#![allow(non_upper_case_globals)]
#![allow(missing_docs)]
#![allow(clippy::too_many_arguments)]
#![allow(clippy::type_complexity)]
#![allow(clippy::upper_case_acronyms)]
#![allow(clippy::identity_op)]
#![allow(clippy::missing_safety_doc)]
#![allow(clippy::doc_lazy_continuation)]
#![allow(rustdoc::broken_intra_doc_links)]
#![allow(rustdoc::bare_urls)]
#![allow(rustdoc::unportable_markdown)]
#![allow(rustdoc::invalid_html_tags)]

#[link(name = "BackgroundAssets", kind = "framework")]
extern "C" {}

#[cfg(feature = "BAAppExtensionInfo")]
#[path = "BAAppExtensionInfo.rs"]
mod __BAAppExtensionInfo;
#[cfg(feature = "BAAssetPack")]
#[path = "BAAssetPack.rs"]
mod __BAAssetPack;
#[cfg(feature = "BAAssetPackManager")]
#[path = "BAAssetPackManager.rs"]
mod __BAAssetPackManager;
#[cfg(feature = "BAAssetPackManifest")]
#[path = "BAAssetPackManifest.rs"]
mod __BAAssetPackManifest;
#[cfg(feature = "BAAssetPackStatus")]
#[path = "BAAssetPackStatus.rs"]
mod __BAAssetPackStatus;
#[cfg(feature = "BABase")]
#[path = "BABase.rs"]
mod __BABase;
#[cfg(feature = "BADownload")]
#[path = "BADownload.rs"]
mod __BADownload;
#[cfg(feature = "BADownloadManager")]
#[path = "BADownloadManager.rs"]
mod __BADownloadManager;
#[cfg(feature = "BADownloaderExtension")]
#[path = "BADownloaderExtension.rs"]
mod __BADownloaderExtension;
#[cfg(feature = "BAError")]
#[path = "BAError.rs"]
mod __BAError;
#[cfg(feature = "BAManagedAssetPackDownloadDelegate")]
#[path = "BAManagedAssetPackDownloadDelegate.rs"]
mod __BAManagedAssetPackDownloadDelegate;
#[cfg(feature = "BAManagedDownloaderExtension")]
#[path = "BAManagedDownloaderExtension.rs"]
mod __BAManagedDownloaderExtension;
#[cfg(feature = "BAManagedError")]
#[path = "BAManagedError.rs"]
mod __BAManagedError;
#[cfg(feature = "BATypes")]
#[path = "BATypes.rs"]
mod __BATypes;
#[cfg(feature = "BAURLDownload")]
#[path = "BAURLDownload.rs"]
mod __BAURLDownload;

#[cfg(feature = "BAAppExtensionInfo")]
pub use self::__BAAppExtensionInfo::BAAppExtensionInfo;
#[cfg(feature = "BAAssetPack")]
pub use self::__BAAssetPack::BAAssetPack;
#[cfg(feature = "BAAssetPackManager")]
pub use self::__BAAssetPackManager::BAAssetPackManager;
#[cfg(feature = "BAAssetPackManifest")]
pub use self::__BAAssetPackManifest::BAAssetPackManifest;
#[cfg(feature = "BAAssetPackStatus")]
pub use self::__BAAssetPackStatus::BAAssetPackStatus;
#[cfg(feature = "BADownload")]
pub use self::__BADownload::BADownload;
#[cfg(feature = "BADownload")]
pub use self::__BADownload::BADownloadState;
#[cfg(feature = "BADownload")]
pub use self::__BADownload::BADownloaderPriority;
#[cfg(feature = "BADownload")]
pub use self::__BADownload::BADownloaderPriorityDefault;
#[cfg(feature = "BADownload")]
pub use self::__BADownload::BADownloaderPriorityMax;
#[cfg(feature = "BADownload")]
pub use self::__BADownload::BADownloaderPriorityMin;
#[cfg(feature = "BADownloadManager")]
pub use self::__BADownloadManager::BADownloadManager;
#[cfg(feature = "BADownloadManager")]
pub use self::__BADownloadManager::BADownloadManagerDelegate;
#[cfg(feature = "BADownloaderExtension")]
pub use self::__BADownloaderExtension::BADownloaderExtension;
#[cfg(feature = "BAError")]
pub use self::__BAError::BAErrorCode;
#[cfg(feature = "BAError")]
pub use self::__BAError::BAErrorDomain;
#[cfg(feature = "BAManagedAssetPackDownloadDelegate")]
pub use self::__BAManagedAssetPackDownloadDelegate::BAManagedAssetPackDownloadDelegate;
#[cfg(all(
    feature = "BADownloaderExtension",
    feature = "BAManagedDownloaderExtension"
))]
pub use self::__BAManagedDownloaderExtension::BAManagedDownloaderExtension;
#[cfg(feature = "BAManagedError")]
pub use self::__BAManagedError::BAAssetPackIdentifierErrorKey;
#[cfg(feature = "BAManagedError")]
pub use self::__BAManagedError::BAManagedErrorCode;
#[cfg(feature = "BAManagedError")]
pub use self::__BAManagedError::BAManagedErrorDomain;
#[cfg(feature = "BATypes")]
pub use self::__BATypes::BAContentRequest;
#[cfg(all(feature = "BADownload", feature = "BAURLDownload"))]
pub use self::__BAURLDownload::BAURLDownload;
