//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use core::ffi::*;
use core::ptr::NonNull;
use objc2::__framework_prelude::*;
use objc2_foundation::*;
#[cfg(feature = "objc2-metal-performance-shaders")]
use objc2_metal_performance_shaders::*;

use crate::*;

extern_class!(
    /// The class that defines the parameters for a stencil operation.
    ///
    /// Use this descriptor with the following ``MPSGraph`` method:
    /// - ``MPSGraph/stencilWithSourceTensor:weightsTensor:descriptor:name:``
    ///
    /// See also [Apple's documentation](https://developer.apple.com/documentation/metalperformanceshadersgraph/mpsgraphstencilopdescriptor?language=objc)
    #[unsafe(super(MPSGraphObject, NSObject))]
    #[derive(Debug, PartialEq, Eq, Hash)]
    #[cfg(feature = "MPSGraphCore")]
    pub struct MPSGraphStencilOpDescriptor;
);

#[cfg(feature = "MPSGraphCore")]
extern_conformance!(
    unsafe impl NSCopying for MPSGraphStencilOpDescriptor {}
);

#[cfg(feature = "MPSGraphCore")]
unsafe impl CopyingHelper for MPSGraphStencilOpDescriptor {
    type Result = Self;
}

#[cfg(feature = "MPSGraphCore")]
extern_conformance!(
    unsafe impl NSObjectProtocol for MPSGraphStencilOpDescriptor {}
);

#[cfg(feature = "MPSGraphCore")]
impl MPSGraphStencilOpDescriptor {
    extern_methods!(
        /// The reduction mode to use within the stencil window.
        ///
        /// Default value: `MPSGraphReductionModeSum`.
        #[unsafe(method(reductionMode))]
        #[unsafe(method_family = none)]
        pub unsafe fn reductionMode(&self) -> MPSGraphReductionMode;

        /// Setter for [`reductionMode`][Self::reductionMode].
        #[unsafe(method(setReductionMode:))]
        #[unsafe(method_family = none)]
        pub unsafe fn setReductionMode(&self, reduction_mode: MPSGraphReductionMode);

        #[cfg(feature = "objc2-metal-performance-shaders")]
        /// An array of length four that determines from which offset to start reading the input tensor.
        ///
        /// Only used when `paddingStyle` is `MPSGraphPaddingStyleExplicitOffset`.
        /// For example zero offset means that the first stencil window will align its top-left corner (in 4 dimensions) to the top-left corner of the input tensor.
        /// Default value: `
        /// @
        /// [
        /// @
        /// 0,
        /// @
        /// 0,
        /// @
        /// 0,
        /// @
        /// 0 ]`
        #[unsafe(method(offsets))]
        #[unsafe(method_family = none)]
        pub unsafe fn offsets(&self) -> Retained<MPSShape>;

        #[cfg(feature = "objc2-metal-performance-shaders")]
        /// Setter for [`offsets`][Self::offsets].
        ///
        /// This is [copied][objc2_foundation::NSCopying::copy] when set.
        #[unsafe(method(setOffsets:))]
        #[unsafe(method_family = none)]
        pub unsafe fn setOffsets(&self, offsets: &MPSShape);

        #[cfg(feature = "objc2-metal-performance-shaders")]
        /// The property that defines strides for spatial dimensions.
        ///
        /// Must be four numbers, one for each spatial dimension, fastest running index last.
        /// Default value: `
        /// @
        /// [
        /// @
        /// 1,
        /// @
        /// 1,
        /// @
        /// 1,
        /// @
        /// 1 ]`
        #[unsafe(method(strides))]
        #[unsafe(method_family = none)]
        pub unsafe fn strides(&self) -> Retained<MPSShape>;

        #[cfg(feature = "objc2-metal-performance-shaders")]
        /// Setter for [`strides`][Self::strides].
        ///
        /// This is [copied][objc2_foundation::NSCopying::copy] when set.
        #[unsafe(method(setStrides:))]
        #[unsafe(method_family = none)]
        pub unsafe fn setStrides(&self, strides: &MPSShape);

        #[cfg(feature = "objc2-metal-performance-shaders")]
        /// The property that defines dilation rates for spatial dimensions.
        ///
        /// Must be four numbers, one for each spatial dimension, fastest running index last.
        /// Default value: `
        /// @
        /// [
        /// @
        /// 1,
        /// @
        /// 1,
        /// @
        /// 1,
        /// @
        /// 1 ]`
        #[unsafe(method(dilationRates))]
        #[unsafe(method_family = none)]
        pub unsafe fn dilationRates(&self) -> Retained<MPSShape>;

        #[cfg(feature = "objc2-metal-performance-shaders")]
        /// Setter for [`dilationRates`][Self::dilationRates].
        ///
        /// This is [copied][objc2_foundation::NSCopying::copy] when set.
        #[unsafe(method(setDilationRates:))]
        #[unsafe(method_family = none)]
        pub unsafe fn setDilationRates(&self, dilation_rates: &MPSShape);

        #[cfg(feature = "objc2-metal-performance-shaders")]
        /// The property that defines padding values for spatial dimensions.
        ///
        /// Must be eight numbers, two for each spatial dimension.
        /// For example `paddingValues[0]` defines the explicit padding
        /// amount before the first spatial dimension (slowest running index of spatial dimensions),
        /// `paddingValues[1]` defines the padding amount after the first spatial dimension etc.
        /// Used only when `paddingStyle = MPSGraphPaddingStyleExplicit`.
        /// Default value: `
        /// @
        /// [
        /// @
        /// 0,
        /// @
        /// 0,
        /// @
        /// 0,
        /// @
        /// 0,
        /// @
        /// 0,
        /// @
        /// 0,
        /// @
        /// 0,
        /// @
        /// 0 ]`
        #[unsafe(method(explicitPadding))]
        #[unsafe(method_family = none)]
        pub unsafe fn explicitPadding(&self) -> Retained<MPSShape>;

        #[cfg(feature = "objc2-metal-performance-shaders")]
        /// Setter for [`explicitPadding`][Self::explicitPadding].
        ///
        /// This is [copied][objc2_foundation::NSCopying::copy] when set.
        #[unsafe(method(setExplicitPadding:))]
        #[unsafe(method_family = none)]
        pub unsafe fn setExplicitPadding(&self, explicit_padding: &MPSShape);

        /// The property that determines which values to use for padding the input tensor.
        ///
        /// Default value: `MPSGraphPaddingModeZero`.
        #[unsafe(method(boundaryMode))]
        #[unsafe(method_family = none)]
        pub unsafe fn boundaryMode(&self) -> MPSGraphPaddingMode;

        /// Setter for [`boundaryMode`][Self::boundaryMode].
        #[unsafe(method(setBoundaryMode:))]
        #[unsafe(method_family = none)]
        pub unsafe fn setBoundaryMode(&self, boundary_mode: MPSGraphPaddingMode);

        /// The property that defines what kind of padding to apply to the stencil operation.
        ///
        /// Default value: `MPSGraphPaddingStyleExplicit`.
        #[unsafe(method(paddingStyle))]
        #[unsafe(method_family = none)]
        pub unsafe fn paddingStyle(&self) -> MPSGraphPaddingStyle;

        /// Setter for [`paddingStyle`][Self::paddingStyle].
        #[unsafe(method(setPaddingStyle:))]
        #[unsafe(method_family = none)]
        pub unsafe fn setPaddingStyle(&self, padding_style: MPSGraphPaddingStyle);

        /// The padding value for `boundaryMode = MPSGraphPaddingModeConstant`.
        ///
        /// Default value: 0.
        #[unsafe(method(paddingConstant))]
        #[unsafe(method_family = none)]
        pub unsafe fn paddingConstant(&self) -> c_float;

        /// Setter for [`paddingConstant`][Self::paddingConstant].
        #[unsafe(method(setPaddingConstant:))]
        #[unsafe(method_family = none)]
        pub unsafe fn setPaddingConstant(&self, padding_constant: c_float);

        #[cfg(feature = "objc2-metal-performance-shaders")]
        /// Creates a stencil operation descriptor with given values.
        ///
        /// - Parameters:
        /// - reductionMode: See `reductionMode` property.
        /// - offsets: See `offsets` property.
        /// - strides: See `strides` property.
        /// - dilationRates: See `dilationRates` property.
        /// - explicitPadding: See `explicitPadding` property.
        /// - boundaryMode: See `boundaryMode` property.
        /// - paddingStyle: See `paddingStyle` property.
        /// - paddingConstant: See `paddingConstant` property.
        /// - Returns: A valid MPSGraphStencilOpDescriptor object
        #[unsafe(method(descriptorWithReductionMode:offsets:strides:dilationRates:explicitPadding:boundaryMode:paddingStyle:paddingConstant:))]
        #[unsafe(method_family = none)]
        pub unsafe fn descriptorWithReductionMode_offsets_strides_dilationRates_explicitPadding_boundaryMode_paddingStyle_paddingConstant(
            reduction_mode: MPSGraphReductionMode,
            offsets: &MPSShape,
            strides: &MPSShape,
            dilation_rates: &MPSShape,
            explicit_padding: &MPSShape,
            boundary_mode: MPSGraphPaddingMode,
            padding_style: MPSGraphPaddingStyle,
            padding_constant: c_float,
        ) -> Option<Retained<Self>>;

        #[cfg(feature = "objc2-metal-performance-shaders")]
        /// Creates a stencil operation descriptor with default values.
        ///
        /// - Parameters:
        /// - offsets: See `offsets` property.
        /// - explicitPadding: See `explicitPadding` property.
        /// - Returns: A valid MPSGraphStencilOpDescriptor object
        #[unsafe(method(descriptorWithOffsets:explicitPadding:))]
        #[unsafe(method_family = none)]
        pub unsafe fn descriptorWithOffsets_explicitPadding(
            offsets: &MPSShape,
            explicit_padding: &MPSShape,
        ) -> Option<Retained<Self>>;

        #[cfg(feature = "objc2-metal-performance-shaders")]
        /// Creates a stencil operation descriptor with default values.
        ///
        /// - Parameters:
        /// - explicitPadding: See `explicitPadding` property.
        /// - Returns: A valid MPSGraphStencilOpDescriptor object
        #[unsafe(method(descriptorWithExplicitPadding:))]
        #[unsafe(method_family = none)]
        pub unsafe fn descriptorWithExplicitPadding(
            explicit_padding: &MPSShape,
        ) -> Option<Retained<Self>>;

        /// Creates a stencil operation descriptor with default values.
        ///
        /// - Parameters:
        /// - paddingStyle: See `paddingStyle` property.
        /// - Returns: A valid MPSGraphStencilOpDescriptor object
        #[unsafe(method(descriptorWithPaddingStyle:))]
        #[unsafe(method_family = none)]
        pub unsafe fn descriptorWithPaddingStyle(
            padding_style: MPSGraphPaddingStyle,
        ) -> Option<Retained<Self>>;
    );
}

/// Methods declared on superclass `NSObject`.
#[cfg(feature = "MPSGraphCore")]
impl MPSGraphStencilOpDescriptor {
    extern_methods!(
        #[unsafe(method(init))]
        #[unsafe(method_family = init)]
        pub unsafe fn init(this: Allocated<Self>) -> Retained<Self>;

        #[unsafe(method(new))]
        #[unsafe(method_family = new)]
        pub unsafe fn new() -> Retained<Self>;
    );
}

/// MPSGraphStencilOps.
#[cfg(all(feature = "MPSGraph", feature = "MPSGraphCore"))]
impl MPSGraph {
    extern_methods!(
        #[cfg(feature = "MPSGraphTensor")]
        /// Creates a stencil operation and returns the result tensor.
        ///
        /// Performs a weighted reduction operation (See ``MPSGraphStencilOpDescriptor/reductionMode``) on the last 4 dimensions of the `source`
        /// over the window determined by `weights`, according to the value defined in `descriptor`.
        /// ```md
        /// y[i] = reduction{j
        /// \in w} ( x[ i + j ]w[j] )
        /// ```
        ///
        /// - Parameters:
        /// - source: The tensor containing the source data. Must be of rank 4 or greater.
        /// - weights: A 4-D tensor containing the weights data.
        /// - descriptor: The descriptor object that specifies the parameters for the stencil operation.
        /// - name: The name for the operation.
        /// - Returns: A valid MPSGraphTensor object.
        #[unsafe(method(stencilWithSourceTensor:weightsTensor:descriptor:name:))]
        #[unsafe(method_family = none)]
        pub unsafe fn stencilWithSourceTensor_weightsTensor_descriptor_name(
            &self,
            source: &MPSGraphTensor,
            weights: &MPSGraphTensor,
            descriptor: &MPSGraphStencilOpDescriptor,
            name: Option<&NSString>,
        ) -> Retained<MPSGraphTensor>;
    );
}
