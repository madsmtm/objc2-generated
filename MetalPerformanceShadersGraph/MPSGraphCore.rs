//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use core::ffi::*;
use core::ptr::NonNull;
use objc2::__framework_prelude::*;
use objc2_foundation::*;
#[cfg(feature = "objc2-metal-performance-shaders")]
use objc2_metal_performance_shaders::*;

use crate::*;

extern_class!(
    /// The common base class for all Metal Performance Shaders Graph objects.
    ///
    /// Only the child classes should be used.
    ///
    /// See also [Apple's documentation](https://developer.apple.com/documentation/metalperformanceshadersgraph/mpsgraphobject?language=objc)
    #[unsafe(super(NSObject))]
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub struct MPSGraphObject;
);

extern_conformance!(
    unsafe impl NSObjectProtocol for MPSGraphObject {}
);

impl MPSGraphObject {
    extern_methods!();
}

/// Methods declared on superclass `NSObject`.
impl MPSGraphObject {
    extern_methods!(
        #[unsafe(method(init))]
        #[unsafe(method_family = init)]
        pub unsafe fn init(this: Allocated<Self>) -> Retained<Self>;

        #[unsafe(method(new))]
        #[unsafe(method_family = new)]
        pub unsafe fn new() -> Retained<Self>;
    );
}

extern_class!(
    /// The base type class for types on tensors.
    ///
    /// See also [Apple's documentation](https://developer.apple.com/documentation/metalperformanceshadersgraph/mpsgraphtype?language=objc)
    #[unsafe(super(MPSGraphObject, NSObject))]
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub struct MPSGraphType;
);

extern_conformance!(
    unsafe impl NSCopying for MPSGraphType {}
);

unsafe impl CopyingHelper for MPSGraphType {
    type Result = Self;
}

extern_conformance!(
    unsafe impl NSObjectProtocol for MPSGraphType {}
);

impl MPSGraphType {
    extern_methods!();
}

/// Methods declared on superclass `NSObject`.
impl MPSGraphType {
    extern_methods!(
        #[unsafe(method(init))]
        #[unsafe(method_family = init)]
        pub unsafe fn init(this: Allocated<Self>) -> Retained<Self>;

        #[unsafe(method(new))]
        #[unsafe(method_family = new)]
        pub unsafe fn new() -> Retained<Self>;
    );
}

extern_class!(
    /// The shaped type class for types on tensors with a shape and data type.
    ///
    /// See also [Apple's documentation](https://developer.apple.com/documentation/metalperformanceshadersgraph/mpsgraphshapedtype?language=objc)
    #[unsafe(super(MPSGraphType, MPSGraphObject, NSObject))]
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub struct MPSGraphShapedType;
);

extern_conformance!(
    unsafe impl NSCopying for MPSGraphShapedType {}
);

unsafe impl CopyingHelper for MPSGraphShapedType {
    type Result = Self;
}

extern_conformance!(
    unsafe impl NSObjectProtocol for MPSGraphShapedType {}
);

impl MPSGraphShapedType {
    extern_methods!(
        #[cfg(feature = "objc2-metal-performance-shaders")]
        /// The Shape of the shaped type.
        #[unsafe(method(shape))]
        #[unsafe(method_family = none)]
        pub unsafe fn shape(&self) -> Option<Retained<MPSShape>>;

        #[cfg(feature = "objc2-metal-performance-shaders")]
        /// Setter for [`shape`][Self::shape].
        ///
        /// This is [copied][objc2_foundation::NSCopying::copy] when set.
        #[unsafe(method(setShape:))]
        #[unsafe(method_family = none)]
        pub unsafe fn setShape(&self, shape: Option<&MPSShape>);

        #[cfg(feature = "objc2-metal-performance-shaders")]
        /// The data type of the shaped type.
        #[unsafe(method(dataType))]
        #[unsafe(method_family = none)]
        pub unsafe fn dataType(&self) -> MPSDataType;

        #[cfg(feature = "objc2-metal-performance-shaders")]
        /// Setter for [`dataType`][Self::dataType].
        #[unsafe(method(setDataType:))]
        #[unsafe(method_family = none)]
        pub unsafe fn setDataType(&self, data_type: MPSDataType);

        #[cfg(feature = "objc2-metal-performance-shaders")]
        /// Initializes a shaped type.
        ///
        /// - Parameters:
        /// - shape: The shape of the shaped type.
        /// - dataType: The dataType of the shaped type.
        /// - Returns: A valid MPSGraphShapedType, or nil if allocation failure.
        #[unsafe(method(initWithShape:dataType:))]
        #[unsafe(method_family = init)]
        pub unsafe fn initWithShape_dataType(
            this: Allocated<Self>,
            shape: Option<&MPSShape>,
            data_type: MPSDataType,
        ) -> Retained<Self>;

        /// Checks if shapes and element data type are the same as the input shaped type.
        ///
        /// - Parameters:
        /// - object: shapedType to compare to
        /// - Returns: true if equal, false if unequal
        #[unsafe(method(isEqualTo:))]
        #[unsafe(method_family = none)]
        pub unsafe fn isEqualTo(&self, object: Option<&MPSGraphShapedType>) -> bool;
    );
}

/// Methods declared on superclass `NSObject`.
impl MPSGraphShapedType {
    extern_methods!(
        #[unsafe(method(init))]
        #[unsafe(method_family = init)]
        pub unsafe fn init(this: Allocated<Self>) -> Retained<Self>;

        #[unsafe(method(new))]
        #[unsafe(method_family = new)]
        pub unsafe fn new() -> Retained<Self>;
    );
}

/// The tensor layout.
///
/// See also [Apple's documentation](https://developer.apple.com/documentation/metalperformanceshadersgraph/mpsgraphtensornameddatalayout?language=objc)
// NS_ENUM
#[repr(transparent)]
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash, PartialOrd, Ord)]
pub struct MPSGraphTensorNamedDataLayout(pub NSUInteger);
impl MPSGraphTensorNamedDataLayout {
    /// LayoutNCHW
    #[doc(alias = "MPSGraphTensorNamedDataLayoutNCHW")]
    pub const NCHW: Self = Self(0);
    /// LayoutNHWC
    #[doc(alias = "MPSGraphTensorNamedDataLayoutNHWC")]
    pub const NHWC: Self = Self(1);
    /// LayoutOIHW
    #[doc(alias = "MPSGraphTensorNamedDataLayoutOIHW")]
    pub const OIHW: Self = Self(2);
    /// LayoutHWIO
    #[doc(alias = "MPSGraphTensorNamedDataLayoutHWIO")]
    pub const HWIO: Self = Self(3);
    /// LayoutCHW
    #[doc(alias = "MPSGraphTensorNamedDataLayoutCHW")]
    pub const CHW: Self = Self(4);
    /// LayoutHWC
    #[doc(alias = "MPSGraphTensorNamedDataLayoutHWC")]
    pub const HWC: Self = Self(5);
    /// LayoutHW
    #[doc(alias = "MPSGraphTensorNamedDataLayoutHW")]
    pub const HW: Self = Self(6);
    /// LayoutNCDHW
    #[doc(alias = "MPSGraphTensorNamedDataLayoutNCDHW")]
    pub const NCDHW: Self = Self(7);
    /// LayoutNDHWC
    #[doc(alias = "MPSGraphTensorNamedDataLayoutNDHWC")]
    pub const NDHWC: Self = Self(8);
    /// LayoutOIDHW
    #[doc(alias = "MPSGraphTensorNamedDataLayoutOIDHW")]
    pub const OIDHW: Self = Self(9);
    /// LayoutDHWIO
    #[doc(alias = "MPSGraphTensorNamedDataLayoutDHWIO")]
    pub const DHWIO: Self = Self(10);
}

unsafe impl Encode for MPSGraphTensorNamedDataLayout {
    const ENCODING: Encoding = NSUInteger::ENCODING;
}

unsafe impl RefEncode for MPSGraphTensorNamedDataLayout {
    const ENCODING_REF: Encoding = Encoding::Pointer(&Self::ENCODING);
}

/// The tensor padding style.
///
/// See also [Apple's documentation](https://developer.apple.com/documentation/metalperformanceshadersgraph/mpsgraphpaddingstyle?language=objc)
// NS_ENUM
#[repr(transparent)]
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash, PartialOrd, Ord)]
pub struct MPSGraphPaddingStyle(pub NSUInteger);
impl MPSGraphPaddingStyle {
    /// Explicit
    #[doc(alias = "MPSGraphPaddingStyleExplicit")]
    pub const Explicit: Self = Self(0);
    /// ONNX_SAME_LOWER
    #[doc(alias = "MPSGraphPaddingStyleTF_VALID")]
    pub const TF_VALID: Self = Self(1);
    /// TF_SAME
    #[doc(alias = "MPSGraphPaddingStyleTF_SAME")]
    pub const TF_SAME: Self = Self(2);
    /// TF_VALID
    #[doc(alias = "MPSGraphPaddingStyleExplicitOffset")]
    pub const ExplicitOffset: Self = Self(3);
    /// Explicit offsets
    #[doc(alias = "MPSGraphPaddingStyleONNX_SAME_LOWER")]
    pub const ONNX_SAME_LOWER: Self = Self(4);
}

unsafe impl Encode for MPSGraphPaddingStyle {
    const ENCODING: Encoding = NSUInteger::ENCODING;
}

unsafe impl RefEncode for MPSGraphPaddingStyle {
    const ENCODING_REF: Encoding = Encoding::Pointer(&Self::ENCODING);
}

/// The tensor padding mode.
///
/// See also [Apple's documentation](https://developer.apple.com/documentation/metalperformanceshadersgraph/mpsgraphpaddingmode?language=objc)
// NS_ENUM
#[repr(transparent)]
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash, PartialOrd, Ord)]
pub struct MPSGraphPaddingMode(pub NSInteger);
impl MPSGraphPaddingMode {
    /// Constant
    #[doc(alias = "MPSGraphPaddingModeConstant")]
    pub const Constant: Self = Self(0);
    /// Reflect
    #[doc(alias = "MPSGraphPaddingModeReflect")]
    pub const Reflect: Self = Self(1);
    /// Symmetric
    #[doc(alias = "MPSGraphPaddingModeSymmetric")]
    pub const Symmetric: Self = Self(2);
    /// ClampToEdge (PyTorch ReplicationPad)
    #[doc(alias = "MPSGraphPaddingModeClampToEdge")]
    pub const ClampToEdge: Self = Self(3);
    /// Zero
    #[doc(alias = "MPSGraphPaddingModeZero")]
    pub const Zero: Self = Self(4);
    /// Periodic `x[-2] -> x[L-3], where L is size of x.`
    #[doc(alias = "MPSGraphPaddingModePeriodic")]
    pub const Periodic: Self = Self(5);
    /// Anti Periodic `x[-2] -> -x[L-3]`
    #[doc(alias = "MPSGraphPaddingModeAntiPeriodic")]
    pub const AntiPeriodic: Self = Self(6);
}

unsafe impl Encode for MPSGraphPaddingMode {
    const ENCODING: Encoding = NSInteger::ENCODING;
}

unsafe impl RefEncode for MPSGraphPaddingMode {
    const ENCODING_REF: Encoding = Encoding::Pointer(&Self::ENCODING);
}

/// The reduction mode.
///
/// See also [Apple's documentation](https://developer.apple.com/documentation/metalperformanceshadersgraph/mpsgraphreductionmode?language=objc)
// NS_ENUM
#[repr(transparent)]
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash, PartialOrd, Ord)]
pub struct MPSGraphReductionMode(pub NSUInteger);
impl MPSGraphReductionMode {
    /// Min
    #[doc(alias = "MPSGraphReductionModeMin")]
    pub const Min: Self = Self(0);
    /// Max
    #[doc(alias = "MPSGraphReductionModeMax")]
    pub const Max: Self = Self(1);
    /// Sum
    #[doc(alias = "MPSGraphReductionModeSum")]
    pub const Sum: Self = Self(2);
    /// Product
    #[doc(alias = "MPSGraphReductionModeProduct")]
    pub const Product: Self = Self(3);
    /// Argument Min
    #[doc(alias = "MPSGraphReductionModeArgumentMin")]
    pub const ArgumentMin: Self = Self(4);
    /// Argument Max
    #[doc(alias = "MPSGraphReductionModeArgumentMax")]
    pub const ArgumentMax: Self = Self(5);
}

unsafe impl Encode for MPSGraphReductionMode {
    const ENCODING: Encoding = NSUInteger::ENCODING;
}

unsafe impl RefEncode for MPSGraphReductionMode {
    const ENCODING_REF: Encoding = Encoding::Pointer(&Self::ENCODING);
}
