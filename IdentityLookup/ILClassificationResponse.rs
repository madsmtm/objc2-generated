//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use core::ffi::*;
use core::ptr::NonNull;
use objc2::__framework_prelude::*;
use objc2_foundation::*;

use crate::*;

extern_class!(
    /// A response to an ILClassificationRequest.
    ///
    /// See also [Apple's documentation](https://developer.apple.com/documentation/identitylookup/ilclassificationresponse?language=objc)
    #[unsafe(super(NSObject))]
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub struct ILClassificationResponse;
);

extern_conformance!(
    unsafe impl NSCoding for ILClassificationResponse {}
);

extern_conformance!(
    unsafe impl NSObjectProtocol for ILClassificationResponse {}
);

extern_conformance!(
    unsafe impl NSSecureCoding for ILClassificationResponse {}
);

impl ILClassificationResponse {
    extern_methods!(
        #[cfg(feature = "ILClassificationActions")]
        #[unsafe(method(action))]
        #[unsafe(method_family = none)]
        pub unsafe fn action(&self) -> ILClassificationAction;

        #[unsafe(method(userString))]
        #[unsafe(method_family = none)]
        pub unsafe fn userString(&self) -> Option<Retained<NSString>>;

        /// Setter for [`userString`][Self::userString].
        ///
        /// This is [copied][objc2_foundation::NSCopying::copy] when set.
        #[unsafe(method(setUserString:))]
        #[unsafe(method_family = none)]
        pub unsafe fn setUserString(&self, user_string: Option<&NSString>);

        #[unsafe(method(userInfo))]
        #[unsafe(method_family = none)]
        pub unsafe fn userInfo(&self) -> Option<Retained<NSDictionary<NSString, AnyObject>>>;

        /// Setter for [`userInfo`][Self::userInfo].
        ///
        /// This is [copied][objc2_foundation::NSCopying::copy] when set.
        ///
        /// # Safety
        ///
        /// `user_info` generic should be of the correct type.
        #[unsafe(method(setUserInfo:))]
        #[unsafe(method_family = none)]
        pub unsafe fn setUserInfo(&self, user_info: Option<&NSDictionary<NSString, AnyObject>>);

        #[cfg(feature = "ILClassificationActions")]
        #[unsafe(method(initWithClassificationAction:))]
        #[unsafe(method_family = init)]
        pub unsafe fn initWithClassificationAction(
            this: Allocated<Self>,
            action: ILClassificationAction,
        ) -> Retained<Self>;

        #[unsafe(method(init))]
        #[unsafe(method_family = init)]
        pub unsafe fn init(this: Allocated<Self>) -> Retained<Self>;
    );
}

/// Methods declared on superclass `NSObject`.
impl ILClassificationResponse {
    extern_methods!(
        #[unsafe(method(new))]
        #[unsafe(method_family = new)]
        pub unsafe fn new() -> Retained<Self>;
    );
}
