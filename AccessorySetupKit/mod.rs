// This file has been automatically generated by `objc2`'s `header-translator`.
// DO NOT EDIT

#![allow(unused_imports)]
#![allow(deprecated)]
#![allow(non_snake_case)]
#![allow(non_camel_case_types)]
#![allow(non_upper_case_globals)]
#![allow(missing_docs)]
#![allow(clippy::too_many_arguments)]
#![allow(clippy::type_complexity)]
#![allow(clippy::upper_case_acronyms)]
#![allow(clippy::identity_op)]
#![allow(clippy::missing_safety_doc)]
#![allow(clippy::doc_lazy_continuation)]
#![allow(rustdoc::broken_intra_doc_links)]
#![allow(rustdoc::bare_urls)]
#![allow(rustdoc::unportable_markdown)]
#![allow(rustdoc::invalid_html_tags)]

#[link(name = "AccessorySetupKit", kind = "framework")]
extern "C" {}

#[cfg(feature = "ASAccessory")]
#[path = "ASAccessory.rs"]
mod __ASAccessory;
#[cfg(feature = "ASAccessoryEvent")]
#[path = "ASAccessoryEvent.rs"]
mod __ASAccessoryEvent;
#[cfg(feature = "ASAccessorySession")]
#[path = "ASAccessorySession.rs"]
mod __ASAccessorySession;
#[cfg(feature = "ASAccessorySettings")]
#[path = "ASAccessorySettings.rs"]
mod __ASAccessorySettings;
#[cfg(feature = "ASCommon")]
#[path = "ASCommon.rs"]
mod __ASCommon;
#[cfg(feature = "ASDiscoveryDescriptor")]
#[path = "ASDiscoveryDescriptor.rs"]
mod __ASDiscoveryDescriptor;
#[cfg(feature = "ASErrors")]
#[path = "ASErrors.rs"]
mod __ASErrors;
#[cfg(feature = "ASPickerDisplayItem")]
#[path = "ASPickerDisplayItem.rs"]
mod __ASPickerDisplayItem;
#[cfg(feature = "ASPickerDisplaySettings")]
#[path = "ASPickerDisplaySettings.rs"]
mod __ASPickerDisplaySettings;

#[cfg(feature = "ASAccessory")]
pub use self::__ASAccessory::ASAccessory;
#[cfg(feature = "ASAccessory")]
pub use self::__ASAccessory::ASAccessoryRenameOptions;
#[cfg(feature = "ASAccessory")]
pub use self::__ASAccessory::ASAccessoryState;
#[cfg(feature = "ASAccessory")]
pub use self::__ASAccessory::ASAccessorySupportOptions;
#[cfg(feature = "ASAccessory")]
pub use self::__ASAccessory::ASAccessoryWiFiAwarePairedDeviceID;
#[cfg(feature = "ASAccessoryEvent")]
pub use self::__ASAccessoryEvent::ASAccessoryEvent;
#[cfg(feature = "ASAccessoryEvent")]
pub use self::__ASAccessoryEvent::ASAccessoryEventType;
#[cfg(feature = "ASAccessorySession")]
pub use self::__ASAccessorySession::ASAccessorySession;
#[cfg(feature = "ASAccessorySettings")]
pub use self::__ASAccessorySettings::ASAccessorySettings;
#[cfg(feature = "ASCommon")]
pub use self::__ASCommon::ASBluetoothCompanyIdentifier;
#[cfg(feature = "ASCommon")]
pub use self::__ASCommon::ASPropertyCompareString;
#[cfg(feature = "ASDiscoveryDescriptor")]
pub use self::__ASDiscoveryDescriptor::ASDiscoveryDescriptor;
#[cfg(feature = "ASDiscoveryDescriptor")]
pub use self::__ASDiscoveryDescriptor::ASDiscoveryDescriptorRange;
#[cfg(feature = "ASDiscoveryDescriptor")]
pub use self::__ASDiscoveryDescriptor::ASDiscoveryDescriptorWiFiAwareServiceRole;
#[cfg(feature = "ASErrors")]
pub use self::__ASErrors::ASErrorCode;
#[cfg(feature = "ASErrors")]
pub use self::__ASErrors::ASErrorDomain;
#[cfg(feature = "ASPickerDisplayItem")]
pub use self::__ASPickerDisplayItem::ASMigrationDisplayItem;
#[cfg(feature = "ASPickerDisplayItem")]
pub use self::__ASPickerDisplayItem::ASPickerDisplayItem;
#[cfg(feature = "ASPickerDisplayItem")]
pub use self::__ASPickerDisplayItem::ASPickerDisplayItemSetupOptions;
#[cfg(feature = "ASPickerDisplaySettings")]
pub use self::__ASPickerDisplaySettings::ASPickerDisplaySettings;
#[cfg(feature = "ASPickerDisplaySettings")]
pub use self::__ASPickerDisplaySettings::ASPickerDisplaySettingsDiscoveryTimeout;
#[cfg(feature = "ASPickerDisplaySettings")]
pub use self::__ASPickerDisplaySettings::ASPickerDisplaySettingsDiscoveryTimeoutLong;
#[cfg(feature = "ASPickerDisplaySettings")]
pub use self::__ASPickerDisplaySettings::ASPickerDisplaySettingsDiscoveryTimeoutMedium;
#[cfg(feature = "ASPickerDisplaySettings")]
pub use self::__ASPickerDisplaySettings::ASPickerDisplaySettingsDiscoveryTimeoutShort;
