//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use core::ptr::NonNull;
use objc2::__framework_prelude::*;
use objc2_foundation::*;

use crate::*;

/// The type used to identify a Bluetooth accessory provider.
///
/// See also [Apple's documentation](https://developer.apple.com/documentation/accessorysetupkit/asbluetoothcompanyidentifier?language=objc)
// NS_TYPED_EXTENSIBLE_ENUM
pub type ASBluetoothCompanyIdentifier = u16;

extern_class!(
    /// A type that specifies how to filter a property against a given string and comparison options.
    ///
    /// See also [Apple's documentation](https://developer.apple.com/documentation/accessorysetupkit/aspropertycomparestring?language=objc)
    #[unsafe(super(NSObject))]
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub struct ASPropertyCompareString;
);

unsafe impl Send for ASPropertyCompareString {}

unsafe impl Sync for ASPropertyCompareString {}

extern_conformance!(
    unsafe impl NSObjectProtocol for ASPropertyCompareString {}
);

impl ASPropertyCompareString {
    extern_methods!(
        /// The string to compare against.
        #[unsafe(method(string))]
        #[unsafe(method_family = none)]
        pub unsafe fn string(&self) -> Retained<NSString>;

        /// Comparison options to apply when comparing strings.
        #[unsafe(method(compareOptions))]
        #[unsafe(method_family = none)]
        pub unsafe fn compareOptions(&self) -> NSStringCompareOptions;

        /// Creates a property compare string instance with the given string and comparison options.
        /// - Parameters:
        /// - string: The string to compare against.
        /// - compareOptions: Options to apply when comparing strings.
        #[unsafe(method(initWithString:compareOptions:))]
        #[unsafe(method_family = init)]
        pub unsafe fn initWithString_compareOptions(
            this: Allocated<Self>,
            string: &NSString,
            compare_options: NSStringCompareOptions,
        ) -> Retained<Self>;

        #[unsafe(method(init))]
        #[unsafe(method_family = init)]
        pub unsafe fn init(this: Allocated<Self>) -> Retained<Self>;

        #[unsafe(method(new))]
        #[unsafe(method_family = new)]
        pub unsafe fn new(&self) -> Retained<Self>;
    );
}

/// Methods declared on superclass `NSObject`.
impl ASPropertyCompareString {
    extern_methods!(
        #[unsafe(method(new))]
        #[unsafe(method_family = new)]
        pub unsafe fn new_class() -> Retained<Self>;
    );
}
