//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use core::ffi::*;
use core::ptr::NonNull;
use objc2::__framework_prelude::*;
use objc2_foundation::*;

use crate::*;

extern_class!(
    /// A class representing metric data that is averaged.
    ///
    /// See also [Apple's documentation](https://developer.apple.com/documentation/metrickit/mxaverage?language=objc)
    #[unsafe(super(NSObject))]
    #[derive(Debug, PartialEq, Eq, Hash)]
    pub struct MXAverage<UnitType: ?Sized = AnyObject>;
);

impl<UnitType: ?Sized + Message + AsRef<NSUnit>> MXAverage<UnitType> {
    /// Unchecked conversion of the generic parameter.
    ///
    /// # Safety
    ///
    /// The generic must be valid to reinterpret as the given type.
    #[inline]
    pub unsafe fn cast_unchecked<NewUnitType: ?Sized + Message + AsRef<NSUnit>>(
        &self,
    ) -> &MXAverage<NewUnitType> {
        unsafe { &*((self as *const Self).cast()) }
    }
}

extern_conformance!(
    unsafe impl<UnitType: ?Sized + NSCoding + AsRef<NSUnit>> NSCoding for MXAverage<UnitType> {}
);

extern_conformance!(
    unsafe impl<UnitType: ?Sized + AsRef<NSUnit>> NSObjectProtocol for MXAverage<UnitType> {}
);

extern_conformance!(
    unsafe impl<UnitType: ?Sized + NSSecureCoding + AsRef<NSUnit>> NSSecureCoding
        for MXAverage<UnitType>
    {
    }
);

impl<UnitType: Message + AsRef<NSUnit>> MXAverage<UnitType> {
    extern_methods!(
        /// An NSMeasurement that contains the average measurement.
        #[unsafe(method(averageMeasurement))]
        #[unsafe(method_family = none)]
        pub unsafe fn averageMeasurement(&self) -> Retained<NSMeasurement<UnitType>>;

        /// An NSInteger representation of the number of samples in the distribution used to formulate the average.
        ///
        /// This value is negative if an unknown number of samples was used to compute the average.
        #[unsafe(method(sampleCount))]
        #[unsafe(method_family = none)]
        pub unsafe fn sampleCount(&self) -> NSInteger;

        /// An double representation of the standard deviation of the distribution.
        ///
        /// This value is negative an unknown number of samples was used to compute the standard deviation.
        #[unsafe(method(standardDeviation))]
        #[unsafe(method_family = none)]
        pub unsafe fn standardDeviation(&self) -> c_double;
    );
}

/// Methods declared on superclass `NSObject`.
impl<UnitType: Message + AsRef<NSUnit>> MXAverage<UnitType> {
    extern_methods!(
        #[unsafe(method(init))]
        #[unsafe(method_family = init)]
        pub unsafe fn init(this: Allocated<Self>) -> Retained<Self>;

        #[unsafe(method(new))]
        #[unsafe(method_family = new)]
        pub unsafe fn new() -> Retained<Self>;
    );
}
