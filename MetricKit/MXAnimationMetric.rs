//! This file has been automatically generated by `objc2`'s `header-translator`.
//! DO NOT EDIT
use core::ptr::NonNull;
use objc2::__framework_prelude::*;
use objc2_foundation::*;

use crate::*;

extern_class!(
    /// An MXMetric subclass that encapsulates app animation metrics.
    ///
    /// See also [Apple's documentation](https://developer.apple.com/documentation/metrickit/mxanimationmetric?language=objc)
    #[unsafe(super(MXMetric, NSObject))]
    #[derive(Debug, PartialEq, Eq, Hash)]
    #[cfg(feature = "MXMetric")]
    pub struct MXAnimationMetric;
);

#[cfg(feature = "MXMetric")]
extern_conformance!(
    unsafe impl NSCoding for MXAnimationMetric {}
);

#[cfg(feature = "MXMetric")]
extern_conformance!(
    unsafe impl NSObjectProtocol for MXAnimationMetric {}
);

#[cfg(feature = "MXMetric")]
extern_conformance!(
    unsafe impl NSSecureCoding for MXAnimationMetric {}
);

#[cfg(feature = "MXMetric")]
impl MXAnimationMetric {
    extern_methods!(
        /// Ratio of time the application spent hitching while scrolling.
        ///
        /// Scroll hitches are user perceptible animation issues that occur during scrolling.
        ///
        /// This metric only applies to UIScrollViews.
        ///
        /// Dimensionless.
        #[unsafe(method(scrollHitchTimeRatio))]
        #[unsafe(method_family = none)]
        pub unsafe fn scrollHitchTimeRatio(&self) -> Retained<NSMeasurement<NSUnit>>;

        /// Ratio of time the application spent hitching during tracked animations.
        ///
        /// Hitches are user perceptible frame delays that can occur during animations and scrolling.
        ///
        /// This metric incorporates adjustments that optimize for user perception, and typically will be the most accurate representation of what hitches users experience during app usage.
        ///
        /// This metric is normalized against total animation duration.
        ///
        /// Many animations are tracked by default. You can track additional animations using the -[NSProcessInfo beginActivityWithOptions:reason:] method with the NSActivityAnimationTrackingEnabled option.
        ///
        /// Dimensionless.
        #[unsafe(method(hitchTimeRatio))]
        #[unsafe(method_family = none)]
        pub unsafe fn hitchTimeRatio(&self) -> Retained<NSMeasurement<NSUnit>>;
    );
}

/// Methods declared on superclass `NSObject`.
#[cfg(feature = "MXMetric")]
impl MXAnimationMetric {
    extern_methods!(
        #[unsafe(method(init))]
        #[unsafe(method_family = init)]
        pub unsafe fn init(this: Allocated<Self>) -> Retained<Self>;

        #[unsafe(method(new))]
        #[unsafe(method_family = new)]
        pub unsafe fn new() -> Retained<Self>;
    );
}
